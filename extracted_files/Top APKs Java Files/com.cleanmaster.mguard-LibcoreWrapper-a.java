package LibcoreWrapper;

import android.accessibilityservice.AccessibilityServiceInfo;
import android.accounts.Account;
import android.accounts.AccountManager;
import android.animation.Animator;
import android.animation.AnimatorSet;
import android.animation.ObjectAnimator;
import android.animation.ValueAnimator;
import android.annotation.SuppressLint;
import android.annotation.TargetApi;
import android.app.Activity;
import android.app.ActivityManager;
import android.app.ActivityManager.MemoryInfo;
import android.app.ActivityManager.RunningAppProcessInfo;
import android.app.ActivityManager.RunningServiceInfo;
import android.app.ActivityManager.RunningTaskInfo;
import android.app.AppOpsManager;
import android.app.Application;
import android.app.KeyguardManager;
import android.app.Notification.Action.Builder;
import android.app.Notification.Builder;
import android.app.PendingIntent;
import android.app.RemoteInput;
import android.app.RemoteInput.Builder;
import android.app.SharedElementCallback;
import android.content.ActivityNotFoundException;
import android.content.ComponentName;
import android.content.ContentProviderOperation;
import android.content.ContentProviderOperation.Builder;
import android.content.ContentResolver;
import android.content.ContentValues;
import android.content.Context;
import android.content.DialogInterface.OnCancelListener;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.pm.ActivityInfo;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.pm.PermissionInfo;
import android.content.pm.ProviderInfo;
import android.content.pm.ResolveInfo;
import android.content.pm.ServiceInfo;
import android.content.res.AssetManager;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.database.Cursor;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteException;
import android.graphics.Bitmap;
import android.graphics.Bitmap.Config;
import android.graphics.BitmapFactory;
import android.graphics.BitmapFactory.Options;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Paint.FontMetrics;
import android.graphics.Paint.Style;
import android.graphics.PaintFlagsDrawFilter;
import android.graphics.Path;
import android.graphics.Path.Direction;
import android.graphics.Path.FillType;
import android.graphics.Picture;
import android.graphics.Point;
import android.graphics.Rect;
import android.graphics.RectF;
import android.graphics.Shader.TileMode;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.NetworkInfo.State;
import android.net.Uri;
import android.net.http.AndroidHttpClient;
import android.net.wifi.WifiInfo;
import android.net.wifi.WifiManager;
import android.opengl.GLES20;
import android.opengl.GLUtils;
import android.os.Build;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.os.Environment;
import android.os.FileUtils;
import android.os.Handler;
import android.os.IBinder;
import android.os.Message;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.Parcelable.Creator;
import android.os.PowerManager;
import android.os.PowerManager.WakeLock;
import android.os.RemoteException;
import android.os.StatFs;
import android.os.SystemClock;
import android.os.SystemProperties;
import android.os.Trace;
import android.provider.MediaStore.Images.Media;
import android.provider.Settings.Secure;
import android.provider.Settings.SettingNotFoundException;
import android.provider.Settings.System;
import android.support.v4.app.Fragment;
import android.support.v4.app.ae;
import android.support.v4.app.aj;
import android.support.v4.app.m.a;
import android.support.v4.os.ParcelableCompat.CompatCreator;
import android.support.v4.os.ParcelableCompatCreatorHoneycombMR2;
import android.support.v7.widget.RecyclerView.g;
import android.support.v7.widget.RecyclerView.n;
import android.support.v7.widget.StaggeredGridLayoutManager.LazySpanLookup.FullSpanItem;
import android.telephony.TelephonyManager;
import android.text.Html;
import android.text.Spannable;
import android.text.SpannableString;
import android.text.SpannableStringBuilder;
import android.text.Spanned;
import android.text.TextUtils;
import android.text.TextUtils.SimpleStringSplitter;
import android.text.style.AbsoluteSizeSpan;
import android.text.style.ForegroundColorSpan;
import android.text.style.StyleSpan;
import android.transition.Transition;
import android.transition.TransitionSet;
import android.util.Base64;
import android.util.DisplayMetrics;
import android.util.JsonReader;
import android.util.Log;
import android.util.Pair;
import android.util.TypedValue;
import android.view.Display;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.MeasureSpec;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.view.ViewGroup.MarginLayoutParams;
import android.view.ViewParent;
import android.view.ViewTreeObserver;
import android.view.Window;
import android.view.WindowManager;
import android.view.accessibility.AccessibilityManager;
import android.view.animation.AccelerateDecelerateInterpolator;
import android.view.animation.AlphaAnimation;
import android.view.animation.Animation;
import android.view.animation.Animation.AnimationListener;
import android.view.animation.AnimationSet;
import android.view.animation.ScaleAnimation;
import android.view.animation.TranslateAnimation;
import android.view.inputmethod.InputMethodInfo;
import android.view.inputmethod.InputMethodManager;
import android.webkit.ConsoleMessage;
import android.webkit.URLUtil;
import android.webkit.WebView;
import android.widget.AbsListView;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EdgeEffect;
import android.widget.FrameLayout.LayoutParams;
import android.widget.ImageView;
import android.widget.ImageView.ScaleType;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.ListView;
import android.widget.OverScroller;
import android.widget.PopupWindow;
import android.widget.RadioButton;
import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;
import android.widget.ScrollView;
import android.widget.TextView;
import android.widget.Toast;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.g.c;
import com.cleanmaster.activitymanagerhelper.RunningAppProcessInfo;
import com.cleanmaster.applock.lockpattern.LockPatternView.Cell;
import com.cleanmaster.applocklib.base.AppLockLib;
import com.cleanmaster.applocklib.bridge.AppLockPref;
import com.cleanmaster.applocklib.interfaces.IAppLockLib;
import com.cleanmaster.applocklib.ui.AppLockDialogFactory.RECOMMENDER_DIALOG_MODE;
import com.cleanmaster.applocklib.ui.activity.AppLockPasswordActivity;
import com.cleanmaster.applocklib.utils.AppLockUtil;
import com.cleanmaster.appwidget.WidgetService;
import com.cleanmaster.base.util.net.HtmlUtil.Color;
import com.cleanmaster.base.util.system.WorkerProcessUtils.ServiceInWorker;
import com.cleanmaster.bitloader.BitmapLoader;
import com.cleanmaster.bitloader.BitmapLoader.TaskType;
import com.cleanmaster.boost.abnormal.abnormalnotify.AbnormalDetectionUtils.HandleHelper.Result;
import com.cleanmaster.boost.abnormal.abnormalnotify.AbnormalIgnoreManager;
import com.cleanmaster.boost.abnormal.abnormalnotify.AbnormalNotifyActivity;
import com.cleanmaster.boost.abnormal.abnormalnotify.AbnormalScenePhoneListener;
import com.cleanmaster.boost.abnormal.abnormalnotify.AbnormalScenePhoneListener.NotifyCacheType;
import com.cleanmaster.boost.abnormal.abnormalnotify.AbnormalScenePhoneListener.b;
import com.cleanmaster.boost.acc.data.ProcessDataTransferManager.BatteryProcessModel;
import com.cleanmaster.boost.acc.service.AccessibilityKillService;
import com.cleanmaster.boost.acc.ui.widget.StandbyCoverImageView;
import com.cleanmaster.boost.acc.utils.DialogUtils.4;
import com.cleanmaster.boost.acc.utils.DialogUtils.8;
import com.cleanmaster.boost.acc.utils.v.a;
import com.cleanmaster.boost.autostarts.core.FreqStartApp;
import com.cleanmaster.boost.autostarts.data.AutoStartRulesStorage;
import com.cleanmaster.boost.boostengine.autostart.AutostartDefine;
import com.cleanmaster.boost.boostengine.autostart.a.a.c;
import com.cleanmaster.boost.d.af;
import com.cleanmaster.boost.d.ai;
import com.cleanmaster.boost.d.z;
import com.cleanmaster.boost.lowbatterymode.NotifyAchiveReceiver;
import com.cleanmaster.boost.powerengine.process.clond.ProcCloudDefine.CLOUD_APP_FILTER;
import com.cleanmaster.boost.powerengine.process.clond.ext.ProcCloudRuleDefine.ENUM_MATCH;
import com.cleanmaster.boost.process.BoostExportUtils.PreScanResultType;
import com.cleanmaster.boost.util.BoostBGThread;
import com.cleanmaster.cleancloud.core.base.CleanCloudReadOnlyHighFreqDB;
import com.cleanmaster.cleancloud.core.base.o.a;
import com.cleanmaster.cleancloud.core.falseproc.KFalseDBHelper;
import com.cleanmaster.cleancloud.core.falseproc.g.2;
import com.cleanmaster.cleancloud.d.c;
import com.cleanmaster.cleancloud.f.e;
import com.cleanmaster.cleancloud.i.a;
import com.cleanmaster.cleancloud.j.a;
import com.cleanmaster.cleancloud.j.i;
import com.cleanmaster.cleancloud.k.c;
import com.cleanmaster.cleancloud.k.e;
import com.cleanmaster.cloudconfig.CloudResourceUtil.RESOURCE_TYPE;
import com.cleanmaster.cloudconfig.SimpleEditText;
import com.cleanmaster.cloudconfig.aa;
import com.cleanmaster.cloudconfig.ab;
import com.cleanmaster.cloudconfig.cloudmsg.CloudMsgInfo;
import com.cleanmaster.cloudconfig.y;
import com.cleanmaster.cloudconfig.y.1;
import com.cleanmaster.cmresources.CmResources;
import com.cleanmaster.common.model.ViewFileEntry;
import com.cleanmaster.dao.DetectAppOpenDaoImpl;
import com.cleanmaster.filemanager.ui.FileManagerTabActivity;
import com.cleanmaster.filemanager.ui.widget.TypeChooserAdapter;
import com.cleanmaster.filemanager.ui.widget.TypeChooserAdapter.b;
import com.cleanmaster.giftbox.AdTemp;
import com.cleanmaster.internalapp.ad.control.InternalAppItem;
import com.cleanmaster.internalapp.ad.core.BatteryDoctorADItem;
import com.cleanmaster.junk.ui.activity.JunkDownloadManagerActivity;
import com.cleanmaster.junk.ui.activity.JunkManagerActivity;
import com.cleanmaster.k.am;
import com.cleanmaster.k.at;
import com.cleanmaster.k.au;
import com.cleanmaster.k.ay;
import com.cleanmaster.k.az;
import com.cleanmaster.k.bb;
import com.cleanmaster.k.bf;
import com.cleanmaster.notification.e.1;
import com.cleanmaster.notification.e.2;
import com.cleanmaster.notification.normal.NotificationSetting;
import com.cleanmaster.push.JunkNotificationReceiver;
import com.cleanmaster.screensave.newscreensaver.ScreenSaverService;
import com.cleanmaster.security.appinfo.AppInfoModel;
import com.cleanmaster.security.appinfo.SecurityAppInfoActivity;
import com.cleanmaster.security.pbsdk.PbLib;
import com.cleanmaster.security.pbsdk.interfaces.IPbLib;
import com.cleanmaster.security.pbsdk.interfaces.IUrlChecker;
import com.cleanmaster.security.timewall.core.TimeWallData;
import com.cleanmaster.security.timewall.core.TimeWallDefine.EVENT_TYPE;
import com.cleanmaster.security.timewall.uimodel.UnknownFilesSafeModel.ElfSafeModel;
import com.cleanmaster.security.ui.view.UrlLoadImageView;
import com.cleanmaster.security.utils.j.1;
import com.cleanmaster.security.utils.j.2;
import com.cleanmaster.service.FloatService;
import com.cleanmaster.service.LocalService;
import com.cleanmaster.social.comment.request.CommentRequest.QueryCacheTask;
import com.cleanmaster.synipc.ICloudConfigGetter;
import com.cleanmaster.synipc.IGameDataService;
import com.cleanmaster.synipc.IProcessCpuManager;
import com.cleanmaster.synipc.ISplashService;
import com.cleanmaster.synipc.ISyncIpcService;
import com.cleanmaster.ui.app.FloatGuideList;
import com.cleanmaster.ui.app.UninstallNormalHeadView;
import com.cleanmaster.ui.game.GameBackgroundThread;
import com.cleanmaster.ui.game.encode.OpensnsException;
import com.cleanmaster.ui.resultpage.ctrl.PosRule;
import com.cleanmaster.ui.resultpage.item.aq;
import com.cleanmaster.ui.space.SpaceManagerActivity;
import com.cleanmaster.util.AppInfoCacheMgr;
import com.cleanmaster.util.AppInfoCacheMgr.a;
import com.cleanmaster.util.AppInfoCacheMgr.b;
import com.cleanmaster.util.AppInfoCacheMgr.j;
import com.cleanmaster.util.OpLog;
import com.cleanmaster.util.ShareHelper;
import com.cleanmaster.util.al.c;
import com.cleanmaster.util.al.d;
import com.cleanmaster.watcher.AbnormalCpuApp;
import com.cleanmaster.weather.data.AlertWeatherData;
import com.cleanmaster.weather.data.HourlyForecastData;
import com.cleanmaster.weather.data.WeatherData;
import com.cmcm.onews.model.ONews;
import com.cmcm.onews.model.ONewsScenario;
import com.cmcm.onews.model.ONewsStat;
import com.cmcm.onews.util.ReportThread;
import com.cmcm.swiper.SwiperService;
import com.cmnow.weather.a.bc;
import com.cmnow.weather.a.ck;
import com.cmnow.weather.sdk.alert.Alert;
import com.cmnow.weather.sdk.model.WeatherDailyData;
import com.cmnow.weather.sdk.model.WeatherHourlyData;
import com.cmnow.weather.sdk.model.WeatherSunPhaseTimeData;
import com.facebook.FacebookActivity;
import com.facebook.FacebookException;
import com.facebook.FacebookOperationCanceledException;
import com.facebook.LoggingBehavior;
import com.facebook.ads.NativeAd;
import com.facebook.ads.NativeAd.Image;
import com.facebook.appevents.AppEventsLogger;
import com.facebook.internal.CallbackManagerImpl;
import com.facebook.internal.w.a;
import com.facebook.share.model.ShareContent;
import com.facebook.share.model.ShareLinkContent;
import com.facebook.share.model.ShareOpenGraphAction;
import com.facebook.share.model.ShareOpenGraphContent;
import com.facebook.share.model.ShareOpenGraphObject;
import com.facebook.share.model.ShareOpenGraphValueContainer;
import com.facebook.share.model.SharePhoto;
import com.facebook.share.model.SharePhotoContent;
import com.facebook.share.model.ShareVideoContent;
import com.flurry.android.ads.FlurryAdNative;
import com.google.ads.AdRequest.Gender;
import com.google.android.gms.ads.internal.client.AdRequestParcel;
import com.google.android.gms.ads.internal.client.AdSizeParcel;
import com.google.android.gms.common.internal.safeparcel.zza.zza;
import com.google.android.gms.internal.ak;
import com.google.android.gms.internal.cx;
import com.google.android.gms.internal.eh;
import com.google.android.gms.internal.fr;
import com.google.android.gms.internal.ge;
import com.google.android.gms.internal.gf;
import com.google.android.gms.internal.gg;
import com.google.android.gms.internal.hi;
import com.google.android.gms.internal.hj;
import com.google.android.gms.internal.hk;
import com.google.android.gms.internal.hl;
import com.google.android.gms.internal.hm;
import com.google.android.gms.internal.hn;
import com.google.android.gms.internal.ic;
import com.google.android.gms.internal.ig;
import com.google.android.gms.internal.ii;
import com.google.android.gms.internal.ij;
import com.google.android.gms.internal.il;
import com.google.android.gms.internal.p.a;
import com.google.android.gms.internal.zzae;
import com.google.android.gms.internal.zzqp.zzg;
import com.google.android.gms.internal.zzrq;
import com.google.android.gms.tagmanager.ao;
import com.google.android.gms.tagmanager.bl;
import com.google.android.gms.tagmanager.bv;
import com.handmark.pulltorefresh.library.PullToRefreshBase;
import com.handmark.pulltorefresh.library.PullToRefreshBase.Mode;
import com.handmark.pulltorefresh.library.PullToRefreshBase.State;
import com.hoi.antivirus.AntiVirusFunc;
import com.ijinshan.duba.urlSafe.IRiskyUrlQueryMgr.UrlScanResult;
import com.in2wow.sdk.b.g.b;
import com.in2wow.sdk.model.actions.TriggerResponse;
import com.in2wow.sdk.model.c.b.a;
import com.in2wow.sdk.model.c.d;
import com.in2wow.sdk.model.c.d.a;
import com.in2wow.sdk.triggerresponse.handlers.CommonHandler;
import com.in2wow.sdk.triggerresponse.handlers.CustomHandler;
import com.in2wow.sdk.triggerresponse.handlers.InstallHandler;
import com.in2wow.sdk.triggerresponse.handlers.RedirectHandler;
import com.in2wow.sdk.triggerresponse.handlers.ThirdPartyTrackingHanlder;
import com.keniu.security.commonfunction.FBShareWebViewActivity;
import com.keniu.security.commonfunction.FBShareWebViewActivity.a;
import com.keniu.security.update.push.functionhandles.PushConstants.MessageAction;
import com.keniu.security.update.push.functionhandles.PushConstants.MessageChannel;
import com.keniu.security.update.push.gcm.sdk.GCMBroadcastReceiver;
import com.keniu.security.update.push.pushapi.PushMessage;
import com.ksmobile.business.sdk.l.a;
import com.larvalabs.svgandroid.SVGParseException;
import com.lock.processutil.models.AndroidAppProcess;
import com.lock.processutil.models.AndroidAppProcess.NotAndroidAppProcessException;
import com.lock.push.CityInfo;
import com.lock.sideslip.feed.OFeedHelper.OGC_FEED_OPEN_STATUS;
import com.lock.sideslip.setting.CityData;
import com.mopub.mobileads.util.vast.XmlUtils.1;
import com.mopub.mobileads.util.vast.XmlUtils.2;
import com.mopub.mobileads.util.vast.XmlUtils.3;
import com.mopub.mobileads.util.vast.XmlUtils.NodeProcessor;
import com.my.target.ads.MyTargetVideoView;
import com.my.target.ads.MyTargetView;
import com.my.target.nativeads.views.MediaAdView;
import com.nostra13.universalimageloader.core.assist.QueueProcessingType;
import com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque;
import dalvik.system.DexFile;
import java.io.BufferedReader;
import java.io.Closeable;
import java.io.DataInputStream;
import java.io.DataOutput;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FilenameFilter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.RandomAccessFile;
import java.io.UnsupportedEncodingException;
import java.lang.ref.WeakReference;
import java.lang.reflect.Array;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.net.HttpURLConnection;
import java.net.InetAddress;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLDecoder;
import java.net.URLEncoder;
import java.net.UnknownHostException;
import java.nio.ByteOrder;
import java.security.InvalidKeyException;
import java.security.KeyFactory;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.PublicKey;
import java.security.SignatureException;
import java.security.spec.InvalidKeySpecException;
import java.security.spec.X509EncodedKeySpec;
import java.sql.Timestamp;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.BitSet;
import java.util.Calendar;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;
import java.util.Locale;
import java.util.Map;
import java.util.Map.Entry;
import java.util.NoSuchElementException;
import java.util.PriorityQueue;
import java.util.Random;
import java.util.Set;
import java.util.StringTokenizer;
import java.util.TimeZone;
import java.util.TreeMap;
import java.util.TreeSet;
import java.util.UUID;
import java.util.Vector;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.Executor;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.regex.PatternSyntaxException;
import java.util.zip.CRC32;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;
import java.util.zip.ZipInputStream;
import java.util.zip.ZipOutputStream;
import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
import ks.cm.antivirus.privatebrowsing.InvalidCookieTableSchemaException;
import org.apache.http.impl.cookie.DateParseException;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.json.JSONTokener;
import org.w3c.dom.Document;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.Attributes;
import org.xml.sax.InputSource;
import org.xml.sax.XMLReader;
import org.xmlpull.v1.XmlPullParser;

@cx
@TargetApi(9)
public class a
  implements i.a<Param, Result>
{
  public static com.ijinshan.screensavernew.b.e A;
  public static com.ijinshan.screensavernew.b.a B;
  public static com.ijinshan.screensavernew.b.f C;
  public static com.cmnow.weather.sdk.g D;
  public static String E;
  public static com.ksmobile.business.sdk.n F;
  public static com.ijinshan.screensavershared.a.a G;
  public static boolean H;
  private static Field I;
  private static boolean J;
  private static Field K;
  private static boolean L;
  private static String M;
  private static String N;
  private static Boolean O;
  private static Boolean P;
  private static Boolean Q;
  private static Float R;
  private static Float S;
  private static Map<Integer, Integer> T;
  private static volatile com.facebook.login.c U;
  private static com.facebook.share.internal.f V;
  private static com.facebook.share.internal.f W;
  private static com.ijinshan.screensavernew.a.a X;
  private static GCMBroadcastReceiver Z;
  private static long aa;
  private static Context ab;
  private static String ac;
  public static Method g;
  public static Boolean m;
  public static Boolean n;
  public static Boolean o;
  public static List<ActivityManager.RunningTaskInfo> p;
  public static boolean q;
  public static Context r;
  public static SharedPreferences s;
  public static String t;
  public static com.cmnow.weather.sdk.alert.c u;
  public static com.cmnow.weather.sdk.alert.c v;
  public static volatile String w;
  public static com.ijinshan.screensavernew.b.d z;
  public final int a;
  public final String b;
  public final Class<?> c;
  public final Bundle d;
  public Fragment e;
  public final m.a f;
  public int h;
  public boolean i;
  public int[] k;
  public List<StaggeredGridLayoutManager.LazySpanLookup.FullSpanItem> l;
  public final Class<T> x;
  public final boolean y;
  
  public a() {}
  
  private static PackageInfo A(Context paramContext, String paramString)
  {
    PackageInfo localPackageInfo = null;
    if (paramContext != null) {}
    try
    {
      localPackageInfo = paramContext.getPackageManager().getPackageInfo(paramString, 0);
      return localPackageInfo;
    }
    catch (Exception paramContext) {}
    return null;
  }
  
  public static String A()
  {
    Context localContext = com.keniu.security.d.a().getApplicationContext();
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("appflag=khcleanmaster");
    Object localObject = com.cleanmaster.base.c.r();
    if (!TextUtils.isEmpty((CharSequence)localObject))
    {
      localStringBuilder.append("&phonelanguage=");
      localStringBuilder.append(((String)localObject).replace(" ", ""));
    }
    localObject = c(localContext);
    if (!TextUtils.isEmpty((CharSequence)localObject))
    {
      localStringBuilder.append("&cmlanguage=");
      localStringBuilder.append((String)localObject);
    }
    localObject = com.cleanmaster.base.util.net.b.t(localContext);
    if (!TextUtils.isEmpty((CharSequence)localObject))
    {
      localStringBuilder.append("&mcc=");
      localStringBuilder.append((String)localObject);
    }
    localObject = com.cleanmaster.base.util.net.b.u(localContext);
    if (!TextUtils.isEmpty((CharSequence)localObject))
    {
      localStringBuilder.append("&mnc=");
      localStringBuilder.append((String)localObject);
    }
    localObject = com.keniu.security.update.m.a().d;
    if (!TextUtils.isEmpty((CharSequence)localObject))
    {
      localStringBuilder.append("&apkversion=");
      localStringBuilder.append(((String)localObject).replace(" ", ""));
    }
    localObject = com.keniu.security.update.m.a().g();
    if (!TextUtils.isEmpty((CharSequence)localObject))
    {
      localStringBuilder.append("&dataversion=");
      localStringBuilder.append(((String)localObject).replace(" ", ""));
    }
    localObject = Build.VERSION.RELEASE;
    if (!TextUtils.isEmpty((CharSequence)localObject))
    {
      localStringBuilder.append("&sdkversion=");
      localStringBuilder.append(((String)localObject).replace(" ", ""));
    }
    localObject = Build.MANUFACTURER;
    if (!TextUtils.isEmpty((CharSequence)localObject))
    {
      localStringBuilder.append("&manufacture=");
      localStringBuilder.append(((String)localObject).replace(" ", ""));
    }
    localObject = com.cleanmaster.base.c.A();
    if (!TextUtils.isEmpty((CharSequence)localObject))
    {
      localStringBuilder.append("&channel=");
      localStringBuilder.append(((String)localObject).replace(" ", ""));
    }
    long l1 = com.cleanmaster.base.c.U();
    localStringBuilder.append("&trdmarket=");
    localStringBuilder.append(Long.toString(l1));
    localStringBuilder.append("&cl=");
    String str1 = Locale.getDefault().getCountry();
    String str2 = Locale.getDefault().getLanguage();
    localObject = str1;
    if (!TextUtils.isEmpty(str1))
    {
      localObject = str1;
      if (!TextUtils.isEmpty(str2))
      {
        localObject = str1 + "_" + str2;
        localStringBuilder.append((String)localObject);
      }
    }
    if (TextUtils.isEmpty((CharSequence)localObject)) {
      localStringBuilder.append(com.cleanmaster.base.c.s());
    }
    localStringBuilder.append("&aid=" + p(com.keniu.security.d.a()));
    localStringBuilder.append("&timezone=" + TimeZone.getDefault().getID());
    localObject = d(localContext);
    if (!TextUtils.isEmpty((CharSequence)localObject)) {
      localStringBuilder.append("&country=" + (String)localObject);
    }
    localStringBuilder.append("&enabled=");
    localStringBuilder.append(Integer.toString(1));
    l1 = com.cleanmaster.login.o.a().p();
    if (l1 != 0L)
    {
      localStringBuilder.append("&open_id=");
      localStringBuilder.append(Long.toString(l1));
    }
    return localStringBuilder.toString();
  }
  
  public static void A(Context paramContext)
  {
    if (Y()) {}
    short s1;
    do
    {
      return;
      s1 = (short)com.cleanmaster.configmanager.d.a(paramContext).a("last_cpu_abnormal_notifyid", 0);
    } while (s1 == 0);
    com.cleanmaster.base.util.concurrent.BackgroundThread.a(new com.cleanmaster.boost.cpu.ui.b(paramContext, s1));
  }
  
  private static void A(String paramString1, String paramString2)
  {
    com.lock.sideslip.b.a localA = com.lock.sideslip.d.a().e;
    if (localA != null) {
      localA.c(paramString1, paramString2);
    }
  }
  
  public static boolean A(int paramInt)
  {
    return (0xFF00 & paramInt) != 0;
  }
  
  public static boolean A(String paramString)
  {
    boolean bool2 = true;
    boolean bool3 = false;
    if (Build.VERSION.SDK_INT < 23) {
      return true;
    }
    Context localContext = com.keniu.security.d.a();
    boolean bool1 = bool3;
    if (localContext != null)
    {
      bool1 = bool3;
      if (!TextUtils.isEmpty(paramString)) {
        if (android.support.v4.app.a.a(localContext, paramString) != 0) {
          break label48;
        }
      }
    }
    label48:
    for (bool1 = bool2;; bool1 = false) {
      return bool1;
    }
  }
  
  public static Spannable B(String paramString)
  {
    int i1 = 0;
    SpannableString localSpannableString = new SpannableString(paramString);
    localSpannableString.setSpan(new AbsoluteSizeSpan(17, true), 0, paramString.length(), 33);
    for (;;)
    {
      int i2 = paramString.indexOf(":", i1) + 1;
      if ((i2 >= paramString.length()) || (i2 <= 0)) {
        break;
      }
      localSpannableString.setSpan(new ForegroundColorSpan(-15047512), i1, i2, 33);
      i1 = paramString.indexOf("\n", i2 + 1);
      if (i1 <= 0) {
        break;
      }
      i1 += 1;
    }
    return localSpannableString;
  }
  
  public static String B()
  {
    Context localContext = com.keniu.security.d.a().getApplicationContext();
    StringBuilder localStringBuilder = new StringBuilder();
    Object localObject = com.cleanmaster.base.c.r();
    if (!TextUtils.isEmpty((CharSequence)localObject))
    {
      localStringBuilder.append("?phonelanguage=");
      localStringBuilder.append(((String)localObject).replace(" ", ""));
    }
    localObject = c(localContext);
    if (!TextUtils.isEmpty((CharSequence)localObject))
    {
      localStringBuilder.append("&cmlanguage=");
      localStringBuilder.append((String)localObject);
    }
    String str = com.cleanmaster.base.util.net.b.t(localContext);
    localObject = str;
    if (TextUtils.isEmpty(str)) {
      localObject = com.cleanmaster.configmanager.d.a(localContext).a("cm_default_mcc_for_report", null);
    }
    if (!TextUtils.isEmpty((CharSequence)localObject))
    {
      localStringBuilder.append("&mcc=");
      localStringBuilder.append((String)localObject);
    }
    localObject = com.cleanmaster.base.util.net.b.u(localContext);
    if (!TextUtils.isEmpty((CharSequence)localObject))
    {
      localStringBuilder.append("&mnc=");
      localStringBuilder.append((String)localObject);
    }
    localObject = com.keniu.security.update.m.a().d;
    if (!TextUtils.isEmpty((CharSequence)localObject))
    {
      localStringBuilder.append("&apkversion=");
      localStringBuilder.append(((String)localObject).replace(" ", ""));
    }
    localObject = com.keniu.security.update.m.a().g();
    if (!TextUtils.isEmpty((CharSequence)localObject))
    {
      localStringBuilder.append("&dataversion=");
      localStringBuilder.append(((String)localObject).replace(" ", ""));
    }
    localObject = Build.VERSION.RELEASE;
    if (!TextUtils.isEmpty((CharSequence)localObject))
    {
      localStringBuilder.append("&sdkversion=");
      localStringBuilder.append(((String)localObject).replace(" ", ""));
    }
    localObject = Build.MODEL;
    if (!TextUtils.isEmpty((CharSequence)localObject))
    {
      localStringBuilder.append("&device=");
      localStringBuilder.append(((String)localObject).replace(" ", ""));
    }
    localStringBuilder.append("&networkstate=");
    if (com.cleanmaster.base.util.net.b.b(localContext)) {}
    for (localObject = "wifi";; localObject = "normal")
    {
      localStringBuilder.append((String)localObject);
      localObject = com.cleanmaster.base.c.A();
      if (!TextUtils.isEmpty((CharSequence)localObject))
      {
        localStringBuilder.append("&channelid=");
        localStringBuilder.append(((String)localObject).replace(" ", ""));
      }
      localObject = String.valueOf(com.cleanmaster.base.c.C());
      if (!TextUtils.isEmpty((CharSequence)localObject))
      {
        localStringBuilder.append("&realchannelid=");
        localStringBuilder.append(((String)localObject).replace(" ", ""));
      }
      if (!TextUtils.isEmpty("com.cleanmaster.mguard"))
      {
        localStringBuilder.append("&pkg=");
        localStringBuilder.append("com.cleanmaster.mguard".replace(" ", ""));
      }
      localObject = com.cleanmaster.base.util.system.d.c(localContext);
      if (localObject != null) {
        localStringBuilder.append("&resolution=" + (String)localObject);
      }
      long l1 = com.cleanmaster.kinfocreporter.a.M(com.cleanmaster.boost.process.util.f.b());
      localStringBuilder.append("&mem_size=" + String.valueOf(l1));
      localStringBuilder.append("&minsdk=");
      localStringBuilder.append(Integer.toString(14));
      l1 = com.cleanmaster.base.c.U();
      localStringBuilder.append("&trdmarket=");
      localStringBuilder.append(Long.toString(l1));
      localStringBuilder.append("&vtype=2");
      l1 = System.currentTimeMillis();
      localStringBuilder.append("&currenttime=");
      localStringBuilder.append(Long.toString(l1));
      return localStringBuilder.toString();
    }
  }
  
  private static String B(String paramString1, String paramString2)
  {
    Object localObject;
    if ("mounted".equals(Environment.getExternalStorageState()))
    {
      localObject = cZ();
      Log.e("project", "extsdcard==" + (String)localObject);
      if (localObject != null)
      {
        paramString1 = (String)localObject + paramString1;
        localObject = new File(paramString1);
        if ((!((File)localObject).exists()) || (((File)localObject).isFile()))
        {
          ((File)localObject).delete();
          ((File)localObject).mkdirs();
        }
        if ((((File)localObject).exists()) && (((File)localObject).isDirectory())) {
          if (!TextUtils.isEmpty(paramString1)) {
            break label169;
          }
        }
      }
    }
    for (;;)
    {
      return null;
      paramString1 = null;
      break;
      paramString1 = Environment.getDataDirectory() + "/data/" + ab.getPackageName() + "/files" + paramString1;
      break;
      try
      {
        label169:
        localObject = new File(paramString1);
        if (!((File)localObject).exists())
        {
          if (!((File)localObject).mkdirs()) {
            continue;
          }
          paramString2 = new File(paramString1, paramString2);
          if (!paramString2.exists()) {
            paramString2.createNewFile();
          }
        }
        return paramString1;
      }
      catch (IOException paramString1) {}
    }
    return null;
  }
  
  public static boolean B(int paramInt)
  {
    return (paramInt & 0x100) != 0;
  }
  
  public static boolean B(Context paramContext)
  {
    Object localObject = (ConnectivityManager)paramContext.getSystemService("connectivity");
    if (localObject == null) {
      return false;
    }
    try
    {
      paramContext = ((ConnectivityManager)localObject).getNetworkInfo(0);
      if (paramContext != null)
      {
        paramContext = paramContext.getState();
        if (paramContext != NetworkInfo.State.CONNECTED)
        {
          NetworkInfo.State localState = NetworkInfo.State.CONNECTING;
          if (paramContext != localState) {}
        }
        else
        {
          return true;
        }
      }
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
      try
      {
        paramContext = ((ConnectivityManager)localObject).getNetworkInfo(1);
        if (paramContext != null)
        {
          paramContext = paramContext.getState();
          if (paramContext != NetworkInfo.State.CONNECTED)
          {
            localObject = NetworkInfo.State.CONNECTING;
            if (paramContext != localObject) {}
          }
          else
          {
            return true;
          }
        }
      }
      catch (Exception paramContext)
      {
        paramContext.printStackTrace();
        return false;
      }
      catch (NoSuchMethodError paramContext)
      {
        for (;;) {}
      }
    }
    catch (NoSuchMethodError paramContext)
    {
      for (;;) {}
    }
  }
  
  private static boolean B(Context paramContext, String paramString)
  {
    if (paramContext != null) {
      try
      {
        paramContext.getPackageManager().getPackageInfo(paramString, 256);
        return true;
      }
      catch (Exception paramContext)
      {
        return false;
      }
    }
    return false;
  }
  
  public static int C(int paramInt)
  {
    int i1 = paramInt;
    if ((paramInt & 0x400) != 0) {
      i1 = paramInt & 0xFBFF;
    }
    return i1 | 0x100;
  }
  
  public static Spannable C(String paramString)
  {
    int i1 = 0;
    SpannableString localSpannableString = new SpannableString(paramString);
    localSpannableString.setSpan(new AbsoluteSizeSpan(14, true), 0, paramString.length(), 33);
    for (;;)
    {
      int i2 = paramString.indexOf(":", i1) + 1;
      if ((i2 >= paramString.length()) || (i2 <= 0)) {
        break;
      }
      localSpannableString.setSpan(new ForegroundColorSpan(-5395027), i1, i2, 33);
      i1 = paramString.indexOf("\n", i2 + 1);
      if (i1 <= 0) {
        break;
      }
      i1 += 1;
    }
    return localSpannableString;
  }
  
  public static String C()
  {
    String str = B();
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(str);
    localStringBuilder.append("&aid=").append(p(com.keniu.security.d.a()));
    localStringBuilder.append("&brand=").append(URLEncoder.encode(com.cleanmaster.kinfocreporter.a.SP2("ro.product.brand", "unknow")));
    localStringBuilder.append("&model=").append(URLEncoder.encode(com.cleanmaster.kinfocreporter.a.SP2("ro.product.model", "unknow")));
    return localStringBuilder.toString();
  }
  
  public static boolean C(Context paramContext)
  {
    boolean bool2 = false;
    boolean bool1 = bool2;
    if (paramContext != null) {}
    try
    {
      paramContext = paramContext.registerReceiver(null, new IntentFilter("android.intent.action.BATTERY_CHANGED"));
      bool1 = bool2;
      if (paramContext != null)
      {
        int i1 = paramContext.getIntExtra("plugged", -1);
        if (i1 != 1)
        {
          bool1 = bool2;
          if (i1 != 2) {}
        }
        else
        {
          bool1 = true;
        }
      }
      return bool1;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return false;
  }
  
  public static com.cleanmaster.boost.sceneengine.mainengine.c.a D(Context paramContext)
  {
    com.cleanmaster.boost.sceneengine.mainengine.c.a localA = new com.cleanmaster.boost.sceneengine.mainengine.c.a();
    if (paramContext != null) {}
    try
    {
      paramContext = paramContext.registerReceiver(null, new IntentFilter("android.intent.action.BATTERY_CHANGED"));
      if (paramContext != null)
      {
        localA.a = (paramContext.getIntExtra("level", 0) * 100 / paramContext.getIntExtra("scale", 0));
        paramContext.getIntExtra("voltage", 0);
        az();
        paramContext.getIntExtra("temperature", 0);
      }
      return localA;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return localA;
  }
  
  public static WeatherDailyData D(int paramInt)
  {
    Object localObject = com.lock.sideslip.d.a().d().b();
    if ((paramInt < 0) || (localObject == null)) {
      t("WeatherAlert", "getDailyData    index=" + paramInt + " fetcher=" + localObject);
    }
    for (;;)
    {
      return null;
      try
      {
        localObject = ((com.cmnow.weather.sdk.i)localObject).a(7);
        if ((localObject != null) && (localObject.length > paramInt))
        {
          localObject = localObject[paramInt];
          return localObject;
        }
      }
      catch (Exception localException)
      {
        localException.printStackTrace();
        t("WeatherAlert", "getDailyData Exception = " + Log.getStackTraceString(localException));
      }
    }
    return null;
  }
  
  public static String D(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return null;
    }
    return c("#dd2b2b", paramString);
  }
  
  public static boolean D()
  {
    return (android.support.v4.app.a.a(com.keniu.security.d.a(), "android.permission.CALL_PHONE") == 0) && (android.support.v4.app.a.a(com.keniu.security.d.a(), "android.permission.READ_PHONE_STATE") == 0);
  }
  
  public static String E(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return null;
    }
    return c("#0000ff", paramString);
  }
  
  public static boolean E()
  {
    return S(com.keniu.security.d.a());
  }
  
  public static boolean E(int paramInt)
  {
    com.lock.sideslip.setting.h.a();
    Object localObject = com.lock.sideslip.setting.h.b("weather_notified_alerts_today", "");
    t("WeatherAlert", "isAlertNotifiedToday:" + paramInt + " => " + (String)localObject);
    if (TextUtils.isEmpty((CharSequence)localObject)) {
      return false;
    }
    String str = com.cmnow.weather.sdk.alert.b.b();
    label187:
    for (;;)
    {
      try
      {
        JSONObject localJSONObject = new JSONObject((String)localObject);
        if (localJSONObject.has("date"))
        {
          localObject = localJSONObject.getString("date");
          if (!TextUtils.equals((CharSequence)localObject, str)) {
            break;
          }
          if (!localJSONObject.has("alerts")) {
            continue;
          }
          localObject = localJSONObject.getJSONArray("alerts");
          if (localObject == null) {
            continue;
          }
          i1 = ((JSONArray)localObject).length();
          break label187;
          if (i2 >= i1) {
            break;
          }
          int i3 = ((JSONArray)localObject).getInt(i2);
          if (paramInt != i3) {
            continue;
          }
          return true;
        }
        localObject = null;
        continue;
        localObject = null;
        continue;
        int i1 = 0;
        break label187;
        i2 += 1;
        continue;
        int i2 = 0;
      }
      catch (Exception localException)
      {
        return false;
      }
    }
  }
  
  public static boolean E(Context paramContext)
  {
    if (paramContext != null)
    {
      paramContext = (PowerManager)paramContext.getSystemService("power");
      if (paramContext != null) {
        try
        {
          if (Build.VERSION.SDK_INT >= 20)
          {
            if (!paramContext.isInteractive()) {
              return true;
            }
          }
          else
          {
            boolean bool = paramContext.isScreenOn();
            if (!bool) {
              return true;
            }
          }
        }
        catch (Throwable paramContext)
        {
          paramContext.printStackTrace();
        }
      }
    }
    return false;
  }
  
  public static int F(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return 0;
    }
    return c(paramString.getBytes());
  }
  
  public static long F()
  {
    Calendar localCalendar = Calendar.getInstance();
    localCalendar.add(14, -(localCalendar.get(15) + localCalendar.get(16)));
    return localCalendar.getTimeInMillis();
  }
  
  public static void F(int paramInt)
  {
    Object localObject4 = null;
    int i2 = 0;
    com.lock.sideslip.setting.h.a();
    String str = com.lock.sideslip.setting.h.b("weather_notified_alerts_today", "");
    try
    {
      if (!TextUtils.isEmpty(str))
      {
        Object localObject1 = new JSONObject(str);
        Object localObject3 = localObject1;
        if (localObject1 == null) {
          localObject3 = new JSONObject();
        }
        t("WeatherAlert", "setAlertNotifiedToday:" + paramInt + " => " + str);
        str = com.cmnow.weather.sdk.alert.b.b();
        localObject1 = localObject4;
        try
        {
          if (((JSONObject)localObject3).has("date")) {
            localObject1 = ((JSONObject)localObject3).getString("date");
          }
          if (!TextUtils.equals((CharSequence)localObject1, str))
          {
            ((JSONObject)localObject3).put("date", str);
            ((JSONObject)localObject3).remove("alerts");
          }
          if (((JSONObject)localObject3).has("alerts")) {}
          for (localObject1 = ((JSONObject)localObject3).getJSONArray("alerts");; localObject1 = new JSONArray())
          {
            if (localObject1 == null) {
              break label280;
            }
            i1 = ((JSONArray)localObject1).length();
            if (i2 >= i1) {
              break;
            }
            if (paramInt != ((JSONArray)localObject1).getInt(i2)) {
              break label285;
            }
            return;
          }
          ((JSONArray)localObject1).put(paramInt);
          ((JSONObject)localObject3).put("alerts", localObject1);
          com.lock.sideslip.setting.h.a();
          com.lock.sideslip.setting.h.a("weather_notified_alerts_today", ((JSONObject)localObject3).toString());
          t("WeatherAlert", "setAlertNotifiedToday:" + paramInt + " => " + ((JSONObject)localObject3).toString());
          return;
        }
        catch (Exception localException1)
        {
          localException1.printStackTrace();
          return;
        }
      }
    }
    catch (Exception localException2)
    {
      for (;;)
      {
        Object localObject2 = null;
        continue;
        label280:
        int i1 = 0;
        continue;
        label285:
        i2 += 1;
      }
    }
  }
  
  public static boolean F(Context paramContext)
  {
    if (com.cleanmaster.base.util.system.m.a(paramContext, "com.ijinshan.kbatterydoctor_en"))
    {
      com.cleanmaster.base.util.system.m.p(paramContext, "com.ijinshan.kbatterydoctor_en");
      return true;
    }
    if (com.cleanmaster.base.util.system.m.a(paramContext, "com.ijinshan.kbatterydoctor"))
    {
      com.cleanmaster.base.util.system.m.p(paramContext, "com.ijinshan.kbatterydoctor");
      return true;
    }
    return false;
  }
  
  public static String G()
  {
    Calendar localCalendar = Calendar.getInstance();
    return String.valueOf(localCalendar.get(1)) + localCalendar.get(6);
  }
  
  public static String G(Context paramContext)
  {
    if ("mounted".equals(Environment.getExternalStorageState()))
    {
      Object localObject = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES);
      if (localObject != null)
      {
        ((File)localObject).mkdir();
        localObject = ((File)localObject).getAbsolutePath();
        paramContext = (String)localObject + "/" + paramContext.getPackageName() + "/";
        new File(paramContext).mkdir();
        return paramContext;
      }
    }
    return null;
  }
  
  public static boolean G(int paramInt)
  {
    return (paramInt >= 0) && (paramInt < 7);
  }
  
  public static boolean G(String paramString)
  {
    d(paramString, "34703", 3002);
    return true;
  }
  
  public static long H(String paramString)
  {
    try
    {
      long l1 = Long.parseLong(paramString);
      return l1;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
    }
    return -1L;
  }
  
  public static String H()
  {
    Calendar localCalendar = Calendar.getInstance();
    return String.valueOf(localCalendar.get(1)) + localCalendar.get(3);
  }
  
  public static String H(Context paramContext)
  {
    Object localObject2 = null;
    if (paramContext != null)
    {
      localObject1 = paramContext.getApplicationInfo();
      if ((localObject1 != null) && (!TextUtils.isEmpty(((ApplicationInfo)localObject1).dataDir)))
      {
        localObject1 = new File(((ApplicationInfo)localObject1).dataDir + "/" + "files");
        if (((File)localObject1).isFile()) {
          ((File)localObject1).delete();
        }
        ((File)localObject1).mkdirs();
      }
    }
    if (paramContext != null)
    {
      int i1 = 0;
      File localFile;
      for (localObject1 = null; i1 < 3; localObject1 = localFile)
      {
        localFile = paramContext.getFilesDir();
        localObject1 = localFile;
        if (localFile != null) {
          break;
        }
        SystemClock.sleep(10L);
        i1 += 1;
      }
    }
    Object localObject1 = null;
    paramContext = localObject2;
    if (localObject1 != null) {
      paramContext = ((File)localObject1).getPath();
    }
    return paramContext;
  }
  
  public static boolean H(int paramInt)
  {
    com.cleanmaster.security.timewall.core.c localC = d(true);
    localC.a(null);
    boolean bool = localC.a(paramInt);
    localC.a();
    return bool;
  }
  
  public static int I(int paramInt)
  {
    switch (paramInt)
    {
    case 4: 
    default: 
      return -1;
    case 1: 
      return 10;
    case 2: 
      return 50;
    }
    return 100;
  }
  
  public static MessageDigest I()
  {
    try
    {
      MessageDigest localMessageDigest = MessageDigest.getInstance("MD5");
      return localMessageDigest;
    }
    catch (NoSuchAlgorithmException localNoSuchAlgorithmException)
    {
      Log.e("KQueryMd5Util", "Unable to find digest algorithm MD5");
    }
    return null;
  }
  
  public static BitSet I(String paramString)
  {
    Object localObject = bl(paramString);
    if (((List)localObject).size() <= 0) {
      return null;
    }
    paramString = new BitSet();
    localObject = ((List)localObject).iterator();
    int i1 = 0;
    while (((Iterator)localObject).hasNext())
    {
      Long localLong = (Long)((Iterator)localObject).next();
      int i3 = 0;
      int i2 = i1;
      i1 = i2;
      if (i3 < 16)
      {
        if ((localLong.longValue() & 1 << i3) == 1 << i3) {}
        for (boolean bool = true;; bool = false)
        {
          paramString.set(i2, bool);
          i3 += 1;
          i2 += 1;
          break;
        }
      }
    }
    return paramString;
  }
  
  @SuppressLint({"NewApi"})
  public static boolean I(Context paramContext)
  {
    if (paramContext == null) {
      return true;
    }
    new Intent("android.settings.USAGE_ACCESS_SETTINGS");
    try
    {
      ApplicationInfo localApplicationInfo = paramContext.getPackageManager().getApplicationInfo(paramContext.getPackageName(), 0);
      int i1 = ((AppOpsManager)paramContext.getSystemService("appops")).checkOpNoThrow("android:get_usage_stats", localApplicationInfo.uid, localApplicationInfo.packageName);
      return i1 == 0;
    }
    catch (PackageManager.NameNotFoundException paramContext) {}
    return false;
  }
  
  public static NetworkInfo J(Context paramContext)
  {
    try
    {
      paramContext = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
      return paramContext;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
      return null;
    }
    catch (NoSuchMethodError paramContext) {}
    return null;
  }
  
  public static Uri J(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return null;
    }
    return Uri.parse("content://" + paramString + "/cm_cleancloud/appcpu/cache");
  }
  
  public static com.cleanmaster.base.util.e.g J()
  {
    com.cleanmaster.base.util.e.g localG = d(Environment.getDataDirectory());
    if ((localG != null) && (0L != localG.a))
    {
      long l1 = SystemProperties.getLong("sys.memory.threshold.low", 0L);
      l1 = Math.min(localG.b, l1);
      localG.b -= l1;
    }
    return localG;
  }
  
  public static boolean J(int paramInt)
  {
    if (paramInt <= 0) {}
    do
    {
      return false;
      try
      {
        String str = com.cleanmaster.cleancloud.core.c.a();
        if ((str == null) || (str.length() <= 0)) {
          break;
        }
        i1 = Integer.parseInt(String.valueOf(str.charAt(str.length() - 1)), 16);
      }
      catch (Exception localException)
      {
        for (;;)
        {
          int i1 = 0;
        }
      }
      paramInt = (int)(paramInt / 100.0F * 15.0F);
    } while ((i1 < 0) || (i1 > paramInt));
    return true;
  }
  
  public static int K()
  {
    try
    {
      Class localClass = Class.forName("com.android.internal.R$dimen");
      Object localObject = localClass.newInstance();
      int i1 = Integer.parseInt(localClass.getField("status_bar_height").get(localObject).toString());
      i1 = com.keniu.security.c.a().getResources().getDimensionPixelSize(i1);
      return i1;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
    return 0;
  }
  
  public static com.cleanmaster.cleancloud.core.appcpu.j K(String paramString)
  {
    com.cleanmaster.cleancloud.core.appcpu.j localJ = new com.cleanmaster.cleancloud.core.appcpu.j();
    localJ.a = -1;
    if (TextUtils.isEmpty(paramString)) {}
    do
    {
      do
      {
        return localJ;
        try
        {
          paramString = new JSONObject(paramString);
          if (paramString.has("e"))
          {
            localJ.a = -2;
            paramString.getString("e");
            return localJ;
          }
        }
        catch (JSONException paramString)
        {
          paramString.printStackTrace();
          return localJ;
        }
      } while (!paramString.has("s"));
      paramString = paramString.getJSONArray("s");
    } while (paramString == null);
    int i2 = paramString.length();
    ArrayList localArrayList = new ArrayList(i2);
    int i1 = 0;
    com.cleanmaster.cleancloud.c.c localC;
    if (i1 < i2)
    {
      localC = new com.cleanmaster.cleancloud.c.c();
      JSONObject localJSONObject = paramString.getJSONObject(i1);
      if ((localJSONObject.has("e")) && (localJSONObject.getInt("e") == 1))
      {
        localC.b = 1;
        localC.a = 1;
        localC.c = new com.cleanmaster.cleancloud.c.e();
        if (localJSONObject.has("a")) {
          localC.h = ((byte)localJSONObject.getInt("a"));
        }
        if (localJSONObject.has("m")) {
          localC.g = ((byte)localJSONObject.getInt("m"));
        }
        if (localJSONObject.has("c")) {
          localC.c.a = localJSONObject.getString("c");
        }
        if (localJSONObject.has("h"))
        {
          if (localJSONObject.getInt("h") != 1) {
            break label501;
          }
          bool = true;
          label279:
          localC.i = bool;
        }
        if (localJSONObject.has("u")) {
          localC.c.b = localJSONObject.getString("u");
        }
        if (localJSONObject.has("l"))
        {
          if (localJSONObject.getInt("l") != 1) {
            break label506;
          }
          bool = true;
          label337:
          localC.j = bool;
        }
        if (localJSONObject.has("r"))
        {
          if (localJSONObject.getInt("r") != 1) {
            break label511;
          }
          bool = true;
          label368:
          localC.k = bool;
        }
        if (localJSONObject.has("d")) {
          localC.c.c = localJSONObject.getString("d");
        }
        if (localJSONObject.has("t")) {
          localC.l = localJSONObject.getString("t");
        }
        if (localJSONObject.has("g")) {
          if (localJSONObject.getInt("g") != 0) {
            break label516;
          }
        }
      }
    }
    label501:
    label506:
    label511:
    label516:
    for (boolean bool = true;; bool = false)
    {
      localC.d = bool;
      for (;;)
      {
        localArrayList.add(localC);
        i1 += 1;
        break;
        localC.a = 2;
        localC.b = 0;
      }
      localJ.b = localArrayList;
      localJ.a = 0;
      return localJ;
      bool = false;
      break label279;
      bool = false;
      break label337;
      bool = false;
      break label368;
    }
  }
  
  public static String K(int paramInt)
  {
    switch (paramInt)
    {
    default: 
      return "";
    case 1: 
      return "30101";
    case 2: 
      return "30201";
    case 3: 
      return "30301";
    case 15: 
      return "31501";
    }
    return "31601";
  }
  
  public static void K(Context paramContext)
  {
    long l1 = com.cleanmaster.util.ad.a().a(10);
    long l2 = com.cleanmaster.util.ad.a().a(11);
    long l3 = com.cleanmaster.configmanager.d.a(paramContext).a("notify_download_manager_longtime", 0L);
    if (0L == l3)
    {
      com.cleanmaster.configmanager.d.a(paramContext).b("notify_download_manager_longtime", 1L);
      com.cleanmaster.configmanager.d.a(paramContext).b("notify_download_manager_presize", l1);
      com.cleanmaster.configmanager.d.a(paramContext).b("notify_download_manager_bluetooth_presize", l2);
    }
    int i1;
    label92:
    int i2;
    label111:
    long l4;
    do
    {
      do
      {
        return;
        if (l1 <= com.cleanmaster.configmanager.d.a(paramContext).a("notify_download_manager_presize", 0L)) {
          break;
        }
        i1 = 1;
        if (l2 <= com.cleanmaster.configmanager.d.a(paramContext).a("notify_download_manager_bluetooth_presize", 0L)) {
          break label382;
        }
        i2 = 1;
        if (i1 == 0) {
          com.cleanmaster.configmanager.d.a(paramContext).b("notify_download_manager_presize", l1);
        }
        if (i2 == 0) {
          com.cleanmaster.configmanager.d.a(paramContext).b("notify_download_manager_bluetooth_presize", l2);
        }
      } while ((i2 == 0) && (i1 == 0));
      l4 = b("junk_scan_service_flag_key", "junk_scan_download_manager_notify_time", 3L);
    } while (System.currentTimeMillis() - l3 < l4 * 86400000L);
    com.cleanmaster.configmanager.d.a(paramContext).b("notify_download_manager_longtime", System.currentTimeMillis());
    com.cleanmaster.configmanager.d.a(paramContext).b("notify_download_manager_presize", l1);
    com.cleanmaster.configmanager.d.a(paramContext).b("notify_download_manager_bluetooth_presize", l2);
    Intent localIntent = new Intent(paramContext, JunkDownloadManagerActivity.class);
    localIntent.putExtra("source_from", 2);
    NotificationSetting localNotificationSetting = new NotificationSetting();
    localNotificationSetting.a = 257;
    localNotificationSetting.f = 3;
    localNotificationSetting.i = true;
    com.cleanmaster.notification.normal.f localF = new com.cleanmaster.notification.normal.f();
    localF.c = paramContext.getString(2131298556);
    if (i1 != 0)
    {
      localF.d = paramContext.getString(2131298704);
      localIntent.putExtra("cur_page", 0);
    }
    for (;;)
    {
      localF.e = 1;
      localF.i = paramContext.getString(2131298700);
      localF.h = 2130839220;
      localF.q = localIntent;
      if (!com.cleanmaster.notification.e.a().c(localNotificationSetting, localF)) {
        break;
      }
      new com.cleanmaster.common_transition.report.t().a(40).report();
      return;
      i1 = 0;
      break label92;
      label382:
      i2 = 0;
      break label111;
      localF.d = paramContext.getString(2131298705);
      localIntent.putExtra("cur_page", 3);
    }
  }
  
  public static Uri L(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return null;
    }
    return Uri.parse("content://" + paramString + "/cm_cleancloud/cache/cache_pkg");
  }
  
  public static String L(int paramInt)
  {
    switch (paramInt)
    {
    default: 
      return "";
    case 1: 
      return "30102";
    case 2: 
      return "30202";
    case 3: 
      return "30302";
    case 15: 
      return "31502";
    }
    return "31602";
  }
  
  public static void L(Context paramContext)
  {
    Intent localIntent = new Intent(paramContext, com.cleanmaster.security.scan.b.a.a());
    localIntent.putExtra("scan_trigger_src", 9);
    com.cleanmaster.base.util.system.b.a(paramContext, localIntent);
  }
  
  public static boolean L()
  {
    return Build.VERSION.SDK_INT >= 23;
  }
  
  /* Error */
  public static com.cleanmaster.cleancloud.core.falseproc.p M(String paramString)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 5
    //   3: new 464	java/io/File
    //   6: dup
    //   7: aload_0
    //   8: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   11: astore_0
    //   12: aload_0
    //   13: invokevirtual 468	java/io/File:exists	()Z
    //   16: ifne +5 -> 21
    //   19: aconst_null
    //   20: areturn
    //   21: aload_0
    //   22: invokevirtual 1165	java/io/File:length	()J
    //   25: lstore_2
    //   26: new 1167	java/io/FileInputStream
    //   29: dup
    //   30: aload_0
    //   31: invokespecial 1170	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   34: astore 4
    //   36: aload 5
    //   38: astore_0
    //   39: lload_2
    //   40: ldc2_w 1171
    //   43: lcmp
    //   44: iflt +49 -> 93
    //   47: aload 5
    //   49: astore_0
    //   50: lload_2
    //   51: ldc2_w 1173
    //   54: lcmp
    //   55: ifge +38 -> 93
    //   58: lload_2
    //   59: l2i
    //   60: istore_1
    //   61: aload 4
    //   63: astore_0
    //   64: iload_1
    //   65: newarray byte
    //   67: astore 5
    //   69: aload 4
    //   71: astore_0
    //   72: aload 4
    //   74: aload 5
    //   76: invokevirtual 1177	java/io/FileInputStream:read	([B)I
    //   79: pop
    //   80: aload 4
    //   82: astore_0
    //   83: aload 5
    //   85: invokestatic 1180	LibcoreWrapper/a:e	([B)Lcom/cleanmaster/cleancloud/core/falseproc/p;
    //   88: astore 5
    //   90: aload 5
    //   92: astore_0
    //   93: aload 4
    //   95: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   98: aload_0
    //   99: areturn
    //   100: astore 4
    //   102: aload 4
    //   104: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   107: aload_0
    //   108: areturn
    //   109: astore 5
    //   111: aconst_null
    //   112: astore 4
    //   114: aload 4
    //   116: astore_0
    //   117: aload 5
    //   119: invokevirtual 1185	java/io/FileNotFoundException:printStackTrace	()V
    //   122: aload 4
    //   124: ifnull -105 -> 19
    //   127: aload 4
    //   129: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   132: aconst_null
    //   133: areturn
    //   134: astore_0
    //   135: aload_0
    //   136: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   139: aconst_null
    //   140: areturn
    //   141: astore 5
    //   143: aconst_null
    //   144: astore 4
    //   146: aload 4
    //   148: astore_0
    //   149: aload 5
    //   151: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   154: aload 4
    //   156: ifnull -137 -> 19
    //   159: aload 4
    //   161: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   164: aconst_null
    //   165: areturn
    //   166: astore_0
    //   167: aload_0
    //   168: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   171: aconst_null
    //   172: areturn
    //   173: astore 4
    //   175: aconst_null
    //   176: astore_0
    //   177: aload_0
    //   178: ifnull +7 -> 185
    //   181: aload_0
    //   182: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   185: aload 4
    //   187: athrow
    //   188: astore_0
    //   189: aload_0
    //   190: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   193: goto -8 -> 185
    //   196: astore 4
    //   198: goto -21 -> 177
    //   201: astore 5
    //   203: goto -57 -> 146
    //   206: astore 5
    //   208: goto -94 -> 114
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	211	0	paramString	String
    //   60	5	1	i1	int
    //   25	34	2	l1	long
    //   34	60	4	localFileInputStream	FileInputStream
    //   100	3	4	localIOException1	IOException
    //   112	48	4	localObject1	Object
    //   173	13	4	localObject2	Object
    //   196	1	4	localObject3	Object
    //   1	90	5	localObject4	Object
    //   109	9	5	localFileNotFoundException1	FileNotFoundException
    //   141	9	5	localIOException2	IOException
    //   201	1	5	localIOException3	IOException
    //   206	1	5	localFileNotFoundException2	FileNotFoundException
    // Exception table:
    //   from	to	target	type
    //   93	98	100	java/io/IOException
    //   21	36	109	java/io/FileNotFoundException
    //   127	132	134	java/io/IOException
    //   21	36	141	java/io/IOException
    //   159	164	166	java/io/IOException
    //   21	36	173	finally
    //   181	185	188	java/io/IOException
    //   64	69	196	finally
    //   72	80	196	finally
    //   83	90	196	finally
    //   117	122	196	finally
    //   149	154	196	finally
    //   64	69	201	java/io/IOException
    //   72	80	201	java/io/IOException
    //   83	90	201	java/io/IOException
    //   64	69	206	java/io/FileNotFoundException
    //   72	80	206	java/io/FileNotFoundException
    //   83	90	206	java/io/FileNotFoundException
  }
  
  public static String M(int paramInt)
  {
    switch (paramInt)
    {
    default: 
      return "";
    case 1: 
      return "30104";
    case 2: 
      return "30204";
    case 3: 
      return "30304";
    case 15: 
      return "31504";
    }
    return "31604";
  }
  
  public static String M(Context paramContext)
  {
    int i2 = 0;
    paramContext = p(paramContext);
    if (paramContext != null) {}
    for (int i1 = paramContext.length();; i1 = 0)
    {
      StringBuilder localStringBuilder = new StringBuilder();
      if (16 > i1) {
        while (i2 < 16 - i1)
        {
          localStringBuilder.append('0');
          i2 += 1;
        }
      }
      if (paramContext != null) {
        localStringBuilder.append(paramContext);
      }
      return localStringBuilder.toString();
    }
  }
  
  public static boolean M()
  {
    return Build.VERSION.SDK_INT >= 14;
  }
  
  public static int N(int paramInt)
  {
    if (T == null)
    {
      localObject = new HashMap();
      T = (Map)localObject;
      ((Map)localObject).put(Integer.valueOf(60), Integer.valueOf(2147483642));
      T.put(Integer.valueOf(1024), Integer.valueOf(3));
      T.put(Integer.valueOf(256), Integer.valueOf(2147483642));
    }
    if ((T == null) || (T.isEmpty())) {
      return 2;
    }
    Object localObject = (Integer)T.get(Integer.valueOf(paramInt));
    if (localObject == null) {
      return 2;
    }
    return ((Integer)localObject).intValue();
  }
  
  public static al.d N(String paramString)
  {
    return com.cleanmaster.util.al.a(paramString, new com.cleanmaster.cleancloud.core.residual.u());
  }
  
  public static boolean N()
  {
    return Build.VERSION.SDK_INT >= 11;
  }
  
  public static boolean N(Context paramContext)
  {
    if ((!g()) && (!android.support.v4.a.d.b())) {
      return true;
    }
    return S(paramContext);
  }
  
  public static int O(Context paramContext)
  {
    paramContext = com.cleanmaster.base.util.net.b.b(paramContext, "");
    if (TextUtils.isEmpty(paramContext)) {}
    do
    {
      return 1;
      if (paramContext.equals("wifi")) {
        return 2;
      }
      if (paramContext.equals("2g")) {
        return 3;
      }
      if ((paramContext.equals("3g")) || (paramContext.equals("3.5g"))) {
        return 4;
      }
    } while (!paramContext.equals("4g"));
    return 5;
  }
  
  public static Uri O(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return null;
    }
    return Uri.parse("content://" + paramString + "/cm_cleancloud/residual/residual_dircache");
  }
  
  public static void O(int paramInt)
  {
    b(14, paramInt, "", 0);
  }
  
  public static boolean O()
  {
    return Build.VERSION.SDK_INT >= 9;
  }
  
  public static Uri P(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return null;
    }
    return Uri.parse("content://" + paramString + "/cm_cleancloud/residual/residual_pkgcache");
  }
  
  public static String P(Context paramContext)
  {
    Object localObject1 = "";
    String str2;
    int i1;
    if (paramContext != null)
    {
      str2 = com.cleanmaster.configmanager.d.a(paramContext).a("gamebox_user_did", "");
      if (!TextUtils.isEmpty(str2)) {
        break label459;
      }
      if (!com.cleanmaster.base.util.net.b.v(com.keniu.security.d.a()))
      {
        localObject1 = null;
        if ((TextUtils.isEmpty((CharSequence)localObject1)) || (!((String)localObject1).endsWith("\n"))) {
          break label459;
        }
        localObject1 = ((String)localObject1).substring(0, ((String)localObject1).indexOf("\n"));
        if (!TextUtils.isEmpty((CharSequence)localObject1)) {
          break label420;
        }
        i1 = 0;
        label79:
        if (i1 == 0) {
          break label459;
        }
        if (Build.VERSION.SDK_INT < 23) {
          Settings.System.putString(paramContext.getContentResolver(), "King_Msg_User_Id", (String)localObject1);
        }
        com.cleanmaster.configmanager.d.a(paramContext).b("gamebox_user_did", (String)localObject1);
      }
    }
    else
    {
      return localObject1;
    }
    StringBuffer localStringBuffer = new StringBuffer();
    localStringBuffer.append("v=1");
    localObject1 = "1";
    if (!TextUtils.isEmpty("anlb"))
    {
      localStringBuffer.append("&p=").append("anlb");
      localObject1 = "1".concat("anlb");
    }
    String str1 = UUID.randomUUID().toString();
    Object localObject2 = str1;
    if (str1 != null)
    {
      localObject2 = str1;
      if (str1.length() >= 8) {
        localObject2 = str1.substring(0, 8);
      }
    }
    localObject2 = bs((String)localObject2);
    if (!TextUtils.isEmpty((CharSequence)localObject2)) {
      localStringBuffer.append("&u=").append((String)localObject2);
    }
    for (localObject2 = ((String)localObject1).concat((String)localObject2);; localObject2 = localObject1)
    {
      str1 = ((WifiManager)paramContext.getSystemService("wifi")).getConnectionInfo().getMacAddress();
      localObject1 = localObject2;
      if (!TextUtils.isEmpty(str1))
      {
        localObject1 = str1.replace(":", "");
        localStringBuffer.append("&m=").append((String)localObject1);
        localObject1 = ((String)localObject2).concat((String)localObject1);
      }
      localObject2 = localObject1;
      if (!TextUtils.isEmpty(""))
      {
        str1 = br("");
        localObject2 = localObject1;
        if (!TextUtils.isEmpty(str1))
        {
          localStringBuffer.append("&ip=").append(str1);
          localObject2 = ((String)localObject1).concat(URLEncoder.encode(str1));
        }
      }
      localObject1 = localObject2;
      if (!TextUtils.isEmpty(""))
      {
        localStringBuffer.append("&e=").append("");
        localObject1 = ((String)localObject2).concat("");
      }
      localObject1 = ((String)localObject1).concat("m2ziutq1v3vcz#d@98skf@!tt$dcs5qp9m");
      localStringBuffer.append("&s=").append(bq((String)localObject1));
      localObject1 = z("http://cmplay.did.ijinshan.com/cp/", localStringBuffer.toString());
      break;
      label420:
      if ((((String)localObject1).length() >= 28) && (((String)localObject1).length() <= 40) && (Pattern.compile("^[A-Za-z0-9]+$").matcher((CharSequence)localObject1).matches()))
      {
        i1 = 1;
        break label79;
        label459:
        return str2;
      }
      i1 = 0;
      break label79;
    }
  }
  
  public static void P(int paramInt)
  {
    if (!com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).aA()) {}
    long l1;
    do
    {
      return;
      l1 = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).a("last_report_game_num_time", -1L);
    } while (System.currentTimeMillis() - l1 < 86400000L);
    com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).b("last_report_game_num_time", System.currentTimeMillis());
    com.cleanmaster.base.util.concurrent.BackgroundThread.a(new com.cleanmaster.ui.game.d.a(paramInt));
  }
  
  @TargetApi(16)
  public static boolean P()
  {
    boolean bool2 = true;
    boolean bool3 = false;
    if (Build.VERSION.SDK_INT < 23) {
      return true;
    }
    Context localContext = com.keniu.security.d.a();
    boolean bool1 = bool3;
    if (localContext != null)
    {
      bool1 = bool3;
      if (!TextUtils.isEmpty("android.permission.READ_EXTERNAL_STORAGE")) {
        if (android.support.v4.app.a.a(localContext, "android.permission.READ_EXTERNAL_STORAGE") != 0) {
          break label49;
        }
      }
    }
    label49:
    for (bool1 = bool2;; bool1 = false) {
      return bool1;
    }
  }
  
  public static int Q(int paramInt)
  {
    switch (paramInt)
    {
    default: 
      return 0;
    case 1: 
      return 18;
    case 2: 
      return 19;
    case 15: 
      return 31;
    case 14: 
      return 32;
    case 3: 
      return 17;
    case 30: 
      return 48;
    }
    return 52;
  }
  
  public static long Q(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {}
    for (;;)
    {
      return 0L;
      if (com.cleanmaster.base.util.system.o.h())
      {
        com.cleanmaster.common.model.AppInfo localAppInfo = com.cleanmaster.watcher.c.a().a(paramString);
        if (localAppInfo != null) {
          return localAppInfo.getLastOpenTime();
        }
        return com.cleanmaster.dao.f.c(com.keniu.security.d.a().getApplicationContext()).b(paramString);
      }
      try
      {
        paramString = com.cleanmaster.synipc.b.a().c().a(paramString);
        if (paramString != null)
        {
          long l1 = paramString.getLastOpenTime();
          return l1;
        }
      }
      catch (RemoteException paramString)
      {
        paramString.printStackTrace();
      }
    }
    return 0L;
  }
  
  public static short Q()
  {
    try
    {
      localObject1 = Build.VERSION.RELEASE.replace(".", "");
      if (TextUtils.isEmpty((CharSequence)localObject1)) {
        return 0;
      }
      i1 = 0;
    }
    catch (NumberFormatException localNumberFormatException)
    {
      for (;;)
      {
        Object localObject1;
        int i1;
        int i2;
        Object localObject3;
        short s1 = 0;
        continue;
        i1 += 1;
        Object localObject2 = localObject3;
      }
    }
    if (i1 < 3)
    {
      i2 = ((String)localObject1).indexOf(new String[] { "r", "b", "a" }[i1]);
      localObject3 = localObject1;
      if (i2 >= 0) {
        localObject3 = ((String)localObject1).substring(0, i2);
      }
    }
    else
    {
      localObject3 = ((String)localObject1).trim();
      localObject1 = localObject3;
      if (((String)localObject3).length() == 2) {
        localObject1 = (String)localObject3 + "0";
      }
      s1 = Short.parseShort((String)localObject1);
      return s1;
    }
  }
  
  public static boolean Q(Context paramContext)
  {
    if (!B(paramContext, "com.android.vending")) {}
    do
    {
      return false;
      paramContext = A(paramContext, "com.google.android.gsf");
    } while ((paramContext == null) || (paramContext.applicationInfo == null) || ((paramContext.applicationInfo.flags & 0x1) != 1));
    return true;
  }
  
  public static String R(int paramInt)
  {
    if (paramInt == 2) {
      return "rp_detail";
    }
    if (paramInt == 4) {
      return "rp_video";
    }
    if (paramInt == 5) {
      return "rp_link";
    }
    if (paramInt == 1) {
      return "rp_feature";
    }
    if (paramInt == 3) {
      return "rp_app";
    }
    if (paramInt == 6) {
      return "rp_share";
    }
    if (paramInt == 8) {
      return "rp_go2gp";
    }
    if (paramInt == 9) {
      return "rp_news";
    }
    if (paramInt == 7) {
      return "rp_noskip";
    }
    return "rp_default";
  }
  
  public static String R(Context paramContext)
  {
    try
    {
      JSONObject localJSONObject = new JSONObject();
      Object localObject = com.cmcm.dmc.sdk.a.i.a(paramContext);
      localJSONObject.put("mcc", localObject[0]);
      localJSONObject.put("mnc", localObject[1]);
      localJSONObject.put("xaid", com.cmcm.dmc.sdk.a.i.b(paramContext));
      localJSONObject.put("root", com.cmcm.dmc.sdk.a.i.b());
      localJSONObject.put("brand", Build.BRAND);
      localJSONObject.put("model", Build.MODEL);
      localJSONObject.put("gaid", com.cmcm.dmc.sdk.report.a.a().a);
      localJSONObject.put("devicebirthday", (int)(com.cmcm.dmc.sdk.a.i.c() / 1000L));
      localJSONObject.put("osver", Build.VERSION.RELEASE);
      localJSONObject.put("hostapk", paramContext.getPackageName());
      localJSONObject.put("hostver", com.cmcm.dmc.sdk.a.i.g(paramContext));
      localObject = new DisplayMetrics();
      ((WindowManager)paramContext.getSystemService("window")).getDefaultDisplay().getMetrics((DisplayMetrics)localObject);
      localJSONObject.put("xdpi", ((DisplayMetrics)localObject).xdpi);
      localJSONObject.put("ydpi", ((DisplayMetrics)localObject).ydpi);
      localJSONObject.put("widthPixels", ((DisplayMetrics)localObject).widthPixels);
      localJSONObject.put("heightPixels", ((DisplayMetrics)localObject).heightPixels);
      paramContext = localJSONObject.toString();
      return paramContext;
    }
    catch (Exception paramContext) {}
    return "";
  }
  
  public static String R(String paramString)
  {
    String str;
    if (android.support.v4.a.c.a(paramString)) {
      str = File.separator;
    }
    do
    {
      return str;
      str = paramString;
    } while (paramString.charAt(paramString.length() - 1) == File.separatorChar);
    return paramString + File.separatorChar;
  }
  
  public static Set<String> R()
  {
    HashSet localHashSet = new HashSet();
    localHashSet.add("com.cleanmaster.mguard");
    localHashSet.add("com.cleanmaster.mguard_cn");
    localHashSet.add("com.cleanmaster.lite");
    localHashSet.add("com.cleanmaster.lite_cn");
    localHashSet.add("com.cleanmaster.boost");
    return localHashSet;
  }
  
  public static int S()
  {
    int i2 = a("process_settings", "abnormal_ranking_statistics_period_day", -1);
    int i1 = i2;
    if (i2 <= 0) {
      i1 = 7;
    }
    return i1;
  }
  
  public static int S(int paramInt)
  {
    switch (paramInt)
    {
    default: 
      return 0;
    case 1: 
      return 1;
    case 2: 
      return 2;
    case 3: 
      return 4;
    case 15: 
      return 16;
    case 14: 
      return 32;
    }
    return 4096;
  }
  
  public static String S(String paramString)
  {
    if ((android.support.v4.a.c.a(paramString)) || (paramString.length() == 1)) {}
    while (paramString.charAt(paramString.length() - 1) != File.separatorChar) {
      return paramString;
    }
    return paramString.substring(0, paramString.length() - 1);
  }
  
  public static boolean S(Context paramContext)
  {
    if (!ci()) {}
    for (;;)
    {
      return false;
      if (Build.VERSION.SDK_INT < 18) {
        break;
      }
      Object localObject = Settings.Secure.getString(paramContext.getContentResolver(), "enabled_notification_listeners");
      if (!TextUtils.isEmpty((CharSequence)localObject))
      {
        localObject = ((String)localObject).split(":");
        int i1 = 0;
        while (i1 < localObject.length)
        {
          ComponentName localComponentName = ComponentName.unflattenFromString(localObject[i1]);
          if ((localComponentName != null) && (localComponentName.getPackageName().equals(paramContext.getPackageName()))) {
            return true;
          }
          i1 += 1;
        }
      }
    }
    return aN(paramContext);
  }
  
  public static byte T(Context paramContext)
  {
    if (paramContext != null)
    {
      paramContext = (ConnectivityManager)paramContext.getSystemService("connectivity");
      if (paramContext != null)
      {
        paramContext = paramContext.getActiveNetworkInfo();
        if (paramContext != null)
        {
          if (!paramContext.isAvailable()) {
            return 3;
          }
          int i1 = paramContext.getType();
          if (i1 == 1) {
            return 1;
          }
          if (i1 == 0) {
            return 2;
          }
        }
      }
    }
    return 4;
  }
  
  public static String T(String paramString)
  {
    if (android.support.v4.a.c.a(paramString)) {
      return "0";
    }
    if (paramString.charAt(paramString.length() - 1) != File.separatorChar) {
      return paramString + "0";
    }
    return paramString.substring(0, paramString.length() - 1) + "0";
  }
  
  public static boolean T()
  {
    return Build.VERSION.SDK_INT >= 14;
  }
  
  public static boolean T(int paramInt)
  {
    int[] arrayOfInt = com.cleanmaster.ui.resultpage.item.wizard.d.b;
    int i1 = 0;
    while (i1 < 10)
    {
      if (arrayOfInt[i1] == paramInt) {
        return false;
      }
      i1 += 1;
    }
    return true;
  }
  
  public static com.facebook.login.c U(Context paramContext)
  {
    if (paramContext != null) {
      if (paramContext != null) {
        break label25;
      }
    }
    for (paramContext = null;; paramContext = U)
    {
      return paramContext;
      label25:
      try
      {
        paramContext = com.facebook.f.g();
        break;
      }
      finally {}
      if (U == null) {
        U = new com.facebook.login.c(paramContext, com.facebook.f.j());
      }
    }
  }
  
  public static String U(int paramInt)
  {
    String str = Integer.toHexString(paramInt);
    if (str.length() == 1) {
      return String.format("0x0%s", new Object[] { str });
    }
    return String.format("0x%s", new Object[] { str });
  }
  
  public static ArrayList<String> U(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return null;
    }
    int i5 = paramString.length();
    int i3 = 0;
    int i1 = 0;
    int i2 = 0;
    int i4 = 0;
    while (i3 < i5) {
      switch (paramString.charAt(i3))
      {
      default: 
        i2 += 1;
        i3 += 1;
        break;
      case ',': 
        if (i2 <= i1) {
          break label207;
        }
        i1 = i2;
      }
    }
    label207:
    for (;;)
    {
      i4 += 1;
      i2 = 0;
      break;
      if (i2 > i1) {}
      for (;;)
      {
        ArrayList localArrayList = new ArrayList(i4 + 1);
        StringBuilder localStringBuilder = new StringBuilder(i2);
        i1 = 0;
        if (i1 < i5)
        {
          char c1 = paramString.charAt(i1);
          switch (c1)
          {
          default: 
            localStringBuilder.append(c1);
          }
          for (;;)
          {
            i1 += 1;
            break;
            localArrayList.add(localStringBuilder.toString());
            localStringBuilder.delete(0, localStringBuilder.length());
          }
        }
        localArrayList.add(localStringBuilder.toString());
        return localArrayList;
        i2 = i1;
      }
    }
  }
  
  public static boolean U()
  {
    if (Build.VERSION.SDK_INT <= 10) {
      return false;
    }
    return d(d("process_settings", "abnormal_detection_mcc", null), "460,234,302,505,272,530,338");
  }
  
  public static fr V(Context paramContext)
  {
    File localFile = new File(paramContext.getCacheDir(), "volley");
    String str1 = "volley/0";
    try
    {
      String str2 = paramContext.getPackageName();
      paramContext = paramContext.getPackageManager().getPackageInfo(str2, 0);
      paramContext = str2 + "/" + paramContext.versionCode;
      if (Build.VERSION.SDK_INT >= 9) {}
      for (paramContext = new il();; paramContext = new ij(AndroidHttpClient.newInstance(paramContext)))
      {
        paramContext = new ig(paramContext);
        paramContext = new fr(new ii(localFile, (byte)0), paramContext, (byte)0);
        paramContext.a();
        return paramContext;
      }
    }
    catch (PackageManager.NameNotFoundException paramContext)
    {
      for (;;)
      {
        paramContext = str1;
      }
    }
  }
  
  public static String V(int paramInt)
  {
    String str = Integer.toHexString(paramInt);
    if (str.length() == 1) {
      return String.format("0x0%s", new Object[] { str });
    }
    return String.format("0x%s", new Object[] { str });
  }
  
  public static ArrayList<String> V(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return null;
    }
    Object localObject = paramString;
    if (paramString.charAt(0) != '[')
    {
      localObject = new StringBuilder(paramString.length() + 2);
      ((StringBuilder)localObject).append('[');
      ((StringBuilder)localObject).append(paramString);
      ((StringBuilder)localObject).append(']');
      localObject = ((StringBuilder)localObject).toString();
    }
    return W((String)localObject);
  }
  
  public static boolean V()
  {
    IProcessCpuManager localIProcessCpuManager = (IProcessCpuManager)com.cleanmaster.base.ipc.c.a().a(com.cleanmaster.base.ipc.b.a);
    try
    {
      i1 = Math.round(localIProcessCpuManager.d() * 100.0F);
      if (i1 <= 0) {
        return false;
      }
    }
    catch (RemoteException localRemoteException)
    {
      int i1;
      for (;;)
      {
        localRemoteException.printStackTrace();
        i1 = -1;
      }
      int i3 = a("abnormal_detection_notify_key", "abnormal_detection_notify_freqstart_cpu_threshold", -1);
      int i2 = i3;
      if (i3 <= 0) {
        i2 = 30;
      }
      if (i1 >= i2) {
        return true;
      }
    }
    return false;
  }
  
  public static int W(int paramInt)
  {
    return com.cmcm.onews.sdk.e.b.A.getResources().getColor(paramInt);
  }
  
  public static ArrayList<String> W(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {}
    for (;;)
    {
      return null;
      try
      {
        paramString = new JSONArray(paramString);
        int i2 = paramString.length();
        if (i2 != 0)
        {
          ArrayList localArrayList = new ArrayList(i2);
          int i1 = 0;
          while (i1 < i2)
          {
            localArrayList.add(paramString.getString(i1));
            i1 += 1;
          }
          return localArrayList;
        }
      }
      catch (JSONException paramString)
      {
        paramString.printStackTrace();
      }
    }
    return null;
  }
  
  public static void W()
  {
    if (!a("abnormal_detection_notify_key", "abnormal_detection_notify_delay_hour_extend", true)) {
      return;
    }
    com.cleanmaster.configmanager.d localD = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a());
    int i1 = localD.a("abnormal_detection_notify_unclick_count", 0) + 1;
    if (i1 >= 3)
    {
      long l1 = a(false) << 1;
      if (l1 <= 172800000L)
      {
        localD.a(false, l1);
        l1 = a(true) << 1;
        if (l1 > 172800000L) {
          break label96;
        }
        localD.a(true, l1);
      }
      for (;;)
      {
        localD.A(0);
        return;
        localD.a(false, 172800000L);
        break;
        label96:
        localD.a(true, 172800000L);
      }
    }
    localD.A(i1);
  }
  
  public static int X(int paramInt)
  {
    if ((paramInt > 0) && (paramInt <= 23)) {
      return 2;
    }
    if ((paramInt >= 16) && (paramInt <= 23)) {
      return 3;
    }
    if ((paramInt == 24) || (paramInt == 25)) {
      return 4;
    }
    if ((paramInt >= 26) && (paramInt <= 30)) {
      return 5;
    }
    return 0;
  }
  
  public static String X(Context paramContext)
  {
    Object localObject = null;
    try
    {
      paramContext = (ActivityManager)paramContext.getApplicationContext().getSystemService("activity");
      if (Build.VERSION.SDK_INT >= 20)
      {
        paramContext = paramContext.getRunningAppProcesses();
        if (paramContext.size() > 0)
        {
          paramContext = ((ActivityManager.RunningAppProcessInfo)paramContext.get(0)).processName;
          break label107;
        }
      }
      else
      {
        List localList = paramContext.getRunningTasks(1);
        paramContext = localObject;
        if (localList.size() > 0) {
          paramContext = ((ActivityManager.RunningTaskInfo)localList.get(0)).topActivity.getPackageName();
        }
      }
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
      paramContext = null;
    }
    label107:
    do
    {
      return "";
      paramContext = null;
    } while (paramContext == null);
    return paramContext;
  }
  
  public static ArrayList<Long> X(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return null;
    }
    for (;;)
    {
      try
      {
        paramString = new JSONArray(paramString);
        int i2 = paramString.length();
        if (i2 == 0) {
          break;
        }
        localArrayList = new ArrayList(i2);
        i1 = 0;
        if (i1 >= i2) {}
      }
      catch (JSONException paramString)
      {
        ArrayList localArrayList;
        int i1;
        paramString.printStackTrace();
        return null;
      }
      try
      {
        localArrayList.add(Long.valueOf(Long.parseLong(paramString.getString(i1))));
        i1 += 1;
      }
      catch (Exception paramString)
      {
        return null;
      }
      catch (NumberFormatException paramString) {}
    }
    return localArrayList;
    return null;
  }
  
  public static void X()
  {
    com.cleanmaster.configmanager.d localD = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a());
    int i1 = localD.a("abnormal_detection_notify_freqstart_unclick_count", 0) + 1;
    if (i1 >= 3)
    {
      long l1 = Z() << 1;
      if (l1 <= 172800000L) {
        localD.e(l1);
      }
      for (;;)
      {
        localD.B(0);
        return;
        localD.e(172800000L);
      }
    }
    localD.B(i1);
  }
  
  public static List<String> Y(Context paramContext)
  {
    localArrayList = new ArrayList();
    try
    {
      paramContext = paramContext.getPackageManager();
      Intent localIntent = new Intent("android.intent.action.MAIN");
      localIntent.addCategory("android.intent.category.HOME");
      paramContext = paramContext.queryIntentActivities(localIntent, 65536).iterator();
      while (paramContext.hasNext()) {
        localArrayList.add(((ResolveInfo)paramContext.next()).activityInfo.packageName);
      }
      return localArrayList;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  public static void Y(int paramInt)
  {
    CallbackManagerImpl.a(paramInt, new com.facebook.share.internal.i(paramInt));
  }
  
  public static boolean Y()
  {
    Context localContext = com.keniu.security.d.a();
    com.cleanmaster.configmanager.d localD = com.cleanmaster.configmanager.d.a(localContext);
    long l1 = System.currentTimeMillis() - localD.bk();
    if (l1 < 0L) {
      com.cleanmaster.configmanager.d.a(localContext).d(System.currentTimeMillis());
    }
    while (l1 <= Math.min(a(true), a(false))) {
      return true;
    }
    return false;
  }
  
  public static boolean Y(String paramString)
  {
    PackageManager localPackageManager = com.keniu.security.d.a().getPackageManager();
    try
    {
      localPackageManager.getPackageInfo(paramString, 16384);
      return false;
    }
    catch (PackageManager.NameNotFoundException paramString)
    {
      for (;;)
      {
        paramString.printStackTrace();
      }
    }
  }
  
  public static long Z()
  {
    long l2 = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).a("abnormal_detection_notify_delay_millis_freqstart_ext", -1L);
    long l1 = l2;
    if (l2 <= 0L) {
      l1 = 43200000L;
    }
    return l1;
  }
  
  public static boolean Z(int paramInt)
  {
    if ((paramInt >= 5) || (Log.isLoggable("Ads", paramInt))) {
      if (paramInt == 2)
      {
        com.google.android.gms.internal.ah localAh = com.google.android.gms.internal.al.L;
        if (!((Boolean)com.google.android.gms.ads.internal.f.n().a(localAh)).booleanValue()) {}
      }
      else
      {
        return true;
      }
    }
    return false;
  }
  
  public static boolean Z(Context paramContext)
  {
    try
    {
      KeyguardManager localKeyguardManager = (KeyguardManager)paramContext.getSystemService("keyguard");
      if ((aQ(paramContext)) || (aP(paramContext)) || (aO(paramContext)))
      {
        boolean bool = localKeyguardManager.inKeyguardRestrictedInputMode();
        if (bool) {
          return true;
        }
      }
      return false;
    }
    catch (Throwable paramContext) {}
    return false;
  }
  
  public static boolean Z(String paramString)
  {
    if ((p == null) || (p.size() == 0)) {
      return false;
    }
    Iterator localIterator = p.iterator();
    while (localIterator.hasNext()) {
      if (((ActivityManager.RunningTaskInfo)localIterator.next()).baseActivity.getPackageName().equals(paramString)) {
        return true;
      }
    }
    return false;
  }
  
  public static byte a(Alert paramAlert)
  {
    if (paramAlert != null) {}
    for (int i1 = paramAlert.a; i1 == 1; i1 = -1) {
      return 1;
    }
    if (i1 == 2) {
      return 2;
    }
    if (i1 == 5) {
      return 3;
    }
    if (i1 == 3) {
      return 4;
    }
    return 0;
  }
  
  public static double a(JSONObject paramJSONObject, String paramString, com.my.target.core.parsers.a paramA, double paramDouble, boolean paramBoolean)
  {
    if (paramJSONObject.has(paramString)) {}
    do
    {
      try
      {
        d1 = paramJSONObject.getDouble(paramString);
        return d1;
      }
      catch (JSONException paramJSONObject)
      {
        do
        {
          paramString = "JSON Exception in field '" + paramString + "', Operation: " + paramA.d + ", Unit: " + paramA.e;
          d1 = paramDouble;
        } while (!paramBoolean);
        a(paramString, paramA, paramJSONObject, "JSONException");
        return paramDouble;
      }
      double d1 = paramDouble;
    } while (!paramBoolean);
    a("Didn't found required field '" + paramString + "', Operation: " + paramA.d + ", Unit: " + paramA.e, paramA, null, "Required field absence");
    return paramDouble;
  }
  
  /* Error */
  public static double a(String[] paramArrayOfString1, String[] paramArrayOfString2)
  {
    // Byte code:
    //   0: aload_0
    //   1: ifnull +14 -> 15
    //   4: aload_1
    //   5: ifnull +10 -> 15
    //   8: aload_0
    //   9: arraylength
    //   10: aload_1
    //   11: arraylength
    //   12: if_icmpeq +5 -> 17
    //   15: dconst_0
    //   16: dreturn
    //   17: iconst_0
    //   18: istore 8
    //   20: aload_0
    //   21: arraylength
    //   22: istore 13
    //   24: dconst_0
    //   25: dstore 6
    //   27: dconst_0
    //   28: dstore 4
    //   30: dconst_0
    //   31: dstore_2
    //   32: iconst_0
    //   33: istore 10
    //   35: iload 10
    //   37: iload 13
    //   39: if_icmpge +101 -> 140
    //   42: aload_0
    //   43: iload 10
    //   45: aaload
    //   46: astore 14
    //   48: iconst_0
    //   49: istore 12
    //   51: aload 14
    //   53: invokestatic 957	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   56: istore 9
    //   58: iload 8
    //   60: iconst_1
    //   61: iadd
    //   62: istore 11
    //   64: aload_1
    //   65: iload 8
    //   67: aaload
    //   68: invokestatic 957	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   71: istore 8
    //   73: iload 8
    //   75: istore 12
    //   77: iload 11
    //   79: istore 8
    //   81: dload 6
    //   83: iload 9
    //   85: iload 12
    //   87: imul
    //   88: i2d
    //   89: dadd
    //   90: dstore 6
    //   92: dload 4
    //   94: iload 9
    //   96: i2d
    //   97: ldc2_w 1924
    //   100: invokestatic 1929	java/lang/Math:pow	(DD)D
    //   103: dadd
    //   104: dstore 4
    //   106: dload_2
    //   107: iload 12
    //   109: i2d
    //   110: ldc2_w 1924
    //   113: invokestatic 1929	java/lang/Math:pow	(DD)D
    //   116: dadd
    //   117: dstore_2
    //   118: iload 10
    //   120: iconst_1
    //   121: iadd
    //   122: istore 10
    //   124: goto -89 -> 35
    //   127: astore 14
    //   129: iconst_0
    //   130: istore 9
    //   132: aload 14
    //   134: invokevirtual 1930	java/lang/NumberFormatException:printStackTrace	()V
    //   137: goto -56 -> 81
    //   140: dload 6
    //   142: dload 4
    //   144: invokestatic 1934	java/lang/Math:sqrt	(D)D
    //   147: dload_2
    //   148: invokestatic 1934	java/lang/Math:sqrt	(D)D
    //   151: dmul
    //   152: ddiv
    //   153: dreturn
    //   154: astore 14
    //   156: iload 11
    //   158: istore 8
    //   160: goto -28 -> 132
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	163	0	paramArrayOfString1	String[]
    //   0	163	1	paramArrayOfString2	String[]
    //   31	117	2	d1	double
    //   28	115	4	d2	double
    //   25	116	6	d3	double
    //   18	141	8	i1	int
    //   56	75	9	i2	int
    //   33	90	10	i3	int
    //   62	95	11	i4	int
    //   49	59	12	i5	int
    //   22	18	13	i6	int
    //   46	6	14	str	String
    //   127	6	14	localNumberFormatException1	NumberFormatException
    //   154	1	14	localNumberFormatException2	NumberFormatException
    // Exception table:
    //   from	to	target	type
    //   51	58	127	java/lang/NumberFormatException
    //   64	73	154	java/lang/NumberFormatException
  }
  
  public static float a(int paramInt1, int paramInt2, Context paramContext)
  {
    switch (paramInt1)
    {
    }
    do
    {
      do
      {
        do
        {
          return 0.0F;
        } while (!com.cleanmaster.base.util.net.b.j(paramContext));
        return paramInt2 * 62.0F / 100.0F;
        return 103.0F * paramInt2 / 100.0F;
        return 47.0F * paramInt2 / 100.0F;
        return 72.0F * paramInt2 / 100.0F;
        paramInt1 = com.cleanmaster.base.c.m(paramContext);
      } while (com.cleanmaster.base.c.o(paramContext));
      return paramInt1 * 156 / 255 * paramInt2 / 100.0F;
    } while (com.cleanmaster.base.c.n(paramContext) <= 60);
    return paramInt2 * 62.0F / 100.0F;
  }
  
  private static float a(Context paramContext, int paramInt, float paramFloat, DisplayMetrics paramDisplayMetrics)
  {
    switch (paramInt)
    {
    case 3: 
    case 4: 
    case 5: 
    default: 
      return 0.0F;
    case 1: 
    case 2: 
      return TypedValue.applyDimension(paramInt, paramFloat, paramDisplayMetrics);
    case 6: 
      return paramFloat / paramDisplayMetrics.density;
    case 7: 
      return paramFloat / paramDisplayMetrics.scaledDensity;
    case 8: 
      return TypedValue.applyDimension(1, g(paramContext) * paramFloat, paramDisplayMetrics);
    case 9: 
      return g(paramContext) * paramFloat;
    }
    if (R == null) {
      R = Float.valueOf(h(paramContext) * 2.0F / (aI(paramContext) * 720.0F));
    }
    return TypedValue.applyDimension(1, R.floatValue() * paramFloat, paramDisplayMetrics);
  }
  
  public static float a(Rect paramRect, RectF paramRectF, Paint paramPaint)
  {
    if ((paramRect == null) || (paramRectF == null) || (paramRectF.isEmpty())) {}
    float f1;
    do
    {
      return 0.0F;
      if (paramPaint != null) {}
      float f2;
      for (f1 = paramPaint.getStrokeWidth();; f1 = 0.0F)
      {
        f2 = paramRect.width() / (paramRectF.width() + f1);
        f1 = paramRect.height() / (f1 + paramRectF.height());
        if ((paramRect.width() <= 0) || (paramRect.height() <= 0)) {
          break;
        }
        return Math.min(f2, f1);
      }
      if (paramRect.width() > 0) {
        return f2;
      }
    } while (paramRect.height() <= 0);
    return f1;
  }
  
  public static float a(View paramView1, View paramView2)
  {
    if ((paramView2 == null) || (paramView1 == null) || (paramView1 == paramView2)) {
      return 0.0F;
    }
    float f1 = paramView2.getX();
    paramView2 = paramView2.getParent();
    if (((paramView2 instanceof View)) && (paramView2 != paramView1)) {
      return a(paramView1, (View)paramView2) + f1;
    }
    return f1;
  }
  
  @TargetApi(14)
  public static float a(OverScroller paramOverScroller)
  {
    if (Build.VERSION.SDK_INT >= 14) {
      return paramOverScroller.getCurrVelocity();
    }
    return 0.0F;
  }
  
  public static int a(int paramInt1, int paramInt2, int paramInt3)
  {
    com.cleanmaster.security.timewall.db.b localB = com.cleanmaster.security.timewall.db.a.a().d(paramInt1);
    if (localB == null)
    {
      localB = new com.cleanmaster.security.timewall.db.b();
      localB.a = paramInt1;
      localB.b = "1";
      localB.c = String.valueOf(System.currentTimeMillis());
      com.cleanmaster.security.timewall.db.a.a().a(localB);
      if (1 != paramInt2) {}
    }
    do
    {
      return paramInt3;
      return -1;
      int i1 = u(localB.b);
      paramInt1 = i1;
      if (i1 < 0) {
        paramInt1 = 0;
      }
      if (paramInt1 < paramInt2)
      {
        localB.b = String.valueOf(paramInt1 + 1);
        com.cleanmaster.security.timewall.db.a.a().a(localB);
      }
    } while (paramInt1 + 1 == paramInt2);
    return -1;
  }
  
  public static int a(int paramInt, ck paramCk)
  {
    int i1;
    if (paramCk == null) {
      i1 = 0;
    }
    do
    {
      do
      {
        return i1;
        if ((paramCk.e == null) || (paramCk.e.length <= 0)) {
          return 0;
        }
        if (paramCk.f == null) {
          return 0;
        }
        i1 = paramInt;
      } while (4 != paramInt);
      i1 = paramInt;
    } while (a(paramCk.e[0], paramCk.f));
    return 0;
  }
  
  public static int a(int paramInt1, String paramString1, String paramString2, int paramInt2)
  {
    ICloudConfigGetter localICloudConfigGetter = (ICloudConfigGetter)com.cleanmaster.base.ipc.c.a().a(com.cleanmaster.base.ipc.b.e);
    int i1 = paramInt2;
    if (localICloudConfigGetter != null) {}
    try
    {
      i1 = localICloudConfigGetter.a(paramInt1, paramString1, paramString2, paramInt2);
      return i1;
    }
    catch (RemoteException paramString1)
    {
      paramString1.printStackTrace();
    }
    return paramInt2;
  }
  
  public static int a(int paramInt, boolean paramBoolean)
  {
    if (paramBoolean) {
      return paramInt & 0xFDFF | 0x800;
    }
    return paramInt & 0xF7FF | 0x200;
  }
  
  private static int a(long paramLong1, long paramLong2)
  {
    try
    {
      int i1 = com.cleanmaster.base.c.a(paramLong1 - paramLong2, paramLong1);
      return i1;
    }
    catch (IllegalArgumentException localIllegalArgumentException) {}
    return -1;
  }
  
  public static int a(Activity paramActivity)
  {
    Rect localRect = new Rect();
    paramActivity.getWindow().getDecorView().getWindowVisibleDisplayFrame(localRect);
    return localRect.top;
  }
  
  public static int a(Context paramContext, float paramFloat)
  {
    return (int)a(paramContext, 1, paramFloat, paramContext.getResources().getDisplayMetrics());
  }
  
  public static int a(Context paramContext, com.cleanmaster.notification.normal.f paramF, String paramString)
  {
    if (com.cleanmaster.util.ad.a().a(1) <= 0L)
    {
      paramF.b = Html.fromHtml(a("junk_notify_longtime_copy", "junk_notify_long_time_unused_ticker", paramContext.getString(2131298487), new Object[] { paramString }));
      paramF.c = Html.fromHtml(a("junk_notify_longtime_copy", "junk_notify_long_time_unused_title", paramContext.getString(2131298490), new Object[] { paramString }));
      paramF.d = Html.fromHtml(a("junk_notify_longtime_copy", "junk_notify_long_time_unused_content", paramContext.getString(2131298484), new Object[] { paramString }));
      return 1;
    }
    if (com.cleanmaster.configmanager.d.a(paramContext).bD() == 1)
    {
      paramF.b = Html.fromHtml(a("junk_notify_longtime_copy", "junk_notify_long_time_unused_ticker2", paramContext.getString(2131298485), new Object[] { paramString }));
      paramF.c = Html.fromHtml(a("junk_notify_longtime_copy", "junk_notify_long_time_unused_title2", paramContext.getString(2131298488), new Object[] { paramString }));
      paramF.d = Html.fromHtml(a("junk_notify_longtime_copy", "junk_notify_long_time_unused_content2", paramContext.getString(2131298482), new Object[] { paramString }));
      com.cleanmaster.configmanager.d.a(paramContext).M(2);
      return 2;
    }
    if (com.cleanmaster.configmanager.d.a(paramContext).bD() == 2)
    {
      paramF.b = Html.fromHtml(a("junk_notify_longtime_copy", "junk_notify_long_time_unused_ticker3", paramContext.getString(2131298486), new Object[] { paramString }));
      paramF.c = Html.fromHtml(a("junk_notify_longtime_copy", "junk_notify_long_time_unused_title3", paramContext.getString(2131298489), new Object[] { paramString }));
      paramF.d = Html.fromHtml(a("junk_notify_longtime_copy", "junk_notify_long_time_unused_content3", paramContext.getString(2131298483), new Object[] { paramString }));
      com.cleanmaster.configmanager.d.a(paramContext).M(1);
      return 3;
    }
    return 0;
  }
  
  public static int a(Context paramContext, String paramString)
  {
    int i1 = android.os.Process.myPid();
    int i2 = android.os.Process.myUid();
    String str1 = paramContext.getPackageName();
    if (paramContext.checkPermission(paramString, i1, i2) == -1) {
      return -1;
    }
    String str2 = android.support.v4.app.e.a(paramString);
    if (str2 != null)
    {
      paramString = str1;
      if (str1 == null)
      {
        paramString = paramContext.getPackageManager().getPackagesForUid(i2);
        if ((paramString == null) || (paramString.length <= 0)) {
          return -1;
        }
        paramString = paramString[0];
      }
      if (android.support.v4.app.e.a(paramContext, str2, paramString) != 0) {
        return -2;
      }
    }
    return 0;
  }
  
  public static int a(Bitmap paramBitmap)
  {
    if ((paramBitmap == null) || (paramBitmap.isRecycled())) {
      throw new RuntimeException("Error loading texture.");
    }
    int[] arrayOfInt = new int[1];
    GLES20.glGenTextures(1, arrayOfInt, 0);
    if (arrayOfInt[0] != 0)
    {
      GLES20.glBindTexture(3553, arrayOfInt[0]);
      GLES20.glTexParameteri(3553, 10241, 9729);
      GLES20.glTexParameteri(3553, 10240, 9729);
      GLES20.glTexParameterf(3553, 10242, 10497.0F);
      GLES20.glTexParameterf(3553, 10243, 10497.0F);
      GLUtils.texImage2D(3553, 0, paramBitmap, 0);
      paramBitmap.recycle();
    }
    if (arrayOfInt[0] == 0) {
      throw new RuntimeException("Error loading texture.");
    }
    return arrayOfInt[0];
  }
  
  private static int a(BitmapFactory.Options paramOptions, int paramInt)
  {
    int i3 = 1;
    double d1 = paramOptions.outWidth;
    double d2 = paramOptions.outHeight;
    if (paramInt == -1) {}
    int i2;
    for (int i1 = 1;; i1 = (int)Math.floor(Math.sqrt(d1 * d2 / paramInt)))
    {
      i2 = i1;
      if (128 >= i1)
      {
        i2 = i1;
        if (paramInt == -1) {
          i2 = 1;
        }
      }
      if (i2 > 8) {
        break;
      }
      paramInt = i3;
      for (;;)
      {
        i1 = paramInt;
        if (paramInt >= i2) {
          break;
        }
        paramInt <<= 1;
      }
    }
    i1 = (i2 + 7) / 8 << 3;
    return i1;
  }
  
  public static int a(Parcel paramParcel, int paramInt)
  {
    if ((paramInt & 0xFFFF0000) != -65536) {
      return paramInt >> 16 & 0xFFFF;
    }
    return paramParcel.readInt();
  }
  
  public static int a(RecyclerView.n paramN, android.support.v7.widget.g paramG, View paramView1, View paramView2, RecyclerView.g paramG1, boolean paramBoolean)
  {
    if ((paramG1.l() == 0) || (paramN.a() == 0) || (paramView1 == null) || (paramView2 == null)) {
      return 0;
    }
    if (!paramBoolean) {
      return Math.abs(RecyclerView.g.a(paramView1) - RecyclerView.g.a(paramView2)) + 1;
    }
    int i1 = paramG.b(paramView2);
    int i2 = paramG.a(paramView1);
    return Math.min(paramG.e(), i1 - i2);
  }
  
  public static int a(RecyclerView.n paramN, android.support.v7.widget.g paramG, View paramView1, View paramView2, RecyclerView.g paramG1, boolean paramBoolean1, boolean paramBoolean2)
  {
    int i1 = 0;
    int i2 = i1;
    if (paramG1.l() != 0)
    {
      i2 = i1;
      if (paramN.a() != 0)
      {
        i2 = i1;
        if (paramView1 != null)
        {
          if (paramView2 != null) {
            break label45;
          }
          i2 = i1;
        }
      }
    }
    return i2;
    label45:
    i1 = Math.min(RecyclerView.g.a(paramView1), RecyclerView.g.a(paramView2));
    i2 = Math.max(RecyclerView.g.a(paramView1), RecyclerView.g.a(paramView2));
    if (paramBoolean2) {}
    for (i1 = Math.max(0, paramN.a() - i2 - 1);; i1 = Math.max(0, i1))
    {
      i2 = i1;
      if (!paramBoolean1) {
        break;
      }
      i2 = Math.abs(paramG.b(paramView2) - paramG.a(paramView1));
      int i3 = Math.abs(RecyclerView.g.a(paramView1) - RecyclerView.g.a(paramView2));
      float f1 = i2 / (i3 + 1);
      return Math.round(i1 * f1 + (paramG.b() - paramG.a(paramView1)));
    }
  }
  
  public static int a(com.cleanmaster.boost.powerengine.process.ProcessModel paramProcessModel)
  {
    int i1 = 4;
    if (paramProcessModel == null) {
      i1 = -1;
    }
    int i2;
    do
    {
      return i1;
      i2 = paramProcessModel.B;
    } while (1 == i2);
    if (2 == i2) {
      return 5;
    }
    if (4 == i2) {
      return 6;
    }
    if (3 == i2) {
      return 7;
    }
    if (5 == i2) {
      return 11;
    }
    if (6 == i2) {
      return 12;
    }
    if (paramProcessModel.C) {
      return 8;
    }
    if (1 == paramProcessModel.r) {
      return 9;
    }
    return 10;
  }
  
  public static int a(com.keniu.security.update.e paramE, String paramString)
  {
    return aY(a(paramE, "switch", paramString));
  }
  
  private static int a(DataOutput paramDataOutput, int paramInt)
  {
    paramDataOutput.write(paramInt & 0xFF);
    paramDataOutput.write(paramInt >> 8 & 0xFF);
    return paramInt;
  }
  
  public static int a(String paramString1, String paramString2, int paramInt)
  {
    ICloudConfigGetter localICloudConfigGetter = (ICloudConfigGetter)com.cleanmaster.base.ipc.c.a().a(com.cleanmaster.base.ipc.b.e);
    int i1 = paramInt;
    if (localICloudConfigGetter != null) {}
    try
    {
      i1 = localICloudConfigGetter.a(11, paramString1, paramString2, paramInt);
      return i1;
    }
    catch (RemoteException paramString1)
    {
      paramString1.printStackTrace();
    }
    return paramInt;
  }
  
  public static int a(JSONObject paramJSONObject, String paramString, com.my.target.core.parsers.a paramA, int paramInt)
  {
    int i1 = paramInt;
    if (paramJSONObject.has(paramString)) {}
    try
    {
      i1 = paramJSONObject.getInt(paramString);
      return i1;
    }
    catch (JSONException paramJSONObject)
    {
      new StringBuilder("JSON Exception in field '").append(paramString).append("', Operation: ").append(paramA.d).append(", Unit: ").append(paramA.e);
    }
    return paramInt;
  }
  
  public static int a(boolean paramBoolean1, boolean paramBoolean2)
  {
    if (paramBoolean1) {
      return 2;
    }
    if (paramBoolean2) {
      return 3;
    }
    return 1;
  }
  
  public static int a(byte[] paramArrayOfByte, ByteOrder paramByteOrder)
  {
    int i4 = 0;
    int i2;
    int i1;
    if (paramByteOrder == ByteOrder.BIG_ENDIAN)
    {
      i2 = 1;
      i1 = 0;
    }
    for (;;)
    {
      int i5 = 0;
      int i3 = i1;
      i1 = i4;
      i4 = i5;
      while (i1 < 4)
      {
        i4 = i4 << 8 | paramArrayOfByte[i3] & 0xFF;
        i3 += i2;
        i1 += 1;
      }
      i1 = 3;
      i2 = -1;
    }
    return i4;
  }
  
  private static int a(int[] paramArrayOfInt, int paramInt)
  {
    int i2 = 1;
    int i1 = i2;
    if (paramArrayOfInt.length == 1)
    {
      i1 = i2;
      if (paramArrayOfInt[0] >= paramInt) {
        return 0;
      }
    }
    int i3;
    do
    {
      i1 += 1;
      if (i1 >= paramArrayOfInt.length) {
        break;
      }
      i2 = paramArrayOfInt[(i1 - 1)];
      i3 = paramArrayOfInt[i1];
      if (paramInt < i2) {
        return i1 - 1;
      }
    } while (paramInt >= i3);
    return i1;
    return -1;
  }
  
  public static int a(int[] paramArrayOfInt1, int paramInt1, int[] paramArrayOfInt2, int paramInt2, Collection<Integer> paramCollection)
  {
    int i1 = 0;
    int i4;
    if ((paramArrayOfInt2 == null) || (paramArrayOfInt2.length == 0) || (paramCollection == null))
    {
      i4 = 0;
      return i4;
    }
    int i2;
    label33:
    int i3;
    if (paramInt1 < 2048)
    {
      i2 = paramInt1;
      if (paramInt2 >= paramArrayOfInt2.length) {
        break label90;
      }
      i3 = paramInt2;
      label42:
      paramInt2 = 0;
      paramInt1 = 0;
    }
    for (;;)
    {
      i4 = paramInt1;
      if (paramInt2 >= i2) {
        break;
      }
      i4 = paramInt1;
      if (i1 >= i3) {
        break;
      }
      if (paramArrayOfInt1[paramInt2] < paramArrayOfInt2[i1])
      {
        paramInt2 += 1;
        continue;
        i2 = 2048;
        break label33;
        label90:
        i3 = paramArrayOfInt2.length;
        break label42;
      }
      if (paramArrayOfInt2[i1] < paramArrayOfInt1[paramInt2])
      {
        i1 += 1;
      }
      else
      {
        paramCollection.add(Integer.valueOf(paramArrayOfInt1[paramInt2]));
        i1 += 1;
        paramInt2 += 1;
        paramInt1 += 1;
      }
    }
  }
  
  public static long a(int paramInt, String paramString1, String paramString2, long paramLong)
  {
    ICloudConfigGetter localICloudConfigGetter = (ICloudConfigGetter)com.cleanmaster.base.ipc.c.a().a(com.cleanmaster.base.ipc.b.e);
    long l1 = paramLong;
    if (localICloudConfigGetter != null) {}
    try
    {
      l1 = localICloudConfigGetter.a(paramInt, paramString1, paramString2, paramLong);
      return l1;
    }
    catch (RemoteException paramString1)
    {
      paramString1.printStackTrace();
    }
    return paramLong;
  }
  
  public static long a(long paramLong)
  {
    return ((System.currentTimeMillis() - paramLong) / 86400000L + 0.5D);
  }
  
  public static long a(Context paramContext, com.in2wow.sdk.model.a.a paramA)
  {
    paramContext = c(paramContext, paramA);
    if ((paramContext != null) && (paramContext.exists())) {
      return paramContext.length();
    }
    return 0L;
  }
  
  public static long a(PackageInfo paramPackageInfo)
  {
    try
    {
      Field localField = paramPackageInfo.getClass().getField("firstInstallTime");
      localField.setAccessible(true);
      long l1 = localField.getLong(paramPackageInfo);
      return l1;
    }
    catch (SecurityException paramPackageInfo)
    {
      paramPackageInfo.printStackTrace();
      return 0L;
    }
    catch (NoSuchFieldException paramPackageInfo)
    {
      paramPackageInfo.printStackTrace();
      return 0L;
    }
    catch (IllegalArgumentException paramPackageInfo)
    {
      paramPackageInfo.printStackTrace();
      return 0L;
    }
    catch (IllegalAccessException paramPackageInfo)
    {
      paramPackageInfo.printStackTrace();
    }
    return 0L;
  }
  
  public static long a(com.cleanmaster.boost.powerengine.b.d paramD)
  {
    long l2 = 0L;
    long l1 = l2;
    if (paramD != null)
    {
      paramD = paramD.a.a.n();
      l1 = l2;
      if (paramD != null)
      {
        paramD = paramD.iterator();
        l1 = 0L;
        while (paramD.hasNext())
        {
          String str = (String)paramD.next();
          if (!TextUtils.isEmpty(str)) {
            if (str.equals("scene_indoor"))
            {
              l1 = 576460752303423488L + l1;
            }
            else if (str.equals("scene_badcharging"))
            {
              l1 = 288230376151711744L + l1;
            }
            else if (str.equals("scene_music_active"))
            {
              l1 = 144115188075855872L + l1;
            }
            else if (str.equals("scene_after_exercise"))
            {
              l1 = 72057594037927936L + l1;
            }
            else if (str.equals("scene_user_sleeping"))
            {
              l1 = 36028797018963968L + l1;
            }
            else if (str.equals("scene_outdoor"))
            {
              l1 = 18014398509481984L + l1;
            }
            else if (str.equals("scene_roaming"))
            {
              l1 = 9007199254740992L + l1;
            }
            else if (str.equals("scene_weak_signalstrengh"))
            {
              l1 = 4503599627370496L + l1;
            }
            else if (str.equals("scene_cpu_sleepless"))
            {
              l1 = 2251799813685248L + l1;
            }
            else if (str.equals("scene_head_plug_state"))
            {
              l1 = 1125899906842624L + l1;
            }
            else if (str.equals("scene_nfc_ready"))
            {
              l1 = 562949953421312L + l1;
            }
            else if (str.equals("scene_mute_mode"))
            {
              l1 = 281474976710656L + l1;
            }
            else
            {
              if (!str.equals("scene_wifi_ap_on")) {
                break label324;
              }
              l1 = 70368744177664L + l1;
            }
          }
        }
      }
    }
    label324:
    for (;;)
    {
      break;
      return l1;
    }
  }
  
  public static long a(com.in2wow.sdk.model.a.a paramA)
  {
    switch (cY()[paramA.b.ordinal()])
    {
    default: 
      return 0L;
    case 2: 
      return ((com.in2wow.sdk.model.a.d)paramA).f;
    }
    return ((com.in2wow.sdk.model.a.f)paramA).g;
  }
  
  private static long a(DataOutput paramDataOutput, long paramLong)
  {
    paramDataOutput.write((int)(0xFF & paramLong));
    paramDataOutput.write((int)(paramLong >> 8) & 0xFF);
    paramDataOutput.write((int)(paramLong >> 16) & 0xFF);
    paramDataOutput.write((int)(paramLong >> 24) & 0xFF);
    return paramLong;
  }
  
  public static long a(InputStream paramInputStream, OutputStream paramOutputStream, boolean paramBoolean)
  {
    byte[] arrayOfByte = new byte['Ѐ'];
    long l1 = 0L;
    try
    {
      for (;;)
      {
        int i1 = paramInputStream.read(arrayOfByte, 0, 1024);
        if (i1 == -1) {
          break;
        }
        l1 += i1;
        paramOutputStream.write(arrayOfByte, 0, i1);
      }
      if (!paramBoolean) {
        break label73;
      }
    }
    finally
    {
      if (paramBoolean)
      {
        b(paramInputStream);
        b(paramOutputStream);
      }
    }
    b(paramInputStream);
    b(paramOutputStream);
    label73:
    return l1;
  }
  
  public static long a(String paramString, long paramLong)
  {
    long l1 = paramLong;
    if (paramString != null) {}
    try
    {
      l1 = Long.valueOf(paramString).longValue();
      l1 *= 1000L;
      return l1;
    }
    catch (Exception paramString) {}
    return paramLong;
  }
  
  public static long a(String paramString1, String paramString2, long paramLong)
  {
    ICloudConfigGetter localICloudConfigGetter = (ICloudConfigGetter)com.cleanmaster.base.ipc.c.a().a(com.cleanmaster.base.ipc.b.e);
    long l1 = paramLong;
    if (localICloudConfigGetter != null) {}
    try
    {
      l1 = localICloudConfigGetter.a(11, paramString1, paramString2, paramLong);
      return l1;
    }
    catch (RemoteException paramString1)
    {
      paramString1.printStackTrace();
    }
    return paramLong;
  }
  
  public static long a(short paramShort, byte paramByte, int paramInt)
  {
    return 0L | paramInt | paramByte << 32 | paramShort << 40;
  }
  
  public static long a(boolean paramBoolean)
  {
    com.cleanmaster.configmanager.d localD = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a());
    String str;
    long l2;
    int i1;
    long l1;
    if (paramBoolean)
    {
      str = "abnormal_detection_notify_delay_millis_danger_ext";
      l2 = localD.a(str, -1L);
      if (!paramBoolean) {
        break label91;
      }
      i1 = a("abnormal_detection_notify_key", "abnormal_detection_notify_delay_hour_danger", -1);
      if (l2 > 0L) {
        break label76;
      }
      if (i1 > 0) {
        break label69;
      }
      l1 = 10800000L;
    }
    label69:
    label76:
    label91:
    do
    {
      do
      {
        return l1;
        str = "abnormal_detection_notify_delay_millis_normal_ext";
        break;
        return i1 * 3600000L;
        l1 = l2;
      } while (i1 <= 0);
      return Math.max(i1, l2);
      i1 = a("abnormal_detection_notify_key", "abnormal_detection_notify_delay_hour_normal", -1);
      if (l2 <= 0L)
      {
        if (i1 <= 0) {
          return 14400000L;
        }
        return i1 * 3600000L;
      }
      l1 = l2;
    } while (i1 <= 0);
    return Math.max(i1, l2);
  }
  
  public static SharedElementCallback a(android.support.v4.app.b paramB)
  {
    android.support.v4.app.c localC = null;
    if (paramB != null) {
      localC = new android.support.v4.app.c(paramB);
    }
    return localC;
  }
  
  private static ContentValues a(Cursor paramCursor, String[] paramArrayOfString1, String[] paramArrayOfString2)
  {
    int i2 = 0;
    ContentValues localContentValues = new ContentValues();
    String str1 = "";
    int i3 = paramArrayOfString2.length;
    int i1 = 0;
    if (i1 < i3)
    {
      String str2 = paramArrayOfString2[i1];
      int i4 = paramCursor.getColumnIndex(str2);
      if (i4 != -1) {
        localContentValues.put(str2, paramCursor.getString(i4));
      }
      for (;;)
      {
        i1 += 1;
        break;
        str1 = str1 + str2 + ",";
      }
    }
    i3 = paramArrayOfString1.length;
    i1 = i2;
    if (i1 < i3)
    {
      paramArrayOfString2 = paramArrayOfString1[i1];
      i2 = paramCursor.getColumnIndex(paramArrayOfString2);
      if (i2 != -1) {
        localContentValues.put(paramArrayOfString2, Long.valueOf(paramCursor.getLong(i2)));
      }
      for (;;)
      {
        i1 += 1;
        break;
        str1 = str1 + paramArrayOfString2 + ",";
      }
    }
    if (!TextUtils.isEmpty(str1)) {
      throw new InvalidCookieTableSchemaException(Build.VERSION.RELEASE + ":" + str1);
    }
    return localContentValues;
  }
  
  public static Intent a(Context paramContext, Intent paramIntent1, Intent paramIntent2)
  {
    Intent localIntent = new Intent(paramContext, AppLockPasswordActivity.class);
    localIntent.putExtra("label", paramContext.getString(2131296429));
    localIntent.putExtra("extra_intent", paramIntent1);
    localIntent.putExtra("cancel_intent", paramIntent2);
    localIntent.addFlags(8388608);
    return localIntent;
  }
  
  private static Intent a(Context paramContext, List<String> paramList, ArrayList<UnknownFilesSafeModel.ElfSafeModel> paramArrayList)
  {
    Object localObject = null;
    int i3 = 0;
    int i1;
    if (paramArrayList.isEmpty())
    {
      i1 = 1;
      if (!paramList.isEmpty()) {
        break label47;
      }
    }
    label47:
    for (int i2 = 1;; i2 = 0)
    {
      if (((i2 == 0) || (i1 == 0)) && (paramContext != null)) {
        break label53;
      }
      return null;
      i1 = 0;
      break;
    }
    label53:
    Intent localIntent = new Intent(paramContext, SecurityAppInfoActivity.class);
    PackageManager localPackageManager = paramContext.getPackageManager();
    if ((localPackageManager == null) || (i2 == 0)) {}
    try
    {
      ArrayList localArrayList = new ArrayList();
      i1 = i3;
      localObject = localArrayList;
      if (i1 < paramList.size())
      {
        localObject = (String)paramList.get(i1);
        PackageInfo localPackageInfo = localPackageManager.getPackageInfo((String)localObject, 0);
        if (O()) {}
        for (long l1 = com.cleanmaster.base.util.system.m.a(localPackageInfo);; l1 = com.cleanmaster.base.util.system.m.c(localPackageInfo))
        {
          AppInfoModel localAppInfoModel = new AppInfoModel();
          localAppInfoModel.a((String)localObject);
          localAppInfoModel.b(com.cleanmaster.base.util.system.m.q(paramContext, (String)localObject));
          localAppInfoModel.c(localPackageInfo.versionName);
          localAppInfoModel.a(l1);
          com.cleanmaster.security.appinfo.c.a(new com.cleanmaster.security.appinfo.c(paramContext, localAppInfoModel, null));
          localArrayList.add(localAppInfoModel);
          i1 += 1;
          break;
        }
      }
      localIntent.setFlags(268435456);
      localIntent.putExtra("key_from", 8);
      if ((localObject != null) && (!((ArrayList)localObject).isEmpty())) {
        localIntent.putParcelableArrayListExtra("key_app_data", (ArrayList)localObject);
      }
      if (!paramArrayList.isEmpty()) {
        localIntent.putParcelableArrayListExtra("key_elf_data", paramArrayList);
      }
    }
    catch (PackageManager.NameNotFoundException paramContext)
    {
      for (;;)
      {
        paramContext.printStackTrace();
      }
    }
    return localIntent;
  }
  
  public static Intent a(boolean paramBoolean, short paramShort, Object paramObject)
  {
    short s1 = 2;
    if (!a(paramShort)) {
      return null;
    }
    com.cleanmaster.boost.abnormal.abnormalnotify.n localN = new com.cleanmaster.boost.abnormal.abnormalnotify.n(com.keniu.security.d.a());
    localN.a = 2;
    if (a(paramShort)) {
      localN.b = paramShort;
    }
    localN.d = true;
    if (paramBoolean) {}
    for (;;)
    {
      localN.c = s1;
      if ((3 == paramShort) && (paramObject != null) && ((paramObject instanceof String))) {
        localN.e = ((String)paramObject);
      }
      return localN.a();
      s1 = 1;
    }
  }
  
  public static ActivityInfo a(Context paramContext, PackageInfo paramPackageInfo, String paramString)
  {
    if (paramString.length() == 0) {
      return null;
    }
    paramContext = paramContext.getPackageManager();
    if (paramContext == null) {
      return null;
    }
    paramContext = paramContext.queryBroadcastReceivers(new Intent(paramString), 2);
    if ((paramContext == null) || (paramContext.isEmpty())) {
      return null;
    }
    paramContext = paramContext.iterator();
    while (paramContext.hasNext())
    {
      paramString = (ResolveInfo)paramContext.next();
      if ((paramString.activityInfo != null) && (paramString.activityInfo.packageName != null) && (paramString.activityInfo.packageName.compareTo(paramPackageInfo.packageName) == 0)) {
        return paramString.activityInfo;
      }
    }
    return null;
  }
  
  public static ApplicationInfo a(String paramString, Context paramContext)
  {
    if ((paramContext == null) || (TextUtils.isEmpty(paramString))) {}
    for (;;)
    {
      return null;
      try
      {
        paramString = paramContext.getPackageManager().getPackageInfo(paramString, 0);
        if (paramString != null)
        {
          paramString = paramString.applicationInfo;
          return paramString;
        }
      }
      catch (Exception paramString) {}
    }
    return null;
  }
  
  public static PermissionInfo a(PackageInfo paramPackageInfo, String paramString)
  {
    if ((paramString == null) || (paramString.length() == 0) || (paramPackageInfo == null) || (paramPackageInfo.permissions == null))
    {
      paramPackageInfo = null;
      return paramPackageInfo;
    }
    PermissionInfo[] arrayOfPermissionInfo = paramPackageInfo.permissions;
    int i2 = arrayOfPermissionInfo.length;
    int i1 = 0;
    for (;;)
    {
      if (i1 >= i2) {
        break label71;
      }
      PermissionInfo localPermissionInfo = arrayOfPermissionInfo[i1];
      paramPackageInfo = localPermissionInfo;
      if (localPermissionInfo.name.compareTo(paramString) == 0) {
        break;
      }
      i1 += 1;
    }
    label71:
    return null;
  }
  
  public static Cursor a(SQLiteDatabase paramSQLiteDatabase, ONewsScenario paramONewsScenario, String paramString1, String[] paramArrayOfString, String paramString2, String paramString3)
  {
    if (paramSQLiteDatabase == null) {
      return null;
    }
    try
    {
      paramSQLiteDatabase = paramSQLiteDatabase.query(ONewsStat.TABLE_NAME(paramONewsScenario), null, paramString1, paramArrayOfString, null, null, paramString2, paramString3);
      return paramSQLiteDatabase;
    }
    catch (Exception paramSQLiteDatabase)
    {
      paramSQLiteDatabase.printStackTrace();
    }
    return null;
  }
  
  public static Bitmap a(Bitmap paramBitmap, boolean paramBoolean)
  {
    Bitmap localBitmap;
    if (paramBoolean) {
      localBitmap = paramBitmap;
    }
    int i16;
    int i17;
    int[] arrayOfInt1;
    int i19;
    int i18;
    int i1;
    int[] arrayOfInt2;
    int[] arrayOfInt3;
    int[] arrayOfInt4;
    int[] arrayOfInt5;
    int[][] arrayOfInt;
    int i10;
    int i12;
    int i11;
    int i13;
    int i14;
    int[] arrayOfInt7;
    int i9;
    int i8;
    int i7;
    int i5;
    int i3;
    label322:
    int i6;
    int i21;
    int i20;
    int i15;
    int i4;
    int i2;
    try
    {
      for (;;)
      {
        i16 = localBitmap.getWidth();
        i17 = localBitmap.getHeight();
        arrayOfInt1 = new int[i16 * i17];
        localBitmap.getPixels(arrayOfInt1, 0, i16, 0, 0, i16, i17);
        i19 = i16 - 1;
        i18 = i17 - 1;
        i1 = i16 * i17;
        arrayOfInt2 = new int[i1];
        arrayOfInt3 = new int[i1];
        arrayOfInt4 = new int[i1];
        arrayOfInt5 = new int[Math.max(i16, i17)];
        arrayOfInt6 = new int[173056];
        i1 = 0;
        while (i1 < 173056)
        {
          arrayOfInt6[i1] = (i1 / 676);
          i1 += 1;
        }
        localBitmap = paramBitmap.copy(paramBitmap.getConfig(), true);
      }
      arrayOfInt = (int[][])Array.newInstance(Integer.TYPE, new int[] { 51, 3 });
      i10 = 0;
      i12 = 0;
      i11 = 0;
    }
    catch (Exception localException)
    {
      int[] arrayOfInt6;
      localException.printStackTrace();
      return paramBitmap;
    }
    catch (OutOfMemoryError localOutOfMemoryError)
    {
      label554:
      return paramBitmap;
    }
    if (i13 <= 25)
    {
      i14 = arrayOfInt1[(Math.min(i19, Math.max(i13, 0)) + i12)];
      arrayOfInt7 = arrayOfInt[(i13 + 25)];
      arrayOfInt7[0] = (i14 >> 16 & 0xFF);
      arrayOfInt7[1] = (i14 >> 8 & 0xFF);
      arrayOfInt7[2] = (i14 & 0xFF);
      i14 = 26 - Math.abs(i13);
      i9 += arrayOfInt7[0] * i14;
      i8 += arrayOfInt7[1] * i14;
      i7 += i14 * arrayOfInt7[2];
      if (i13 > 0)
      {
        i5 += arrayOfInt7[0];
        i3 += arrayOfInt7[1];
        i1 += arrayOfInt7[2];
        break label729;
        if (i6 >= i16) {
          break label979;
        }
        arrayOfInt2[i12] = arrayOfInt6[i9];
        arrayOfInt3[i12] = arrayOfInt6[i8];
        arrayOfInt4[i12] = arrayOfInt6[i7];
        arrayOfInt7 = arrayOfInt[((i14 - 25 + 51) % 51)];
        i21 = arrayOfInt7[0];
        i20 = arrayOfInt7[1];
        i15 = arrayOfInt7[2];
        if (i11 != 0) {
          break label784;
        }
        arrayOfInt5[i6] = Math.min(i6 + 25 + 1, i19);
        break label784;
        if (i12 > 25) {
          break label1108;
        }
        i13 = Math.max(0, i11) + i1;
        arrayOfInt7 = arrayOfInt[(i12 + 25)];
        arrayOfInt7[0] = arrayOfInt2[i13];
        arrayOfInt7[1] = arrayOfInt3[i13];
        arrayOfInt7[2] = arrayOfInt4[i13];
        i14 = 26 - Math.abs(i12);
        i10 += arrayOfInt2[i13] * i14;
        i9 += arrayOfInt3[i13] * i14;
        i13 = i8 + arrayOfInt4[i13] * i14;
        if (i12 <= 0) {
          break label1078;
        }
        i6 += arrayOfInt7[0];
        i4 += arrayOfInt7[1];
        i2 += arrayOfInt7[2];
        break label1043;
        if (i8 >= i17) {
          break label1348;
        }
        arrayOfInt1[i5] = (0xFF000000 & arrayOfInt1[i5] | arrayOfInt6[i10] << 16 | arrayOfInt6[i11] << 8 | arrayOfInt6[i13]);
        arrayOfInt7 = arrayOfInt[((i12 - 25 + 51) % 51)];
        i19 = arrayOfInt7[0];
        i15 = arrayOfInt7[1];
        i14 = arrayOfInt7[2];
        if (i1 != 0) {
          break label1165;
        }
        arrayOfInt5[i8] = (Math.min(i8 + 26, i18) * i16);
        break label1165;
      }
    }
    label729:
    label784:
    label979:
    label995:
    label1043:
    label1078:
    label1108:
    label1165:
    label1348:
    label1353:
    for (;;)
    {
      localBitmap.setPixels(arrayOfInt1, 0, i16, 0, 0, i16, i17);
      return localBitmap;
      for (;;)
      {
        if (i11 >= i17) {
          break label995;
        }
        i1 = 0;
        i5 = 0;
        i2 = 0;
        i4 = 0;
        i6 = 0;
        i13 = -25;
        i7 = 0;
        i8 = 0;
        i9 = 0;
        i3 = 0;
        break;
        for (;;)
        {
          i13 += 1;
          break;
          i6 += arrayOfInt7[0];
          i4 += arrayOfInt7[1];
          i2 += arrayOfInt7[2];
        }
        i14 = 25;
        i15 = 0;
        i13 = i6;
        i6 = i15;
        break label322;
        int i22 = arrayOfInt1[(arrayOfInt5[i6] + i10)];
        arrayOfInt7[0] = (i22 >> 16 & 0xFF);
        arrayOfInt7[1] = (i22 >> 8 & 0xFF);
        arrayOfInt7[2] = (i22 & 0xFF);
        i5 += arrayOfInt7[0];
        i3 += arrayOfInt7[1];
        i1 += arrayOfInt7[2];
        i9 = i9 - i13 + i5;
        i8 = i8 - i4 + i3;
        i7 = i7 - i2 + i1;
        i14 = (i14 + 1) % 51;
        arrayOfInt7 = arrayOfInt[(i14 % 51)];
        i13 = i13 - i21 + arrayOfInt7[0];
        i4 = i4 - i20 + arrayOfInt7[1];
        i2 = i2 - i15 + arrayOfInt7[2];
        i5 -= arrayOfInt7[0];
        i3 -= arrayOfInt7[1];
        i1 -= arrayOfInt7[2];
        i12 += 1;
        i6 += 1;
        break label322;
        i10 += i16;
        i11 += 1;
      }
      i1 = 0;
      for (;;)
      {
        if (i1 >= i16) {
          break label1353;
        }
        i2 = 0;
        i6 = 0;
        i3 = 0;
        i5 = 0;
        i7 = 0;
        i12 = -25;
        i8 = 0;
        i9 = 0;
        i10 = 0;
        i11 = i16 * -25;
        i4 = 0;
        break;
        for (;;)
        {
          i8 = i11;
          if (i12 < i18) {
            i8 = i11 + i16;
          }
          i12 += 1;
          i11 = i8;
          i8 = i13;
          break;
          i7 += arrayOfInt7[0];
          i5 += arrayOfInt7[1];
          i3 += arrayOfInt7[2];
        }
        i11 = i9;
        i13 = i8;
        i14 = 0;
        i15 = 25;
        i8 = i3;
        i9 = i5;
        i12 = i7;
        i5 = i1;
        i3 = i4;
        i4 = i8;
        i7 = i9;
        i9 = i12;
        i12 = i15;
        i8 = i14;
        break label554;
        i20 = arrayOfInt5[i8] + i1;
        arrayOfInt7[0] = arrayOfInt2[i20];
        arrayOfInt7[1] = arrayOfInt3[i20];
        arrayOfInt7[2] = arrayOfInt4[i20];
        i6 += arrayOfInt7[0];
        i3 += arrayOfInt7[1];
        i2 += arrayOfInt7[2];
        i10 = i10 - i9 + i6;
        i11 = i11 - i7 + i3;
        i13 = i13 - i4 + i2;
        i12 = (i12 + 1) % 51;
        arrayOfInt7 = arrayOfInt[i12];
        i9 = i9 - i19 + arrayOfInt7[0];
        i7 = i7 - i15 + arrayOfInt7[1];
        i4 = i4 - i14 + arrayOfInt7[2];
        i6 -= arrayOfInt7[0];
        i3 -= arrayOfInt7[1];
        i2 -= arrayOfInt7[2];
        i5 += i16;
        i8 += 1;
        break label554;
        i1 += 1;
      }
    }
  }
  
  /* Error */
  private static Bitmap a(String paramString, BitmapFactory.Options paramOptions)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_3
    //   2: new 1167	java/io/FileInputStream
    //   5: dup
    //   6: aload_0
    //   7: invokespecial 2681	java/io/FileInputStream:<init>	(Ljava/lang/String;)V
    //   10: astore_2
    //   11: aload_2
    //   12: astore_0
    //   13: aload_2
    //   14: invokevirtual 2685	java/io/FileInputStream:getFD	()Ljava/io/FileDescriptor;
    //   17: aconst_null
    //   18: aload_1
    //   19: invokestatic 2691	android/graphics/BitmapFactory:decodeFileDescriptor	(Ljava/io/FileDescriptor;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;
    //   22: astore_1
    //   23: aload_1
    //   24: astore_0
    //   25: aload_2
    //   26: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   29: aload_0
    //   30: areturn
    //   31: astore_1
    //   32: aload_1
    //   33: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   36: aload_0
    //   37: areturn
    //   38: astore_1
    //   39: aconst_null
    //   40: astore_2
    //   41: aload_2
    //   42: astore_0
    //   43: aload_1
    //   44: invokevirtual 1185	java/io/FileNotFoundException:printStackTrace	()V
    //   47: aload_3
    //   48: astore_0
    //   49: aload_2
    //   50: ifnull -21 -> 29
    //   53: aload_2
    //   54: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   57: aconst_null
    //   58: areturn
    //   59: astore_0
    //   60: aload_0
    //   61: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   64: aconst_null
    //   65: areturn
    //   66: astore_1
    //   67: aconst_null
    //   68: astore_2
    //   69: aload_2
    //   70: astore_0
    //   71: aload_1
    //   72: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   75: aload_3
    //   76: astore_0
    //   77: aload_2
    //   78: ifnull -49 -> 29
    //   81: aload_2
    //   82: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   85: aconst_null
    //   86: areturn
    //   87: astore_0
    //   88: aload_0
    //   89: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   92: aconst_null
    //   93: areturn
    //   94: astore_1
    //   95: aconst_null
    //   96: astore_0
    //   97: aload_0
    //   98: ifnull +7 -> 105
    //   101: aload_0
    //   102: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   105: aload_1
    //   106: athrow
    //   107: astore_0
    //   108: aload_0
    //   109: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   112: goto -7 -> 105
    //   115: astore_1
    //   116: goto -19 -> 97
    //   119: astore_1
    //   120: goto -51 -> 69
    //   123: astore_1
    //   124: goto -83 -> 41
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	127	0	paramString	String
    //   0	127	1	paramOptions	BitmapFactory.Options
    //   10	72	2	localFileInputStream	FileInputStream
    //   1	75	3	localObject	Object
    // Exception table:
    //   from	to	target	type
    //   25	29	31	java/io/IOException
    //   2	11	38	java/io/FileNotFoundException
    //   53	57	59	java/io/IOException
    //   2	11	66	java/io/IOException
    //   81	85	87	java/io/IOException
    //   2	11	94	finally
    //   101	105	107	java/io/IOException
    //   13	23	115	finally
    //   43	47	115	finally
    //   71	75	115	finally
    //   13	23	119	java/io/IOException
    //   13	23	123	java/io/FileNotFoundException
  }
  
  public static Path a(float paramFloat1, float paramFloat2, int paramInt1, int paramInt2, int paramInt3)
  {
    RectF localRectF = new RectF(paramFloat1, paramFloat2, paramInt1 + paramFloat1, paramInt2 + paramFloat2);
    float f1 = paramInt2 / 2;
    float f2 = paramInt2 / 2;
    float f3 = paramInt2 / 2;
    float f4 = paramInt2 / 2;
    float f5 = paramInt2 / 2;
    float f6 = paramInt2 / 2;
    float f7 = paramInt2 / 2;
    float f8 = paramInt2 / 2;
    Path localPath1 = new Path();
    localPath1.reset();
    localPath1.addRect(localRectF, Path.Direction.CW);
    localRectF = new RectF(paramFloat1, paramFloat2, paramInt2 + paramFloat1, paramInt2 + paramFloat2);
    Path localPath2 = new Path();
    localPath2.reset();
    Path.Direction localDirection = Path.Direction.CCW;
    localPath2.addRoundRect(localRectF, new float[] { 0.0F, 0.0F, f1, f2, f3, f4, 0.0F, 0.0F }, localDirection);
    localPath1.addPath(localPath2);
    localRectF = new RectF(localRectF.right + paramInt3, paramFloat2, paramInt1 + paramFloat1, paramInt2 + paramFloat2);
    localPath2 = new Path();
    localPath2.reset();
    localDirection = Path.Direction.CCW;
    localPath2.addRoundRect(localRectF, new float[] { f5, f6, 0.0F, 0.0F, 0.0F, 0.0F, f7, f8 }, localDirection);
    localPath1.addPath(localPath2);
    return localPath1;
  }
  
  public static Rect a(View paramView)
  {
    Rect localRect = new Rect();
    int[] arrayOfInt = new int[2];
    paramView.getLocationOnScreen(arrayOfInt);
    localRect.set(arrayOfInt[0], arrayOfInt[1], arrayOfInt[0] + paramView.getWidth(), arrayOfInt[1] + paramView.getHeight());
    return localRect;
  }
  
  public static Drawable a(Context paramContext, int paramInt)
  {
    Drawable localDrawable = paramContext.getResources().getDrawable(paramInt);
    paramInt = a(paramContext, 40.0F);
    localDrawable.setBounds(0, 0, paramInt, paramInt);
    return localDrawable;
  }
  
  public static Drawable a(String paramString, CloudResourceUtil.RESOURCE_TYPE paramRESOURCE_TYPE)
  {
    Object localObject = com.cleanmaster.cloudconfig.h.a();
    if (((com.cleanmaster.cloudconfig.h)localObject).a.size() == 0) {
      ((com.cleanmaster.cloudconfig.h)localObject).b();
    }
    localObject = (com.cleanmaster.cloudconfig.h.a)cM().get(paramString);
    if (localObject != null) {}
    switch (com.cleanmaster.cloudconfig.m.a[paramRESOURCE_TYPE.ordinal()])
    {
    default: 
      paramString = null;
      label70:
      paramRESOURCE_TYPE = com.keniu.security.d.a().getApplicationContext();
      if (TextUtils.isEmpty(paramString)) {
        break;
      }
    }
    for (paramString = com.cleanmaster.base.util.ui.a.a(paramRESOURCE_TYPE, paramString);; paramString = null)
    {
      if (j(paramRESOURCE_TYPE))
      {
        return null;
        if (!com.cleanmaster.cloudconfig.h.a().a(paramString)) {
          break;
        }
        paramString = aU() + ((com.cleanmaster.cloudconfig.h.a)localObject).x;
        break label70;
        paramString = aU() + ((com.cleanmaster.cloudconfig.h.a)localObject).A;
        break label70;
        paramString = aU() + ((com.cleanmaster.cloudconfig.h.a)localObject).B;
        break label70;
      }
      return paramString;
    }
  }
  
  public static Uri a(Context paramContext, Intent paramIntent)
  {
    Object localObject2 = null;
    Object localObject3 = paramIntent.getBundleExtra("al_applink_data");
    Object localObject1 = localObject2;
    if (localObject3 != null)
    {
      localObject3 = ((Bundle)localObject3).getString("target_url");
      localObject1 = localObject2;
      if (localObject3 != null)
      {
        localObject1 = new Bundle();
        if (paramIntent == null) {
          break label314;
        }
        localObject2 = paramIntent.getBundleExtra("al_applink_data");
        if (localObject2 == null) {
          break label219;
        }
      }
    }
    label219:
    label314:
    for (paramIntent = a.a.a(paramContext, "al_nav_in", (Bundle)localObject2, paramIntent);; paramIntent = (Intent)localObject1)
    {
      paramContext = new a.a(paramContext, "al_nav_in", paramIntent);
      if (paramContext.b == null) {
        Log.d(paramContext.getClass().getName(), "Event name is required");
      }
      try
      {
        paramIntent = Class.forName("android.support.v4.content.e");
        localObject1 = paramIntent.getMethod("getInstance", new Class[] { Context.class });
        paramIntent = paramIntent.getMethod("sendBroadcast", new Class[] { Intent.class });
        localObject1 = ((Method)localObject1).invoke(null, new Object[] { paramContext.a });
        localObject2 = new Intent("com.parse.bolts.measurement_event");
        ((Intent)localObject2).putExtra("event_name", paramContext.b);
        ((Intent)localObject2).putExtra("event_args", paramContext.c);
        paramIntent.invoke(localObject1, new Object[] { localObject2 });
        localObject1 = Uri.parse((String)localObject3);
        return localObject1;
        localObject2 = paramIntent.getData();
        if (localObject2 != null) {
          ((Bundle)localObject1).putString("intentData", ((Uri)localObject2).toString());
        }
        paramIntent = paramIntent.getExtras();
        if (paramIntent != null)
        {
          localObject2 = paramIntent.keySet().iterator();
          while (((Iterator)localObject2).hasNext())
          {
            String str = (String)((Iterator)localObject2).next();
            ((Bundle)localObject1).putString(str, a.a.a(paramIntent.get(str)));
          }
        }
      }
      catch (Exception paramIntent)
      {
        for (;;)
        {
          Log.d(paramContext.getClass().getName(), "LocalBroadcastManager in android support library is required to raise bolts event.");
        }
      }
    }
  }
  
  public static Uri a(com.cleanmaster.cleancloud.core.simplequery.d paramD, String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return null;
    }
    return Uri.parse("content://" + paramString + "/cm_cleancloud/" + paramD.h() + "/_cache");
  }
  
  private static Bundle a(ShareContent paramShareContent, boolean paramBoolean)
  {
    Bundle localBundle = new Bundle();
    com.facebook.internal.w.a(localBundle, "com.facebook.platform.extra.LINK", paramShareContent.h);
    com.facebook.internal.w.a(localBundle, "com.facebook.platform.extra.PLACE", paramShareContent.j);
    com.facebook.internal.w.a(localBundle, "com.facebook.platform.extra.REF", paramShareContent.k);
    localBundle.putBoolean("com.facebook.platform.extra.DATA_FAILURES_FATAL", paramBoolean);
    paramShareContent = paramShareContent.i;
    if (!com.facebook.internal.w.a(paramShareContent)) {
      localBundle.putStringArrayList("com.facebook.platform.extra.FRIENDS", new ArrayList(paramShareContent));
    }
    return localBundle;
  }
  
  public static Bundle a(ShareOpenGraphContent paramShareOpenGraphContent)
  {
    Bundle localBundle = new Bundle();
    com.facebook.internal.w.a(localBundle, "action_type", paramShareOpenGraphContent.a.a());
    try
    {
      paramShareOpenGraphContent = a(b(paramShareOpenGraphContent), false);
      if (paramShareOpenGraphContent != null) {
        com.facebook.internal.w.a(localBundle, "action_properties", paramShareOpenGraphContent.toString());
      }
      return localBundle;
    }
    catch (JSONException paramShareOpenGraphContent)
    {
      throw new FacebookException("Unable to serialize the ShareOpenGraphContent to JSON", paramShareOpenGraphContent);
    }
  }
  
  public static Bundle a(String paramString1, com.in2wow.sdk.model.c paramC, com.in2wow.sdk.k.h paramH, int paramInt, String paramString2, boolean paramBoolean, TriggerResponse paramTriggerResponse)
  {
    int i1 = 1;
    Bundle localBundle = new Bundle();
    localBundle.putInt("type", g.b.r.ordinal());
    localBundle.putInt("unit_id", paramC.i());
    localBundle.putInt("provider_id", paramC.h());
    if (paramC.b() != null) {
      localBundle.putString("pkey", paramC.b());
    }
    if (paramC.i() == -1)
    {
      localBundle.putInt("adid", paramC.g());
      localBundle.putInt("ad_version", paramC.p());
      localBundle.putInt("creative_id", paramC.q());
      if ((paramH == com.in2wow.sdk.k.h.h) && (paramC.b != null)) {
        localBundle.putString("ad_list_ref", paramC.b);
      }
      localBundle.putInt("ad_event_type", paramH.ordinal());
      localBundle.putString("campaign_id", paramC.k);
      localBundle.putInt("place", paramInt);
      localBundle.putString("placement", paramString2);
      if (!paramBoolean) {
        break label348;
      }
      paramInt = 1;
      label189:
      localBundle.putInt("is_first", paramInt);
      localBundle.putString("token", paramString1);
      localBundle.putParcelable("response", paramTriggerResponse);
    }
    for (;;)
    {
      try
      {
        if (paramC.x() == null)
        {
          paramString1 = new JSONObject();
          break label374;
          paramString1.put("is_first", paramInt);
          paramString1.put("PLACEMENT", paramString2);
          localBundle.putString("tracking_source", paramString1.toString());
          return localBundle;
          if (paramC.x() != null)
          {
            JSONObject localJSONObject = paramC.x();
            localBundle.putString("ad_id", localJSONObject.optString("AD_ID", "UNKNOWN"));
            localBundle.putString("creative_id", localJSONObject.optString("CREATIVE_ID", "UNKNOWN"));
            break;
          }
          localBundle.putString("ad_id", "UNKNOWN");
          localBundle.putString("creative_id", "UNKNOWN");
          break;
          label348:
          paramInt = 0;
          break label189;
        }
        paramString1 = paramC.x();
      }
      catch (Exception paramString1)
      {
        com.in2wow.sdk.l.k.a(paramString1);
        return localBundle;
      }
      paramInt = 0;
      continue;
      label374:
      if (paramBoolean) {
        paramInt = i1;
      }
    }
  }
  
  public static Bundle a(String paramString1, String paramString2, boolean paramBoolean, com.in2wow.sdk.model.c paramC, int paramInt1, int paramInt2, int paramInt3)
  {
    localBundle = new Bundle();
    localBundle.putInt("type", g.b.v.ordinal());
    if (paramC.b() != null) {
      localBundle.putString("pkey", paramC.b());
    }
    if (paramC.i() == -1)
    {
      localBundle.putInt("unit_id", paramC.i());
      localBundle.putInt("adid", paramC.g());
      localBundle.putInt("ad_version", paramC.p());
      localBundle.putInt("creative_id", paramC.q());
      localBundle.putInt("provider_id", paramC.h());
    }
    for (;;)
    {
      localBundle.putString("token", paramString1);
      localBundle.putInt("place", paramInt1);
      localBundle.putString("placement", paramString2);
      localBundle.putBoolean("engaged", paramBoolean);
      localBundle.putInt("duration", paramInt2);
      localBundle.putInt("percentage", paramInt3);
      localBundle.putParcelable("response", paramC.a("*", com.in2wow.sdk.k.h.k));
      try
      {
        if (paramC.x() == null)
        {
          paramString1 = new JSONObject();
          label200:
          paramString1.put("DURATION", paramInt2);
          paramString1.put("PERCENTAGE", paramInt3);
          if (!paramBoolean) {
            break label382;
          }
        }
        label382:
        for (paramInt1 = 1;; paramInt1 = 0)
        {
          paramString1.put("ENGAGED", paramInt1);
          paramString1.put("PLACEMENT", paramString2);
          localBundle.putString("tracking_source", paramString1.toString());
          return localBundle;
          localBundle.putInt("unit_id", paramC.i());
          localBundle.putInt("provider_id", paramC.h());
          if (paramC.x() != null)
          {
            JSONObject localJSONObject = paramC.x();
            localBundle.putString("ad_id", localJSONObject.optString("AD_ID", "UNKNOWN"));
            localBundle.putString("creative_id", localJSONObject.optString("CREATIVE_ID", "UNKNOWN"));
            break;
          }
          localBundle.putString("ad_id", "UNKNOWN");
          localBundle.putString("creative_id", "UNKNOWN");
          break;
          paramString1 = new JSONObject(paramC.x().toString());
          break label200;
        }
        return localBundle;
      }
      catch (Exception paramString1)
      {
        com.in2wow.sdk.l.k.a(paramString1);
      }
    }
  }
  
  public static Bundle a(UUID paramUUID, ShareContent paramShareContent, boolean paramBoolean)
  {
    Object localObject2 = null;
    com.facebook.internal.x.a(paramShareContent, "shareContent");
    com.facebook.internal.x.a(paramUUID, "callId");
    Object localObject1;
    if ((paramShareContent instanceof ShareLinkContent))
    {
      paramUUID = (ShareLinkContent)paramShareContent;
      localObject1 = a(paramUUID, paramBoolean);
      com.facebook.internal.w.a((Bundle)localObject1, "com.facebook.platform.extra.TITLE", paramUUID.b);
      com.facebook.internal.w.a((Bundle)localObject1, "com.facebook.platform.extra.DESCRIPTION", paramUUID.a);
      com.facebook.internal.w.a((Bundle)localObject1, "com.facebook.platform.extra.IMAGE", paramUUID.c);
    }
    do
    {
      do
      {
        return localObject1;
        if ((paramShareContent instanceof SharePhotoContent))
        {
          paramShareContent = (SharePhotoContent)paramShareContent;
          paramUUID = a(paramShareContent, paramUUID);
          paramShareContent = a(paramShareContent, paramBoolean);
          paramShareContent.putStringArrayList("com.facebook.platform.extra.PHOTOS", new ArrayList(paramUUID));
          return paramShareContent;
        }
        localObject1 = localObject2;
      } while ((paramShareContent instanceof ShareVideoContent));
      localObject1 = localObject2;
    } while (!(paramShareContent instanceof ShareOpenGraphContent));
    paramShareContent = (ShareOpenGraphContent)paramShareContent;
    try
    {
      paramUUID = a(paramUUID, paramShareContent);
      localObject1 = a(paramShareContent, paramBoolean);
      com.facebook.internal.w.a((Bundle)localObject1, "com.facebook.platform.extra.PREVIEW_PROPERTY_NAME", paramShareContent.b);
      com.facebook.internal.w.a((Bundle)localObject1, "com.facebook.platform.extra.ACTION_TYPE", paramShareContent.a.a());
      com.facebook.internal.w.a((Bundle)localObject1, "com.facebook.platform.extra.ACTION", paramUUID.toString());
      return localObject1;
    }
    catch (JSONException paramUUID)
    {
      throw new FacebookException("Unable to create a JSON Object from the provided ShareOpenGraphContent: " + paramUUID.getMessage());
    }
  }
  
  public static <T> Parcelable.Creator<T> a(android.support.v4.os.b<T> paramB)
  {
    if (Build.VERSION.SDK_INT >= 13) {
      return new ParcelableCompatCreatorHoneycombMR2(paramB);
    }
    return new ParcelableCompat.CompatCreator(paramB);
  }
  
  public static <T extends Parcelable> T a(Parcel paramParcel, int paramInt, Parcelable.Creator<T> paramCreator)
  {
    paramInt = a(paramParcel, paramInt);
    int i1 = paramParcel.dataPosition();
    if (paramInt == 0) {
      return null;
    }
    paramCreator = (Parcelable)paramCreator.createFromParcel(paramParcel);
    paramParcel.setDataPosition(paramInt + i1);
    return paramCreator;
  }
  
  public static Spannable a(String paramString, Object... paramVarArgs)
  {
    int i1 = 0;
    String str = String.format(paramString.replaceAll(":", "#:#"), paramVarArgs);
    paramString = new SpannableString(String.format(paramString, paramVarArgs));
    paramString.setSpan(new AbsoluteSizeSpan(14, true), 0, paramString.length(), 33);
    int i2 = 0;
    for (;;)
    {
      int i3 = str.indexOf("#:#", i2);
      if (i3 <= 0) {
        break;
      }
      paramString.setSpan(new ForegroundColorSpan(-15047512), i2 - i1, i3 - i1, 33);
      i2 = str.indexOf("\n", i3 + 3);
      if (i2 <= 0) {
        break;
      }
      i2 += 1;
      i1 += 2;
    }
    return paramString;
  }
  
  public static Spannable a(String[] paramArrayOfString, int[] paramArrayOfInt1, int[] paramArrayOfInt2, int[] paramArrayOfInt3)
  {
    SpannableStringBuilder localSpannableStringBuilder = new SpannableStringBuilder();
    int i1 = 0;
    while (i1 < 2)
    {
      int i2 = paramArrayOfString[i1].length();
      SpannableString localSpannableString = new SpannableString(paramArrayOfString[i1]);
      localSpannableString.setSpan(new StyleSpan(paramArrayOfInt3[i1]), 0, i2, 33);
      localSpannableString.setSpan(new AbsoluteSizeSpan(paramArrayOfInt2[i1], true), 0, i2, 33);
      localSpannableString.setSpan(new ForegroundColorSpan(paramArrayOfInt1[i1]), 0, i2, 33);
      localSpannableStringBuilder.append(localSpannableString);
      i1 += 1;
    }
    return localSpannableStringBuilder;
  }
  
  public static JsonReader a(File paramFile, String paramString)
  {
    try
    {
      paramFile = new File(paramFile, paramString);
      if (!paramFile.exists()) {
        return null;
      }
      paramFile = new JsonReader(new InputStreamReader(new FileInputStream(paramFile), "UTF-8"));
      return paramFile;
    }
    catch (FileNotFoundException paramFile)
    {
      paramFile.printStackTrace();
      return null;
    }
    catch (UnsupportedEncodingException paramFile)
    {
      paramFile.printStackTrace();
    }
    return null;
  }
  
  public static View.OnTouchListener a(Drawable paramDrawable1, Drawable paramDrawable2)
  {
    return new com.in2wow.sdk.l.h(paramDrawable1, paramDrawable2);
  }
  
  public static View a(Context paramContext, int paramInt, String paramString, boolean paramBoolean1, View.OnClickListener paramOnClickListener, boolean paramBoolean2)
  {
    paramContext = LayoutInflater.from(paramContext.getApplicationContext()).inflate(2130903424, null);
    RadioButton localRadioButton = (RadioButton)paramContext.findViewById(2131626259);
    localRadioButton.setId(paramInt);
    if (paramBoolean2)
    {
      String str = com.cleanmaster.cmresources.b.a().a("resources_recommended");
      localRadioButton.setText(Html.fromHtml(paramString + " <font color='#02B473'>(" + str + ")</font>"));
    }
    for (;;)
    {
      localRadioButton.setTag(paramString);
      localRadioButton.setChecked(paramBoolean1);
      localRadioButton.setOnClickListener(paramOnClickListener);
      return paramContext;
      localRadioButton.setText(paramString);
    }
  }
  
  public static View a(ViewGroup paramViewGroup)
  {
    return LayoutInflater.from(paramViewGroup.getContext()).inflate(2130903802, paramViewGroup, false);
  }
  
  public static AlphaAnimation a(float paramFloat1, float paramFloat2, long paramLong, Animation.AnimationListener paramAnimationListener)
  {
    AlphaAnimation localAlphaAnimation = new AlphaAnimation(paramFloat1, paramFloat2);
    localAlphaAnimation.setDuration(paramLong);
    localAlphaAnimation.setAnimationListener(paramAnimationListener);
    localAlphaAnimation.setFillAfter(true);
    return localAlphaAnimation;
  }
  
  public static Animation a(float paramFloat, long paramLong1, long paramLong2)
  {
    TranslateAnimation localTranslateAnimation = new TranslateAnimation(1, 0.0F, 1, 0.0F, 1, paramFloat, 1, 0.0F);
    localTranslateAnimation.setDuration(paramLong1);
    AlphaAnimation localAlphaAnimation = new AlphaAnimation(0.0F, 1.0F);
    localAlphaAnimation.setDuration(paramLong1);
    localAlphaAnimation.setStartOffset(paramLong1 / 5L);
    AnimationSet localAnimationSet = new AnimationSet(false);
    localAnimationSet.addAnimation(localTranslateAnimation);
    localAnimationSet.addAnimation(localAlphaAnimation);
    localAnimationSet.setStartOffset(paramLong2);
    return localAnimationSet;
  }
  
  public static LinearLayout a(Context paramContext, String paramString1, String paramString2, com.cleanmaster.boost.acc.utils.r paramR)
  {
    LinearLayout localLinearLayout = new LinearLayout(paramContext);
    localLinearLayout.setOrientation(1);
    Object localObject = new ViewGroup.LayoutParams(-2, -2);
    localLinearLayout.setLayoutParams((ViewGroup.LayoutParams)localObject);
    TextView localTextView = new TextView(paramContext);
    localTextView.setText(w(paramString1));
    localTextView.setTextAppearance(paramContext, 2131427649);
    localTextView.setLayoutParams((ViewGroup.LayoutParams)localObject);
    paramString1 = new LinearLayout.LayoutParams(-2, -2);
    paramString1.topMargin = a(paramContext, 5.0F);
    localObject = new TextView(paramContext);
    ((TextView)localObject).setTextAppearance(paramContext, 2131427649);
    ((TextView)localObject).setTextColor(Color.parseColor("#ff1A64A8"));
    ((TextView)localObject).setText(w(paramString2));
    ((TextView)localObject).setLayoutParams(paramString1);
    ((TextView)localObject).setOnClickListener(new com.cleanmaster.boost.acc.utils.n(paramR));
    localLinearLayout.addView(localTextView);
    localLinearLayout.addView((View)localObject);
    return localLinearLayout;
  }
  
  public static com.android.volley.a.a a(com.android.volley.h paramH)
  {
    long l6 = System.currentTimeMillis();
    Map localMap = paramH.c;
    long l3 = 0L;
    long l2 = 0L;
    long l1 = 0L;
    Object localObject1 = (String)localMap.get("Date");
    if (localObject1 != null) {
      l3 = bh((String)localObject1);
    }
    localObject1 = (String)localMap.get("Cache-Control");
    int i1;
    Object localObject2;
    if (localObject1 != null)
    {
      localObject1 = ((String)localObject1).split(",");
      i2 = 0;
      i1 = 0;
      l1 = 0L;
      l2 = 0L;
      if (i2 < localObject1.length)
      {
        localObject2 = localObject1[i2].trim();
        if (((String)localObject2).startsWith("max-age=")) {}
        for (;;)
        {
          try
          {
            l5 = Long.parseLong(((String)localObject2).substring(8));
            l4 = l1;
          }
          catch (Exception localException2)
          {
            long l4 = l1;
            long l5 = l2;
            continue;
            l1 = 0L;
            l2 = 0L;
            continue;
            l4 = 0L;
            continue;
            l5 = 0L;
            continue;
          }
          i2 += 1;
          l1 = l4;
          l2 = l5;
          break;
          if (((String)localObject2).startsWith("stale-while-revalidate=")) {}
          try
          {
            l4 = Long.parseLong(((String)localObject2).substring(23));
            l5 = l2;
          }
          catch (Exception localException1)
          {
            l4 = l1;
            l5 = l2;
          }
          if (!((String)localObject2).equals("must-revalidate"))
          {
            l4 = l1;
            l5 = l2;
            if (!((String)localObject2).equals("proxy-revalidate")) {}
          }
          else
          {
            i1 = 1;
            l4 = l1;
            l5 = l2;
          }
        }
      }
    }
    for (int i2 = 1;; i2 = 0)
    {
      localObject1 = (String)localMap.get("Expires");
      if (localObject1 != null)
      {
        l5 = bh((String)localObject1);
        localObject1 = (String)localMap.get("Last-Modified");
        if (localObject1 != null)
        {
          l4 = bh((String)localObject1);
          localObject1 = (String)localMap.get("ETag");
          if (i2 != 0)
          {
            l2 = l6 + 1000L * l2;
            if (i1 != 0) {
              l1 = l2;
            }
          }
          for (;;)
          {
            localObject2 = new com.android.volley.a.a();
            ((com.android.volley.a.a)localObject2).a = paramH.b;
            ((com.android.volley.a.a)localObject2).b = ((String)localObject1);
            ((com.android.volley.a.a)localObject2).f = l2;
            ((com.android.volley.a.a)localObject2).e = l1;
            ((com.android.volley.a.a)localObject2).c = l3;
            ((com.android.volley.a.a)localObject2).d = l4;
            ((com.android.volley.a.a)localObject2).g = localMap;
            return localObject2;
            l1 = 1000L * l1 + l2;
            continue;
            if ((l3 <= 0L) || (l5 < l3)) {
              break;
            }
            l1 = l5 - l3 + l6;
            l2 = l1;
          }
          break;
        }
      }
      i1 = 0;
    }
  }
  
  public static com.cleanmaster.applocklib.ui.g a(Context paramContext, com.cleanmaster.applocklib.ui.b.a paramA)
  {
    return new com.cleanmaster.applocklib.ui.b(paramContext, paramA);
  }
  
  public static com.cleanmaster.applocklib.ui.g a(Context paramContext, com.cleanmaster.applocklib.ui.b.a paramA, AppLockDialogFactory.RECOMMENDER_DIALOG_MODE paramRECOMMENDER_DIALOG_MODE)
  {
    return new com.cleanmaster.applocklib.ui.c(paramContext, paramA, paramRECOMMENDER_DIALOG_MODE);
  }
  
  public static com.cleanmaster.applocklib.ui.g a(Context paramContext, String paramString, com.cleanmaster.applocklib.ui.f.a paramA)
  {
    return new com.cleanmaster.applocklib.ui.f(paramContext, paramString, paramA);
  }
  
  public static com.cleanmaster.base.b.d a(Activity paramActivity, String paramString1, String paramString2, View.OnClickListener paramOnClickListener)
  {
    if ((paramActivity == null) || (paramString1 == null) || (paramString2 == null)) {
      return null;
    }
    com.cleanmaster.base.b.a localA = new com.cleanmaster.base.b.a(paramActivity);
    com.cleanmaster.base.b.a.a localA1 = new com.cleanmaster.base.b.a.a(paramActivity);
    localA1.a(paramString1);
    localA1.c().setVisibility(8);
    localA.a(localA1);
    localA1.a(false);
    paramActivity = new com.cleanmaster.base.b.a.b(paramActivity);
    if (!TextUtils.isEmpty(paramString2)) {
      paramActivity.b(paramString2, paramOnClickListener);
    }
    if (!TextUtils.isEmpty(null)) {
      paramActivity.a(null, null);
    }
    localA.a(paramActivity);
    localA.c();
    return localA;
  }
  
  public static com.cleanmaster.base.b.d a(Activity paramActivity, String paramString1, String paramString2, String paramString3, View.OnClickListener paramOnClickListener)
  {
    com.cleanmaster.base.b.a localA = new com.cleanmaster.base.b.a(paramActivity);
    com.cleanmaster.base.b.a.a localA1 = new com.cleanmaster.base.b.a.a(paramActivity);
    Object localObject;
    if (paramString2 != null) {
      localObject = null;
    }
    for (;;)
    {
      try
      {
        paramString2 = paramActivity.getPackageManager().getPackageInfo(paramString2, 0);
        if (paramString2 != null)
        {
          i1 = 1;
          BitmapLoader.b().a(localA1.c(), paramString2.packageName, BitmapLoader.TaskType.INSTALLED_APK);
          if (i1 == 0) {
            localA1.c().setVisibility(8);
          }
          localA1.a(paramString1);
          localA.a(localA1);
          localA1.a(false);
          paramActivity = new com.cleanmaster.base.b.a.b(paramActivity);
          paramActivity.b(paramString3, paramOnClickListener);
          localA.a(paramActivity);
          localA.c();
          return localA;
        }
      }
      catch (Exception paramString2)
      {
        paramString2.printStackTrace();
        paramString2 = localObject;
        continue;
      }
      int i1 = 0;
    }
  }
  
  public static com.cleanmaster.base.permission.b.d a(Context paramContext, byte paramByte)
  {
    switch (paramByte)
    {
    default: 
      return null;
    case 1: 
      return new com.cleanmaster.base.permission.b.a(paramContext);
    case 2: 
      return new com.cleanmaster.base.permission.b.i(paramContext);
    case 3: 
    case 4: 
    case 5: 
    case 6: 
    case 11: 
      return new com.cleanmaster.base.permission.b.h(paramContext, paramByte);
    case 7: 
      return new com.cleanmaster.base.permission.b.c(paramContext);
    case 8: 
      return new com.cleanmaster.base.permission.b.e(paramContext);
    case 9: 
      return new com.cleanmaster.base.permission.b.f(paramContext);
    }
    return new com.cleanmaster.base.permission.b.g(paramContext);
  }
  
  public static com.cleanmaster.base.util.e.g a(ArrayList<String> paramArrayList)
  {
    if (paramArrayList == null) {
      return null;
    }
    Iterator localIterator = paramArrayList.iterator();
    paramArrayList = null;
    while (localIterator.hasNext())
    {
      com.cleanmaster.base.util.e.g localG = d(new File((String)localIterator.next()));
      if (localG != null) {
        if (paramArrayList != null)
        {
          paramArrayList.a += localG.a;
          paramArrayList.b += localG.b;
        }
        else
        {
          paramArrayList = localG;
        }
      }
    }
    return paramArrayList;
  }
  
  public static com.cleanmaster.boost.autostarts.core.b a(com.cleanmaster.boost.boostengine.autostart.a.a paramA)
  {
    if (paramA == null) {
      return null;
    }
    paramA = new com.cleanmaster.boost.autostarts.core.b(paramA);
    paramA.a(null);
    return paramA;
  }
  
  public static com.cleanmaster.boost.boostengine.a.a a(List<com.cleanmaster.boost.boostengine.autostart.a.a> paramList, com.cleanmaster.boost.boostengine.a.a.b paramB)
  {
    if ((paramList == null) || (paramList.size() <= 0))
    {
      if (paramB != null)
      {
        paramB.a(com.cleanmaster.boost.boostengine.a.b);
        paramB.b(com.cleanmaster.boost.boostengine.a.b, null);
      }
      return null;
    }
    com.cleanmaster.boost.boostengine.a.b localB = new com.cleanmaster.boost.boostengine.a.b();
    localB.a = com.cleanmaster.boost.boostengine.a.b;
    com.cleanmaster.boost.boostengine.autostart.b localB1 = new com.cleanmaster.boost.boostengine.autostart.b();
    localB1.a = false;
    localB1.c.addAll(paramList);
    localB.b.put(Integer.valueOf(com.cleanmaster.boost.boostengine.a.b), localB1);
    paramList = new com.cleanmaster.boost.boostengine.a.a(com.keniu.security.d.a().getApplicationContext(), localB);
    paramList.a(new com.cleanmaster.boost.autostarts.data.d(paramB));
    return paramList;
  }
  
  public static com.cleanmaster.boost.boostengine.autostart.a.a a(String paramString, List<String> paramList, boolean paramBoolean)
  {
    if (TextUtils.isEmpty(paramString)) {
      return null;
    }
    com.cleanmaster.boost.boostengine.d.c localC = new com.cleanmaster.boost.boostengine.d.c();
    localC.a = com.cleanmaster.boost.boostengine.a.b;
    com.cleanmaster.boost.boostengine.autostart.e localE = new com.cleanmaster.boost.boostengine.autostart.e();
    localE.g = false;
    localE.e = false;
    localE.d = paramBoolean;
    localE.b.add(paramString);
    if (paramList != null) {
      localE.c.addAll(paramList);
    }
    localC.c.put(Integer.valueOf(com.cleanmaster.boost.boostengine.a.b), localE);
    paramString = new com.cleanmaster.boost.boostengine.d.b(com.keniu.security.d.a().getApplicationContext(), localC);
    int i1 = com.cleanmaster.boost.boostengine.a.b;
    paramList = paramString.a.iterator();
    do
    {
      if (!paramList.hasNext()) {
        break;
      }
      paramString = (com.cleanmaster.boost.boostengine.d.d)paramList.next();
    } while ((paramString == null) || (paramString.a() != i1));
    for (;;)
    {
      if (paramString != null) {}
      for (paramString = paramString.b(); (paramString != null) && ((paramString instanceof com.cleanmaster.boost.boostengine.autostart.d)); paramString = null)
      {
        paramString = ((com.cleanmaster.boost.boostengine.autostart.d)paramString).c();
        if (paramString.size() != 1) {
          break;
        }
        return (com.cleanmaster.boost.boostengine.autostart.a.a)paramString.get(0);
      }
      return null;
      paramString = null;
    }
  }
  
  public static ProcCloudRuleDefine.ENUM_MATCH a(com.cleanmaster.boost.powerengine.process.clond.ext.l paramL, String paramString1, String paramString2, long paramLong, String paramString3)
  {
    if ((!a(paramL, paramString1)) || (TextUtils.isEmpty(paramString2)) || (TextUtils.isEmpty(paramString3))) {
      paramString1 = ProcCloudRuleDefine.ENUM_MATCH.em_rule_invalid;
    }
    long l1;
    do
    {
      return paramString1;
      paramString1 = ProcCloudRuleDefine.ENUM_MATCH.em_rule_unsupported;
      l1 = H(paramL.d);
      if (-1L == l1) {
        return ProcCloudRuleDefine.ENUM_MATCH.em_rule_invalid;
      }
    } while (!paramString2.equals(paramL.b));
    return a(paramL.c, paramLong, l1);
  }
  
  public static ProcCloudRuleDefine.ENUM_MATCH a(String paramString, long paramLong1, long paramLong2)
  {
    int i1 = 1;
    if (!TextUtils.isEmpty(paramString))
    {
      if ("=".equals(paramString)) {
        if (paramLong1 != paramLong2) {}
      }
      while (i1 != 0)
      {
        return ProcCloudRuleDefine.ENUM_MATCH.em_rule_match;
        i1 = 0;
        continue;
        if ("<".equals(paramString))
        {
          if (paramLong1 >= paramLong2) {
            i1 = 0;
          }
        }
        else if (">".equals(paramString))
        {
          if (paramLong1 <= paramLong2) {
            i1 = 0;
          }
        }
        else if ("!=".equals(paramString))
        {
          if (paramLong1 == paramLong2) {
            i1 = 0;
          }
        }
        else if (">=".equals(paramString))
        {
          if (paramLong1 < paramLong2) {
            i1 = 0;
          }
        }
        else if ("<=".equals(paramString))
        {
          if (paramLong1 > paramLong2) {
            i1 = 0;
          }
        }
        else {
          return ProcCloudRuleDefine.ENUM_MATCH.em_rule_unsupported;
        }
      }
      return ProcCloudRuleDefine.ENUM_MATCH.em_rule_no_match;
    }
    return ProcCloudRuleDefine.ENUM_MATCH.em_rule_invalid;
  }
  
  public static com.cleanmaster.boost.powerengine.process.d.a a(Context paramContext, com.cleanmaster.boost.powerengine.process.e paramE, List<RunningAppProcessInfo> paramList, Map<String, com.cleanmaster.utilext.AppInfo> paramMap)
  {
    if ((paramContext == null) || (paramE == null)) {
      return null;
    }
    if ((!paramE.j) && (!paramE.i)) {
      return null;
    }
    com.cleanmaster.boost.powerengine.process.d.a localA = new com.cleanmaster.boost.powerengine.process.d.a();
    localA.c = new com.cleanmaster.boost.powerengine.process.d.a.a();
    localA.c.b = false;
    localA.c.a = false;
    localA.d = new com.cleanmaster.boost.powerengine.process.d.a.a();
    localA.d.b = paramE.j;
    localA.d.a = paramE.i;
    localA.d.d = paramE.n;
    localA.d.c = paramE.m;
    localA.d.e = paramE.k;
    localA.e = paramMap;
    localA.g = paramE.s;
    localA.i = paramE.D;
    localA.j = paramE.E;
    localA.k = paramE.F;
    boolean bool1;
    int i2;
    label208:
    boolean bool3;
    if (paramE.a == 32)
    {
      bool1 = true;
      localA.h = bool1;
      if (paramE.l) {
        break label253;
      }
      i2 = 1;
      bool3 = paramE.h;
      localA.f.clear();
      if ((paramContext != null) && ((localA.c != null) || (localA.d != null))) {
        break label259;
      }
    }
    for (;;)
    {
      return localA;
      bool1 = false;
      break;
      label253:
      i2 = 0;
      break label208;
      label259:
      paramE = paramContext.getPackageManager();
      if (paramE == null) {
        continue;
      }
      try
      {
        paramE = paramE.getInstalledPackages(64);
        if ((paramE == null) || (paramE.size() <= 0)) {
          continue;
        }
        paramMap = new ArrayList();
        com.cleanmaster.boost.powerengine.process.d.a.a(paramMap, paramList);
        paramList = paramE.iterator();
        while (paramList.hasNext())
        {
          localPackageInfo = (PackageInfo)paramList.next();
          if ((localPackageInfo != null) && (!TextUtils.isEmpty(localPackageInfo.packageName)))
          {
            if (!paramMap.contains(localPackageInfo.packageName)) {
              break label499;
            }
            i1 = 1;
            if ((i2 == 0) || (2 != i1))
            {
              if (localPackageInfo.applicationInfo != null) {
                break label520;
              }
              i3 = 0;
              if (!com.cleanmaster.utilext.c.a(localPackageInfo.applicationInfo)) {
                break label533;
              }
              i4 = 4;
              if (4 != i4) {
                break label711;
              }
              bool2 = com.cleanmaster.utilext.c.a(paramContext, localPackageInfo);
              if (!bool2)
              {
                paramE = localA.d;
                if (1 == i1) {
                  paramE = localA.c;
                }
                String str = localPackageInfo.packageName;
                if (paramE != null) {
                  break label539;
                }
                bool1 = true;
                if (!bool1)
                {
                  paramE = new com.cleanmaster.boost.powerengine.process.ProcessModel();
                  if ((paramContext != null) && (localPackageInfo != null)) {
                    break label602;
                  }
                  i1 = 0;
                  if (i1 != 0) {
                    localA.f.add(paramE);
                  }
                }
              }
            }
          }
        }
      }
      catch (Exception paramE)
      {
        for (;;)
        {
          PackageInfo localPackageInfo;
          int i1;
          int i3;
          int i4;
          boolean bool2;
          paramE = null;
          continue;
          label499:
          if (1 == com.cleanmaster.utilext.c.a(localPackageInfo))
          {
            i1 = 2;
          }
          else
          {
            i1 = 3;
            continue;
            label520:
            i3 = localPackageInfo.applicationInfo.flags;
            continue;
            label533:
            i4 = 2;
            continue;
            label539:
            if (i4 == 4)
            {
              if (!paramE.b) {
                bool1 = true;
              } else {
                bool1 = a(paramE.e, i4, i3, false, bool2);
              }
            }
            else if ((!paramE.a) && (i4 == 2))
            {
              bool1 = true;
            }
            else
            {
              bool1 = false;
              continue;
              label602:
              paramE.a = localPackageInfo.packageName;
              paramE.j = i1;
              if (localPackageInfo.applicationInfo != null)
              {
                if (bool3) {
                  paramE.b = com.cleanmaster.utilext.c.a(paramContext, localPackageInfo.applicationInfo);
                }
                paramE.o = localPackageInfo.applicationInfo.uid;
                paramE.p = localPackageInfo.applicationInfo.flags;
                paramE.g = i4;
                paramE.f = bool2;
              }
              paramE.q = localPackageInfo.versionCode;
              if (Build.VERSION.SDK_INT >= 9) {
                paramE.I = localPackageInfo.lastUpdateTime;
              }
              i1 = 1;
              continue;
              label711:
              bool2 = false;
            }
          }
        }
      }
    }
  }
  
  public static com.cleanmaster.cleancloud.core.cache.i a(com.cleanmaster.cleancloud.core.cache.i paramI)
  {
    if ((paramI == null) || (TextUtils.isEmpty(paramI.d))) {
      return paramI;
    }
    String str = paramI.d;
    int i3 = str.length();
    StringBuilder localStringBuilder = new StringBuilder();
    paramI.b = new LinkedList();
    paramI.b.add(str.substring(0, 1));
    int i1 = 1;
    int i2 = 0;
    if (i1 < i3)
    {
      char c1 = str.charAt(i1);
      switch (c1)
      {
      default: 
        localStringBuilder.append(c1);
      }
      for (;;)
      {
        i1 += 1;
        break;
        if (i2 != 0) {
          paramI.c.add(localStringBuilder.toString());
        }
        for (;;)
        {
          localStringBuilder.delete(0, localStringBuilder.length());
          break;
          paramI.b.add(localStringBuilder.toString());
        }
        paramI.b.add(localStringBuilder.toString());
        localStringBuilder.delete(0, localStringBuilder.length());
        if (paramI.c == null) {
          paramI.c = new LinkedList();
        }
        paramI.c.add(",");
        i2 = 1;
      }
    }
    if (localStringBuilder.length() > 0)
    {
      if (i2 == 0) {
        break label283;
      }
      paramI.c.add(localStringBuilder.toString());
    }
    for (;;)
    {
      localStringBuilder.delete(0, localStringBuilder.length());
      paramI.d = null;
      return paramI;
      label283:
      paramI.b.add(localStringBuilder.toString());
    }
  }
  
  public static com.cleanmaster.cleancloud.core.cache.i a(String paramString, int paramInt)
  {
    if (TextUtils.isEmpty(paramString)) {
      return null;
    }
    com.cleanmaster.cleancloud.core.cache.i localI = new com.cleanmaster.cleancloud.core.cache.i();
    String[] arrayOfString = new String[2];
    localI.a = arrayOfString;
    StringBuilder localStringBuilder = new StringBuilder();
    int i5 = paramString.length();
    int i3 = 0;
    int i2 = 0;
    int i1 = 1;
    String str = null;
    if ((i3 < i5) && (i1 != 0))
    {
      char c1 = paramString.charAt(i3);
      switch (c1)
      {
      case '-': 
      case '.': 
      default: 
        localStringBuilder.append(c1);
      }
      for (;;)
      {
        i3 += 1;
        break;
        arrayOfString[i2] = localStringBuilder.toString();
        localStringBuilder.delete(0, localStringBuilder.length());
        int i4 = i2 + 1;
        i2 = i4;
        if (i4 >= 2)
        {
          str = paramString.substring(i3);
          i1 = 0;
          i2 = i4;
          continue;
          if ((paramInt != 7) && (paramInt != 8))
          {
            localStringBuilder.append(c1);
          }
          else
          {
            str = paramString.substring(i3);
            arrayOfString[i2] = localStringBuilder.toString();
            localStringBuilder.delete(0, localStringBuilder.length());
            i2 += 1;
            i1 = 0;
          }
        }
      }
    }
    if (i1 != 0)
    {
      arrayOfString[i2] = localStringBuilder.toString();
      localStringBuilder.delete(0, localStringBuilder.length());
    }
    localI.d = str;
    return localI;
  }
  
  public static com.cleanmaster.cleancloud.core.falseproc.b a(Context paramContext, com.cleanmaster.cleancloud.m paramM)
  {
    Object localObject = null;
    paramM = new CleanCloudReadOnlyHighFreqDB(paramContext, paramM, com.cleanmaster.cleancloud.core.cache.e.a(paramM));
    o.a localA = paramM.a();
    paramContext = localObject;
    if (localA != null)
    {
      paramContext = localObject;
      if (localA.a != null)
      {
        paramContext = b(localA.b);
        paramM.a(localA);
      }
    }
    paramM.g();
    return paramContext;
  }
  
  public static com.cleanmaster.cleancloud.g.a a(com.cleanmaster.junk.bean.b paramB, byte paramByte, boolean paramBoolean)
  {
    if (paramB == null) {
      return null;
    }
    com.cleanmaster.cleancloud.g.a localA = new com.cleanmaster.cleancloud.g.a();
    localA.a = paramByte;
    localA.b = paramB.j();
    localA.c = ((byte)paramB.getScanType());
    localA.d = paramBoolean;
    localA.g = paramB.f;
    localA.e = ((int)paramB.t);
    localA.f = paramB.getSize();
    localA.h = paramB.g;
    return localA;
  }
  
  public static com.cleanmaster.cleancloud.g.a a(com.cleanmaster.junk.bean.l paramL, byte paramByte, boolean paramBoolean)
  {
    if (paramL == null) {
      return null;
    }
    com.cleanmaster.cleancloud.g.a localA = new com.cleanmaster.cleancloud.g.a();
    localA.a = paramByte;
    localA.b = paramL.a();
    localA.c = ((byte)paramL.getCleanType());
    localA.g = paramL.o;
    localA.h = paramL.v;
    localA.d = paramBoolean;
    localA.f = paramL.s;
    localA.e = ((int)paramL.t);
    return localA;
  }
  
  public static j.a a(MessageDigest paramMessageDigest, String paramString1, String paramString2)
  {
    return a(paramMessageDigest, paramString1, paramString2, null);
  }
  
  public static j.a a(MessageDigest paramMessageDigest, String paramString1, String paramString2, j.i paramI)
  {
    if (paramMessageDigest == null) {
      return null;
    }
    j.a localA = new j.a();
    paramMessageDigest = b(paramMessageDigest, paramString1);
    paramMessageDigest.g = paramI;
    localA.e = new com.cleanmaster.cleancloud.j.b();
    localA.b = paramString2;
    localA.h = paramMessageDigest;
    localA.a = paramString1;
    return localA;
  }
  
  public static com.cleanmaster.common.model.APKModel a(com.cleanmaster.junk.bean.APKModel paramAPKModel)
  {
    if (paramAPKModel == null) {
      return null;
    }
    com.cleanmaster.common.model.APKModel localAPKModel = new com.cleanmaster.common.model.APKModel();
    localAPKModel.setJunkInfoBaseSdk(paramAPKModel);
    localAPKModel.setAPKModelSdk(paramAPKModel);
    return localAPKModel;
  }
  
  public static com.cleanmaster.junk.bean.APKModel a(com.cleanmaster.common.model.APKModel paramAPKModel)
  {
    Object localObject;
    if (paramAPKModel == null) {
      localObject = null;
    }
    com.cleanmaster.junk.bean.APKModel localAPKModel;
    do
    {
      return localObject;
      if (paramAPKModel.getAPKModelSdk() != null) {
        return paramAPKModel.getAPKModelSdk();
      }
      localAPKModel = new com.cleanmaster.junk.bean.APKModel();
      a(paramAPKModel, localAPKModel);
      localAPKModel.setPackageName(paramAPKModel.getPackageName());
      localAPKModel.setTitle(paramAPKModel.getTitle());
      localAPKModel.setVersion(paramAPKModel.getVersion());
      localAPKModel.setPath(paramAPKModel.getPath());
      localAPKModel.setApkFoundPriority(localAPKModel.getApkInstallStatus());
      localAPKModel.setChecked(paramAPKModel.isChecked());
      localAPKModel.setModifyTime(paramAPKModel.getModifyTime());
      localAPKModel.setInstalledByApkName(paramAPKModel.isInstalledByApkName());
      localAPKModel.setApkInstallStatus(paramAPKModel.getApkInstallStatus());
      localAPKModel.setType(paramAPKModel.getType());
      localAPKModel.setFileName(paramAPKModel.getFileName());
      localAPKModel.setBroken(paramAPKModel.isBroken());
      localAPKModel.setVersionCode(paramAPKModel.getVersionCode());
      localAPKModel.setCheckType(paramAPKModel.getCheckType());
      localAPKModel.setDisplayType(paramAPKModel.getDisplayType());
      localAPKModel.setIsBackup(paramAPKModel.isBackup());
      localAPKModel.setIsDisplay(paramAPKModel.isDisplay());
      localAPKModel.setIsWhiteFile(paramAPKModel.getIsWhiteFile());
      localAPKModel.setIsUninstalledNewDL(paramAPKModel.isUninstalledNewDL());
      localObject = localAPKModel;
    } while (!paramAPKModel.IsInUserFilterFolder());
    localAPKModel.SetCurrentApkIsInUserFolder();
    return localAPKModel;
  }
  
  public static com.cleanmaster.junk.bean.JunkInfoBase.FileType a(com.ijinshan.cleaner.bean.JunkInfoBase.FileType paramFileType)
  {
    switch (com.cleanmaster.junk.engine.o.b[paramFileType.ordinal()])
    {
    default: 
      return com.cleanmaster.junk.bean.JunkInfoBase.FileType.Unknown;
    case 1: 
      return com.cleanmaster.junk.bean.JunkInfoBase.FileType.Dir;
    }
    return com.cleanmaster.junk.bean.JunkInfoBase.FileType.File;
  }
  
  public static com.cleanmaster.junk.bean.JunkInfoBase a(com.ijinshan.cleaner.bean.JunkInfoBase paramJunkInfoBase)
  {
    com.ijinshan.cleaner.bean.b localB = null;
    if (paramJunkInfoBase == null) {}
    label265:
    do
    {
      do
      {
        com.ijinshan.cleaner.bean.e localE;
        do
        {
          return null;
          if ((paramJunkInfoBase instanceof com.cleanmaster.photomanager.MediaFile)) {
            return a((com.cleanmaster.photomanager.MediaFile)paramJunkInfoBase);
          }
          if (!(paramJunkInfoBase instanceof com.ijinshan.cleaner.bean.e)) {
            break;
          }
          localE = (com.ijinshan.cleaner.bean.e)paramJunkInfoBase;
        } while (localE == null);
        if (localE.e != null) {
          return localE.e;
        }
        com.cleanmaster.junk.d.u.a("JunkEngineCastManager", "castRootCacheInfo getRootCacheInfoSdk() == null");
        localObject = new com.cleanmaster.junk.bean.k(localE.getJunkDataType());
        a(localE, (com.cleanmaster.junk.bean.JunkInfoBase)localObject);
        ((com.cleanmaster.junk.bean.k)localObject).a(localE.l());
        ((com.cleanmaster.junk.bean.k)localObject).setSize(localE.getSize());
        ((com.cleanmaster.junk.bean.b)localObject).s = localE.getName();
        ((com.cleanmaster.junk.bean.b)localObject).b = localE.p();
        ((com.cleanmaster.junk.bean.b)localObject).c = localE.q();
        ((com.cleanmaster.junk.bean.b)localObject).a = localE.s();
        ((com.cleanmaster.junk.bean.b)localObject).u = localE.n();
        ((com.cleanmaster.junk.bean.k)localObject).setFileType(a(localE.getFileType()));
        ((com.cleanmaster.junk.bean.k)localObject).J = localE.C();
        if (localE.e != null)
        {
          paramJunkInfoBase = localE.e.K;
          ((com.cleanmaster.junk.bean.k)localObject).K = paramJunkInfoBase;
          ((com.cleanmaster.junk.bean.k)localObject).setCleanType(localE.getCleanType());
          if (localE.e == null) {
            break label265;
          }
        }
        for (int i1 = localE.e.L;; i1 = 0)
        {
          ((com.cleanmaster.junk.bean.k)localObject).L = i1;
          ((com.cleanmaster.junk.bean.b)localObject).k = 0;
          ((com.cleanmaster.junk.bean.k)localObject).M = localE.x();
          paramJunkInfoBase = localB;
          if (localE.e != null) {
            paramJunkInfoBase = localE.e.N;
          }
          ((com.cleanmaster.junk.bean.k)localObject).N = paramJunkInfoBase;
          return localObject;
          paramJunkInfoBase = null;
          break;
        }
        if ((paramJunkInfoBase instanceof com.ijinshan.cleaner.bean.a)) {
          return a((com.ijinshan.cleaner.bean.a)paramJunkInfoBase);
        }
        if ((paramJunkInfoBase instanceof com.ijinshan.cleaner.bean.f)) {
          return a((com.ijinshan.cleaner.bean.f)paramJunkInfoBase);
        }
        if ((paramJunkInfoBase instanceof com.cleanmaster.common.model.APKModel)) {
          return a((com.cleanmaster.common.model.APKModel)paramJunkInfoBase);
        }
      } while (!(paramJunkInfoBase instanceof com.ijinshan.cleaner.bean.b));
      localB = (com.ijinshan.cleaner.bean.b)paramJunkInfoBase;
    } while (localB == null);
    if (localB.b != null) {
      return localB.b;
    }
    Object localObject = new com.cleanmaster.junk.bean.d(localB.getJunkDataType());
    a(localB, (com.cleanmaster.junk.bean.JunkInfoBase)localObject);
    ((com.cleanmaster.junk.bean.d)localObject).a = localB.a();
    ((com.cleanmaster.junk.bean.d)localObject).b = localB.c();
    if (localB.b != null)
    {
      paramJunkInfoBase = localB.b;
      if (paramJunkInfoBase.c == null) {
        paramJunkInfoBase.c = new ArrayList();
      }
    }
    for (paramJunkInfoBase = paramJunkInfoBase.c;; paramJunkInfoBase = localB.a)
    {
      if (paramJunkInfoBase != null)
      {
        if (((com.cleanmaster.junk.bean.d)localObject).c == null) {
          ((com.cleanmaster.junk.bean.d)localObject).c = new ArrayList(paramJunkInfoBase.size());
        }
        ((com.cleanmaster.junk.bean.d)localObject).c.addAll(paramJunkInfoBase);
      }
      ((com.cleanmaster.junk.bean.d)localObject).d = localB.b();
      return localObject;
      if (localB.a == null) {
        localB.a = new ArrayList();
      }
    }
  }
  
  public static com.cleanmaster.junk.bean.MediaFile a(com.cleanmaster.photomanager.MediaFile paramMediaFile)
  {
    if (paramMediaFile == null) {
      return null;
    }
    com.cleanmaster.junk.bean.MediaFile localMediaFile = new com.cleanmaster.junk.bean.MediaFile(paramMediaFile.getJunkDataType());
    a(paramMediaFile, localMediaFile);
    localMediaFile.f = paramMediaFile.h;
    localMediaFile.e = paramMediaFile.g;
    localMediaFile.q = paramMediaFile.t;
    localMediaFile.r = paramMediaFile.u;
    localMediaFile.k = paramMediaFile.n;
    localMediaFile.d = paramMediaFile.f;
    localMediaFile.v = paramMediaFile.y;
    localMediaFile.u = paramMediaFile.x;
    localMediaFile.l = paramMediaFile.o;
    if (paramMediaFile.k != null)
    {
      ArrayList localArrayList = paramMediaFile.k;
      String[] arrayOfString = new String[localArrayList.size()];
      localArrayList.toArray(arrayOfString);
      localMediaFile.a(arrayOfString);
    }
    localMediaFile.g = paramMediaFile.j;
    localMediaFile.a = paramMediaFile.a;
    localMediaFile.b = paramMediaFile.c;
    localMediaFile.m = paramMediaFile.p;
    localMediaFile.c = paramMediaFile.d;
    localMediaFile.t = paramMediaFile.w;
    localMediaFile.i = paramMediaFile.l;
    localMediaFile.s = paramMediaFile.v;
    localMediaFile.j = paramMediaFile.m;
    localMediaFile.o = paramMediaFile.r;
    localMediaFile.setCheck(paramMediaFile.isCheck());
    localMediaFile.setAudioNum(paramMediaFile.getAudioNum());
    localMediaFile.p = paramMediaFile.s;
    localMediaFile.setCleanType(paramMediaFile.getCleanType());
    localMediaFile.setVideoNum(paramMediaFile.getVideoNum());
    localMediaFile.setScanType(paramMediaFile.getScanType());
    localMediaFile.setImageNum(paramMediaFile.getImageNum());
    localMediaFile.setFileType(a(paramMediaFile.getFileType()));
    return localMediaFile;
  }
  
  public static com.cleanmaster.junk.bean.b a(com.ijinshan.cleaner.bean.a paramA)
  {
    if (paramA == null) {
      return null;
    }
    if (paramA.d != null) {
      return paramA.d;
    }
    com.cleanmaster.junk.d.u.a("JunkEngineCastManager", "castCacheInfo getCacheInfoSDK() == null");
    com.cleanmaster.junk.bean.b localB = new com.cleanmaster.junk.bean.b(paramA.getJunkDataType());
    a(paramA, localB);
    localB.a = paramA.s();
    localB.b = paramA.p();
    localB.c = paramA.q();
    if (paramA.d != null) {}
    for (int i1 = paramA.d.d;; i1 = 0)
    {
      localB.d = i1;
      localB.a(paramA.l());
      localB.s = paramA.getName();
      localB.u = paramA.n();
      return localB;
    }
  }
  
  public static com.cleanmaster.junk.bean.l a(com.ijinshan.cleaner.bean.f paramF)
  {
    if (paramF == null) {
      return null;
    }
    if (paramF.d != null) {
      return paramF.d;
    }
    com.cleanmaster.junk.d.u.a("JunkEngineCastManager", "castSDcardRubbishResult getSDcardRubbishResultSdk() == null");
    com.cleanmaster.junk.bean.l localL = new com.cleanmaster.junk.bean.l(paramF.getJunkDataType());
    a(paramF, localL);
    localL.a = paramF.c();
    localL.b = paramF.k();
    localL.c = paramF.j();
    Object localObject1;
    if (paramF.d() != null)
    {
      localObject1 = paramF.d().iterator();
      while (((Iterator)localObject1).hasNext()) {
        localL.a((String)((Iterator)localObject1).next());
      }
    }
    Object localObject2;
    if (paramF.d != null)
    {
      localObject2 = paramF.d.f;
      if (localObject2 == null) {
        localObject1 = null;
      }
    }
    for (;;)
    {
      localL.a(s((List)localObject1));
      localL.x = paramF.e();
      localL.C = paramF.h();
      localL.y = paramF.g();
      localL.j = paramF.m();
      return localL;
      localObject1 = new ArrayList();
      localObject2 = ((List)localObject2).iterator();
      while (((Iterator)localObject2).hasNext())
      {
        com.ijinshan.cleaner.bean.f localF = a((com.cleanmaster.junk.bean.l)((Iterator)localObject2).next());
        if (localF != null) {
          ((List)localObject1).add(localF);
        }
      }
      continue;
      localObject1 = paramF.a;
    }
  }
  
  private static com.cleanmaster.photomanager.MediaFile a(com.cleanmaster.junk.bean.MediaFile paramMediaFile)
  {
    com.cleanmaster.photomanager.MediaFile localMediaFile = new com.cleanmaster.photomanager.MediaFile(paramMediaFile.getJunkDataType());
    localMediaFile.setScanType(paramMediaFile.getScanType());
    localMediaFile.setCheck(paramMediaFile.isCheck());
    localMediaFile.setSize(paramMediaFile.getSize());
    localMediaFile.setSysCacheOnCardInfo(paramMediaFile.getSysCacheOnCardInfo());
    localMediaFile.setJunkInfoType(paramMediaFile.getJunkDataType());
    localMediaFile.setCleanType(paramMediaFile.getCleanType());
    localMediaFile.setVideoNum(paramMediaFile.getVideoNum());
    localMediaFile.setAudioNum(paramMediaFile.getAudioNum());
    localMediaFile.setImageNum(paramMediaFile.getImageNum());
    localMediaFile.addMediaList(j(paramMediaFile.getMediaList()));
    localMediaFile.setFileType(a(paramMediaFile.getFileType()));
    localMediaFile.h = paramMediaFile.f;
    localMediaFile.g = paramMediaFile.e;
    localMediaFile.t = paramMediaFile.q;
    localMediaFile.u = paramMediaFile.r;
    localMediaFile.n = paramMediaFile.k;
    localMediaFile.f = paramMediaFile.d;
    localMediaFile.y = paramMediaFile.v;
    localMediaFile.x = paramMediaFile.u;
    localMediaFile.o = paramMediaFile.l;
    if (paramMediaFile.h != null)
    {
      ArrayList localArrayList = paramMediaFile.h;
      String[] arrayOfString = new String[localArrayList.size()];
      localArrayList.toArray(arrayOfString);
      localMediaFile.a(arrayOfString);
    }
    localMediaFile.j = paramMediaFile.g;
    localMediaFile.a = paramMediaFile.a;
    localMediaFile.c = paramMediaFile.b;
    localMediaFile.p = paramMediaFile.m;
    localMediaFile.d = paramMediaFile.c;
    localMediaFile.w = paramMediaFile.t;
    localMediaFile.l = paramMediaFile.i;
    localMediaFile.v = paramMediaFile.s;
    localMediaFile.m = paramMediaFile.j;
    localMediaFile.r = paramMediaFile.o;
    localMediaFile.setCheck(paramMediaFile.isCheck());
    localMediaFile.setAudioNum(paramMediaFile.getAudioNum());
    localMediaFile.s = paramMediaFile.p;
    localMediaFile.setCleanType(paramMediaFile.getCleanType());
    localMediaFile.setVideoNum(paramMediaFile.getVideoNum());
    localMediaFile.setScanType(paramMediaFile.getScanType());
    localMediaFile.setImageNum(paramMediaFile.getImageNum());
    localMediaFile.setFileType(a(paramMediaFile.getFileType()));
    return localMediaFile;
  }
  
  public static com.cleanmaster.security.scan.c.e a(com.cleanmaster.cleancloud.k.a paramA)
  {
    int i3 = 1;
    com.cleanmaster.security.scan.c.e localE;
    if ((paramA != null) && (paramA.c != null) && (paramA.c.g != null) && (!paramA.c.g.d))
    {
      localE = new com.cleanmaster.security.scan.c.e();
      String str1 = paramA.c.g.a;
      String str2 = paramA.c.g.b;
      new StringBuilder("mType: ").append(str1).append(" tType: ").append(str2);
      StringBuilder localStringBuilder = new StringBuilder();
      if (!TextUtils.isEmpty(str1))
      {
        if (!TextUtils.isEmpty(str2)) {
          localStringBuilder.append('[');
        }
        localStringBuilder.append(str1);
        if (!TextUtils.isEmpty(str2)) {
          localStringBuilder.append(']');
        }
      }
      if (!TextUtils.isEmpty(str2)) {
        localStringBuilder.append(str2);
      }
      localE.a = localStringBuilder.toString();
      localE.b = paramA.c.g.c;
      int i2;
      if (!TextUtils.isEmpty(localE.a))
      {
        i1 = 1;
        if (TextUtils.isEmpty(localE.b)) {
          break label241;
        }
        i2 = 1;
        label220:
        if ((i1 == 0) || (i2 == 0)) {
          break label246;
        }
      }
      label241:
      label246:
      for (int i1 = i3;; i1 = 0)
      {
        if (i1 != 0) {
          break label251;
        }
        return null;
        i1 = 0;
        break;
        i2 = 0;
        break label220;
      }
    }
    label251:
    for (paramA = localE;; paramA = null) {
      return paramA;
    }
  }
  
  public static com.cleanmaster.security.timewall.core.d a(int paramInt, com.cleanmaster.security.timewall.core.d paramD)
  {
    if (!a(paramInt, paramD, false)) {}
    label278:
    do
    {
      do
      {
        do
        {
          do
          {
            do
            {
              return null;
              switch (paramInt)
              {
              default: 
                return null;
              case 1: 
              case 2: 
              case 3: 
              case 8: 
              case 14: 
                return paramD;
              case 5: 
                return new com.cleanmaster.security.timewall.a.e();
              case 6: 
              case 7: 
                if (paramD == null) {
                  break label278;
                }
                if ((paramD instanceof com.cleanmaster.security.timewall.a.c)) {
                  return paramD;
                }
                break;
              }
            } while (!(paramD instanceof com.cleanmaster.security.timewall.a.a));
            paramD = ((com.cleanmaster.security.timewall.a.a)paramD).e;
          } while (paramD == null);
          String str = ak(paramD.b);
          return new com.cleanmaster.security.timewall.a.c(paramInt, paramD.b, paramD.a, str);
          if (7 == paramInt) {}
          for (paramD = "com.cleanmaster.security";; paramD = com.cleanmaster.base.util.system.m.h(com.keniu.security.d.a().getApplicationContext()))
          {
            str = ak(paramD);
            return new com.cleanmaster.security.timewall.a.c(paramInt, paramD, com.cleanmaster.func.cache.c.b().b(paramD, null), str);
          }
          return new com.cleanmaster.security.timewall.a.i(paramInt);
          return paramD;
          if ((paramD == null) || (!(paramD instanceof com.cleanmaster.security.timewall.a.a))) {
            break;
          }
          paramD = ((com.cleanmaster.security.timewall.a.a)paramD).e;
        } while ((paramD == null) || (TextUtils.isEmpty(paramD.b)) || (!"com.cleanmaster.security".equals(paramD.b)));
        return new com.cleanmaster.security.timewall.a.i(paramInt);
      } while (paramD != null);
      return new com.cleanmaster.security.timewall.a.i(paramInt);
    } while ((paramD == null) || (!(paramD instanceof com.cleanmaster.security.timewall.a.d)));
    return new com.cleanmaster.security.timewall.a.i(paramInt);
    return new com.cleanmaster.security.timewall.a.h(paramInt, paramD, 1, false);
    return new com.cleanmaster.security.timewall.a.h(paramInt, paramD, 5, true);
    return new com.cleanmaster.security.timewall.a.h(paramInt, paramD, 5, true);
    return new com.cleanmaster.security.timewall.a.h(paramInt, paramD, 5, true);
  }
  
  public static com.cleanmaster.ui.app.provider.download.b a(Context paramContext, InternalAppItem paramInternalAppItem, com.cleanmaster.recommendapps.e paramE)
  {
    Object localObject = paramInternalAppItem.getPkgName();
    String str = paramInternalAppItem.getGpUrl();
    paramInternalAppItem = new com.cleanmaster.recommendapps.d((String)localObject, paramE);
    com.cleanmaster.ui.app.provider.a.a().a(paramInternalAppItem);
    com.cleanmaster.ui.app.provider.a.a();
    paramContext = com.cleanmaster.ui.app.provider.a.a(paramContext, (String)localObject, str);
    localObject = new com.ijinshan.cleaner.bean.d();
    ((com.ijinshan.cleaner.bean.d)localObject).a(paramContext);
    paramE.a((com.ijinshan.cleaner.bean.d)localObject);
    return paramInternalAppItem;
  }
  
  public static com.cleanmaster.ui.resultpage.item.a a(Context paramContext, com.cleanmaster.ui.app.market.a paramA, CharSequence paramCharSequence, int paramInt)
  {
    if (as("R_RESULT_BUSINESS_PICKS")) {
      return new com.cleanmaster.ui.resultpage.item.a(paramContext, paramA, paramCharSequence, paramInt);
    }
    if ((paramA.p == 1016) || (paramA.p == 50000)) {
      return new com.cleanmaster.ui.resultpage.item.d(paramContext, paramA, paramCharSequence, paramInt);
    }
    return new com.cleanmaster.ui.resultpage.item.a(paramContext, paramA, paramCharSequence, paramInt);
  }
  
  private static com.cleanmaster.ui.resultpage.item.h a(com.cleanmaster.ui.resultpage.ctrl.d paramD, List<com.cleanmaster.ui.resultpage.item.h> paramList)
  {
    if ((paramD == null) || (paramList == null) || (paramList.isEmpty())) {
      return null;
    }
    paramList = paramList.iterator();
    while (paramList.hasNext())
    {
      com.cleanmaster.ui.resultpage.item.h localH = (com.cleanmaster.ui.resultpage.item.h)paramList.next();
      if ((localH.o == paramD.b) && (paramD.f > 0))
      {
        localH.D = paramD;
        return localH;
      }
    }
    return null;
  }
  
  private static com.cleanmaster.ui.resultpage.item.h a(ArrayList<com.cleanmaster.ui.resultpage.ctrl.d> paramArrayList, List<com.cleanmaster.ui.resultpage.item.h> paramList)
  {
    paramArrayList = paramArrayList.iterator();
    while (paramArrayList.hasNext())
    {
      com.cleanmaster.ui.resultpage.item.h localH = a((com.cleanmaster.ui.resultpage.ctrl.d)paramArrayList.next(), paramList);
      if (localH != null) {
        return localH;
      }
    }
    return null;
  }
  
  private static com.cleanmaster.ui.resultpage.item.h a(List<PosRule> paramList, int paramInt, String paramString, Map<String, List<com.cleanmaster.ui.resultpage.item.h>> paramMap)
  {
    int i1 = 0;
    while (i1 < paramList.size())
    {
      Object localObject = (PosRule)paramList.get(i1);
      if (((PosRule)localObject).match(paramInt))
      {
        List localList = ((PosRule)localObject).getTags();
        if ((localList == null) || (localList.isEmpty())) {
          localObject = null;
        }
        while (localObject != null)
        {
          return localObject;
          int i2 = 0;
          label72:
          if (i2 < localList.size())
          {
            localObject = (String)localList.get(i2);
            if ((!com.cleanmaster.ui.resultpage.a.a(paramString)) || (!com.cleanmaster.ui.resultpage.a.a((String)localObject)))
            {
              localObject = (List)paramMap.get((String)localList.get(i2));
              if ((localObject != null) && (!((List)localObject).isEmpty())) {
                break label172;
              }
            }
            label172:
            for (com.cleanmaster.ui.resultpage.item.h localH = null;; localH = (com.cleanmaster.ui.resultpage.item.h)((List)localObject).remove(0))
            {
              localObject = localH;
              if (localH != null) {
                break;
              }
              i2 += 1;
              break label72;
            }
          }
          localObject = null;
        }
      }
      i1 += 1;
    }
    return null;
  }
  
  public static com.cleanmaster.weather.data.b a(JSONObject paramJSONObject)
  {
    com.cleanmaster.weather.data.b localB = new com.cleanmaster.weather.data.b();
    if (!paramJSONObject.isNull("g")) {
      localB.a = paramJSONObject.getString("g");
    }
    if (!paramJSONObject.isNull("s")) {
      localB.b = paramJSONObject.getString("s");
    }
    if (!paramJSONObject.isNull("c")) {
      localB.c = paramJSONObject.getString("c");
    }
    if (!paramJSONObject.isNull("x")) {
      localB.d = paramJSONObject.getString("x");
    }
    if (!paramJSONObject.isNull("locale")) {
      localB.e = paramJSONObject.getString("locale");
    }
    if (!paramJSONObject.isNull("tz")) {
      localB.f = paramJSONObject.getString("tz");
    }
    if (!paramJSONObject.isNull("cc")) {
      localB.g = paramJSONObject.getString("cc");
    }
    paramJSONObject.optString("ip");
    localB.h = Double.valueOf(paramJSONObject.optDouble("lat"));
    localB.i = Double.valueOf(paramJSONObject.optDouble("lng"));
    return localB;
  }
  
  private static com.cmcm.mixad.e a(String paramString, com.cmcm.b.a.a paramA, Context paramContext)
  {
    Object localObject = paramA.c();
    if (!(localObject instanceof com.cleanmaster.ui.app.market.a)) {
      return null;
    }
    try
    {
      com.cleanmaster.ui.app.market.a localA = (com.cleanmaster.ui.app.market.a)localObject;
      JSONObject localJSONObject = new JSONObject(localA.R);
      localObject = new com.cmcm.mixad.e();
      ((com.cmcm.mixad.e)localObject).a = paramString;
      ((com.cmcm.mixad.e)localObject).b = paramA;
      ((com.cmcm.mixad.e)localObject).c = paramContext.getApplicationContext();
      ((com.cmcm.mixad.e)localObject).e = localJSONObject.optInt("type", 1);
      ((com.cmcm.mixad.e)localObject).h = localA.o;
      ((com.cmcm.mixad.e)localObject).p = localJSONObject.optInt("giftimes", 3);
      ((com.cmcm.mixad.e)localObject).q = localJSONObject.optInt("localtime", 1);
      ((com.cmcm.mixad.e)localObject).g = localA.c;
      ((com.cmcm.mixad.e)localObject).i = localA.e;
      ((com.cmcm.mixad.e)localObject).l = localA.a;
      ((com.cmcm.mixad.e)localObject).j = localJSONObject.optString("st");
      ((com.cmcm.mixad.e)localObject).k = localJSONObject.optString("et");
      a(localA.d, (com.cmcm.mixad.e)localObject);
      ((com.cmcm.mixad.e)localObject).d = localJSONObject.optInt("source", 2);
      ((com.cmcm.mixad.e)localObject).f = Integer.valueOf(localA.J);
      ((com.cmcm.mixad.e)localObject).r = localJSONObject.optInt("box_reddot", 0);
      ((com.cmcm.mixad.e)localObject).s = localJSONObject.optInt("shift", 0);
      ((com.cmcm.mixad.e)localObject).w = localJSONObject.optInt("frequency", 0);
      ((com.cmcm.mixad.e)localObject).v = localA.u;
      ((com.cmcm.mixad.e)localObject).u = localA.b;
      ((com.cmcm.mixad.e)localObject).t = localA.q;
      ((com.cmcm.mixad.e)localObject).o = localA.K;
      paramString = (String)localObject;
    }
    catch (Exception paramString)
    {
      for (;;)
      {
        paramString.printStackTrace();
        paramString = null;
      }
    }
    return paramString;
  }
  
  public static com.cmnow.weather.sdk.alert.c a(String paramString1, String paramString2, List paramList)
  {
    if (paramList == null) {
      return null;
    }
    paramList = paramList.iterator();
    while (paramList.hasNext())
    {
      com.cmnow.weather.sdk.alert.c localC = (com.cmnow.weather.sdk.alert.c)paramList.next();
      if ((TextUtils.equals(paramString1, localC.b)) && (TextUtils.equals(paramString2, localC.c))) {
        return localC;
      }
    }
    return null;
  }
  
  public static com.facebook.share.internal.e a(com.facebook.e<com.facebook.share.a> paramE)
  {
    return new com.facebook.share.internal.h(paramE, paramE);
  }
  
  public static com.google.ads.a a(AdSizeParcel paramAdSizeParcel)
  {
    int i1 = 0;
    com.google.ads.a[] arrayOfA = new com.google.ads.a[6];
    arrayOfA[0] = com.google.ads.a.b;
    arrayOfA[1] = com.google.ads.a.c;
    arrayOfA[2] = com.google.ads.a.d;
    arrayOfA[3] = com.google.ads.a.e;
    arrayOfA[4] = com.google.ads.a.f;
    arrayOfA[5] = com.google.ads.a.g;
    while (i1 < 6)
    {
      if ((arrayOfA[i1].a.h == paramAdSizeParcel.f) && (arrayOfA[i1].a.i == paramAdSizeParcel.c)) {
        return arrayOfA[i1];
      }
      i1 += 1;
    }
    return new com.google.ads.a(c(paramAdSizeParcel.f, paramAdSizeParcel.c, paramAdSizeParcel.b));
  }
  
  public static com.google.ads.mediation.b a(AdRequestParcel paramAdRequestParcel)
  {
    if (paramAdRequestParcel.e != null) {
      new HashSet(paramAdRequestParcel.e);
    }
    new Date(paramAdRequestParcel.b);
    AdRequest.Gender localGender;
    switch (paramAdRequestParcel.d)
    {
    default: 
      localGender = AdRequest.Gender.UNKNOWN;
    }
    for (;;)
    {
      boolean bool = paramAdRequestParcel.f;
      paramAdRequestParcel = paramAdRequestParcel.k;
      return new com.google.ads.mediation.b();
      localGender = AdRequest.Gender.FEMALE;
      continue;
      localGender = AdRequest.Gender.MALE;
    }
  }
  
  private static com.google.android.gms.internal.e a(int paramInt, JSONArray paramJSONArray, com.google.android.gms.internal.e[] paramArrayOfE, Set<Integer> paramSet)
  {
    int i2 = 0;
    int i1 = 0;
    if (paramSet.contains(Integer.valueOf(paramInt))) {
      bw("Value cycle detected. Current value reference: " + paramInt + ".  Previous value references: " + paramSet + ".");
    }
    Object localObject1 = a(paramJSONArray, paramInt, "values");
    if (paramArrayOfE[paramInt] != null) {
      return paramArrayOfE[paramInt];
    }
    paramSet.add(Integer.valueOf(paramInt));
    com.google.android.gms.internal.e localE = new com.google.android.gms.internal.e();
    if ((localObject1 instanceof JSONArray))
    {
      localObject1 = (JSONArray)localObject1;
      localE.a = 2;
      localE.l = true;
      localE.c = new com.google.android.gms.internal.e[((JSONArray)localObject1).length()];
      while (i1 < localE.c.length)
      {
        localE.c[i1] = a(((JSONArray)localObject1).getInt(i1), paramJSONArray, paramArrayOfE, paramSet);
        i1 += 1;
      }
    }
    Object localObject2;
    if ((localObject1 instanceof JSONObject))
    {
      localObject1 = (JSONObject)localObject1;
      localObject2 = ((JSONObject)localObject1).optJSONArray("escaping");
      if (localObject2 != null)
      {
        localE.k = new int[((JSONArray)localObject2).length()];
        i1 = 0;
        while (i1 < localE.k.length)
        {
          localE.k[i1] = ((JSONArray)localObject2).getInt(i1);
          i1 += 1;
        }
      }
      if (((JSONObject)localObject1).has("function_id"))
      {
        localE.a = 5;
        localE.g = ((JSONObject)localObject1).getString("function_id");
      }
    }
    for (;;)
    {
      paramArrayOfE[paramInt] = localE;
      paramSet.remove(Integer.valueOf(paramInt));
      return localE;
      if (((JSONObject)localObject1).has("macro_reference"))
      {
        localE.a = 4;
        localE.l = true;
        localE.f = bv.a(a(((JSONObject)localObject1).getInt("macro_reference"), paramJSONArray, paramArrayOfE, paramSet));
      }
      else if (((JSONObject)localObject1).has("template_token"))
      {
        localE.a = 7;
        localE.l = true;
        localObject1 = ((JSONObject)localObject1).getJSONArray("template_token");
        localE.j = new com.google.android.gms.internal.e[((JSONArray)localObject1).length()];
        i1 = i2;
        while (i1 < localE.j.length)
        {
          localE.j[i1] = a(((JSONArray)localObject1).getInt(i1), paramJSONArray, paramArrayOfE, paramSet);
          i1 += 1;
        }
      }
      else
      {
        localE.a = 3;
        localE.l = true;
        i1 = ((JSONObject)localObject1).length();
        localE.d = new com.google.android.gms.internal.e[i1];
        localE.e = new com.google.android.gms.internal.e[i1];
        localObject2 = ((JSONObject)localObject1).keys();
        i1 = 0;
        while (((Iterator)localObject2).hasNext())
        {
          String str = (String)((Iterator)localObject2).next();
          localE.d[i1] = a(new Integer(str).intValue(), paramJSONArray, paramArrayOfE, paramSet);
          localE.e[i1] = a(((JSONObject)localObject1).getInt(str), paramJSONArray, paramArrayOfE, paramSet);
          i1 += 1;
        }
        continue;
        if ((localObject1 instanceof String))
        {
          localE.b = ((String)localObject1);
          localE.a = 1;
        }
        else if ((localObject1 instanceof Boolean))
        {
          localE.i = ((Boolean)localObject1).booleanValue();
          localE.a = 8;
        }
        else if ((localObject1 instanceof Integer))
        {
          localE.h = ((Integer)localObject1).intValue();
          localE.a = 6;
        }
        else
        {
          bw("Invalid value type: " + localObject1);
        }
      }
    }
  }
  
  public static com.google.android.gms.internal.e a(com.google.android.gms.internal.e paramE)
  {
    com.google.android.gms.internal.e localE = new com.google.android.gms.internal.e();
    localE.a = paramE.a;
    localE.k = ((int[])paramE.k.clone());
    if (paramE.l) {
      localE.l = paramE.l;
    }
    return localE;
  }
  
  public static gf a(Bundle paramBundle)
  {
    gf localGf = new gf();
    ArrayList localArrayList = new ArrayList();
    Iterator localIterator = paramBundle.keySet().iterator();
    if (localIterator.hasNext())
    {
      String str = (String)localIterator.next();
      Object localObject = paramBundle.get(str);
      ge localGe = new ge();
      localGe.a = str;
      localGe.b = new gg();
      if ((localObject instanceof String)) {
        localGe.b.a = ((String)localObject);
      }
      for (;;)
      {
        localArrayList.add(localGe);
        break;
        if ((localObject instanceof Bundle)) {
          localGe.b.b = a((Bundle)localObject);
        } else {
          Log.e("SearchIndex", "Unsupported value: " + localObject);
        }
      }
    }
    if (paramBundle.containsKey("type")) {
      localGf.a = paramBundle.getString("type");
    }
    localGf.b = ((ge[])localArrayList.toArray(new ge[localArrayList.size()]));
    return localGf;
  }
  
  private static hi a(JSONObject paramJSONObject, JSONArray paramJSONArray1, JSONArray paramJSONArray2, com.google.android.gms.internal.e[] paramArrayOfE)
  {
    hj localHj = new hj((byte)0);
    paramJSONObject = paramJSONObject.getJSONArray("property");
    int i1 = 0;
    if (i1 < paramJSONObject.length())
    {
      Object localObject = (JSONObject)a(paramJSONArray1, paramJSONObject.getInt(i1), "properties");
      String str = (String)a(paramJSONArray2, ((JSONObject)localObject).getInt("key"), "key");
      int i2 = ((JSONObject)localObject).getInt("value");
      if ((i2 < 0) || (i2 >= paramArrayOfE.length)) {
        bw("Index out of bounds detected: " + i2 + " in " + "value");
      }
      localObject = (com.google.android.gms.internal.e)paramArrayOfE[i2];
      if (zzae.zzgv.toString().equals(str)) {
        localHj.b = ((com.google.android.gms.internal.e)localObject);
      }
      for (;;)
      {
        i1 += 1;
        break;
        localHj.a.put(str, localObject);
      }
    }
    return new hi(localHj.a, localHj.b, (byte)0);
  }
  
  private static hm a(JSONObject paramJSONObject, List<hi> paramList1, List<hi> paramList2, List<hi> paramList3, com.google.android.gms.internal.e[] paramArrayOfE)
  {
    hn localHn = new hn((byte)0);
    Object localObject = paramJSONObject.optJSONArray("positive_predicate");
    JSONArray localJSONArray8 = paramJSONObject.optJSONArray("negative_predicate");
    JSONArray localJSONArray7 = paramJSONObject.optJSONArray("add_tag");
    JSONArray localJSONArray6 = paramJSONObject.optJSONArray("remove_tag");
    JSONArray localJSONArray5 = paramJSONObject.optJSONArray("add_tag_rule_name");
    JSONArray localJSONArray4 = paramJSONObject.optJSONArray("remove_tag_rule_name");
    JSONArray localJSONArray3 = paramJSONObject.optJSONArray("add_macro");
    JSONArray localJSONArray2 = paramJSONObject.optJSONArray("remove_macro");
    JSONArray localJSONArray1 = paramJSONObject.optJSONArray("add_macro_rule_name");
    paramJSONObject = paramJSONObject.optJSONArray("remove_macro_rule_name");
    int i1;
    if (localObject != null)
    {
      i1 = 0;
      while (i1 < ((JSONArray)localObject).length())
      {
        hi localHi = (hi)paramList3.get(((JSONArray)localObject).getInt(i1));
        localHn.a.add(localHi);
        i1 += 1;
      }
    }
    if (localJSONArray8 != null)
    {
      i1 = 0;
      while (i1 < localJSONArray8.length())
      {
        localObject = (hi)paramList3.get(localJSONArray8.getInt(i1));
        localHn.b.add(localObject);
        i1 += 1;
      }
    }
    if (localJSONArray7 != null)
    {
      i1 = 0;
      while (i1 < localJSONArray7.length())
      {
        paramList3 = (hi)paramList1.get(localJSONArray7.getInt(i1));
        localHn.c.add(paramList3);
        i1 += 1;
      }
    }
    if (localJSONArray6 != null)
    {
      i1 = 0;
      while (i1 < localJSONArray6.length())
      {
        paramList3 = (hi)paramList1.get(localJSONArray6.getInt(i1));
        localHn.d.add(paramList3);
        i1 += 1;
      }
    }
    if (localJSONArray5 != null)
    {
      i1 = 0;
      while (i1 < localJSONArray5.length())
      {
        paramList1 = paramArrayOfE[localJSONArray5.getInt(i1)].b;
        localHn.i.add(paramList1);
        i1 += 1;
      }
    }
    if (localJSONArray4 != null)
    {
      i1 = 0;
      while (i1 < localJSONArray4.length())
      {
        paramList1 = paramArrayOfE[localJSONArray4.getInt(i1)].b;
        localHn.j.add(paramList1);
        i1 += 1;
      }
    }
    if (localJSONArray3 != null)
    {
      i1 = 0;
      while (i1 < localJSONArray3.length())
      {
        paramList1 = (hi)paramList2.get(localJSONArray3.getInt(i1));
        localHn.e.add(paramList1);
        i1 += 1;
      }
    }
    if (localJSONArray2 != null)
    {
      i1 = 0;
      while (i1 < localJSONArray2.length())
      {
        paramList1 = (hi)paramList2.get(localJSONArray2.getInt(i1));
        localHn.f.add(paramList1);
        i1 += 1;
      }
    }
    if (localJSONArray1 != null)
    {
      i1 = 0;
      while (i1 < localJSONArray1.length())
      {
        paramList1 = paramArrayOfE[localJSONArray1.getInt(i1)].b;
        localHn.g.add(paramList1);
        i1 += 1;
      }
    }
    if (paramJSONObject != null)
    {
      i1 = 0;
      while (i1 < paramJSONObject.length())
      {
        paramList1 = paramArrayOfE[paramJSONObject.getInt(i1)].b;
        localHn.h.add(paramList1);
        i1 += 1;
      }
    }
    return new hm(localHn.a, localHn.b, localHn.c, localHn.d, localHn.e, localHn.f, localHn.g, localHn.h, localHn.i, localHn.j, (byte)0);
  }
  
  public static p.a a(eh paramEh)
  {
    long l6 = System.currentTimeMillis();
    Map localMap = paramEh.b;
    long l3 = 0L;
    long l2 = 0L;
    long l1 = 0L;
    Object localObject1 = (String)localMap.get("Date");
    if (localObject1 != null) {
      l3 = bz((String)localObject1);
    }
    localObject1 = (String)localMap.get("Cache-Control");
    int i1;
    Object localObject2;
    if (localObject1 != null)
    {
      localObject1 = ((String)localObject1).split(",");
      i2 = 0;
      i1 = 0;
      l1 = 0L;
      l2 = 0L;
      if (i2 < localObject1.length)
      {
        localObject2 = localObject1[i2].trim();
        if ((((String)localObject2).equals("no-cache")) || (((String)localObject2).equals("no-store"))) {
          return null;
        }
        if (((String)localObject2).startsWith("max-age=")) {}
        for (;;)
        {
          try
          {
            l5 = Long.parseLong(((String)localObject2).substring(8));
            l4 = l1;
          }
          catch (Exception localException2)
          {
            long l4 = l1;
            long l5 = l2;
            continue;
            l1 = 0L;
            l2 = 0L;
            continue;
            l4 = 0L;
            continue;
            l5 = 0L;
            continue;
          }
          i2 += 1;
          l1 = l4;
          l2 = l5;
          break;
          if (((String)localObject2).startsWith("stale-while-revalidate=")) {}
          try
          {
            l4 = Long.parseLong(((String)localObject2).substring(23));
            l5 = l2;
          }
          catch (Exception localException1)
          {
            l4 = l1;
            l5 = l2;
          }
          if (!((String)localObject2).equals("must-revalidate"))
          {
            l4 = l1;
            l5 = l2;
            if (!((String)localObject2).equals("proxy-revalidate")) {}
          }
          else
          {
            i1 = 1;
            l4 = l1;
            l5 = l2;
          }
        }
      }
    }
    for (int i2 = 1;; i2 = 0)
    {
      localObject1 = (String)localMap.get("Expires");
      if (localObject1 != null)
      {
        l5 = bz((String)localObject1);
        localObject1 = (String)localMap.get("Last-Modified");
        if (localObject1 != null)
        {
          l4 = bz((String)localObject1);
          localObject1 = (String)localMap.get("ETag");
          if (i2 != 0)
          {
            l2 = l6 + 1000L * l2;
            if (i1 != 0) {
              l1 = l2;
            }
          }
          for (;;)
          {
            localObject2 = new p.a();
            ((p.a)localObject2).a = paramEh.a;
            ((p.a)localObject2).b = ((String)localObject1);
            ((p.a)localObject2).f = l2;
            ((p.a)localObject2).e = l1;
            ((p.a)localObject2).c = l3;
            ((p.a)localObject2).d = l4;
            ((p.a)localObject2).g = localMap;
            return localObject2;
            l1 = 1000L * l1 + l2;
            continue;
            if ((l3 <= 0L) || (l5 < l3)) {
              break;
            }
            l1 = l5 - l3 + l6;
            l2 = l1;
          }
          break;
        }
      }
      i1 = 0;
    }
  }
  
  private static ao<com.google.android.gms.internal.e> a(ao<com.google.android.gms.internal.e> paramAo)
  {
    try
    {
      ao localAo = new ao(bv.a(aV(bv.a((com.google.android.gms.internal.e)paramAo.a))), paramAo.b);
      return localAo;
    }
    catch (UnsupportedEncodingException localUnsupportedEncodingException)
    {
      com.google.android.gms.tagmanager.ah.a("Escape URI: unsupported encoding", localUnsupportedEncodingException);
    }
    return paramAo;
  }
  
  public static ao<com.google.android.gms.internal.e> a(ao<com.google.android.gms.internal.e> paramAo, int... paramVarArgs)
  {
    int i2 = paramVarArgs.length;
    int i1 = 0;
    if (i1 < i2)
    {
      int i3 = paramVarArgs[i1];
      if (!(bv.e((com.google.android.gms.internal.e)paramAo.a) instanceof String)) {
        com.google.android.gms.tagmanager.ah.a("Escaping can only be applied to strings.");
      }
      for (;;)
      {
        i1 += 1;
        break;
        switch (i3)
        {
        default: 
          com.google.android.gms.tagmanager.ah.a("Unsupported Value Escaping: " + i3);
          break;
        case 12: 
          paramAo = a(paramAo);
        }
      }
    }
    return paramAo;
  }
  
  public static com.ijinshan.cleaner.bean.JunkInfoBase.FileType a(com.cleanmaster.junk.bean.JunkInfoBase.FileType paramFileType)
  {
    switch (com.cleanmaster.junk.engine.o.a[paramFileType.ordinal()])
    {
    default: 
      return com.ijinshan.cleaner.bean.JunkInfoBase.FileType.Unknown;
    case 1: 
      return com.ijinshan.cleaner.bean.JunkInfoBase.FileType.Dir;
    }
    return com.ijinshan.cleaner.bean.JunkInfoBase.FileType.File;
  }
  
  public static com.ijinshan.cleaner.bean.JunkInfoBase a(com.cleanmaster.junk.bean.JunkInfoBase paramJunkInfoBase)
  {
    if (paramJunkInfoBase == null) {}
    do
    {
      do
      {
        do
        {
          return null;
          if ((paramJunkInfoBase instanceof com.cleanmaster.junk.bean.MediaFile)) {
            return a((com.cleanmaster.junk.bean.MediaFile)paramJunkInfoBase);
          }
          if (!(paramJunkInfoBase instanceof com.cleanmaster.junk.bean.k)) {
            break;
          }
          paramJunkInfoBase = (com.cleanmaster.junk.bean.k)paramJunkInfoBase;
        } while (paramJunkInfoBase == null);
        localObject = new com.ijinshan.cleaner.bean.e(paramJunkInfoBase.getJunkDataType());
        ((com.ijinshan.cleaner.bean.e)localObject).setJunkInfoBaseSdk(paramJunkInfoBase);
        ((com.ijinshan.cleaner.bean.a)localObject).d = paramJunkInfoBase;
        ((com.ijinshan.cleaner.bean.e)localObject).e = paramJunkInfoBase;
        return localObject;
        if ((paramJunkInfoBase instanceof com.cleanmaster.junk.bean.b))
        {
          paramJunkInfoBase = (com.cleanmaster.junk.bean.b)paramJunkInfoBase;
          localObject = new com.ijinshan.cleaner.bean.a(paramJunkInfoBase.getJunkDataType());
          ((com.ijinshan.cleaner.bean.a)localObject).setJunkInfoBaseSdk(paramJunkInfoBase);
          ((com.ijinshan.cleaner.bean.a)localObject).d = paramJunkInfoBase;
          return localObject;
        }
        if ((paramJunkInfoBase instanceof com.cleanmaster.junk.bean.l)) {
          return a((com.cleanmaster.junk.bean.l)paramJunkInfoBase);
        }
        if ((paramJunkInfoBase instanceof com.cleanmaster.junk.bean.APKModel)) {
          return a((com.cleanmaster.junk.bean.APKModel)paramJunkInfoBase);
        }
      } while (!(paramJunkInfoBase instanceof com.cleanmaster.junk.bean.d));
      paramJunkInfoBase = (com.cleanmaster.junk.bean.d)paramJunkInfoBase;
    } while (paramJunkInfoBase == null);
    Object localObject = new com.ijinshan.cleaner.bean.b(paramJunkInfoBase.getJunkDataType());
    ((com.ijinshan.cleaner.bean.b)localObject).setJunkInfoBaseSdk(paramJunkInfoBase);
    ((com.ijinshan.cleaner.bean.b)localObject).b = paramJunkInfoBase;
    return localObject;
  }
  
  private static com.ijinshan.cleaner.bean.f a(com.cleanmaster.junk.bean.l paramL)
  {
    if (paramL == null) {
      return null;
    }
    com.ijinshan.cleaner.bean.f localF = new com.ijinshan.cleaner.bean.f(paramL.getJunkDataType());
    localF.setJunkInfoBaseSdk(paramL);
    localF.d = paramL;
    return localF;
  }
  
  public static com.ijinshan.cleaner.bean.g a(Context paramContext, PackageInfo paramPackageInfo)
  {
    PackageManager localPackageManager = paramContext.getPackageManager();
    ApplicationInfo localApplicationInfo = paramPackageInfo.applicationInfo;
    com.ijinshan.cleaner.bean.g localG = new com.ijinshan.cleaner.bean.g(paramPackageInfo.packageName, localApplicationInfo);
    localG.b(com.cleanmaster.base.util.system.m.d(paramPackageInfo));
    localG.c = localApplicationInfo.loadLabel(localPackageManager).toString();
    localG.d = paramPackageInfo.versionName;
    localG.e = paramPackageInfo.versionCode;
    int i1 = localApplicationInfo.flags;
    localG.o = com.cleanmaster.base.c.a(paramContext, paramPackageInfo.applicationInfo);
    localG.q = com.cleanmaster.base.c.e(localG.b);
    return localG;
  }
  
  public static TriggerResponse a(com.in2wow.sdk.k.h paramH, boolean paramBoolean)
  {
    paramH = com.in2wow.sdk.k.h.a(paramH);
    return new CommonHandler(paramH, paramH, paramBoolean);
  }
  
  public static com.keniu.security.util.d a(Activity paramActivity, com.cleanmaster.boost.acc.utils.s paramS)
  {
    com.keniu.security.util.d.a localA = new com.keniu.security.util.d.a(paramActivity);
    View localView;
    Object localObject1;
    Object localObject3;
    TextView localTextView1;
    TextView localTextView2;
    TextView localTextView3;
    Button localButton1;
    Button localButton2;
    TextView localTextView4;
    Object localObject2;
    RelativeLayout localRelativeLayout1;
    if (paramS.k == 1)
    {
      localView = LayoutInflater.from(com.keniu.security.d.a()).inflate(2130903427, null);
      ((TextView)localView.findViewById(2131626315)).setText(paramS.a);
      localObject1 = (ImageView)localView.findViewById(2131626316);
      localObject3 = (ImageView)localView.findViewById(2131626268);
      localTextView1 = (TextView)localView.findViewById(2131626270);
      localTextView2 = (TextView)localView.findViewById(2131626271);
      localTextView3 = (TextView)localView.findViewById(2131626272);
      localButton1 = (Button)localView.findViewById(2131626278);
      localButton2 = (Button)localView.findViewById(2131626277);
      localTextView4 = (TextView)localView.findViewById(2131626273);
      localObject2 = (RelativeLayout)localView.findViewById(2131626267);
      localRelativeLayout1 = (RelativeLayout)localView.findViewById(2131626274);
      RelativeLayout localRelativeLayout2 = (RelativeLayout)localView.findViewById(2131625798);
      CheckBox localCheckBox = (CheckBox)localView.findViewById(2131624790);
      TextView localTextView5 = (TextView)localView.findViewById(2131626275);
      if (TextUtils.isEmpty(paramS.g)) {
        break label801;
      }
      localTextView4.setText(paramS.g);
      localTextView4.setVisibility(0);
      localTextView4.setOnClickListener(new com.cleanmaster.boost.acc.utils.o(paramS));
      label242:
      if (TextUtils.isEmpty(paramS.f)) {
        break label811;
      }
      localRelativeLayout1.setVisibility(0);
      localTextView5.setText(paramS.f);
      localCheckBox.setChecked(false);
      localRelativeLayout2.setOnClickListener(new com.cleanmaster.boost.acc.utils.p(localCheckBox));
      localCheckBox.setOnCheckedChangeListener(new DialogUtils.8(paramS));
      localRelativeLayout1.setOnClickListener(new com.cleanmaster.boost.acc.utils.q(localCheckBox));
    }
    for (;;)
    {
      if (-1 != paramS.j) {
        ((RelativeLayout)localObject2).setBackgroundResource(paramS.j);
      }
      if (paramS.i != null) {
        ((ImageView)localObject3).setImageDrawable(paramS.i);
      }
      if (!TextUtils.isEmpty(paramS.d))
      {
        localTextView1.setText(paramS.d);
        localTextView1.setVisibility(0);
      }
      if (!TextUtils.isEmpty(paramS.e))
      {
        localTextView2.setText(paramS.e);
        localTextView2.setVisibility(0);
      }
      if (!TextUtils.isEmpty(paramS.h))
      {
        localTextView3.setText(paramS.h);
        localTextView3.setVisibility(0);
      }
      if (paramS.k == 1)
      {
        localObject3 = (LinearLayout.LayoutParams)((RelativeLayout)localObject2).getLayoutParams();
        ((LinearLayout.LayoutParams)localObject3).width = -1;
        ((LinearLayout.LayoutParams)localObject3).topMargin = 0;
        ((RelativeLayout)localObject2).setLayoutParams((ViewGroup.LayoutParams)localObject3);
        if (-1 != paramS.l) {
          ((RelativeLayout)localObject2).setBackgroundColor(paramS.l);
        }
        localObject2 = (LinearLayout)localView.findViewById(2131626276);
        localObject3 = (LinearLayout.LayoutParams)((LinearLayout)localObject2).getLayoutParams();
        ((LinearLayout.LayoutParams)localObject3).bottomMargin = a(((LinearLayout)localObject2).getContext(), 15.0F);
        ((LinearLayout)localObject2).setLayoutParams((ViewGroup.LayoutParams)localObject3);
        localObject2 = (LinearLayout)localView.findViewById(2131626269);
        localObject3 = (LinearLayout.LayoutParams)((LinearLayout)localObject2).getLayoutParams();
        ((LinearLayout.LayoutParams)localObject3).leftMargin = a(((LinearLayout)localObject2).getContext(), 10.0F);
        ((LinearLayout.LayoutParams)localObject3).rightMargin = a(((LinearLayout)localObject2).getContext(), 10.0F);
        ((LinearLayout)localObject2).setLayoutParams((ViewGroup.LayoutParams)localObject3);
        if (!TextUtils.isEmpty(paramS.c))
        {
          localButton2.setVisibility(0);
          localButton2.setText(paramS.c);
          localButton2.setOnClickListener(new com.cleanmaster.boost.acc.utils.h(paramS));
        }
        localA.e();
      }
      localA.b(localView);
      ((ImageView)localObject1).setOnClickListener(new com.cleanmaster.boost.acc.utils.i(paramS));
      if (!TextUtils.isEmpty(paramS.b))
      {
        localButton1.setText(paramS.b);
        localButton1.setOnClickListener(new com.cleanmaster.boost.acc.utils.j(paramS));
      }
      localA.a(new com.cleanmaster.boost.acc.utils.k(paramS));
      localObject1 = localA.g();
      ((com.keniu.security.util.d)localObject1).setCanceledOnTouchOutside(false);
      if ((paramActivity != null) && (!paramActivity.isFinishing()))
      {
        ((com.keniu.security.util.d)localObject1).show();
        if (paramS.m != null) {
          paramS.m.a();
        }
      }
      return localObject1;
      localView = LayoutInflater.from(com.keniu.security.d.a()).inflate(2130903434, null);
      ((TextView)localView.findViewById(2131626315)).setText(paramS.a);
      localObject1 = (ImageView)localView.findViewById(2131626316);
      localA.a(localView);
      localView = LayoutInflater.from(com.keniu.security.d.a()).inflate(2130903428, null);
      break;
      label801:
      localTextView4.setVisibility(8);
      break label242;
      label811:
      localRelativeLayout1.setVisibility(8);
    }
  }
  
  public static com.keniu.security.util.d a(Activity paramActivity, CharSequence paramCharSequence1, CharSequence paramCharSequence2, CharSequence paramCharSequence3, CharSequence paramCharSequence4, com.cleanmaster.boost.acc.utils.r paramR, boolean paramBoolean1, boolean paramBoolean2, CharSequence paramCharSequence5)
  {
    if ((paramActivity == null) || (TextUtils.isEmpty(paramCharSequence1)) || (TextUtils.isEmpty(paramCharSequence2))) {
      return null;
    }
    LinearLayout localLinearLayout;
    if (paramBoolean1)
    {
      localLinearLayout = new LinearLayout(paramActivity);
      localLinearLayout.setOrientation(1);
      Object localObject = new ViewGroup.LayoutParams(-2, -2);
      localLinearLayout.setLayoutParams((ViewGroup.LayoutParams)localObject);
      TextView localTextView = new TextView(paramActivity);
      localTextView.setText(paramCharSequence2);
      localTextView.setTextAppearance(paramActivity, 2131427649);
      localTextView.setLayoutParams((ViewGroup.LayoutParams)localObject);
      paramCharSequence2 = new LinearLayout.LayoutParams(-2, -2);
      paramCharSequence2.topMargin = a(paramActivity, 5.0F);
      localObject = new CheckBox(paramActivity);
      ((CheckBox)localObject).setChecked(paramBoolean2);
      ((CheckBox)localObject).setLayoutParams(paramCharSequence2);
      ((CheckBox)localObject).setText(paramCharSequence5);
      ((CheckBox)localObject).setPadding(a(paramActivity, 5.0F), 0, 0, 0);
      ((CheckBox)localObject).setBackgroundResource(2131493725);
      ((CheckBox)localObject).setButtonDrawable(2130839055);
      ((CheckBox)localObject).setTextColor(localTextView.getCurrentTextColor());
      ((CheckBox)localObject).setOnCheckedChangeListener(new DialogUtils.4(paramR));
      localLinearLayout.addView(localTextView);
      localLinearLayout.addView((View)localObject);
    }
    for (paramCharSequence2 = localLinearLayout;; paramCharSequence2 = paramCharSequence5)
    {
      return a(paramActivity, paramCharSequence1, paramCharSequence2, paramCharSequence3, paramCharSequence4, paramR);
      paramCharSequence5 = new TextView(paramActivity);
      paramCharSequence5.setText(paramCharSequence2);
      paramCharSequence5.setTextAppearance(paramActivity, 2131427649);
      paramCharSequence5.setLayoutParams(new ViewGroup.LayoutParams(-2, -2));
    }
  }
  
  public static com.keniu.security.util.d a(Activity paramActivity, CharSequence paramCharSequence1, CharSequence paramCharSequence2, CharSequence paramCharSequence3, CharSequence paramCharSequence4, CharSequence paramCharSequence5, com.cleanmaster.boost.acc.utils.r paramR)
  {
    return a(paramActivity, paramCharSequence1, a(paramActivity, paramCharSequence2.toString(), "<u>" + paramCharSequence3.toString() + "</u>", paramR), paramCharSequence4, paramCharSequence5, paramR);
  }
  
  public static com.keniu.security.util.d a(Context paramContext, CharSequence paramCharSequence1, View paramView, CharSequence paramCharSequence2, CharSequence paramCharSequence3, com.cleanmaster.boost.acc.utils.r paramR)
  {
    if ((paramContext == null) || (paramView == null)) {
      paramCharSequence1 = null;
    }
    do
    {
      do
      {
        do
        {
          return paramCharSequence1;
          com.keniu.security.util.d.a localA = new com.keniu.security.util.d.a(paramContext);
          localA.a(paramCharSequence1);
          localA.b(paramView);
          if (!TextUtils.isEmpty(paramCharSequence2)) {
            localA.b(paramCharSequence2, new com.cleanmaster.boost.acc.utils.g(paramR));
          }
          if (!TextUtils.isEmpty(paramCharSequence3)) {
            localA.a(paramCharSequence3, new com.cleanmaster.boost.acc.utils.l(paramR));
          }
          localA.d(true);
          localA.a(new com.cleanmaster.boost.acc.utils.m(paramR));
          paramView = localA.g();
          paramView.setCanceledOnTouchOutside(true);
          if (!(paramContext instanceof Activity)) {
            break;
          }
          paramCharSequence1 = paramView;
        } while (((Activity)paramContext).isFinishing());
        paramView.show();
        paramCharSequence1 = paramView;
      } while (paramR == null);
      paramR.a();
      return paramView;
      paramView.show();
      paramCharSequence1 = paramView;
    } while (paramR == null);
    paramR.a();
    return paramView;
  }
  
  public static com.larvalabs.svgandroid.b a(InputStream paramInputStream, Integer paramInteger1, Integer paramInteger2)
  {
    try
    {
      System.currentTimeMillis();
      XMLReader localXMLReader = SAXParserFactory.newInstance().newSAXParser().getXMLReader();
      Picture localPicture = new Picture();
      com.larvalabs.svgandroid.f localF = new com.larvalabs.svgandroid.f(localPicture, (byte)0);
      localF.b = paramInteger1;
      localF.c = paramInteger2;
      localXMLReader.setContentHandler(localF);
      localXMLReader.parse(new InputSource(paramInputStream));
      paramInputStream = new com.larvalabs.svgandroid.b(localPicture);
      Float.isInfinite(localF.a.top);
      return paramInputStream;
    }
    catch (Exception paramInputStream)
    {
      throw new SVGParseException(paramInputStream);
    }
  }
  
  public static com.my.target.core.a.a.b<Boolean> a(long paramLong, int paramInt, String paramString, Context paramContext)
  {
    return new com.my.target.core.a.a.i(paramLong, paramInt, paramString, paramContext);
  }
  
  public static com.my.target.core.a.a.b<Void> a(String paramString1, String paramString2, int paramInt, String paramString3, Throwable paramThrowable, String paramString4, Context paramContext)
  {
    return a(paramString1, paramString2, paramInt, paramString3, paramThrowable, null, paramString4, paramContext);
  }
  
  private static com.my.target.core.a.a.b<Void> a(String paramString1, String paramString2, int paramInt, String paramString3, Throwable paramThrowable, String paramString4, String paramString5, Context paramContext)
  {
    long l1 = System.currentTimeMillis();
    if (paramString1 == null) {
      if (paramThrowable != null) {
        paramString1 = paramThrowable.getClass().getName();
      }
    }
    for (;;)
    {
      paramString2 = com.my.target.core.h.e.a(paramString1, com.my.target.core.h.e.a(l1), paramString2, paramInt, paramString3, paramThrowable, paramString4, paramString5, com.my.target.core.net.a.a());
      paramString3 = com.my.target.core.h.e.a(com.my.target.core.h.e.b(paramString2, l1, com.my.target.core.net.a.a().d), l1, com.my.target.core.net.a.a().c);
      paramString1 = com.my.target.core.net.a.a();
      paramThrowable = new StringBuilder();
      paramThrowable.append(paramString1.b);
      paramThrowable.append("://");
      paramThrowable.append(paramString1.a);
      if ((paramString1.g != 0) && (paramString1.g != 80) && (paramString1.g != -1)) {
        paramThrowable.append(":").append(paramString1.g);
      }
      paramThrowable.append(paramString1.e);
      paramThrowable.append("/admanmobile/");
      paramString1 = paramThrowable.toString();
      if (!TextUtils.isEmpty(com.my.target.core.net.a.b)) {
        paramString1 = com.my.target.core.net.a.b;
      }
      return new com.my.target.core.a.a.g(paramString1, paramString3, paramString2, paramContext);
      paramString1 = "";
    }
  }
  
  public static com.my.target.core.b.a.b.e a(ConsoleMessage paramConsoleMessage)
  {
    paramConsoleMessage = paramConsoleMessage.message();
    if ((paramConsoleMessage != null) && (!paramConsoleMessage.equals("")) && (paramConsoleMessage.startsWith("adman://onEvent,")))
    {
      paramConsoleMessage = paramConsoleMessage.substring(16);
      try
      {
        paramConsoleMessage = g(new JSONObject(paramConsoleMessage));
        return paramConsoleMessage;
      }
      catch (JSONException paramConsoleMessage) {}
    }
    return null;
  }
  
  public static com.my.target.core.d.b a(com.my.target.core.e.g paramG, ViewGroup paramViewGroup, Context paramContext)
  {
    if ((paramG instanceof com.my.target.nativeads.a)) {
      return new com.my.target.core.d.c((com.my.target.nativeads.a)paramG, paramViewGroup, paramContext);
    }
    if (((paramG instanceof com.my.target.core.e.h)) && ((paramViewGroup instanceof MyTargetView)))
    {
      if ("native".equals(((com.my.target.core.e.h)paramG).f().a)) {
        return new com.my.target.core.d.h((MyTargetView)paramViewGroup, paramContext);
      }
      return new com.my.target.core.d.g((MyTargetView)paramViewGroup, paramContext);
    }
    if ((paramG instanceof com.my.target.core.e.e)) {
      return new com.my.target.core.d.d((com.my.target.core.e.e)paramG, paramViewGroup, paramContext);
    }
    if ((paramG instanceof com.my.target.core.e.f)) {
      return new com.my.target.core.d.e((com.my.target.core.e.f)paramG, paramViewGroup, paramContext);
    }
    if ((paramG instanceof com.my.target.core.e.d)) {
      return new com.my.target.core.d.f((com.my.target.core.e.d)paramG, (MyTargetVideoView)paramViewGroup, paramContext);
    }
    return null;
  }
  
  public static com.my.target.core.f.b.e a(com.my.target.core.f.b.f paramF, String paramString, com.my.target.core.parsers.a paramA)
  {
    try
    {
      paramF = (com.my.target.core.f.b.e)paramF;
      return paramF;
    }
    catch (Exception paramF)
    {
      a("Unable to cast to native section field '" + paramString + "', Operation: " + paramA.d + ", Unit: " + paramA.e, paramA, paramF, "Class cast exception");
    }
    return null;
  }
  
  public static com.my.target.nativeads.b.a a(JSONObject paramJSONObject, String paramString1, String paramString2, String paramString3, com.my.target.core.parsers.a paramA)
  {
    Object localObject = null;
    paramString1 = a(paramJSONObject, paramString1, paramA, "", false);
    int i1 = a(paramJSONObject, paramString2, paramA, 0);
    int i2 = a(paramJSONObject, paramString3, paramA, 0);
    paramJSONObject = localObject;
    if (paramString1 != null) {
      paramJSONObject = new com.my.target.nativeads.b.a(paramString1, i2, i1);
    }
    return paramJSONObject;
  }
  
  /* Error */
  public static File a(Context paramContext, File paramFile, String paramString1, String paramString2)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 9
    //   3: new 464	java/io/File
    //   6: dup
    //   7: aload_1
    //   8: aload_2
    //   9: invokespecial 1668	java/io/File:<init>	(Ljava/io/File;Ljava/lang/String;)V
    //   12: astore_1
    //   13: aload_1
    //   14: invokevirtual 471	java/io/File:isFile	()Z
    //   17: ifeq +263 -> 280
    //   20: aload_1
    //   21: invokevirtual 1165	java/io/File:length	()J
    //   24: lstore 5
    //   26: aload_0
    //   27: invokevirtual 5370	android/content/Context:getAssets	()Landroid/content/res/AssetManager;
    //   30: astore_0
    //   31: aload_0
    //   32: aload_3
    //   33: invokevirtual 5376	android/content/res/AssetManager:open	(Ljava/lang/String;)Ljava/io/InputStream;
    //   36: astore_0
    //   37: aload_0
    //   38: invokevirtual 5379	java/io/InputStream:available	()I
    //   41: istore 4
    //   43: iload 4
    //   45: i2l
    //   46: lstore 7
    //   48: lload 5
    //   50: lconst_0
    //   51: lcmp
    //   52: ifle +23 -> 75
    //   55: lload 5
    //   57: lload 7
    //   59: lcmp
    //   60: ifne +15 -> 75
    //   63: aload_0
    //   64: ifnull +7 -> 71
    //   67: aload_0
    //   68: invokevirtual 5380	java/io/InputStream:close	()V
    //   71: aload_1
    //   72: astore_0
    //   73: aload_0
    //   74: areturn
    //   75: sipush 4096
    //   78: newarray byte
    //   80: astore_3
    //   81: new 5382	java/io/FileOutputStream
    //   84: dup
    //   85: aload_1
    //   86: invokespecial 5383	java/io/FileOutputStream:<init>	(Ljava/io/File;)V
    //   89: astore_2
    //   90: aload_0
    //   91: aload_3
    //   92: invokevirtual 5384	java/io/InputStream:read	([B)I
    //   95: istore 4
    //   97: iload 4
    //   99: ifle +43 -> 142
    //   102: aload_2
    //   103: aload_3
    //   104: iconst_0
    //   105: iload 4
    //   107: invokevirtual 2431	java/io/OutputStream:write	([BII)V
    //   110: goto -20 -> 90
    //   113: astore_1
    //   114: aload_0
    //   115: astore_1
    //   116: aload_2
    //   117: astore_0
    //   118: aload_0
    //   119: ifnull +7 -> 126
    //   122: aload_0
    //   123: invokevirtual 5385	java/io/OutputStream:close	()V
    //   126: aload_1
    //   127: ifnull +143 -> 270
    //   130: aload_1
    //   131: invokevirtual 5380	java/io/InputStream:close	()V
    //   134: aconst_null
    //   135: astore_0
    //   136: aload_0
    //   137: ifnonnull +58 -> 195
    //   140: aconst_null
    //   141: areturn
    //   142: aload_2
    //   143: invokevirtual 5385	java/io/OutputStream:close	()V
    //   146: aload_0
    //   147: ifnull +128 -> 275
    //   150: aload_0
    //   151: invokevirtual 5380	java/io/InputStream:close	()V
    //   154: aload_1
    //   155: astore_0
    //   156: goto -20 -> 136
    //   159: astore_0
    //   160: aload_1
    //   161: astore_0
    //   162: goto -26 -> 136
    //   165: astore_0
    //   166: aconst_null
    //   167: astore_0
    //   168: goto -32 -> 136
    //   171: astore_1
    //   172: aconst_null
    //   173: astore_0
    //   174: aload 9
    //   176: astore_2
    //   177: aload_2
    //   178: ifnull +7 -> 185
    //   181: aload_2
    //   182: invokevirtual 5385	java/io/OutputStream:close	()V
    //   185: aload_0
    //   186: ifnull +7 -> 193
    //   189: aload_0
    //   190: invokevirtual 5380	java/io/InputStream:close	()V
    //   193: aload_1
    //   194: athrow
    //   195: aload_0
    //   196: invokevirtual 1165	java/io/File:length	()J
    //   199: lstore 5
    //   201: lload 5
    //   203: lconst_0
    //   204: lcmp
    //   205: ifle +14 -> 219
    //   208: lload 5
    //   210: ldc2_w 5386
    //   213: lrem
    //   214: lconst_0
    //   215: lcmp
    //   216: ifeq -143 -> 73
    //   219: aconst_null
    //   220: areturn
    //   221: astore_0
    //   222: goto -151 -> 71
    //   225: astore_2
    //   226: goto -80 -> 146
    //   229: astore_0
    //   230: goto -104 -> 126
    //   233: astore_2
    //   234: goto -49 -> 185
    //   237: astore_0
    //   238: goto -45 -> 193
    //   241: astore_1
    //   242: aload 9
    //   244: astore_2
    //   245: goto -68 -> 177
    //   248: astore_1
    //   249: goto -72 -> 177
    //   252: astore_0
    //   253: aconst_null
    //   254: astore_0
    //   255: aconst_null
    //   256: astore_1
    //   257: goto -139 -> 118
    //   260: astore_1
    //   261: aconst_null
    //   262: astore_2
    //   263: aload_0
    //   264: astore_1
    //   265: aload_2
    //   266: astore_0
    //   267: goto -149 -> 118
    //   270: aconst_null
    //   271: astore_0
    //   272: goto -136 -> 136
    //   275: aload_1
    //   276: astore_0
    //   277: goto -141 -> 136
    //   280: lconst_0
    //   281: lstore 5
    //   283: goto -257 -> 26
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	286	0	paramContext	Context
    //   0	286	1	paramFile	File
    //   0	286	2	paramString1	String
    //   0	286	3	paramString2	String
    //   41	65	4	i1	int
    //   24	258	5	l1	long
    //   46	12	7	l2	long
    //   1	242	9	localObject	Object
    // Exception table:
    //   from	to	target	type
    //   90	97	113	java/io/IOException
    //   102	110	113	java/io/IOException
    //   150	154	159	java/io/IOException
    //   130	134	165	java/io/IOException
    //   31	37	171	finally
    //   67	71	221	java/io/IOException
    //   142	146	225	java/io/IOException
    //   122	126	229	java/io/IOException
    //   181	185	233	java/io/IOException
    //   189	193	237	java/io/IOException
    //   37	43	241	finally
    //   75	90	241	finally
    //   90	97	248	finally
    //   102	110	248	finally
    //   31	37	252	java/io/IOException
    //   37	43	260	java/io/IOException
    //   75	90	260	java/io/IOException
  }
  
  private static CharSequence a(Context paramContext, int paramInt, String paramString)
  {
    if (paramContext == null) {
      return null;
    }
    int i1 = cR();
    Object localObject1 = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).b(com.keniu.security.d.a()).a();
    Object localObject2;
    if (i1 > 11) {
      localObject2 = d("process_settings", com.cleanmaster.cloudconfig.f.a("abnormal_notify_normal_cpu_title_new_23", (String)localObject1), null);
    }
    for (;;)
    {
      localObject1 = localObject2;
      if (TextUtils.isEmpty((CharSequence)localObject2))
      {
        localObject1 = localObject2;
        if (paramInt >= 0)
        {
          localObject1 = d("process_settings", com.cleanmaster.cloudconfig.f.a("abnormal_notify_normal_cpu_title_" + (paramInt + 1), com.cleanmaster.configmanager.d.a(paramContext).b(paramContext).a()), null);
          localObject2 = localObject1;
          if (TextUtils.isEmpty((CharSequence)localObject1))
          {
            localObject2 = localObject1;
            if (paramInt < 3) {
              localObject2 = paramContext.getString(new int[] { 2131296761, 2131296762, 2131296763 }[paramInt]);
            }
          }
          localObject1 = localObject2;
          if (!TextUtils.isEmpty((CharSequence)localObject2))
          {
            localObject1 = localObject2;
            if (paramInt == 0)
            {
              if (!TextUtils.isEmpty(paramString)) {
                break label257;
              }
              localObject1 = null;
            }
          }
        }
      }
      for (;;)
      {
        if (TextUtils.isEmpty((CharSequence)localObject1)) {
          break label284;
        }
        return Html.fromHtml((String)localObject1);
        if (i1 > 7)
        {
          localObject2 = d("process_settings", com.cleanmaster.cloudconfig.f.a("abnormal_notify_normal_cpu_title_new_22", (String)localObject1), null);
          break;
        }
        if (i1 <= 3) {
          break label286;
        }
        localObject2 = d("process_settings", com.cleanmaster.cloudconfig.f.a("abnormal_notify_normal_cpu_title_new_21", (String)localObject1), null);
        break;
        try
        {
          label257:
          localObject1 = String.format((String)localObject2, new Object[] { paramString });
        }
        catch (Exception paramContext)
        {
          paramContext.printStackTrace();
          localObject1 = null;
        }
      }
      label284:
      break;
      label286:
      localObject2 = null;
    }
  }
  
  public static Object a(Object paramObject)
  {
    Object localObject = paramObject;
    if (paramObject != null) {
      localObject = ((Transition)paramObject).clone();
    }
    return localObject;
  }
  
  private static Object a(Object paramObject, com.facebook.share.internal.d paramD)
  {
    Object localObject;
    if (paramObject == null) {
      localObject = JSONObject.NULL;
    }
    do
    {
      do
      {
        do
        {
          do
          {
            do
            {
              do
              {
                return localObject;
                localObject = paramObject;
              } while ((paramObject instanceof String));
              localObject = paramObject;
            } while ((paramObject instanceof Boolean));
            localObject = paramObject;
          } while ((paramObject instanceof Double));
          localObject = paramObject;
        } while ((paramObject instanceof Float));
        localObject = paramObject;
      } while ((paramObject instanceof Integer));
      localObject = paramObject;
    } while ((paramObject instanceof Long));
    if ((paramObject instanceof SharePhoto))
    {
      if (paramD != null) {
        return paramD.a((SharePhoto)paramObject);
      }
      return null;
    }
    if ((paramObject instanceof ShareOpenGraphObject))
    {
      paramObject = (ShareOpenGraphObject)paramObject;
      localObject = new JSONObject();
      Iterator localIterator = paramObject.a.keySet().iterator();
      while (localIterator.hasNext())
      {
        String str = (String)localIterator.next();
        ((JSONObject)localObject).put(str, a(paramObject.a(str), paramD));
      }
      return localObject;
    }
    if ((paramObject instanceof List)) {
      return a((List)paramObject, paramD);
    }
    throw new IllegalArgumentException("Invalid object found for JSON serialization: " + paramObject.toString());
  }
  
  public static Object a(Object paramObject, String paramString)
  {
    Class localClass = paramObject.getClass();
    while (localClass != Object.class) {
      try
      {
        Object localObject = localClass.getDeclaredField(paramString);
        ((Field)localObject).setAccessible(true);
        localObject = ((Field)localObject).get(paramObject);
        return localObject;
      }
      catch (Exception localException)
      {
        localClass = localClass.getSuperclass();
      }
    }
    return null;
  }
  
  public static <T> T a(String paramString, Object paramObject, Class[] paramArrayOfClass, Object[] paramArrayOfObject)
  {
    int i1 = 1;
    if (paramString.length() == 0) {}
    while ((i1 != 0) || (paramObject == null))
    {
      throw new NullPointerException("reflect method or receiver is null");
      i1 = 0;
    }
    if ((paramArrayOfClass == null) && (paramArrayOfObject != null)) {
      throw new IllegalArgumentException("illegal agument");
    }
    if ((paramArrayOfClass != null) && (paramArrayOfObject != null) && (paramArrayOfObject.length != paramArrayOfClass.length)) {
      throw new IllegalArgumentException("illegal aguments count");
    }
    try
    {
      paramString = paramObject.getClass().getDeclaredMethod(paramString, paramArrayOfClass);
      paramString.setAccessible(true);
      paramString = paramString.invoke(paramObject, paramArrayOfObject);
      return paramString;
    }
    catch (IllegalAccessException paramString)
    {
      paramString.printStackTrace();
      return null;
    }
    catch (IllegalArgumentException paramString)
    {
      for (;;)
      {
        paramString.printStackTrace();
      }
    }
    catch (InvocationTargetException paramString)
    {
      for (;;)
      {
        paramString.printStackTrace();
      }
    }
    catch (NoSuchMethodException paramString)
    {
      for (;;)
      {
        paramString.printStackTrace();
      }
    }
  }
  
  public static Object a(String paramString1, String paramString2, Object paramObject)
  {
    try
    {
      paramString1 = Class.forName(paramString1).getDeclaredField(paramString2);
      paramString1.setAccessible(true);
      paramString1 = paramString1.get(paramObject);
      return paramString1;
    }
    catch (Exception paramString1)
    {
      paramString1.printStackTrace();
    }
    return null;
  }
  
  public static Object a(String paramString1, String paramString2, Object paramObject, Class<?>[] paramArrayOfClass, Object[] paramArrayOfObject)
  {
    try
    {
      paramString1 = Class.forName(paramString1).getMethod(paramString2, paramArrayOfClass);
      paramString1.setAccessible(true);
      paramString1 = paramString1.invoke(paramObject, paramArrayOfObject);
      return paramString1;
    }
    catch (Exception paramString1)
    {
      paramString1.printStackTrace();
    }
    return null;
  }
  
  public static Object a(String paramString1, String paramString2, Class<?>[] paramArrayOfClass, Object[] paramArrayOfObject)
  {
    try
    {
      paramString1 = Class.forName(paramString1);
      paramString2 = paramString1.getMethod(paramString2, paramArrayOfClass);
      paramString2.setAccessible(true);
      paramString1 = paramString2.invoke(paramString1, paramArrayOfObject);
      return paramString1;
    }
    catch (Exception paramString1)
    {
      paramString1.printStackTrace();
    }
    return null;
  }
  
  private static <T> T a(JSONArray paramJSONArray, int paramInt, String paramString)
  {
    if ((paramInt >= 0) && (paramInt < paramJSONArray.length())) {
      try
      {
        paramJSONArray = paramJSONArray.get(paramInt);
        return paramJSONArray;
      }
      catch (JSONException paramJSONArray) {}
    }
    bw("Index out of bounds detected: " + paramInt + " in " + paramString);
    return null;
  }
  
  public static String a(int paramInt, String paramString)
  {
    ICloudConfigGetter localICloudConfigGetter = (ICloudConfigGetter)com.cleanmaster.base.ipc.c.a().a(com.cleanmaster.base.ipc.b.e);
    if (localICloudConfigGetter != null) {
      try
      {
        paramString = localICloudConfigGetter.a(paramInt, paramString);
        return paramString;
      }
      catch (RemoteException paramString)
      {
        paramString.printStackTrace();
      }
    }
    return "";
  }
  
  public static String a(int paramInt, String paramString1, String paramString2, String paramString3)
  {
    ICloudConfigGetter localICloudConfigGetter = (ICloudConfigGetter)com.cleanmaster.base.ipc.c.a().a(com.cleanmaster.base.ipc.b.e);
    String str = paramString3;
    if (localICloudConfigGetter != null) {}
    try
    {
      str = localICloudConfigGetter.a(paramInt, paramString1, paramString2, paramString3);
      return str;
    }
    catch (RemoteException paramString1)
    {
      paramString1.printStackTrace();
    }
    return paramString3;
  }
  
  public static String a(int paramInt, Object... paramVarArgs)
  {
    return com.keniu.security.d.a().getString(paramInt, paramVarArgs);
  }
  
  public static String a(long paramLong, int paramInt)
  {
    if (paramLong < 0L) {
      return String.valueOf(paramLong);
    }
    long l1;
    long l2;
    if (paramLong >= 1073741824L)
    {
      l1 = paramLong % 1073741824L;
      l2 = 10L * l1 % 1073741824L;
      return String.format("%sGB", new Object[] { new BigDecimal(String.valueOf(paramLong / 1073741824L) + "." + String.valueOf(l1 * 10L / 1073741824L) + String.valueOf(l2 * 10L / 1073741824L) + String.valueOf(10L * (10L * l2 % 1073741824L) / 1073741824L)).setScale(paramInt, 4).toString() });
    }
    if (paramLong >= 1048576L)
    {
      l1 = paramLong % 1048576L;
      l2 = 10L * l1 % 1048576L;
      return String.format("%sMB", new Object[] { new BigDecimal(String.valueOf(paramLong / 1048576L) + "." + String.valueOf(l1 * 10L / 1048576L) + String.valueOf(l2 * 10L / 1048576L) + String.valueOf(10L * (10L * l2 % 1048576L) / 1048576L)).setScale(paramInt, 4).toString() });
    }
    if (paramLong >= 1024L)
    {
      l1 = paramLong % 1024L;
      l2 = 10L * l1 % 1024L;
      return String.format("%sKB", new Object[] { new BigDecimal(String.valueOf(paramLong / 1024L) + "." + String.valueOf(l1 * 10L / 1024L) + String.valueOf(l2 * 10L / 1024L) + String.valueOf(10L * (10L * l2 % 1024L) / 1024L)).setScale(paramInt, 4).toString() });
    }
    if (paramLong != 0L) {
      return "< 1 KB";
    }
    return "0 KB";
  }
  
  public static String a(long paramLong, com.cleanmaster.base.util.system.h paramH)
  {
    if (paramLong < 0L) {
      return "0";
    }
    if (com.cleanmaster.base.util.system.h.n.equals(paramH.M))
    {
      l2 = paramLong / 10000L;
      if (l2 == 0L) {
        return String.valueOf(paramLong);
      }
      if (l2 < 100L)
      {
        l1 = paramLong / 1000L % 10L;
        paramH = new StringBuilder().append(String.valueOf(l2)).append(".");
        paramLong = l1;
        if (l1 == 0L) {
          paramLong = 1L;
        }
        return String.valueOf(paramLong) + "W";
      }
      return String.valueOf(l2) + "W";
    }
    long l2 = paramLong / 1000L;
    if (l2 == 0L) {
      return String.valueOf(paramLong);
    }
    long l3 = l2 / 1000L;
    if (l3 == 0L)
    {
      if (l2 < 100L)
      {
        l1 = paramLong / 100L % 10L;
        paramH = new StringBuilder().append(String.valueOf(l2)).append(".");
        paramLong = l1;
        if (l1 == 0L) {
          paramLong = 1L;
        }
        return String.valueOf(paramLong) + "K";
      }
      return String.valueOf(l2) + "K";
    }
    long l1 = l2 / 100L % 10L;
    paramH = new StringBuilder().append(String.valueOf(l3)).append(".");
    paramLong = l1;
    if (l1 == 0L) {
      paramLong = 1L;
    }
    return String.valueOf(paramLong) + "M";
  }
  
  public static String a(long paramLong, String paramString)
  {
    String str = null;
    float f2;
    if (paramLong >= 1024L)
    {
      str = "KB";
      f2 = (float)(paramLong / 1024.0D);
      float f1 = f2;
      if (f2 >= 1024.0F)
      {
        str = "MB";
        f1 = f2 / 1024.0F;
      }
      f2 = f1;
      if (f1 >= 1024.0F)
      {
        str = "GB";
        f2 = f1 / 1024.0F;
      }
      paramString = new StringBuilder(new DecimalFormat(paramString).format(f2));
      if (str == null) {
        break label118;
      }
      paramString.append(str);
    }
    for (;;)
    {
      return paramString.toString();
      f2 = (float)paramLong;
      break;
      label118:
      paramString.append("B");
    }
  }
  
  public static String a(Context paramContext, int paramInt, Object... paramVarArgs)
  {
    if (paramContext == null) {
      return "";
    }
    return paramContext.getString(paramInt, paramVarArgs);
  }
  
  public static String a(Context paramContext, long paramLong)
  {
    if (paramLong <= 0L) {
      return "0" + paramContext.getString(2131299457);
    }
    long l1 = paramLong;
    if (paramLong < 1000L) {
      l1 = 1000L;
    }
    l1 /= 1000L;
    StringBuilder localStringBuilder = new StringBuilder();
    paramLong = l1;
    int i1;
    if (l1 > 3600L)
    {
      i1 = (int)(l1 / 3600L);
      localStringBuilder.append(i1 + paramContext.getString(2131299454));
      paramLong = l1 % 3600L;
    }
    l1 = paramLong;
    if (paramLong > 60L)
    {
      i1 = (int)(paramLong / 60L);
      localStringBuilder.append(" " + i1 + paramContext.getString(2131299456));
      l1 = paramLong % 60L;
    }
    if (l1 != 0L) {
      localStringBuilder.append(" " + l1 + paramContext.getString(2131299457));
    }
    if (localStringBuilder.length() == 0) {
      localStringBuilder.append("0" + paramContext.getString(2131299457));
    }
    return localStringBuilder.toString().trim();
  }
  
  public static String a(PowerManager.WakeLock paramWakeLock, String paramString)
  {
    StringBuilder localStringBuilder = new StringBuilder().append(String.valueOf(android.os.Process.myPid() << 32 | System.identityHashCode(paramWakeLock)));
    paramWakeLock = paramString;
    if (TextUtils.isEmpty(paramString)) {
      paramWakeLock = "";
    }
    return paramWakeLock;
  }
  
  public static String a(com.cleanmaster.boost.cpu.data.b.a paramA, String paramString)
  {
    if ((paramA == null) || (TextUtils.isEmpty(paramString))) {}
    int i1;
    do
    {
      do
      {
        return paramString;
      } while ((!paramString.contains("<cm_cpu_url>")) || (!paramString.contains("</cm_cpu_url>")));
      i1 = paramString.indexOf("<cm_cpu_url>") + 12;
      int i2 = paramString.indexOf("</cm_cpu_url>");
      if ((i1 < i2) && (i2 < paramString.length()))
      {
        String str = paramString.substring(i1, i2);
        if (!TextUtils.isEmpty(str)) {
          paramA.b = str;
        }
      }
      i1 -= 12;
    } while (i1 < 0);
    return paramString.substring(0, i1);
  }
  
  public static String a(com.cleanmaster.cleancloud.m paramM, Context paramContext, String paramString)
  {
    String str = null;
    if (paramM != null) {
      str = paramM.f();
    }
    if (TextUtils.isEmpty(str)) {
      paramContext = g(paramContext, paramString);
    }
    do
    {
      return paramContext;
      paramContext = new StringBuilder(str.length() + paramString.length() + 1);
      paramContext.append(str);
      if (str.charAt(str.length() - 1) != File.separatorChar) {
        paramContext.append(File.separator);
      }
      paramContext.append(paramString);
      paramString = paramContext.toString();
      paramContext = paramString;
    } while (new File(paramString).exists());
    paramM.g();
    return paramString;
  }
  
  public static String a(com.cleanmaster.ui.resultpage.b.a paramA)
  {
    int i1 = paramA.j;
    if ((i1 == 2) || (i1 == 4) || (i1 == 8) || (i1 == 5) || (i1 == 9)) {
      return android.support.percent.a.b(com.cleanmaster.ui.resultpage.item.wizard.b.a("url", paramA));
    }
    return android.support.percent.a.b(String.valueOf(paramA.d));
  }
  
  private static String a(com.cleanmaster.ui.resultpage.b.a paramA, String paramString)
  {
    Map localMap = paramA.k;
    paramA = null;
    if (localMap != null) {
      paramA = (String)localMap.get(paramString);
    }
    paramString = paramA;
    if (TextUtils.isEmpty(paramA)) {
      paramString = "";
    }
    return paramString;
  }
  
  public static <T extends ic> String a(T paramT)
  {
    if (paramT == null) {
      return "";
    }
    StringBuffer localStringBuffer = new StringBuffer();
    try
    {
      a(null, paramT, new StringBuffer(), localStringBuffer);
      return localStringBuffer.toString();
    }
    catch (IllegalAccessException paramT)
    {
      return "Error printing proto: " + paramT.getMessage();
    }
    catch (InvocationTargetException paramT) {}
    return "Error printing proto: " + paramT.getMessage();
  }
  
  public static String a(com.in2wow.sdk.b.k paramK, com.in2wow.sdk.h.c paramC)
  {
    Object localObject2 = null;
    Object localObject1 = localObject2;
    if (paramK != null)
    {
      localObject1 = localObject2;
      if (paramK.a != null)
      {
        if (paramC != null) {
          break label25;
        }
        localObject1 = localObject2;
      }
    }
    label25:
    do
    {
      return localObject1;
      paramC = paramC.D();
      localObject1 = localObject2;
    } while (paramC == null);
    localObject1 = ag(paramK.a);
    if (localObject1 != null) {
      paramC = String.format("%s?lat=%f&long=%f", new Object[] { paramC, Double.valueOf(localObject1[0]), Double.valueOf(localObject1[1]) });
    }
    for (;;)
    {
      localObject1 = paramC;
      if (paramK == null) {
        break;
      }
      localObject1 = paramC;
      if (paramK.i == null) {
        break;
      }
      String.format("GeoEndpoint = %s", new Object[] { paramC });
      return paramC;
    }
  }
  
  public static String a(com.keniu.security.update.e paramE, String paramString1, String paramString2)
  {
    Object localObject = paramE.a(paramString1);
    if (localObject == null) {
      return null;
    }
    localObject = ((Collection)localObject).iterator();
    while (((Iterator)localObject).hasNext())
    {
      String str = (String)((Iterator)localObject).next();
      if (android.support.v4.a.c.a(str, paramString2)) {
        return paramE.a(paramString1, str);
      }
    }
    return null;
  }
  
  public static String a(CharSequence paramCharSequence)
  {
    return String.format("<b>%s</b>", new Object[] { paramCharSequence });
  }
  
  public static String a(CharSequence paramCharSequence, HtmlUtil.Color paramColor)
  {
    return String.format("<font color=\"%s\">%s</font>", new Object[] { paramColor.color, paramCharSequence });
  }
  
  public static String a(String paramString, byte paramByte, int paramInt)
  {
    return paramString + paramByte + "|" + paramInt;
  }
  
  /* Error */
  public static String a(String paramString, int paramInt1, int paramInt2)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 7
    //   3: aconst_null
    //   4: astore 4
    //   6: aload_0
    //   7: ifnull +297 -> 304
    //   10: iload_1
    //   11: ifle +293 -> 304
    //   14: iload_2
    //   15: ifle +289 -> 304
    //   18: new 5649	java/net/URL
    //   21: dup
    //   22: aload_0
    //   23: invokespecial 5650	java/net/URL:<init>	(Ljava/lang/String;)V
    //   26: invokevirtual 5654	java/net/URL:openConnection	()Ljava/net/URLConnection;
    //   29: checkcast 5656	java/net/HttpURLConnection
    //   32: astore 5
    //   34: aload 5
    //   36: iload_1
    //   37: invokevirtual 5659	java/net/HttpURLConnection:setConnectTimeout	(I)V
    //   40: aload 5
    //   42: ldc_w 5661
    //   45: invokevirtual 5664	java/net/HttpURLConnection:setRequestMethod	(Ljava/lang/String;)V
    //   48: aload 5
    //   50: ldc_w 5666
    //   53: ldc_w 5668
    //   56: invokevirtual 5671	java/net/HttpURLConnection:setRequestProperty	(Ljava/lang/String;Ljava/lang/String;)V
    //   59: aload 5
    //   61: iconst_0
    //   62: invokevirtual 5674	java/net/HttpURLConnection:setUseCaches	(Z)V
    //   65: aload 5
    //   67: iconst_1
    //   68: invokevirtual 5677	java/net/HttpURLConnection:setDoInput	(Z)V
    //   71: aload 5
    //   73: iconst_0
    //   74: invokevirtual 5680	java/net/HttpURLConnection:setDoOutput	(Z)V
    //   77: aload 5
    //   79: invokevirtual 5683	java/net/HttpURLConnection:connect	()V
    //   82: aload 5
    //   84: invokevirtual 5686	java/net/HttpURLConnection:getResponseCode	()I
    //   87: istore_3
    //   88: iload_3
    //   89: sipush 200
    //   92: if_icmplt +281 -> 373
    //   95: iload_3
    //   96: sipush 207
    //   99: if_icmpgt +274 -> 373
    //   102: new 149	java/lang/StringBuilder
    //   105: dup
    //   106: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   109: astore 8
    //   111: sipush 1024
    //   114: newarray char
    //   116: astore 7
    //   118: new 5688	java/io/BufferedReader
    //   121: dup
    //   122: new 3166	java/io/InputStreamReader
    //   125: dup
    //   126: aload 5
    //   128: invokevirtual 5692	java/net/HttpURLConnection:getInputStream	()Ljava/io/InputStream;
    //   131: invokespecial 5693	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
    //   134: invokespecial 5694	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   137: astore 6
    //   139: aload 6
    //   141: aload 7
    //   143: invokevirtual 5697	java/io/BufferedReader:read	([C)I
    //   146: istore_3
    //   147: iload_3
    //   148: iflt +67 -> 215
    //   151: iload_3
    //   152: ifle -13 -> 139
    //   155: aload 8
    //   157: aload 7
    //   159: iconst_0
    //   160: iload_3
    //   161: invokevirtual 5700	java/lang/StringBuilder:append	([CII)Ljava/lang/StringBuilder;
    //   164: pop
    //   165: goto -26 -> 139
    //   168: astore 4
    //   170: aload 5
    //   172: ifnull +8 -> 180
    //   175: aload 5
    //   177: invokevirtual 5703	java/net/HttpURLConnection:disconnect	()V
    //   180: aload 6
    //   182: ifnull +182 -> 364
    //   185: aload 6
    //   187: invokevirtual 5704	java/io/BufferedReader:close	()V
    //   190: aconst_null
    //   191: astore 4
    //   193: aload 4
    //   195: astore 5
    //   197: aload 4
    //   199: ifnonnull +13 -> 212
    //   202: aload_0
    //   203: iload_1
    //   204: iload_2
    //   205: iconst_1
    //   206: isub
    //   207: invokestatic 5706	LibcoreWrapper/a:a	(Ljava/lang/String;II)Ljava/lang/String;
    //   210: astore 5
    //   212: aload 5
    //   214: areturn
    //   215: aload 6
    //   217: astore 7
    //   219: aload 8
    //   221: invokevirtual 1645	java/lang/StringBuilder:length	()I
    //   224: ifle +14 -> 238
    //   227: aload 8
    //   229: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   232: astore 4
    //   234: aload 6
    //   236: astore 7
    //   238: aload 5
    //   240: ifnull +8 -> 248
    //   243: aload 5
    //   245: invokevirtual 5703	java/net/HttpURLConnection:disconnect	()V
    //   248: aload 7
    //   250: ifnull +120 -> 370
    //   253: aload 7
    //   255: invokevirtual 5704	java/io/BufferedReader:close	()V
    //   258: goto -65 -> 193
    //   261: astore 5
    //   263: goto -70 -> 193
    //   266: astore 4
    //   268: aconst_null
    //   269: astore 4
    //   271: goto -78 -> 193
    //   274: astore_0
    //   275: aconst_null
    //   276: astore 6
    //   278: aload 7
    //   280: astore 4
    //   282: aload 4
    //   284: ifnull +8 -> 292
    //   287: aload 4
    //   289: invokevirtual 5703	java/net/HttpURLConnection:disconnect	()V
    //   292: aload 6
    //   294: ifnull +8 -> 302
    //   297: aload 6
    //   299: invokevirtual 5704	java/io/BufferedReader:close	()V
    //   302: aload_0
    //   303: athrow
    //   304: aconst_null
    //   305: areturn
    //   306: astore 5
    //   308: goto -60 -> 248
    //   311: astore 4
    //   313: goto -133 -> 180
    //   316: astore 4
    //   318: goto -26 -> 292
    //   321: astore 4
    //   323: goto -21 -> 302
    //   326: astore_0
    //   327: aconst_null
    //   328: astore 6
    //   330: aload 5
    //   332: astore 4
    //   334: goto -52 -> 282
    //   337: astore_0
    //   338: aload 5
    //   340: astore 4
    //   342: goto -60 -> 282
    //   345: astore 4
    //   347: aconst_null
    //   348: astore 5
    //   350: aconst_null
    //   351: astore 6
    //   353: goto -183 -> 170
    //   356: astore 4
    //   358: aconst_null
    //   359: astore 6
    //   361: goto -191 -> 170
    //   364: aconst_null
    //   365: astore 4
    //   367: goto -174 -> 193
    //   370: goto -177 -> 193
    //   373: aconst_null
    //   374: astore 7
    //   376: goto -138 -> 238
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	379	0	paramString	String
    //   0	379	1	paramInt1	int
    //   0	379	2	paramInt2	int
    //   87	74	3	i1	int
    //   4	1	4	localObject1	Object
    //   168	1	4	localException1	Exception
    //   191	42	4	str	String
    //   266	1	4	localException2	Exception
    //   269	19	4	localObject2	Object
    //   311	1	4	localException3	Exception
    //   316	1	4	localException4	Exception
    //   321	1	4	localException5	Exception
    //   332	9	4	localObject3	Object
    //   345	1	4	localException6	Exception
    //   356	1	4	localException7	Exception
    //   365	1	4	localObject4	Object
    //   32	212	5	localObject5	Object
    //   261	1	5	localException8	Exception
    //   306	33	5	localException9	Exception
    //   348	1	5	localObject6	Object
    //   137	223	6	localBufferedReader	BufferedReader
    //   1	374	7	localObject7	Object
    //   109	119	8	localStringBuilder	StringBuilder
    // Exception table:
    //   from	to	target	type
    //   139	147	168	java/lang/Exception
    //   155	165	168	java/lang/Exception
    //   219	234	168	java/lang/Exception
    //   253	258	261	java/lang/Exception
    //   185	190	266	java/lang/Exception
    //   18	34	274	finally
    //   243	248	306	java/lang/Exception
    //   175	180	311	java/lang/Exception
    //   287	292	316	java/lang/Exception
    //   297	302	321	java/lang/Exception
    //   34	88	326	finally
    //   102	139	326	finally
    //   139	147	337	finally
    //   155	165	337	finally
    //   219	234	337	finally
    //   18	34	345	java/lang/Exception
    //   34	88	356	java/lang/Exception
    //   102	139	356	java/lang/Exception
  }
  
  public static String a(String paramString, com.cleanmaster.bitloader.c paramC)
  {
    return paramString + "_" + paramC.b + "x" + paramC.a;
  }
  
  public static String a(String paramString1, String paramString2)
  {
    try
    {
      paramString1 = (String)Class.forName("android.os.SystemProperties").getMethod("get", new Class[] { String.class, String.class }).invoke(null, new Object[] { paramString1, paramString2 });
      return paramString1;
    }
    catch (Throwable paramString1) {}
    return paramString2;
  }
  
  public static String a(String paramString1, String paramString2, String paramString3, boolean paramBoolean, Object... paramVarArgs)
  {
    com.cleanmaster.base.util.system.h localH = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a().getApplicationContext()).b(com.keniu.security.d.a().getApplicationContext());
    String str = paramString2 + "_" + localH.M;
    paramString2 = str;
    if (!TextUtils.isEmpty(localH.N)) {
      paramString2 = str + "_" + localH.N;
    }
    paramString2 = e(paramString1, paramString2, paramString3);
    if (paramString2 != null)
    {
      paramString1 = paramString2;
      if (paramString2.length() > 0) {}
    }
    else
    {
      paramString1 = paramString3;
    }
    if ((paramBoolean) && (!paramString1.equalsIgnoreCase(paramString3))) {}
    for (;;)
    {
      try
      {
        paramString1 = new String(com.cleanmaster.base.util.b.a.b(paramString1));
        paramString2 = paramString1;
        if (paramVarArgs.length <= 0) {}
      }
      catch (Exception paramString1)
      {
        try
        {
          paramString2 = String.format(paramString1, paramVarArgs);
          return paramString2;
        }
        catch (Exception paramString2)
        {
          paramString2.printStackTrace();
          try
          {
            paramString2 = String.format(paramString3, paramVarArgs);
            return paramString2;
          }
          catch (Exception paramString2)
          {
            return paramString1;
          }
        }
        paramString1 = paramString1;
        paramString1.printStackTrace();
        paramString1 = paramString3;
      }
    }
  }
  
  public static String a(String paramString1, String paramString2, String paramString3, Object... paramVarArgs)
  {
    Log.i("JunkCloudInfoWrapper", "subkey:" + paramString2);
    paramString2 = f(paramString1, paramString2, paramString3);
    paramString1 = paramString2;
    try
    {
      if (paramString2.contains("$")) {
        paramString1 = String.format(paramString2, paramVarArgs);
      }
      return paramString1;
    }
    catch (Exception paramString1)
    {
      paramString1.printStackTrace();
      try
      {
        paramString1 = String.format(paramString3, paramVarArgs);
        return paramString1;
      }
      catch (Exception paramString1) {}
    }
    return paramString2;
  }
  
  private static String a(String paramString1, String paramString2, HashMap<String, String> paramHashMap)
  {
    Object[] arrayOfObject = paramHashMap.keySet().toArray();
    Arrays.sort(arrayOfObject);
    StringBuilder localStringBuilder = new StringBuilder(128);
    localStringBuilder.append(paramString1.toUpperCase()).append("&").append(bp(paramString2)).append("&");
    paramString1 = new StringBuilder();
    int i1 = 0;
    while (i1 < arrayOfObject.length)
    {
      paramString1.append(arrayOfObject[i1]).append("=").append((String)paramHashMap.get(arrayOfObject[i1]));
      if (i1 != arrayOfObject.length - 1) {
        paramString1.append("&");
      }
      i1 += 1;
    }
    localStringBuilder.append(bp(paramString1.toString()));
    return localStringBuilder.toString();
  }
  
  public static String a(String paramString1, String paramString2, HashMap<String, String> paramHashMap, String paramString3)
  {
    try
    {
      Mac localMac = Mac.getInstance("HmacSHA1");
      localMac.init(new SecretKeySpec(paramString3.getBytes("UTF-8"), localMac.getAlgorithm()));
      paramString1 = com.cleanmaster.base.util.b.a.b(localMac.doFinal(a(paramString1, paramString2, paramHashMap).getBytes("UTF-8")));
      return paramString1;
    }
    catch (NoSuchAlgorithmException paramString1)
    {
      throw new OpensnsException(1804, paramString1);
    }
    catch (UnsupportedEncodingException paramString1)
    {
      throw new OpensnsException(1804, paramString1);
    }
    catch (InvalidKeyException paramString1)
    {
      throw new OpensnsException(1804, paramString1);
    }
  }
  
  /* Error */
  public static String a(String paramString, Map<String, String> paramMap, d.a[] paramArrayOfA)
  {
    // Byte code:
    //   0: sipush 1024
    //   3: newarray byte
    //   5: astore 5
    //   7: aconst_null
    //   8: astore 7
    //   10: aconst_null
    //   11: astore 6
    //   13: aconst_null
    //   14: astore 9
    //   16: aconst_null
    //   17: astore 8
    //   19: new 5649	java/net/URL
    //   22: dup
    //   23: aload_0
    //   24: invokespecial 5650	java/net/URL:<init>	(Ljava/lang/String;)V
    //   27: invokevirtual 5654	java/net/URL:openConnection	()Ljava/net/URLConnection;
    //   30: checkcast 5656	java/net/HttpURLConnection
    //   33: astore_0
    //   34: aload_0
    //   35: sipush 10000
    //   38: invokevirtual 5659	java/net/HttpURLConnection:setConnectTimeout	(I)V
    //   41: aload_0
    //   42: ldc_w 5801
    //   45: invokevirtual 5804	java/net/HttpURLConnection:setReadTimeout	(I)V
    //   48: aload_0
    //   49: iconst_1
    //   50: invokevirtual 5677	java/net/HttpURLConnection:setDoInput	(Z)V
    //   53: aload_0
    //   54: iconst_1
    //   55: invokevirtual 5680	java/net/HttpURLConnection:setDoOutput	(Z)V
    //   58: aload_0
    //   59: iconst_0
    //   60: invokevirtual 5674	java/net/HttpURLConnection:setUseCaches	(Z)V
    //   63: aload_0
    //   64: ldc_w 5806
    //   67: invokevirtual 5664	java/net/HttpURLConnection:setRequestMethod	(Ljava/lang/String;)V
    //   70: aload_0
    //   71: ldc_w 5808
    //   74: ldc_w 5810
    //   77: invokevirtual 5671	java/net/HttpURLConnection:setRequestProperty	(Ljava/lang/String;Ljava/lang/String;)V
    //   80: aload_0
    //   81: ldc_w 5666
    //   84: ldc_w 3168
    //   87: invokevirtual 5671	java/net/HttpURLConnection:setRequestProperty	(Ljava/lang/String;Ljava/lang/String;)V
    //   90: aload_0
    //   91: ldc_w 5812
    //   94: new 149	java/lang/StringBuilder
    //   97: dup
    //   98: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   101: ldc_w 5814
    //   104: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   107: ldc_w 5816
    //   110: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   113: ldc_w 5818
    //   116: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   119: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   122: invokevirtual 5671	java/net/HttpURLConnection:setRequestProperty	(Ljava/lang/String;Ljava/lang/String;)V
    //   125: new 149	java/lang/StringBuilder
    //   128: dup
    //   129: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   132: astore 8
    //   134: aload_1
    //   135: invokeinterface 5821 1 0
    //   140: invokeinterface 2868 1 0
    //   145: astore_1
    //   146: aload_1
    //   147: invokeinterface 840 1 0
    //   152: ifeq +150 -> 302
    //   155: aload_1
    //   156: invokeinterface 844 1 0
    //   161: checkcast 5823	java/util/Map$Entry
    //   164: astore 9
    //   166: aload 8
    //   168: ldc_w 5825
    //   171: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   174: pop
    //   175: aload 8
    //   177: ldc_w 5818
    //   180: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   183: pop
    //   184: aload 8
    //   186: ldc_w 5827
    //   189: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   192: pop
    //   193: aload 8
    //   195: new 149	java/lang/StringBuilder
    //   198: dup
    //   199: ldc_w 5829
    //   202: invokespecial 260	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   205: aload 9
    //   207: invokeinterface 5832 1 0
    //   212: checkcast 174	java/lang/String
    //   215: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   218: ldc_w 5834
    //   221: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   224: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   227: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   230: pop
    //   231: aload 8
    //   233: aload 9
    //   235: invokeinterface 5837 1 0
    //   240: checkcast 174	java/lang/String
    //   243: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   246: pop
    //   247: aload 8
    //   249: ldc_w 5827
    //   252: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   255: pop
    //   256: goto -110 -> 146
    //   259: astore 5
    //   261: aconst_null
    //   262: astore 6
    //   264: aconst_null
    //   265: astore_2
    //   266: aload_0
    //   267: astore_1
    //   268: aload 6
    //   270: astore_0
    //   271: aload 5
    //   273: invokevirtual 576	java/lang/Exception:printStackTrace	()V
    //   276: aload_2
    //   277: ifnull +7 -> 284
    //   280: aload_2
    //   281: invokevirtual 5840	java/io/DataOutputStream:close	()V
    //   284: aload_0
    //   285: ifnull +7 -> 292
    //   288: aload_0
    //   289: invokevirtual 5380	java/io/InputStream:close	()V
    //   292: aload_1
    //   293: ifnull +611 -> 904
    //   296: aload_1
    //   297: invokevirtual 5703	java/net/HttpURLConnection:disconnect	()V
    //   300: aconst_null
    //   301: areturn
    //   302: aload 8
    //   304: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   307: invokevirtual 694	java/lang/String:getBytes	()[B
    //   310: arraylength
    //   311: iconst_0
    //   312: iadd
    //   313: istore 4
    //   315: new 149	java/lang/StringBuilder
    //   318: dup
    //   319: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   322: astore 9
    //   324: iconst_0
    //   325: istore_3
    //   326: iload_3
    //   327: ifgt +169 -> 496
    //   330: aload_2
    //   331: iconst_0
    //   332: aaload
    //   333: astore_1
    //   334: aload 9
    //   336: iconst_0
    //   337: aload 9
    //   339: invokevirtual 1645	java/lang/StringBuilder:length	()I
    //   342: invokevirtual 1648	java/lang/StringBuilder:delete	(II)Ljava/lang/StringBuilder;
    //   345: pop
    //   346: aload 9
    //   348: ldc_w 5825
    //   351: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   354: pop
    //   355: aload 9
    //   357: ldc_w 5818
    //   360: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   363: pop
    //   364: aload 9
    //   366: ldc_w 5827
    //   369: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   372: pop
    //   373: aload 9
    //   375: new 149	java/lang/StringBuilder
    //   378: dup
    //   379: ldc_w 5842
    //   382: invokespecial 260	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   385: aload_1
    //   386: getfield 5845	d/a:b	Ljava/lang/String;
    //   389: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   392: ldc_w 5847
    //   395: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   398: aload_1
    //   399: getfield 5848	d/a:a	Ljava/lang/String;
    //   402: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   405: ldc_w 5850
    //   408: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   411: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   414: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   417: pop
    //   418: aload 9
    //   420: new 149	java/lang/StringBuilder
    //   423: dup
    //   424: ldc_w 5852
    //   427: invokespecial 260	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   430: aload_1
    //   431: getfield 5853	d/a:c	Ljava/lang/String;
    //   434: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   437: ldc_w 5855
    //   440: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   443: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   446: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   449: pop
    //   450: iload 4
    //   452: aload 9
    //   454: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   457: invokevirtual 694	java/lang/String:getBytes	()[B
    //   460: arraylength
    //   461: iadd
    //   462: i2l
    //   463: new 464	java/io/File
    //   466: dup
    //   467: aload_1
    //   468: getfield 5856	d/a:d	Ljava/lang/String;
    //   471: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   474: invokevirtual 1165	java/io/File:length	()J
    //   477: ladd
    //   478: l2i
    //   479: ldc_w 5827
    //   482: invokevirtual 694	java/lang/String:getBytes	()[B
    //   485: arraylength
    //   486: iadd
    //   487: istore 4
    //   489: iload_3
    //   490: iconst_1
    //   491: iadd
    //   492: istore_3
    //   493: goto -167 -> 326
    //   496: new 149	java/lang/StringBuilder
    //   499: dup
    //   500: ldc_w 5825
    //   503: invokespecial 260	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   506: ldc_w 5818
    //   509: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   512: ldc_w 5858
    //   515: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   518: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   521: invokevirtual 694	java/lang/String:getBytes	()[B
    //   524: astore 10
    //   526: aload_0
    //   527: aload 10
    //   529: arraylength
    //   530: iload 4
    //   532: iadd
    //   533: invokevirtual 5861	java/net/HttpURLConnection:setFixedLengthStreamingMode	(I)V
    //   536: new 5839	java/io/DataOutputStream
    //   539: dup
    //   540: aload_0
    //   541: invokevirtual 5865	java/net/HttpURLConnection:getOutputStream	()Ljava/io/OutputStream;
    //   544: invokespecial 5868	java/io/DataOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   547: astore_1
    //   548: aload_1
    //   549: aload 8
    //   551: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   554: invokevirtual 694	java/lang/String:getBytes	()[B
    //   557: invokevirtual 5870	java/io/DataOutputStream:write	([B)V
    //   560: iconst_0
    //   561: istore_3
    //   562: iload_3
    //   563: ifgt +205 -> 768
    //   566: aload_2
    //   567: iload_3
    //   568: aaload
    //   569: astore 7
    //   571: aload 9
    //   573: iconst_0
    //   574: aload 9
    //   576: invokevirtual 1645	java/lang/StringBuilder:length	()I
    //   579: invokevirtual 1648	java/lang/StringBuilder:delete	(II)Ljava/lang/StringBuilder;
    //   582: pop
    //   583: aload 9
    //   585: ldc_w 5825
    //   588: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   591: pop
    //   592: aload 9
    //   594: ldc_w 5818
    //   597: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   600: pop
    //   601: aload 9
    //   603: ldc_w 5827
    //   606: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   609: pop
    //   610: aload 9
    //   612: new 149	java/lang/StringBuilder
    //   615: dup
    //   616: ldc_w 5842
    //   619: invokespecial 260	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   622: aload 7
    //   624: getfield 5845	d/a:b	Ljava/lang/String;
    //   627: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   630: ldc_w 5847
    //   633: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   636: aload 7
    //   638: getfield 5848	d/a:a	Ljava/lang/String;
    //   641: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   644: ldc_w 5850
    //   647: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   650: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   653: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   656: pop
    //   657: aload 9
    //   659: new 149	java/lang/StringBuilder
    //   662: dup
    //   663: ldc_w 5852
    //   666: invokespecial 260	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   669: aload 7
    //   671: getfield 5853	d/a:c	Ljava/lang/String;
    //   674: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   677: ldc_w 5855
    //   680: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   683: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   686: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   689: pop
    //   690: aload_1
    //   691: aload 9
    //   693: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   696: invokevirtual 694	java/lang/String:getBytes	()[B
    //   699: invokevirtual 5870	java/io/DataOutputStream:write	([B)V
    //   702: new 1167	java/io/FileInputStream
    //   705: dup
    //   706: aload 7
    //   708: getfield 5856	d/a:d	Ljava/lang/String;
    //   711: invokespecial 2681	java/io/FileInputStream:<init>	(Ljava/lang/String;)V
    //   714: astore 7
    //   716: aload 7
    //   718: aload 5
    //   720: invokevirtual 1177	java/io/FileInputStream:read	([B)I
    //   723: istore 4
    //   725: iload 4
    //   727: ifle +19 -> 746
    //   730: aload_1
    //   731: aload 5
    //   733: iconst_0
    //   734: iload 4
    //   736: invokevirtual 5871	java/io/DataOutputStream:write	([BII)V
    //   739: aload_1
    //   740: invokevirtual 5874	java/io/DataOutputStream:flush	()V
    //   743: goto -27 -> 716
    //   746: aload 7
    //   748: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   751: aload_1
    //   752: ldc_w 5827
    //   755: invokevirtual 694	java/lang/String:getBytes	()[B
    //   758: invokevirtual 5870	java/io/DataOutputStream:write	([B)V
    //   761: iload_3
    //   762: iconst_1
    //   763: iadd
    //   764: istore_3
    //   765: goto -203 -> 562
    //   768: aload_1
    //   769: aload 10
    //   771: invokevirtual 5870	java/io/DataOutputStream:write	([B)V
    //   774: aload_1
    //   775: invokevirtual 5874	java/io/DataOutputStream:flush	()V
    //   778: aload_0
    //   779: invokevirtual 5686	java/net/HttpURLConnection:getResponseCode	()I
    //   782: sipush 200
    //   785: if_icmpne +263 -> 1048
    //   788: new 149	java/lang/StringBuilder
    //   791: dup
    //   792: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   795: astore 5
    //   797: aload_0
    //   798: invokevirtual 5692	java/net/HttpURLConnection:getInputStream	()Ljava/io/InputStream;
    //   801: astore_2
    //   802: aload_2
    //   803: invokevirtual 5876	java/io/InputStream:read	()I
    //   806: istore_3
    //   807: iload_3
    //   808: iconst_m1
    //   809: if_icmpeq +14 -> 823
    //   812: aload 5
    //   814: iload_3
    //   815: i2c
    //   816: invokevirtual 1198	java/lang/StringBuilder:append	(C)Ljava/lang/StringBuilder;
    //   819: pop
    //   820: goto -18 -> 802
    //   823: aload 5
    //   825: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   828: astore 6
    //   830: aload_2
    //   831: astore 5
    //   833: aload 6
    //   835: astore_2
    //   836: aload_1
    //   837: invokevirtual 5840	java/io/DataOutputStream:close	()V
    //   840: aload 5
    //   842: ifnull +8 -> 850
    //   845: aload 5
    //   847: invokevirtual 5380	java/io/InputStream:close	()V
    //   850: aload_0
    //   851: ifnull +30 -> 881
    //   854: aload_0
    //   855: invokevirtual 5703	java/net/HttpURLConnection:disconnect	()V
    //   858: aload_2
    //   859: areturn
    //   860: astore_1
    //   861: aload_1
    //   862: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   865: goto -25 -> 840
    //   868: astore_1
    //   869: aload_1
    //   870: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   873: goto -23 -> 850
    //   876: astore_0
    //   877: aload_0
    //   878: invokevirtual 576	java/lang/Exception:printStackTrace	()V
    //   881: aload_2
    //   882: areturn
    //   883: astore_2
    //   884: aload_2
    //   885: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   888: goto -604 -> 284
    //   891: astore_0
    //   892: aload_0
    //   893: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   896: goto -604 -> 292
    //   899: astore_0
    //   900: aload_0
    //   901: invokevirtual 576	java/lang/Exception:printStackTrace	()V
    //   904: aconst_null
    //   905: areturn
    //   906: astore_0
    //   907: aload 7
    //   909: astore_2
    //   910: aload 6
    //   912: astore 5
    //   914: aload 9
    //   916: astore_1
    //   917: aload_2
    //   918: ifnull +7 -> 925
    //   921: aload_2
    //   922: invokevirtual 5840	java/io/DataOutputStream:close	()V
    //   925: aload 5
    //   927: ifnull +8 -> 935
    //   930: aload 5
    //   932: invokevirtual 5380	java/io/InputStream:close	()V
    //   935: aload_1
    //   936: ifnull +7 -> 943
    //   939: aload_1
    //   940: invokevirtual 5703	java/net/HttpURLConnection:disconnect	()V
    //   943: aload_0
    //   944: athrow
    //   945: astore_2
    //   946: aload_2
    //   947: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   950: goto -25 -> 925
    //   953: astore_2
    //   954: aload_2
    //   955: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   958: goto -23 -> 935
    //   961: astore_1
    //   962: aload_1
    //   963: invokevirtual 576	java/lang/Exception:printStackTrace	()V
    //   966: goto -23 -> 943
    //   969: astore_2
    //   970: aload_0
    //   971: astore_1
    //   972: aload_2
    //   973: astore_0
    //   974: aload 6
    //   976: astore 5
    //   978: aload 7
    //   980: astore_2
    //   981: goto -64 -> 917
    //   984: astore 5
    //   986: aload_1
    //   987: astore_2
    //   988: aload 5
    //   990: astore_1
    //   991: aload_0
    //   992: astore 5
    //   994: aload_1
    //   995: astore_0
    //   996: aload 5
    //   998: astore_1
    //   999: aload 6
    //   1001: astore 5
    //   1003: goto -86 -> 917
    //   1006: astore 5
    //   1008: aload_1
    //   1009: astore 6
    //   1011: aload_0
    //   1012: astore_1
    //   1013: aload 5
    //   1015: astore_0
    //   1016: aload_2
    //   1017: astore 5
    //   1019: aload 6
    //   1021: astore_2
    //   1022: goto -105 -> 917
    //   1025: astore 6
    //   1027: aload_0
    //   1028: astore 5
    //   1030: aload 6
    //   1032: astore_0
    //   1033: goto -116 -> 917
    //   1036: astore 5
    //   1038: aconst_null
    //   1039: astore_0
    //   1040: aconst_null
    //   1041: astore_2
    //   1042: aload 8
    //   1044: astore_1
    //   1045: goto -774 -> 271
    //   1048: aconst_null
    //   1049: astore_2
    //   1050: aconst_null
    //   1051: astore 5
    //   1053: goto -217 -> 836
    //   1056: astore 5
    //   1058: aconst_null
    //   1059: astore 6
    //   1061: aload_1
    //   1062: astore_2
    //   1063: aload_0
    //   1064: astore_1
    //   1065: aload 6
    //   1067: astore_0
    //   1068: goto -797 -> 271
    //   1071: astore 5
    //   1073: aload_1
    //   1074: astore 6
    //   1076: aload_0
    //   1077: astore_1
    //   1078: aload_2
    //   1079: astore_0
    //   1080: aload 6
    //   1082: astore_2
    //   1083: goto -812 -> 271
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	1086	0	paramString	String
    //   0	1086	1	paramMap	Map<String, String>
    //   0	1086	2	paramArrayOfA	d.a[]
    //   325	490	3	i1	int
    //   313	422	4	i2	int
    //   5	1	5	arrayOfByte1	byte[]
    //   259	473	5	localException1	Exception
    //   795	182	5	localObject1	Object
    //   984	5	5	localObject2	Object
    //   992	10	5	localObject3	Object
    //   1006	8	5	localObject4	Object
    //   1017	12	5	localObject5	Object
    //   1036	1	5	localException2	Exception
    //   1051	1	5	localObject6	Object
    //   1056	1	5	localException3	Exception
    //   1071	1	5	localException4	Exception
    //   11	1009	6	localObject7	Object
    //   1025	6	6	localObject8	Object
    //   1059	22	6	localMap	Map<String, String>
    //   8	971	7	localObject9	Object
    //   17	1026	8	localStringBuilder	StringBuilder
    //   14	901	9	localObject10	Object
    //   524	246	10	arrayOfByte2	byte[]
    // Exception table:
    //   from	to	target	type
    //   34	146	259	java/lang/Exception
    //   146	256	259	java/lang/Exception
    //   302	324	259	java/lang/Exception
    //   334	489	259	java/lang/Exception
    //   496	548	259	java/lang/Exception
    //   836	840	860	java/io/IOException
    //   845	850	868	java/io/IOException
    //   854	858	876	java/lang/Exception
    //   280	284	883	java/io/IOException
    //   288	292	891	java/io/IOException
    //   296	300	899	java/lang/Exception
    //   19	34	906	finally
    //   921	925	945	java/io/IOException
    //   930	935	953	java/io/IOException
    //   939	943	961	java/lang/Exception
    //   34	146	969	finally
    //   146	256	969	finally
    //   302	324	969	finally
    //   334	489	969	finally
    //   496	548	969	finally
    //   548	560	984	finally
    //   571	716	984	finally
    //   716	725	984	finally
    //   730	743	984	finally
    //   746	761	984	finally
    //   768	802	984	finally
    //   802	807	1006	finally
    //   812	820	1006	finally
    //   823	830	1006	finally
    //   271	276	1025	finally
    //   19	34	1036	java/lang/Exception
    //   548	560	1056	java/lang/Exception
    //   571	716	1056	java/lang/Exception
    //   716	725	1056	java/lang/Exception
    //   730	743	1056	java/lang/Exception
    //   746	761	1056	java/lang/Exception
    //   768	802	1056	java/lang/Exception
    //   802	807	1071	java/lang/Exception
    //   812	820	1071	java/lang/Exception
    //   823	830	1071	java/lang/Exception
  }
  
  public static String a(String paramString, boolean paramBoolean)
  {
    Object localObject = com.keniu.security.d.a().getApplicationContext();
    com.cleanmaster.base.util.system.h localH = com.cleanmaster.configmanager.d.a((Context)localObject).c((Context)localObject);
    localObject = new StringBuilder();
    String str = localH.a();
    ((StringBuilder)localObject).append("?cmlanguage=");
    if (!TextUtils.isEmpty(str))
    {
      ((StringBuilder)localObject).append(localH.a());
      ((StringBuilder)localObject).append("&device=");
      ((StringBuilder)localObject).append(SystemProperties.get("ro.product.device", "unknown"));
      ((StringBuilder)localObject).append("&apkversion=");
      ((StringBuilder)localObject).append(com.keniu.security.a.b());
      ((StringBuilder)localObject).append("&expand=");
      ((StringBuilder)localObject).append(paramString);
      ((StringBuilder)localObject).append("&topForExpand=");
      if (!paramBoolean) {
        break label160;
      }
    }
    label160:
    for (paramString = "1";; paramString = "0")
    {
      ((StringBuilder)localObject).append(paramString);
      ((StringBuilder)localObject).append("&vtype=2");
      ((StringBuilder)localObject).append("&p=cm");
      return ((StringBuilder)localObject).toString();
      ((StringBuilder)localObject).append(com.cleanmaster.base.util.system.h.b);
      break;
    }
  }
  
  public static String a(Throwable paramThrowable)
  {
    Object localObject3 = null;
    int i2 = 0;
    Object localObject1 = null;
    for (Object localObject2 = paramThrowable; localObject2 != null; localObject2 = ((Throwable)localObject2).getCause()) {
      localObject1 = ((Throwable)localObject2).getStackTrace();
    }
    if ((paramThrowable == null) && (localObject1 == null)) {
      return "1001";
    }
    if ((localObject1 == null) || (localObject1.length == 0)) {}
    for (localObject2 = paramThrowable.getStackTrace();; localObject2 = localObject1)
    {
      if ((localObject2 == null) || (localObject2.length == 0)) {
        return "1002";
      }
      localObject1 = localObject3;
      if (!TextUtils.isEmpty(paramThrowable.toString()))
      {
        i1 = paramThrowable.toString().indexOf(":");
        localObject1 = localObject3;
        if (i1 != -1) {
          localObject1 = paramThrowable.toString().substring(0, i1);
        }
      }
      paramThrowable = "";
      int i4 = localObject2.length;
      int i1 = 0;
      Object localObject4;
      int i3;
      if (i1 < i4)
      {
        localObject4 = localObject2[i1];
        i3 = i2;
        localObject3 = paramThrowable;
        if (!TextUtils.isEmpty(localObject4.toString()))
        {
          i3 = i2;
          localObject3 = paramThrowable;
          if (!localObject4.toString().contains("android.os.Parcel"))
          {
            i3 = i2;
            localObject3 = paramThrowable;
            if (!localObject4.toString().contains("AsyncTaskEx.java"))
            {
              localObject3 = localObject4.toString();
              if ((!((String)localObject3).contains("com.cleanmaster.")) && (!((String)localObject3).contains("com.keniu.")) && (!((String)localObject3).contains("com.ijinshan.")) && (!((String)localObject3).contains("ks.cm."))) {}
            }
          }
        }
      }
      for (localObject2 = localObject4.toString();; localObject2 = "")
      {
        if (!TextUtils.isEmpty((CharSequence)localObject2)) {}
        for (paramThrowable = bj((String)localObject2);; paramThrowable = bj(paramThrowable))
        {
          localObject2 = paramThrowable;
          if (!TextUtils.isEmpty((CharSequence)localObject1)) {
            localObject2 = paramThrowable + "|" + (String)localObject1;
          }
          paramThrowable = new CRC32();
          paramThrowable.update(((String)localObject2).getBytes());
          return Long.toString(paramThrowable.getValue());
          i3 = i2;
          localObject3 = paramThrowable;
          if (i2 == 0)
          {
            localObject3 = localObject4.toString();
            i3 = 1;
          }
          i1 += 1;
          i2 = i3;
          paramThrowable = (Throwable)localObject3;
          break;
        }
      }
    }
  }
  
  public static String a(MessageDigest paramMessageDigest, String paramString)
  {
    paramMessageDigest.update(paramString.getBytes());
    paramString = com.cleanmaster.base.util.b.b.a(paramMessageDigest.digest());
    paramMessageDigest.reset();
    return paramString;
  }
  
  public static String a(Collection<String> paramCollection)
  {
    int i2 = 96;
    int i1;
    if (paramCollection.size() == 0) {
      i1 = 1;
    }
    while ((i1 == 0) && (paramCollection.size() > 0))
    {
      i1 = i2;
      if (96 > paramCollection.size()) {
        i1 = paramCollection.size();
      }
      if ((paramCollection.size() == 0) || (i1 <= 0) || (i1 > paramCollection.size()))
      {
        return null;
        i1 = 0;
      }
      else
      {
        paramCollection = paramCollection.toArray();
        if (paramCollection == null) {
          return null;
        }
        if ((paramCollection.length == 0) || (i1 <= 0) || (i1 > paramCollection.length)) {
          return null;
        }
        String str = "'" + paramCollection[0] + "'";
        StringBuilder localStringBuilder = new StringBuilder((str.length() + 1) * i1 + 2);
        localStringBuilder.append('(');
        localStringBuilder.append(str);
        if (1 < i1)
        {
          i2 = 1;
          while (i2 < i1)
          {
            localStringBuilder.append(",");
            localStringBuilder.append("'" + paramCollection[i2] + "'");
            i2 += 1;
          }
        }
        localStringBuilder.append(')');
        return localStringBuilder.toString();
      }
    }
    return null;
  }
  
  public static String a(List<LockPatternView.Cell> paramList)
  {
    if (paramList == null) {
      return "";
    }
    int i2 = paramList.size();
    Object localObject = "";
    int i1 = 0;
    while (i1 < i2)
    {
      LockPatternView.Cell localCell = (LockPatternView.Cell)paramList.get(i1);
      localObject = new StringBuilder().append((String)localObject);
      int i3 = localCell.a;
      localObject = String.valueOf(localCell.b + i3 * 3);
      i1 += 1;
    }
    return localObject;
  }
  
  public static String a(Map<String, String> paramMap)
  {
    return a(paramMap, "ISO-8859-1");
  }
  
  public static String a(Map<String, String> paramMap, String paramString)
  {
    Object localObject = (String)paramMap.get("Content-Type");
    paramMap = paramString;
    int i1;
    if (localObject != null)
    {
      localObject = ((String)localObject).split(";");
      i1 = 1;
    }
    for (;;)
    {
      paramMap = paramString;
      if (i1 < localObject.length)
      {
        paramMap = localObject[i1].trim().split("=");
        if ((paramMap.length == 2) && (paramMap[0].equals("charset"))) {
          paramMap = paramMap[1];
        }
      }
      else
      {
        return paramMap;
      }
      i1 += 1;
    }
  }
  
  public static String a(JSONObject paramJSONObject, String paramString1, com.my.target.core.parsers.a paramA, String paramString2, boolean paramBoolean)
  {
    if (paramJSONObject.has(paramString1)) {}
    label93:
    do
    {
      try
      {
        String str = paramJSONObject.getString(paramString1);
        paramJSONObject = str;
        paramString2 = str;
        if (TextUtils.isEmpty(str))
        {
          if (!paramBoolean) {
            break label93;
          }
          paramString2 = str;
          a("Empty string required field '" + paramString1 + "', Operation: " + paramA.d + ", Unit: " + paramA.e, paramA, null, "Required field absence");
          paramJSONObject = str;
        }
      }
      catch (JSONException localJSONException)
      {
        do
        {
          paramString1 = "JSON Exception in field " + paramString1 + ", Operation: " + paramA.d + ", Unit: " + paramA.e;
          paramJSONObject = paramString2;
        } while (!paramBoolean);
        a(paramString1, paramA, localJSONException, "JSONException");
        return paramString2;
      }
      return paramJSONObject;
      return null;
      paramJSONObject = paramString2;
    } while (!paramBoolean);
    a("No required field '" + paramString1 + "', Operation: " + paramA.d + ", Unit: " + paramA.e, paramA, null, "Required field absence");
    return paramString2;
  }
  
  public static String a(Document paramDocument, String paramString)
  {
    XmlUtils.1 local1 = new XmlUtils.1();
    int i1;
    if (paramDocument != null)
    {
      paramString = paramDocument.getElementsByTagName(paramString);
      if (paramString != null)
      {
        i1 = 0;
        if (i1 < paramString.getLength())
        {
          paramDocument = paramString.item(i1);
          if ((paramDocument != null) && (a(paramDocument, null, null)))
          {
            paramDocument = local1.process(paramDocument);
            if (paramDocument == null) {}
          }
        }
      }
    }
    for (;;)
    {
      return (String)paramDocument;
      i1 += 1;
      break;
      paramDocument = null;
    }
  }
  
  public static String a(Node paramNode)
  {
    if ((paramNode != null) && (paramNode.getFirstChild() != null) && (paramNode.getFirstChild().getNodeValue() != null)) {
      return paramNode.getFirstChild().getNodeValue().trim();
    }
    return null;
  }
  
  private static String a(XmlPullParser paramXmlPullParser)
  {
    String str = "";
    if (paramXmlPullParser.next() == 4)
    {
      str = paramXmlPullParser.getText();
      paramXmlPullParser.nextTag();
    }
    return str.trim();
  }
  
  private static String a(XmlPullParser paramXmlPullParser, String paramString)
  {
    paramXmlPullParser.require(2, null, paramString);
    String str = a(paramXmlPullParser);
    paramXmlPullParser.require(3, null, paramString);
    return str;
  }
  
  public static String a(byte[] paramArrayOfByte)
  {
    if (paramArrayOfByte == null) {
      return null;
    }
    return Base64.encodeToString(paramArrayOfByte, 0);
  }
  
  public static String a(byte[] paramArrayOfByte1, byte[] paramArrayOfByte2)
  {
    if (paramArrayOfByte1 == null) {
      return null;
    }
    com.cleanmaster.base.util.b.b.a(paramArrayOfByte1, 0, paramArrayOfByte1.length, paramArrayOfByte2);
    try
    {
      paramArrayOfByte1 = new String(paramArrayOfByte1, "utf-8");
      return paramArrayOfByte1;
    }
    catch (UnsupportedEncodingException paramArrayOfByte1)
    {
      for (;;)
      {
        paramArrayOfByte1.printStackTrace();
        paramArrayOfByte1 = null;
      }
    }
  }
  
  public static String a(String... paramVarArgs)
  {
    if ((paramVarArgs == null) || (paramVarArgs.length == 0)) {
      throw new IllegalArgumentException("No senderIds");
    }
    StringBuilder localStringBuilder = new StringBuilder(paramVarArgs[0]);
    int i1 = 1;
    while (i1 < paramVarArgs.length)
    {
      localStringBuilder.append(',').append(paramVarArgs[i1]);
      i1 += 1;
    }
    return localStringBuilder.toString();
  }
  
  private static String a(String[] paramArrayOfString, int paramInt1, int paramInt2)
  {
    if (paramArrayOfString.length < paramInt1 + 6)
    {
      aO("Unable to construct shingle");
      return "";
    }
    StringBuffer localStringBuffer = new StringBuffer();
    paramInt2 = paramInt1;
    while (paramInt2 < paramInt1 + 6 - 1)
    {
      localStringBuffer.append(paramArrayOfString[paramInt2]);
      localStringBuffer.append(' ');
      paramInt2 += 1;
    }
    localStringBuffer.append(paramArrayOfString[(paramInt1 + 6 - 1)]);
    return localStringBuffer.toString();
  }
  
  private static Method a(Object paramObject, String paramString, Class<?>... paramVarArgs)
  {
    Class localClass = paramObject.getClass();
    while (localClass != null) {
      try
      {
        Method localMethod = localClass.getDeclaredMethod(paramString, paramVarArgs);
        if (!localMethod.isAccessible()) {
          localMethod.setAccessible(true);
        }
        return localMethod;
      }
      catch (NoSuchMethodException localNoSuchMethodException)
      {
        localClass = localClass.getSuperclass();
      }
    }
    throw new NoSuchMethodException("Method " + paramString + " with parameters " + Arrays.asList(paramVarArgs) + " not found in " + paramObject.getClass());
  }
  
  private static ArrayList<com.cleanmaster.ui.app.market.a> a(Context paramContext, com.cleanmaster.ui.app.market.a paramA, boolean paramBoolean)
  {
    ArrayList localArrayList = paramA.q();
    int i2;
    for (int i1 = 0; i1 < localArrayList.size(); i1 = i2 + 1)
    {
      com.cleanmaster.ui.app.market.a localA = (com.cleanmaster.ui.app.market.a)localArrayList.get(i1);
      if (!a(paramContext, localA, paramA.p, true))
      {
        i2 = i1;
        if (localA.G == 1)
        {
          i2 = i1;
          if (!paramBoolean) {}
        }
      }
      else
      {
        localArrayList.remove(i1);
        i2 = i1 - 1;
      }
    }
    return localArrayList;
  }
  
  public static ArrayList<com.cleanmaster.ui.app.market.a> a(Context paramContext, ArrayList<com.cleanmaster.ui.app.market.a> paramArrayList, boolean paramBoolean)
  {
    ArrayList localArrayList = new ArrayList();
    int i2 = 0;
    if (i2 < paramArrayList.size())
    {
      com.cleanmaster.ui.app.market.a localA = (com.cleanmaster.ui.app.market.a)paramArrayList.get(i2);
      int i1;
      if (localA.G == 1) {
        if (!a(paramContext, localA, localA.p, false))
        {
          i1 = i2;
          if (!paramBoolean) {}
        }
        else
        {
          paramArrayList.remove(i2);
          i1 = i2 - 1;
        }
      }
      for (;;)
      {
        i2 = i1 + 1;
        break;
        int i3 = localA.p;
        if ((i3 == 0) || (i3 == 50000) || (i3 == 1047) || (i3 == 1050) || (i3 == 1056) || (i3 == 1055))
        {
          i1 = i2;
          if (a(paramContext, localA, localA.p, false))
          {
            paramArrayList.remove(i2);
            i1 = i2 - 1;
          }
        }
        else if (i3 == 1049)
        {
          localA.y = a(paramContext, localA, paramBoolean);
          i1 = i2;
        }
        else
        {
          i1 = i2;
          if (i3 != 10000)
          {
            i1 = i2;
            if (a(paramContext, localA, localA.p, false))
            {
              paramArrayList.remove(i2);
              i1 = i2 - 1;
            }
          }
        }
      }
    }
    localArrayList.addAll(paramArrayList);
    return localArrayList;
  }
  
  public static ArrayList<com.cleanmaster.ui.resultpage.item.h> a(com.cleanmaster.ui.resultpage.ctrl.h paramH)
  {
    List localList = PosRule.compile(al(paramH.b), com.cleanmaster.ui.resultpage.a.O(paramH.b));
    ArrayList localArrayList = new ArrayList();
    Map localMap = paramH.a;
    int i2 = paramH.c;
    int i1 = paramH.d;
    String str = paramH.e;
    if (i2 > i1) {
      return localArrayList;
    }
    int i3 = i1 - i2;
    if (i3 < 100) {
      i1 = i3 + 100;
    }
    a(localMap, paramH.c, paramH.b, paramH.i);
    if ((localList != null) && (!localList.isEmpty())) {
      while (i2 < i1)
      {
        com.cleanmaster.ui.resultpage.item.h localH = a(localList, i2, str, localMap);
        if (localH != null)
        {
          localArrayList.add(localH);
          str = localH.aw;
        }
        i2 += 1;
      }
    }
    return a(localArrayList, paramH);
  }
  
  public static ArrayList<Integer> a(String paramString, CharSequence paramCharSequence)
  {
    ArrayList localArrayList = new ArrayList();
    if (!TextUtils.isEmpty(paramString))
    {
      paramString = paramString.split(paramCharSequence.toString());
      if ((paramString != null) && (paramString.length > 0))
      {
        int i2 = paramString.length;
        int i1 = 0;
        for (;;)
        {
          if (i1 < i2)
          {
            paramCharSequence = paramString[i1];
            try
            {
              localArrayList.add(Integer.valueOf(Integer.parseInt(paramCharSequence)));
              i1 += 1;
            }
            catch (NumberFormatException paramCharSequence)
            {
              for (;;)
              {
                localArrayList.add(Integer.valueOf(0));
              }
            }
          }
        }
      }
    }
    return localArrayList;
  }
  
  private static ArrayList<com.cleanmaster.ui.resultpage.item.h> a(ArrayList<com.cleanmaster.ui.resultpage.item.h> paramArrayList, com.cleanmaster.ui.resultpage.ctrl.h paramH)
  {
    if (!paramArrayList.isEmpty()) {}
    for (int i1 = 1;; i1 = 0)
    {
      Iterator localIterator = paramH.a.entrySet().iterator();
      while (localIterator.hasNext())
      {
        Object localObject = (Map.Entry)localIterator.next();
        List localList = (List)((Map.Entry)localObject).getValue();
        localObject = (String)((Map.Entry)localObject).getKey();
        if ((localList != null) && (!localList.isEmpty()) && ((i1 == 0) || (!com.cleanmaster.ui.resultpage.a.a((String)localObject))) && ((i1 != 0) || (paramH.c == 0) || (!com.cleanmaster.ui.resultpage.a.a((String)localObject))))
        {
          paramArrayList.addAll(localList);
          localList.clear();
        }
      }
    }
    if (!paramArrayList.isEmpty())
    {
      paramH.e = ((com.cleanmaster.ui.resultpage.item.h)paramArrayList.get(paramArrayList.size() - 1)).aw;
      paramH.c = paramH.d;
    }
    return paramArrayList;
  }
  
  public static ArrayList<com.cleanmaster.boost.autostarts.data.h> a(HashSet<String> paramHashSet)
  {
    ArrayList localArrayList = null;
    Object localObject1 = AutoStartRulesStorage.a().b();
    if (localObject1 != null)
    {
      localArrayList = new ArrayList();
      localObject1 = ((ArrayList)localObject1).iterator();
      while (((Iterator)localObject1).hasNext())
      {
        com.cleanmaster.boost.autostarts.data.i localI = (com.cleanmaster.boost.autostarts.data.i)((Iterator)localObject1).next();
        if ((localI != null) && (localI.a()) && ((paramHashSet == null) || (paramHashSet.contains(localI.a))))
        {
          Object localObject2 = l(localI.b);
          localObject2 = a(localI.a, (List)localObject2, false);
          if ((localObject2 != null) && (!((com.cleanmaster.boost.boostengine.autostart.a.a)localObject2).b) && (!d((com.cleanmaster.boost.boostengine.autostart.a.a)localObject2)))
          {
            Object localObject3 = ((com.cleanmaster.boost.boostengine.autostart.a.a)localObject2).f.values();
            if (localObject3 != null)
            {
              localObject3 = ((Collection)localObject3).iterator();
              while (((Iterator)localObject3).hasNext())
              {
                com.cleanmaster.boost.boostengine.autostart.a.a.b localB = (com.cleanmaster.boost.boostengine.autostart.a.a.b)((Iterator)localObject3).next();
                if (localB != null)
                {
                  boolean bool1 = ((com.cleanmaster.boost.boostengine.autostart.a.a)localObject2).j.c;
                  boolean bool2 = ((com.cleanmaster.boost.boostengine.autostart.a.a)localObject2).j.d;
                  localArrayList.add(new com.cleanmaster.boost.autostarts.data.h(localB.a, localI.a, localB.c, bool1 | bool2, localB.d, ((com.cleanmaster.boost.boostengine.autostart.a.a)localObject2).h));
                }
              }
            }
          }
        }
      }
    }
    return localArrayList;
  }
  
  public static ArrayList<com.my.target.core.f.i> a(JSONObject paramJSONObject, com.my.target.core.parsers.a paramA)
  {
    paramA.d = "Parsing banner stats";
    ArrayList localArrayList = new ArrayList();
    paramJSONObject = a(paramJSONObject, "statistics", paramA);
    if (paramJSONObject == null) {
      return localArrayList;
    }
    int i2 = paramJSONObject.length();
    int i1 = 0;
    label40:
    JSONObject localJSONObject;
    Object localObject;
    String str;
    float f1;
    if (i1 < i2)
    {
      localJSONObject = a(i1, paramJSONObject, "statistics", paramA);
      localObject = a(localJSONObject, "type", paramA, "", true);
      str = a(localJSONObject, "url", paramA, "", true);
      if ((!TextUtils.isEmpty((CharSequence)localObject)) && (!TextUtils.isEmpty(str)))
      {
        if (!"playheadReachedValue".equals(localObject)) {
          break label223;
        }
        localObject = new com.my.target.core.f.g((String)localObject, str);
        if (!localJSONObject.has("value")) {
          break label180;
        }
        f1 = (float)a(localJSONObject, "value", paramA, -1.0D, true);
        if (f1 != -1.0F)
        {
          ((com.my.target.core.f.g)localObject).a = f1;
          label165:
          localArrayList.add(localObject);
        }
      }
    }
    for (;;)
    {
      i1 += 1;
      break label40;
      break;
      label180:
      if (!localJSONObject.has("pvalue")) {
        break label165;
      }
      f1 = (float)a(localJSONObject, "pvalue", paramA, -1.0D, true);
      if (f1 != -1.0F)
      {
        ((com.my.target.core.f.g)localObject).b = f1;
        break label165;
        label223:
        localArrayList.add(new com.my.target.core.f.i((String)localObject, str));
      }
    }
  }
  
  public static Collection<String> a(Collection<j.a> paramCollection, com.cleanmaster.cleancloud.core.base.e paramE, com.cleanmaster.cleancloud.core.residual.i paramI)
  {
    String str1 = paramE.c;
    int i1 = str1.length();
    TreeSet localTreeSet = new TreeSet();
    paramCollection = paramCollection.iterator();
    while (paramCollection.hasNext())
    {
      j.a localA = (j.a)paramCollection.next();
      if ((localA.c == 0) && ((localA.e.a == 3) || (localA.e.a == 5))) {
        if (localA.e.a == 3)
        {
          a(paramE, localA.a, localA.e.l, localTreeSet);
        }
        else if (localA.e.a == 5)
        {
          String str2 = str1 + File.separator;
          a(i1 + 1, str2 + localA.a, localA.e.l, localTreeSet, paramI);
        }
      }
    }
    paramCollection = null;
    if (!localTreeSet.isEmpty())
    {
      paramCollection = new ArrayList(localTreeSet.size());
      paramCollection.addAll(localTreeSet);
    }
    return paramCollection;
  }
  
  private static Date a(PushMessage paramPushMessage)
  {
    if (paramPushMessage == null) {}
    for (;;)
    {
      return null;
      paramPushMessage = paramPushMessage.b(com.keniu.security.update.c.a.a.b.h);
      try
      {
        if (!TextUtils.isEmpty(paramPushMessage))
        {
          paramPushMessage = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").parse(paramPushMessage);
          return paramPushMessage;
        }
      }
      catch (Exception paramPushMessage) {}
    }
    return null;
  }
  
  private static List<com.cleanmaster.ui.resultpage.item.wizard.d> a(Context paramContext, int paramInt1, int paramInt2)
  {
    ArrayList localArrayList = null;
    Object localObject = com.cleanmaster.ui.resultpage.item.wizard.b.a().a(S(paramInt1), paramInt2);
    if (((ArrayList)localObject).size() != 0)
    {
      localArrayList = new ArrayList();
      localObject = ((ArrayList)localObject).iterator();
      while (((Iterator)localObject).hasNext())
      {
        com.cleanmaster.ui.resultpage.b.a localA = (com.cleanmaster.ui.resultpage.b.a)((Iterator)localObject).next();
        if ((b(paramContext, localA)) && (c(paramContext, localA)))
        {
          com.cleanmaster.ui.resultpage.item.wizard.d localD = new com.cleanmaster.ui.resultpage.item.wizard.d(localA, paramContext);
          localD.d = a(paramContext, localA);
          localArrayList.add(localD);
        }
      }
    }
    if ((localArrayList != null) && (localArrayList.size() != 0))
    {
      Collections.sort(localArrayList, new com.cleanmaster.ui.resultpage.item.wizard.c());
      g(localArrayList);
    }
    return localArrayList;
  }
  
  public static List<String> a(SQLiteDatabase paramSQLiteDatabase)
  {
    SQLiteDatabase localSQLiteDatabase = null;
    ArrayList localArrayList = new ArrayList();
    try
    {
      paramSQLiteDatabase = paramSQLiteDatabase.rawQuery("SELECT * FROM sqlite_master WHERE type='table';", null);
      localSQLiteDatabase = paramSQLiteDatabase;
      paramSQLiteDatabase.moveToFirst();
      for (;;)
      {
        localSQLiteDatabase = paramSQLiteDatabase;
        if (paramSQLiteDatabase.isAfterLast()) {
          break;
        }
        localSQLiteDatabase = paramSQLiteDatabase;
        String str = paramSQLiteDatabase.getString(1);
        localSQLiteDatabase = paramSQLiteDatabase;
        if (!str.equals("android_metadata"))
        {
          localSQLiteDatabase = paramSQLiteDatabase;
          if (!str.equals("sqlite_sequence"))
          {
            localSQLiteDatabase = paramSQLiteDatabase;
            localArrayList.add(str);
          }
        }
        localSQLiteDatabase = paramSQLiteDatabase;
        paramSQLiteDatabase.moveToNext();
      }
      if (paramSQLiteDatabase == null) {
        return localArrayList;
      }
    }
    finally
    {
      if (localSQLiteDatabase != null) {
        localSQLiteDatabase.close();
      }
    }
    paramSQLiteDatabase.close();
    return localArrayList;
  }
  
  public static List<String> a(SharePhotoContent paramSharePhotoContent, UUID paramUUID)
  {
    if (paramSharePhotoContent != null)
    {
      paramSharePhotoContent = paramSharePhotoContent.a;
      if (paramSharePhotoContent != null) {}
    }
    else
    {
      return null;
    }
    paramSharePhotoContent = com.facebook.internal.w.a(paramSharePhotoContent, new com.facebook.share.internal.k(paramUUID));
    paramUUID = com.facebook.internal.w.a(paramSharePhotoContent, new com.facebook.share.internal.l());
    com.facebook.internal.q.a(paramSharePhotoContent);
    return paramUUID;
  }
  
  public static List<File> a(File paramFile)
  {
    paramFile = Arrays.asList(paramFile.listFiles());
    Collections.sort(paramFile, new com.cleanmaster.base.util.b.c());
    return paramFile;
  }
  
  public static List<File> a(String paramString, FilenameFilter paramFilenameFilter)
  {
    i2 = 0;
    try
    {
      localClass = Class.forName("android.os.SELinux");
    }
    catch (ClassNotFoundException localClassNotFoundException1)
    {
      for (;;)
      {
        Class localClass;
        boolean bool;
        Object localObject1 = null;
        i1 = 0;
      }
    }
    catch (IllegalAccessException localIllegalAccessException1)
    {
      for (;;)
      {
        Object localObject2 = null;
        i1 = 0;
      }
    }
    catch (InvocationTargetException localInvocationTargetException1)
    {
      for (;;)
      {
        Object localObject3 = null;
        i1 = 0;
      }
    }
    catch (NoSuchMethodException localNoSuchMethodException1)
    {
      label74:
      Object localObject4;
      for (;;)
      {
        localObject4 = null;
        i1 = 0;
      }
      Object localObject5 = ((File)localObject5).list(paramFilenameFilter);
      if (localObject5 == null) {
        return new ArrayList(0);
      }
      ArrayList localArrayList = new ArrayList(localObject5.length);
      int i3 = localObject5.length;
      if (i2 < i3)
      {
        String str = localObject5[i2];
        if (i1 != 0)
        {
          try
          {
            paramFilenameFilter = localObject4.getDeclaredMethod("getFileContext", new Class[] { String.class });
            if (paramFilenameFilter == null) {
              break label313;
            }
            paramFilenameFilter = (String)paramFilenameFilter.invoke(null, new Object[] { paramString + str });
          }
          catch (NoSuchMethodException paramFilenameFilter)
          {
            for (;;)
            {
              paramFilenameFilter = null;
            }
          }
          catch (InvocationTargetException paramFilenameFilter)
          {
            for (;;)
            {
              paramFilenameFilter = null;
            }
          }
          catch (IllegalAccessException paramFilenameFilter)
          {
            for (;;)
            {
              paramFilenameFilter = null;
            }
          }
          if (paramFilenameFilter != null) {
            localArrayList.add(new File(str));
          }
        }
        for (;;)
        {
          i2 += 1;
          break;
          localArrayList.add(new File(str));
        }
      }
      return localArrayList;
    }
    try
    {
      if (!((Boolean)localClass.getDeclaredMethod("isSELinuxEnabled", new Class[0]).invoke(null, new Object[0])).booleanValue()) {
        break label361;
      }
      bool = ((Boolean)localClass.getDeclaredMethod("isSELinuxEnforced", new Class[0]).invoke(null, new Object[0])).booleanValue();
      if (!bool) {
        break label361;
      }
      i1 = 1;
    }
    catch (NoSuchMethodException localNoSuchMethodException2)
    {
      break label155;
    }
    catch (InvocationTargetException localInvocationTargetException2)
    {
      break label145;
    }
    catch (IllegalAccessException localIllegalAccessException2)
    {
      break label135;
    }
    catch (ClassNotFoundException localClassNotFoundException2)
    {
      break label125;
      i1 = 0;
      break label74;
    }
    localObject5 = new File(paramString);
    if (!((File)localObject5).isDirectory()) {
      throw new IOException(paramString + " is not directory");
    }
  }
  
  public static List<com.cmcm.mixad.e> a(String paramString, List<com.cmcm.b.a.a> paramList, Context paramContext)
  {
    if ((paramList == null) || (paramList.isEmpty())) {
      return null;
    }
    new StringBuilder("getMixBeansFromNativeAds: posid=").append(paramString).append(" nativeAdlist size=").append(paramList.size());
    ArrayList localArrayList = new ArrayList();
    for (;;)
    {
      com.cmcm.b.a.a localA;
      try
      {
        Iterator localIterator = paramList.iterator();
        if (localIterator.hasNext())
        {
          localA = (com.cmcm.b.a.a)localIterator.next();
          paramList = localA.a();
          if ((!"cm".equals(paramList)) && (!com.cmcm.mixad.a.g.equals(paramList))) {
            break label146;
          }
          paramList = a(paramString, localA, paramContext);
          if (paramList == null) {
            continue;
          }
          localArrayList.add(paramList);
        }
        if ("ab".equals(paramList)) {
          break label166;
        }
      }
      catch (Exception paramList)
      {
        paramList.printStackTrace();
        d(paramString, localArrayList);
        return localArrayList;
      }
      label146:
      if ("fb_h".equals(paramList))
      {
        label166:
        paramList = localA.a();
        if (("ab".equals(paramList)) || ("fb_h".equals(paramList)))
        {
          paramList = new com.cmcm.mixad.e();
          paramList.a = paramString;
          paramList.b = localA;
          paramList.c = paramContext.getApplicationContext();
          paramList.m = "";
          paramList.l = localA.getAdTitle();
          paramList.e = 1;
        }
        else
        {
          paramList = null;
        }
      }
      else
      {
        paramList = null;
      }
    }
  }
  
  public static List<com.cleanmaster.ui.resultpage.item.wizard.d> a(ArrayList<com.cleanmaster.ui.resultpage.b.a> paramArrayList, Context paramContext)
  {
    com.cleanmaster.ui.resultpage.b.a localA = null;
    Object localObject = localA;
    if (paramArrayList != null)
    {
      localObject = localA;
      if (paramArrayList.size() != 0)
      {
        localObject = new ArrayList();
        paramArrayList = paramArrayList.iterator();
        while (paramArrayList.hasNext())
        {
          localA = (com.cleanmaster.ui.resultpage.b.a)paramArrayList.next();
          if ((b(paramContext, localA)) && (c(paramContext, localA)))
          {
            com.cleanmaster.ui.resultpage.item.wizard.d localD = new com.cleanmaster.ui.resultpage.item.wizard.d(localA, paramContext);
            localD.d = a(paramContext, localA);
            ((ArrayList)localObject).add(localD);
          }
        }
      }
    }
    return localObject;
  }
  
  public static List<com.cleanmaster.boost.autostarts.core.b> a(Collection<com.cleanmaster.boost.boostengine.autostart.a.a> paramCollection, List<String> paramList)
  {
    ArrayList localArrayList = new ArrayList();
    if (paramCollection != null)
    {
      paramCollection = paramCollection.iterator();
      while (paramCollection.hasNext())
      {
        Object localObject = (com.cleanmaster.boost.boostengine.autostart.a.a)paramCollection.next();
        if (localObject != null)
        {
          localObject = new com.cleanmaster.boost.autostarts.core.b((com.cleanmaster.boost.boostengine.autostart.a.a)localObject);
          ((com.cleanmaster.boost.autostarts.core.b)localObject).a(paramList);
          localArrayList.add(localObject);
        }
      }
    }
    return localArrayList;
  }
  
  public static List<com.cleanmaster.ui.resultpage.item.h> a(List<com.cleanmaster.ui.resultpage.item.h> paramList, int paramInt)
  {
    ArrayList localArrayList = new ArrayList();
    if ((paramList == null) || (paramList.isEmpty())) {
      return localArrayList;
    }
    int i3 = paramList.size();
    String str1 = "";
    int i2 = 0;
    String str2 = "";
    if (i2 < i3)
    {
      com.cleanmaster.ui.resultpage.item.h localH = (com.cleanmaster.ui.resultpage.item.h)paramList.get(i2);
      String str3 = localH.aw;
      if (i2 > 0) {
        str1 = ((com.cleanmaster.ui.resultpage.item.h)paramList.get(i2 - 1)).aw;
      }
      if (i2 > 1) {
        str2 = ((com.cleanmaster.ui.resultpage.item.h)paramList.get(i2 - 2)).aw;
      }
      Object localObject;
      label136:
      int i1;
      if (i2 + 1 < i3)
      {
        localObject = ((com.cleanmaster.ui.resultpage.item.h)paramList.get(i2 + 1)).aw;
        new StringBuilder("preStamp : ").append(str1).append("  lastStamp : ").append(str2).append("  stamp : ").append(str3).append("  next : ").append((String)localObject);
        if (!TextUtils.isEmpty(str3)) {
          break label223;
        }
        i1 = 0;
        label195:
        if (i1 != 0) {
          break label332;
        }
        localArrayList.add(localH);
      }
      for (;;)
      {
        i2 += 1;
        break;
        localObject = "";
        break label136;
        label223:
        if (str3.equalsIgnoreCase(str1))
        {
          i1 = 0;
          break label195;
        }
        if (("misc.nav".equalsIgnoreCase(str3)) || ("misc.top0".equalsIgnoreCase(str3)) || ("adad.buss".equalsIgnoreCase(str3)))
        {
          i1 = 0;
          break label195;
        }
        if ((com.cleanmaster.ui.resultpage.a.e(str3)) && (com.cleanmaster.ui.resultpage.a.e(str1)))
        {
          i1 = 0;
          break label195;
        }
        if (str3.equalsIgnoreCase(str2))
        {
          i1 = 0;
          break label195;
        }
        if (str1.equalsIgnoreCase((String)localObject))
        {
          i1 = 0;
          break label195;
        }
        i1 = 1;
        break label195;
        label332:
        localObject = com.cleanmaster.ui.resultpage.item.s.a(str3, paramInt);
        if (localObject != null)
        {
          localArrayList.add(localObject);
          if ("misc.new".equals(str3)) {
            com.cleanmaster.configmanager.h.a(com.keniu.security.d.c().getApplicationContext()).b("resultpage_group_new", false);
          }
        }
        localArrayList.add(localH);
      }
    }
    paramList.clear();
    return localArrayList;
  }
  
  private static List<CityData> a(Set<String> paramSet)
  {
    Object localObject = com.lock.sideslip.d.a().c;
    ArrayList localArrayList = new ArrayList();
    if (localObject != null)
    {
      localObject = ((com.lock.sideslip.b.e)localObject).d();
      if (((LinkedHashMap)localObject).size() > 0)
      {
        Iterator localIterator = ((LinkedHashMap)localObject).keySet().iterator();
        while (localIterator.hasNext())
        {
          String str = (String)localIterator.next();
          if (paramSet.add(str))
          {
            CityData localCityData = new CityData();
            localCityData.a = str;
            localCityData.b = ((String)((LinkedHashMap)localObject).get(str));
            localCityData.d = 1;
            localArrayList.add(localCityData);
          }
        }
      }
    }
    return localArrayList;
  }
  
  private static List<hi> a(JSONArray paramJSONArray1, JSONArray paramJSONArray2, JSONArray paramJSONArray3, com.google.android.gms.internal.e[] paramArrayOfE)
  {
    ArrayList localArrayList = new ArrayList();
    int i1 = 0;
    while (i1 < paramJSONArray1.length())
    {
      localArrayList.add(a(paramJSONArray1.getJSONObject(i1), paramJSONArray2, paramJSONArray3, paramArrayOfE));
      i1 += 1;
    }
    return localArrayList;
  }
  
  public static List<String> a(Document paramDocument, String paramString1, String paramString2, String paramString3)
  {
    return a(paramDocument, paramString1, paramString2, paramString3, new XmlUtils.2());
  }
  
  private static <T> List<T> a(Document paramDocument, String paramString1, String paramString2, String paramString3, XmlUtils.NodeProcessor<T> paramNodeProcessor)
  {
    int i1 = 0;
    ArrayList localArrayList = new ArrayList();
    if (paramDocument == null) {
      return localArrayList;
    }
    paramString1 = paramDocument.getElementsByTagName(paramString1);
    if (paramString1 == null) {
      return localArrayList;
    }
    if (paramString3 == null) {
      paramDocument = null;
    }
    while (i1 < paramString1.getLength())
    {
      paramString3 = paramString1.item(i1);
      if ((paramString3 != null) && (a(paramString3, paramString2, paramDocument)))
      {
        paramString3 = paramNodeProcessor.process(paramString3);
        if (paramString3 != null) {
          localArrayList.add(paramString3);
        }
      }
      i1 += 1;
      continue;
      paramDocument = Arrays.asList(new String[] { paramString3 });
    }
    return localArrayList;
  }
  
  public static List<Node> a(Node paramNode, String paramString1, String paramString2, List<String> paramList)
  {
    if ((paramNode == null) || (paramString1 == null)) {
      return null;
    }
    ArrayList localArrayList = new ArrayList();
    paramNode = paramNode.getChildNodes();
    int i1 = 0;
    while (i1 < paramNode.getLength())
    {
      Node localNode = paramNode.item(i1);
      if ((localNode.getNodeName().equals(paramString1)) && (a(localNode, paramString2, paramList))) {
        localArrayList.add(localNode);
      }
      i1 += 1;
    }
    return localArrayList;
  }
  
  public static List<com.cleanmaster.boost.cpu.a.b> a(float[] paramArrayOfFloat)
  {
    boolean bool2 = false;
    boolean bool1 = bool2;
    if (paramArrayOfFloat != null)
    {
      bool1 = bool2;
      if (paramArrayOfFloat.length == 2)
      {
        bool1 = bool2;
        if (paramArrayOfFloat[0] > 0.0F)
        {
          bool1 = bool2;
          if (paramArrayOfFloat[1] > 0.0F) {
            bool1 = com.cleanmaster.boost.cpu.e.a(paramArrayOfFloat);
          }
        }
      }
    }
    Object localObject = new com.cleanmaster.boost.cpu.a();
    paramArrayOfFloat = new com.cleanmaster.boost.cpu.a.a();
    paramArrayOfFloat.a = true;
    paramArrayOfFloat.b = bool1;
    ((com.cleanmaster.boost.cpu.a)localObject).a = paramArrayOfFloat;
    paramArrayOfFloat = new ArrayList();
    ((com.cleanmaster.boost.cpu.a)localObject).a(new com.cleanmaster.boost.process.a(paramArrayOfFloat));
    ((com.cleanmaster.boost.cpu.a)localObject).a();
    if ((bool1) && (paramArrayOfFloat.isEmpty()))
    {
      localObject = b(com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).be(), 5);
      if ((localObject != null) && (((List)localObject).size() > 0))
      {
        Iterator localIterator = ((List)localObject).iterator();
        while (localIterator.hasNext())
        {
          com.cleanmaster.common.model.AppInfo localAppInfo = (com.cleanmaster.common.model.AppInfo)localIterator.next();
          com.cleanmaster.boost.cpu.a.b localB = new com.cleanmaster.boost.cpu.a.b();
          localB.a = localAppInfo.getPackageName();
          paramArrayOfFloat.add(localB);
        }
        ((List)localObject).clear();
      }
    }
    return paramArrayOfFloat;
  }
  
  public static Map<String, InputMethodInfo> a(Context paramContext, boolean paramBoolean)
  {
    HashMap localHashMap = new HashMap();
    Object localObject1 = (InputMethodManager)paramContext.getSystemService("input_method");
    if (localObject1 == null) {
      return localHashMap;
    }
    Object localObject2;
    int i1;
    try
    {
      localObject1 = ((InputMethodManager)localObject1).getInputMethodList();
      if (localObject1 == null) {
        return localHashMap;
      }
    }
    catch (Exception localException)
    {
      for (;;)
      {
        localException.printStackTrace();
        localObject2 = null;
      }
      i1 = 0;
    }
    InputMethodInfo localInputMethodInfo;
    if (i1 < localObject2.size()) {
      localInputMethodInfo = (InputMethodInfo)localObject2.get(i1);
    }
    for (;;)
    {
      try
      {
        String str = Settings.Secure.getString(paramContext.getContentResolver(), "default_input_method");
        if ((localInputMethodInfo.getId() != null) && (localInputMethodInfo.getId().equals(str)))
        {
          i2 = localInputMethodInfo.getServiceInfo().applicationInfo.flags;
          if (((i2 & 0x1) == 0) && ((i2 & 0x80) == 0)) {
            break label205;
          }
          i2 = 1;
          if (i2 == 0) {
            continue;
          }
          if (paramBoolean) {
            localHashMap.put(localInputMethodInfo.getPackageName(), localInputMethodInfo);
          }
        }
      }
      catch (NullPointerException localNullPointerException)
      {
        localNullPointerException.printStackTrace();
        continue;
        localHashMap.put(localNullPointerException.getPackageName(), localNullPointerException);
        continue;
      }
      i1 += 1;
      break;
      return localHashMap;
      label205:
      int i2 = 0;
    }
  }
  
  public static Map<String, String> a(Uri paramUri)
  {
    HashMap localHashMap = new HashMap();
    String str = paramUri.getQueryParameter("group");
    if ((!TextUtils.isEmpty(str)) && (!"null".equalsIgnoreCase(str)))
    {
      localHashMap.put("group", str);
      str = paramUri.getQueryParameter("having");
      if ((TextUtils.isEmpty(str)) || ("null".equalsIgnoreCase(str))) {
        break label204;
      }
      localHashMap.put("having", str);
      label80:
      str = paramUri.getQueryParameter("order");
      if ((TextUtils.isEmpty(str)) || ("null".equalsIgnoreCase(str))) {
        break label218;
      }
      localHashMap.put("order", str);
      label116:
      str = paramUri.getQueryParameter("limit");
      if ((TextUtils.isEmpty(str)) || ("null".equalsIgnoreCase(str))) {
        break label232;
      }
      localHashMap.put("limit", str);
    }
    for (;;)
    {
      paramUri = paramUri.getQueryParameter("count");
      if ((TextUtils.isEmpty(paramUri)) || ("null".equalsIgnoreCase(paramUri))) {
        break label246;
      }
      localHashMap.put("count", paramUri);
      return localHashMap;
      localHashMap.put("group", null);
      break;
      label204:
      localHashMap.put("having", null);
      break label80;
      label218:
      localHashMap.put("order", null);
      break label116;
      label232:
      localHashMap.put("limit", null);
    }
    label246:
    localHashMap.put("count", null);
    return localHashMap;
  }
  
  public static <T> Set<T> a(T[] paramArrayOfT)
  {
    return new HashSet(Arrays.asList(paramArrayOfT));
  }
  
  public static Vector<com.cleanmaster.ui.resultpage.item.h> a(List<com.cleanmaster.ui.resultpage.item.h> paramList, Context paramContext, int paramInt)
  {
    Vector localVector = new Vector();
    if ((paramList == null) || (paramList.isEmpty())) {
      return localVector;
    }
    int i2 = paramList.size();
    int i1 = 0;
    while (i1 < i2)
    {
      localVector.add(null);
      i1 += 1;
    }
    if (paramContext == null)
    {
      a(localVector, paramList);
      return localVector;
    }
    paramContext = com.cleanmaster.ui.resultpage.ctrl.j.a().a(paramInt);
    if (paramContext == null)
    {
      a(localVector, paramList);
      return localVector;
    }
    new StringBuilder(" sort 云端下发规则 : ").append(paramContext.toString());
    a(localVector, paramList, paramContext, i2);
    return localVector;
  }
  
  public static Executor a(int paramInt1, int paramInt2, QueueProcessingType paramQueueProcessingType)
  {
    int i1;
    if (paramQueueProcessingType == QueueProcessingType.LIFO)
    {
      i1 = 1;
      if (i1 == 0) {
        break label54;
      }
    }
    label54:
    for (paramQueueProcessingType = new LIFOLinkedBlockingDeque();; paramQueueProcessingType = new LinkedBlockingQueue())
    {
      paramQueueProcessingType = (BlockingQueue)paramQueueProcessingType;
      return new ThreadPoolExecutor(paramInt1, paramInt1, 0L, TimeUnit.MILLISECONDS, paramQueueProcessingType, new com.nostra13.universalimageloader.core.a(paramInt2));
      i1 = 0;
      break;
    }
  }
  
  private static JSONArray a(List paramList, com.facebook.share.internal.d paramD)
  {
    JSONArray localJSONArray = new JSONArray();
    paramList = paramList.iterator();
    while (paramList.hasNext()) {
      localJSONArray.put(a(paramList.next(), paramD));
    }
    return localJSONArray;
  }
  
  private static JSONArray a(JSONArray paramJSONArray, boolean paramBoolean)
  {
    JSONArray localJSONArray = new JSONArray();
    int i1 = 0;
    if (i1 < paramJSONArray.length())
    {
      Object localObject2 = paramJSONArray.get(i1);
      Object localObject1;
      if ((localObject2 instanceof JSONArray)) {
        localObject1 = a((JSONArray)localObject2, paramBoolean);
      }
      for (;;)
      {
        localJSONArray.put(localObject1);
        i1 += 1;
        break;
        localObject1 = localObject2;
        if ((localObject2 instanceof JSONObject)) {
          localObject1 = a((JSONObject)localObject2, paramBoolean);
        }
      }
    }
    return localJSONArray;
  }
  
  public static JSONArray a(JSONObject paramJSONObject, String paramString, com.my.target.core.parsers.a paramA)
  {
    JSONArray localJSONArray = null;
    if (paramJSONObject.has(paramString)) {}
    try
    {
      localJSONArray = paramJSONObject.getJSONArray(paramString);
      return localJSONArray;
    }
    catch (JSONException paramJSONObject)
    {
      new StringBuilder("JSON Exception in field '").append(paramString).append("', Operation: ").append(paramA.d).append(", Unit: ").append(paramA.e);
    }
    return null;
  }
  
  public static JSONObject a(int paramInt, JSONArray paramJSONArray, String paramString, com.my.target.core.parsers.a paramA)
  {
    try
    {
      paramJSONArray = paramJSONArray.getJSONObject(paramInt);
      return paramJSONArray;
    }
    catch (JSONException paramJSONArray)
    {
      a("Unable to get JSONObject from JSONArray '" + paramString + "'", paramA, "JSONException");
    }
    return null;
  }
  
  private static JSONObject a(ShareOpenGraphAction paramShareOpenGraphAction, com.facebook.share.internal.d paramD)
  {
    JSONObject localJSONObject = new JSONObject();
    Iterator localIterator = paramShareOpenGraphAction.a.keySet().iterator();
    while (localIterator.hasNext())
    {
      String str = (String)localIterator.next();
      localJSONObject.put(str, a(paramShareOpenGraphAction.a(str), paramD));
    }
    return localJSONObject;
  }
  
  public static JSONObject a(com.in2wow.sdk.model.c paramC)
  {
    try
    {
      JSONObject localJSONObject = new JSONObject();
      return localJSONObject;
    }
    catch (Exception paramC)
    {
      try
      {
        com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.y, Integer.valueOf(paramC.g()));
        com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.a, Integer.valueOf(paramC.p()));
        com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.b, Integer.valueOf(paramC.q()));
        return localJSONObject;
      }
      catch (Exception paramC) {}
      paramC = paramC;
      return null;
    }
  }
  
  public static JSONObject a(InputStream paramInputStream)
  {
    int i3 = 0;
    if (paramInputStream.read() != 0) {
      return null;
    }
    int i2 = 0;
    int i1 = 0;
    while (i2 < 3)
    {
      int i4 = paramInputStream.read();
      if (i4 == -1)
      {
        com.facebook.internal.p.a(LoggingBehavior.CACHE, com.facebook.internal.j.a, "readHeader: stream.read returned -1 while reading header size");
        return null;
      }
      i1 = (i1 << 8) + (i4 & 0xFF);
      i2 += 1;
    }
    byte[] arrayOfByte = new byte[i1];
    i2 = i3;
    while (i2 < i1)
    {
      i3 = paramInputStream.read(arrayOfByte, i2, i1 - i2);
      if (i3 <= 0)
      {
        com.facebook.internal.p.a(LoggingBehavior.CACHE, com.facebook.internal.j.a, "readHeader: stream.read stopped at " + Integer.valueOf(i2) + " when expected " + i1);
        return null;
      }
      i2 += i3;
    }
    paramInputStream = new JSONTokener(new String(arrayOfByte));
    try
    {
      paramInputStream = paramInputStream.nextValue();
      if (!(paramInputStream instanceof JSONObject))
      {
        com.facebook.internal.p.a(LoggingBehavior.CACHE, com.facebook.internal.j.a, "readHeader: expected JSONObject, got " + paramInputStream.getClass().getCanonicalName());
        return null;
      }
      paramInputStream = (JSONObject)paramInputStream;
      return paramInputStream;
    }
    catch (JSONException paramInputStream)
    {
      throw new IOException(paramInputStream.getMessage());
    }
  }
  
  public static JSONObject a(UUID paramUUID, ShareOpenGraphContent paramShareOpenGraphContent)
  {
    Object localObject = paramShareOpenGraphContent.a;
    ArrayList localArrayList = new ArrayList();
    localObject = a((ShareOpenGraphAction)localObject, new com.facebook.share.internal.m(paramUUID, localArrayList));
    com.facebook.internal.q.a(localArrayList);
    if ((paramShareOpenGraphContent.j != null) && (com.facebook.internal.w.a(((JSONObject)localObject).optString("place")))) {
      ((JSONObject)localObject).put("place", paramShareOpenGraphContent.j);
    }
    if (paramShareOpenGraphContent.i != null)
    {
      paramUUID = ((JSONObject)localObject).optJSONArray("tags");
      if (paramUUID == null) {}
      for (paramUUID = new HashSet();; paramUUID = com.facebook.internal.w.b(paramUUID))
      {
        paramShareOpenGraphContent = paramShareOpenGraphContent.i.iterator();
        while (paramShareOpenGraphContent.hasNext()) {
          paramUUID.add((String)paramShareOpenGraphContent.next());
        }
      }
      ((JSONObject)localObject).put("tags", new ArrayList(paramUUID));
    }
    return localObject;
  }
  
  public static JSONObject a(JSONObject paramJSONObject, String paramString, com.my.target.core.parsers.a paramA, boolean paramBoolean)
  {
    Object localObject = null;
    if (paramJSONObject.has(paramString)) {}
    do
    {
      try
      {
        paramJSONObject = paramJSONObject.getJSONObject(paramString);
        return paramJSONObject;
      }
      catch (JSONException localJSONException)
      {
        do
        {
          paramString = localJSONException.getMessage() + "  field: " + paramString + ", Operation: " + paramA.d + ", Unit: " + paramA.e;
          paramJSONObject = localObject;
        } while (!paramBoolean);
        a(paramString, paramA, localJSONException, "JSONException");
        return null;
      }
      paramJSONObject = localObject;
    } while (!paramBoolean);
    a("Didn't found required field '" + paramString + "', Operation: " + paramA.d + ", Unit: " + paramA.e, paramA, null, "Required field absence");
    return null;
  }
  
  public static JSONObject a(JSONObject paramJSONObject, boolean paramBoolean)
  {
    if (paramJSONObject == null) {
      return null;
    }
    for (;;)
    {
      JSONObject localJSONObject1;
      JSONObject localJSONObject2;
      int i1;
      String str1;
      Object localObject1;
      Object localObject2;
      String str2;
      try
      {
        localJSONObject1 = new JSONObject();
        localJSONObject2 = new JSONObject();
        JSONArray localJSONArray = paramJSONObject.names();
        i1 = 0;
        if (i1 >= localJSONArray.length()) {
          break label242;
        }
        str1 = localJSONArray.getString(i1);
        localObject1 = paramJSONObject.get(str1);
        if ((localObject1 instanceof JSONObject))
        {
          localObject1 = a((JSONObject)localObject1, true);
          localObject2 = aL(str1);
          str2 = (String)((Pair)localObject2).first;
          localObject2 = (String)((Pair)localObject2).second;
          if (!paramBoolean) {
            break label202;
          }
          if ((str2 != null) && (str2.equals("fbsdk")))
          {
            localJSONObject1.put(str1, localObject1);
            break label267;
          }
        }
        else
        {
          if (!(localObject1 instanceof JSONArray)) {
            break label264;
          }
          localObject1 = a((JSONArray)localObject1, true);
          continue;
        }
        if ((str2 == null) || (str2.equals("og"))) {
          localJSONObject1.put((String)localObject2, localObject1);
        }
      }
      catch (JSONException paramJSONObject)
      {
        throw new FacebookException("Failed to create json object from share content");
      }
      localJSONObject2.put((String)localObject2, localObject1);
      break label267;
      label202:
      if ((str2 != null) && (str2.equals("fb")))
      {
        localJSONObject1.put(str1, localObject1);
      }
      else
      {
        localJSONObject1.put((String)localObject2, localObject1);
        break label267;
        label242:
        if (localJSONObject2.length() > 0) {
          localJSONObject1.put("data", localJSONObject2);
        }
        return localJSONObject1;
        label264:
        continue;
      }
      label267:
      i1 += 1;
    }
  }
  
  public static Node a(Node paramNode, String paramString)
  {
    if (paramNode == null) {}
    do
    {
      return null;
      paramNode = a(paramNode, paramString, null, null);
    } while ((paramNode == null) || (paramNode.isEmpty()));
    return (Node)paramNode.get(0);
  }
  
  public static void a()
  {
    if (Build.VERSION.SDK_INT >= 18) {
      Trace.endSection();
    }
  }
  
  public static void a(byte paramByte1, byte paramByte2)
  {
    ks.cm.antivirus.privatebrowsing.g.k localK = new ks.cm.antivirus.privatebrowsing.g.k(paramByte2, paramByte1, PbLib.getIns().getApplicationContext().getPackageName());
    ks.cm.antivirus.privatebrowsing.g.a.a(ks.cm.antivirus.privatebrowsing.g.k.a, localK.toString());
  }
  
  public static void a(int paramInt, byte paramByte1, byte paramByte2)
  {
    String str = "step=" + paramInt + "&f=" + paramByte1 + "&ibg=" + paramByte2;
    com.cleanmaster.cleancloud.core.b.a().a("cm_cleancloud_cache_upload", str);
  }
  
  public static void a(int paramInt1, int paramInt2)
  {
    throw new NullPointerException();
  }
  
  public static void a(int paramInt1, int paramInt2, int paramInt3, byte paramByte)
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("guidedialog=").append(paramInt1);
    localStringBuilder.append("&returnstate=").append(paramInt2);
    localStringBuilder.append("&usertype=").append(paramInt3);
    localStringBuilder.append("&frompage=").append(paramByte);
    localStringBuilder.append("&permission=1");
    com.cleanmaster.kinfoc.p.a().a("cm_battery_usageguide", localStringBuilder.toString(), true);
  }
  
  public static void a(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("popup=").append(paramInt1);
    localStringBuilder.append("&frompage=").append(paramInt2);
    localStringBuilder.append("&appcount=").append(paramInt3);
    localStringBuilder.append("&processed=").append(paramInt4);
    com.cleanmaster.kinfoc.p.a().a("cm_battery_operateaction", localStringBuilder.toString(), true);
  }
  
  public static void a(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, String paramString)
  {
    paramString = "interface=" + paramInt1 + "&isfirst=" + paramInt2 + "&business=0&source=" + paramInt3 + "&boostsource=" + paramInt4 + "&haslite=" + s(com.keniu.security.d.a()) + "&scene0=" + paramInt5 + "&appstyle=" + paramInt6 + "&guidestyle=" + paramInt7 + "&utag1=" + paramString;
    if ((paramInt1 == 2) || (paramInt1 == 3))
    {
      com.cleanmaster.kinfoc.p.a().a("cm_game_interface2", paramString);
      return;
    }
    com.cleanmaster.kinfoc.p.a().a("cm_game_interface2", paramString, true);
  }
  
  public static void a(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, String paramString1, String paramString2, int paramInt6, int paramInt7, String paramString3, int paramInt8, int paramInt9, int paramInt10, String paramString4, int paramInt11, int paramInt12, int paramInt13)
  {
    com.cleanmaster.boost.d.w.a(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, 0, 0, paramString1, paramString2, paramInt6, paramInt7, 0, 0, 0, 0, paramString3, paramInt8, paramInt9, paramInt10, paramString4, paramInt11, paramInt12, paramInt13).report();
  }
  
  public static void a(int paramInt1, int paramInt2, int paramInt3, String paramString)
  {
    com.cleanmaster.ui.game.d.h.a((byte)paramInt1, (byte)paramInt2, (byte)paramInt3, paramString).report();
  }
  
  public static void a(int paramInt1, int paramInt2, int paramInt3, String paramString1, int paramInt4, int paramInt5, int paramInt6, int paramInt7, short paramShort1, short paramShort2, int paramInt8, int paramInt9, int paramInt10, long paramLong, int paramInt11, String paramString2)
  {
    com.cleanmaster.boost.d.ag.a((byte)paramInt1, (byte)paramInt2, (byte)paramInt3, paramString1, (byte)paramInt4, paramInt5, paramInt6, (byte)paramInt7, paramShort1, paramShort2, paramInt8, (byte)paramInt9, (short)paramInt10, (int)paramLong, (byte)paramInt11, paramString2).report();
  }
  
  public static void a(int paramInt1, int paramInt2, int paramInt3, String paramString1, String paramString2, int paramInt4)
  {
    com.cleanmaster.base.util.concurrent.BackgroundThread.a(new com.cleanmaster.ui.game.x(paramInt1, paramInt2, paramInt3, paramString1, paramString2, paramInt4));
  }
  
  public static void a(int paramInt1, int paramInt2, com.cleanmaster.ui.app.market.a paramA, String paramString1, int paramInt3, String paramString2)
  {
    byte b1 = 2;
    if (!TextUtils.isEmpty(paramString2)) {}
    for (;;)
    {
      try
      {
        i2 = Integer.parseInt(paramString2);
        paramString2 = com.keniu.security.d.a();
        boolean bool = com.cleanmaster.base.util.c.a.a(com.cleanmaster.configmanager.d.a(paramString2).aH());
        byte b2 = (byte)aL(paramString2);
        if (paramA == null) {
          break label284;
        }
        if (!com.cleanmaster.base.util.system.m.a(paramString2, paramA.d)) {
          break label238;
        }
        i1 = 2;
        if (!com.cleanmaster.base.util.system.m.a(paramString2)) {
          break label244;
        }
        i3 = 1;
        com.cleanmaster.ui.game.picks.s localS1 = new com.cleanmaster.ui.game.picks.s();
        paramString2 = localS1.a(paramInt1).c(i2);
        if (!bool) {
          break label250;
        }
        com.cleanmaster.ui.game.picks.s localS2 = paramString2.a(b1).f((byte)paramInt2);
        if (paramA == null) {
          break label256;
        }
        paramString2 = paramA.a;
        localS2 = localS2.a(paramString2);
        if (paramA == null) {
          break label264;
        }
        paramString2 = paramA.d;
        paramString1 = localS2.b(paramString2).b(b2).c(paramString1);
        if (paramA == null) {
          break label272;
        }
        b1 = (byte)paramA.n;
        paramString1 = paramString1.c(b1);
        if (paramA == null) {
          break label278;
        }
        b1 = (byte)paramA.m;
        paramString1.d(b1).a().e((byte)paramInt3).g((byte)0).b(0).d(i1).e(i3);
        localS1.report();
        return;
      }
      catch (NumberFormatException paramString2) {}
      int i2 = 0;
      continue;
      label238:
      int i1 = 1;
      continue;
      label244:
      int i3 = 2;
      continue;
      label250:
      b1 = 1;
      continue;
      label256:
      paramString2 = "n";
      continue;
      label264:
      paramString2 = "n";
      continue;
      label272:
      b1 = 0;
      continue;
      label278:
      b1 = 0;
      continue;
      label284:
      i1 = 0;
    }
  }
  
  public static void a(int paramInt1, int paramInt2, com.cleanmaster.ui.app.market.a paramA, String paramString1, int paramInt3, String paramString2, String paramString3)
  {
    int i2 = 0;
    int i1 = i2;
    if (!TextUtils.isEmpty(paramString2)) {}
    try
    {
      i1 = Integer.parseInt(paramString2);
      paramString2 = com.keniu.security.d.a();
      boolean bool = com.cleanmaster.base.util.c.a.a(com.cleanmaster.configmanager.d.a(paramString2).aH());
      byte b2 = (byte)aL(paramString2);
      int i3;
      if (com.cleanmaster.base.util.system.m.a(paramString2, paramString3))
      {
        i2 = 2;
        if (!com.cleanmaster.base.util.system.m.a(paramString2)) {
          break label229;
        }
        i3 = 1;
        label72:
        paramString3 = new com.cleanmaster.ui.game.picks.s();
        paramString2 = paramString3.a(paramInt1).c(i1);
        if (!bool) {
          break label235;
        }
        b1 = 2;
        label102:
        com.cleanmaster.ui.game.picks.s localS = paramString2.a(b1).f((byte)paramInt2);
        if (paramA == null) {
          break label241;
        }
        paramString2 = paramA.a;
        label126:
        localS = localS.a(paramString2);
        if (paramA == null) {
          break label249;
        }
        paramString2 = paramA.d;
        label145:
        paramString1 = localS.b(paramString2).b(b2).c(paramString1);
        if (paramA == null) {
          break label257;
        }
        b1 = (byte)paramA.n;
        label173:
        paramString1 = paramString1.c(b1);
        if (paramA == null) {
          break label263;
        }
      }
      label229:
      label235:
      label241:
      label249:
      label257:
      label263:
      for (byte b1 = (byte)paramA.m;; b1 = 0)
      {
        paramString1.d(b1).a().e((byte)paramInt3).d(i2).e(i3);
        paramString3.report();
        return;
        i2 = 1;
        break;
        i3 = 2;
        break label72;
        b1 = 1;
        break label102;
        paramString2 = "n";
        break label126;
        paramString2 = "n";
        break label145;
        b1 = 0;
        break label173;
      }
    }
    catch (NumberFormatException paramString2)
    {
      for (;;)
      {
        i1 = i2;
      }
    }
  }
  
  public static void a(int paramInt1, int paramInt2, String paramString)
  {
    com.cleanmaster.kinfoc.p.a().a("cm_probe_exception", "mtype=" + paramInt1 + "&stype=" + paramInt2 + "&xinfo=" + paramString, true);
  }
  
  public static void a(int paramInt1, int paramInt2, String paramString, int paramInt3)
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("dialog=");
    localStringBuilder.append(paramInt1);
    localStringBuilder.append("&action=");
    localStringBuilder.append(paramInt2);
    localStringBuilder.append("&language=");
    localStringBuilder.append(paramString);
    localStringBuilder.append("&usertype=");
    localStringBuilder.append(paramInt3);
    com.cleanmaster.kinfoc.p.a().a("cm_multilang_dialog", localStringBuilder.toString(), true);
  }
  
  public static void a(int paramInt1, int paramInt2, String paramString1, String paramString2)
  {
    a(paramInt1, paramInt2, paramString1, paramString2, "");
  }
  
  public static void a(int paramInt1, int paramInt2, String paramString1, String paramString2, String paramString3)
  {
    com.cleanmaster.base.util.concurrent.BackgroundThread.a(new com.cleanmaster.ui.game.u(paramString1, paramInt1, paramInt2, paramString2, paramString3));
  }
  
  public static void a(int paramInt1, int paramInt2, short paramShort1, short paramShort2, int paramInt3, int paramInt4, String paramString)
  {
    af.a((byte)paramInt1, (byte)paramInt2, paramShort1, paramShort2, paramInt3, (short)paramInt4, paramString).report();
  }
  
  public static void a(int paramInt, long paramLong)
  {
    if (FloatService.b()) {
      FloatService.a(paramInt, paramLong);
    }
  }
  
  private static void a(int paramInt, long paramLong, String paramString, PriorityQueue<com.google.android.gms.internal.ad> paramPriorityQueue)
  {
    paramString = new com.google.android.gms.internal.ad(paramLong, paramString);
    if ((paramPriorityQueue.size() == paramInt) && (((com.google.android.gms.internal.ad)paramPriorityQueue.peek()).a > paramString.a)) {}
    do
    {
      do
      {
        return;
      } while (paramPriorityQueue.contains(paramString));
      paramPriorityQueue.add(paramString);
    } while (paramPriorityQueue.size() <= paramInt);
    paramPriorityQueue.poll();
  }
  
  public static void a(int paramInt, Context paramContext, String paramString1, com.cleanmaster.ui.app.market.a paramA, String paramString2)
  {
    if (((paramContext instanceof Activity)) && (paramA != null))
    {
      if (!paramA.d()) {
        break label36;
      }
      com.cleanmaster.base.util.system.m.p(paramContext, paramA.d);
    }
    for (;;)
    {
      a(paramA, paramString1, 60, paramString2);
      return;
      label36:
      com.cleanmaster.ui.game.ad.a(paramInt, paramContext, paramA, paramString1, "g");
    }
  }
  
  public static void a(int paramInt, View paramView, long paramLong, Animation.AnimationListener paramAnimationListener)
  {
    float f2 = 0.0F;
    if ((paramView == null) || ((1 != paramInt) && (2 != paramInt))) {
      return;
    }
    float f1;
    if (1 == paramInt)
    {
      f1 = 1.0F;
      if (1 != paramInt) {
        break label115;
      }
    }
    for (;;)
    {
      AnimationSet localAnimationSet = new AnimationSet(true);
      localAnimationSet.addAnimation(a(f1, f2, paramLong, null));
      localAnimationSet.addAnimation(new ScaleAnimation(f1, f2, f1, f2, 2, 0.5F, 1, 0.5F));
      localAnimationSet.setDuration(paramLong);
      localAnimationSet.setAnimationListener(paramAnimationListener);
      localAnimationSet.setFillAfter(true);
      paramView.startAnimation(localAnimationSet);
      return;
      f1 = 0.0F;
      break;
      label115:
      f2 = 1.0F;
    }
  }
  
  public static void a(int paramInt1, com.cleanmaster.ui.app.market.a paramA, String paramString1, int paramInt2, int paramInt3, int paramInt4, String paramString2)
  {
    int i1 = 0;
    int i2 = i1;
    if (!TextUtils.isEmpty(paramString2)) {}
    try
    {
      i2 = Integer.parseInt(paramString2);
      paramString2 = com.keniu.security.d.a();
      boolean bool = com.cleanmaster.base.util.c.a.a(com.cleanmaster.configmanager.d.a(paramString2).aH());
      byte b2 = (byte)aL(paramString2);
      i1 = 0;
      int i3;
      label81:
      com.cleanmaster.ui.game.picks.s localS1;
      if (paramA != null)
      {
        if (com.cleanmaster.base.util.system.m.a(paramString2, paramA.d)) {
          i1 = 2;
        }
      }
      else
      {
        if (!com.cleanmaster.base.util.system.m.a(paramString2)) {
          break label250;
        }
        i3 = 1;
        localS1 = new com.cleanmaster.ui.game.picks.s();
        paramString2 = localS1.a(1000).c(i2);
        if (!bool) {
          break label256;
        }
        b1 = 2;
        label113:
        com.cleanmaster.ui.game.picks.s localS2 = paramString2.a(b1).f((byte)paramInt1);
        if (paramA == null) {
          break label262;
        }
        paramString2 = paramA.a;
        label137:
        localS2 = localS2.a(paramString2);
        if (paramA == null) {
          break label270;
        }
        paramString2 = paramA.d;
        label156:
        paramString1 = localS2.b(paramString2).b(b2).c(paramString1);
        if (paramA == null) {
          break label278;
        }
        b1 = (byte)paramA.n;
        label184:
        paramString1 = paramString1.c(b1);
        if (paramA == null) {
          break label284;
        }
      }
      label250:
      label256:
      label262:
      label270:
      label278:
      label284:
      for (byte b1 = (byte)paramA.m;; b1 = 0)
      {
        paramString1.d(b1).a().e((byte)paramInt2).g((byte)paramInt3).b(paramInt4).d(i1).e(i3);
        localS1.report();
        return;
        i1 = 1;
        break;
        i3 = 2;
        break label81;
        b1 = 1;
        break label113;
        paramString2 = "n";
        break label137;
        paramString2 = "n";
        break label156;
        b1 = 0;
        break label184;
      }
    }
    catch (NumberFormatException paramString2)
    {
      for (;;)
      {
        i2 = i1;
      }
    }
  }
  
  public static void a(int paramInt, com.facebook.d paramD, com.facebook.e<com.facebook.share.a> paramE)
  {
    if (!(paramD instanceof CallbackManagerImpl)) {
      throw new FacebookException("Unexpected CallbackManager, please use the provided Factory.");
    }
    ((CallbackManagerImpl)paramD).b(paramInt, new com.facebook.share.internal.j(paramInt, paramE));
  }
  
  public static void a(int paramInt, String paramString, com.cmcm.onews.report.a.m paramM, ONews paramONews, ONewsScenario paramONewsScenario)
  {
    com.cmcm.onews.report.c localC = new com.cmcm.onews.report.c(com.cmcm.onews.report.d.d());
    localC.a("upack", paramString);
    localC.a("data", new com.cmcm.onews.report.b[] { new com.cmcm.onews.report.a.d(String.valueOf(paramInt), paramM, paramONews, paramONewsScenario) });
    localC.a(com.cmcm.onews.sdk.e.b.A);
  }
  
  public static void a(int paramInt1, String paramString1, String paramString2, String paramString3, String paramString4, int paramInt2, String paramString5)
  {
    byte b1 = 2;
    int i2 = 0;
    int i1 = i2;
    if (!TextUtils.isEmpty(paramString5)) {}
    try
    {
      i1 = Integer.parseInt(paramString5);
      Context localContext = com.keniu.security.d.a();
      boolean bool = com.cleanmaster.base.util.c.a.a(com.cleanmaster.configmanager.d.a(localContext).aH());
      byte b2 = (byte)aL(localContext);
      paramString5 = paramString2;
      if (TextUtils.isEmpty(paramString2)) {
        paramString5 = paramString1;
      }
      int i3;
      if (com.cleanmaster.base.util.system.m.a(localContext, paramString5))
      {
        i2 = 2;
        if (!com.cleanmaster.base.util.system.m.a(localContext)) {
          break label196;
        }
        i3 = 1;
        label88:
        paramString2 = new com.cleanmaster.ui.game.picks.s();
        paramString5 = paramString2.a(1000).c(i1);
        if (!bool) {
          break label202;
        }
        label115:
        paramString5 = paramString5.a(b1).f((byte)paramInt1);
        if (TextUtils.isEmpty(paramString3)) {
          break label208;
        }
        label136:
        paramString3 = paramString5.a(paramString3);
        if (TextUtils.isEmpty(paramString1)) {
          break label215;
        }
      }
      for (;;)
      {
        paramString3.b(paramString1).b(b2).c(paramString4).a().e((byte)paramInt2).d(i2).e(i3);
        paramString2.report();
        return;
        i2 = 1;
        break;
        label196:
        i3 = 2;
        break label88;
        label202:
        b1 = 1;
        break label115;
        label208:
        paramString3 = "n";
        break label136;
        label215:
        paramString1 = "n";
      }
    }
    catch (NumberFormatException paramString5)
    {
      for (;;)
      {
        i1 = i2;
      }
    }
  }
  
  public static void a(int paramInt1, String paramString, short paramShort, int paramInt2, int paramInt3, int paramInt4)
  {
    com.cleanmaster.boost.d.ac.a((byte)paramInt1, paramString, paramShort, paramInt2, paramInt3, (byte)paramInt4).report();
  }
  
  public static void a(int paramInt1, boolean paramBoolean, int paramInt2, int paramInt3, int paramInt4)
  {
    com.cleanmaster.base.util.concurrent.BackgroundThread.b().postDelayed(new com.cleanmaster.ui.game.t(paramInt1, paramBoolean, paramInt2, paramInt3, paramInt4), 5000L);
  }
  
  public static void a(int paramInt1, boolean paramBoolean1, int paramInt2, boolean paramBoolean2)
  {
    int i1 = 2;
    StringBuilder localStringBuilder1 = new StringBuilder();
    localStringBuilder1.append("guidedialog=").append(paramInt1);
    StringBuilder localStringBuilder2 = localStringBuilder1.append("&returnstate=");
    if (paramBoolean1)
    {
      paramInt1 = 1;
      localStringBuilder2.append(paramInt1);
      localStringBuilder1.append("&frompage=").append(paramInt2);
      paramInt1 = com.cleanmaster.boost.acc.ui.m.e();
      localStringBuilder2 = localStringBuilder1.append("&poptype=");
      if (!paramBoolean2) {
        break label163;
      }
      paramInt1 = 2;
      label81:
      localStringBuilder2.append(paramInt1);
      localStringBuilder2 = localStringBuilder1.append("&newuser=");
      if (!com.cleanmaster.configmanager.h.a(com.keniu.security.d.a()).a("in_standby_main_from_main_entry", false)) {
        break label178;
      }
      paramInt1 = i1;
      if (!com.cleanmaster.configmanager.h.a(com.keniu.security.d.a()).a("standby_main_new_user", true)) {}
    }
    label163:
    label178:
    for (paramInt1 = 1;; paramInt1 = 0)
    {
      localStringBuilder2.append(paramInt1);
      com.cleanmaster.kinfoc.p.a().a("cm_battery_guide", localStringBuilder1.toString(), true);
      return;
      paramInt1 = 2;
      break;
      if (paramInt1 == 2)
      {
        paramInt1 = 4;
        break label81;
      }
      paramInt1 = 1;
      break label81;
    }
  }
  
  public static void a(int paramInt, View... paramVarArgs)
  {
    int i2 = paramVarArgs.length;
    int i1 = 0;
    for (;;)
    {
      if (i1 >= i2) {
        return;
      }
      View localView = paramVarArgs[i1];
      if ((localView != null) && (localView.getVisibility() != paramInt)) {
        localView.setVisibility(paramInt);
      }
      i1 += 1;
    }
  }
  
  public static void a(Activity paramActivity, Intent paramIntent, int paramInt)
  {
    if (paramActivity == null) {
      return;
    }
    paramActivity.startActivityForResult(paramIntent, paramInt);
  }
  
  public static void a(Activity paramActivity, com.cleanmaster.applocklib.common.utils.e paramE)
  {
    Intent localIntent = new Intent("android.settings.APPLICATION_DETAILS_SETTINGS");
    localIntent.setData(Uri.parse("package:" + paramActivity.getPackageName()));
    localIntent.addFlags(67108864);
    String str;
    if (paramE != null)
    {
      if (paramE.a != 0) {
        break label123;
      }
      str = String.format(paramActivity.getString(2131299285), new Object[] { paramActivity.getString(2131299280) });
      AppLockLib.getIns().getCommons();
      com.cleanmaster.applocklib.interfaces.f.a(paramActivity, str);
      new com.cleanmaster.applocklib.b.k((byte)1, (byte)6, (byte)4).b();
    }
    for (;;)
    {
      paramE.start();
      paramActivity.startActivityForResult(localIntent, 10);
      return;
      label123:
      if (paramE.a == 1)
      {
        str = String.format(paramActivity.getString(2131299286), new Object[] { paramActivity.getString(2131299278), paramActivity.getString(2131299282) });
        AppLockLib.getIns().getCommons();
        com.cleanmaster.applocklib.interfaces.f.a(paramActivity, str);
        new com.cleanmaster.applocklib.b.k((byte)1, (byte)5, (byte)4).b();
        new com.cleanmaster.applocklib.b.k((byte)1, (byte)3, (byte)4).b();
      }
    }
  }
  
  public static void a(Activity paramActivity, com.cleanmaster.applocklib.common.utils.e paramE, int paramInt)
  {
    if ((!b(paramActivity, "android.permission.CAMERA")) || (!b(paramActivity, "android.permission.WRITE_EXTERNAL_STORAGE")))
    {
      ArrayList localArrayList = new ArrayList();
      int i1;
      boolean bool;
      if (!b(paramActivity, "android.permission.CAMERA"))
      {
        i1 = AppLockPref.getIns().getCameraCheckCount();
        bool = paramActivity.shouldShowRequestPermissionRationale("android.permission.CAMERA");
        if ((i1 >= 2) && (!bool)) {
          break label259;
        }
        AppLockPref.getIns().setCameraCheckCount(i1 + 1);
        localArrayList.add("android.permission.CAMERA");
      }
      if (!b(paramActivity, "android.permission.WRITE_EXTERNAL_STORAGE"))
      {
        i1 = AppLockPref.getIns().getStorageCheckCount();
        bool = paramActivity.shouldShowRequestPermissionRationale("android.permission.WRITE_EXTERNAL_STORAGE");
        if ((i1 >= 2) && (!bool)) {
          break label282;
        }
        AppLockPref.getIns().setStorageCheckCount(i1 + 1);
        localArrayList.add("android.permission.WRITE_EXTERNAL_STORAGE");
      }
      if (com.cleanmaster.applocklib.bridge.b.a) {
        Log.d("PermissionGuardUtil", "permissions.size() = " + localArrayList.size());
      }
      if (localArrayList.size() != 0)
      {
        if (localArrayList.contains("android.permission.CAMERA")) {
          new com.cleanmaster.applocklib.b.k((byte)1, (byte)5, (byte)1).b();
        }
        if (localArrayList.contains("android.permission.WRITE_EXTERNAL_STORAGE")) {
          new com.cleanmaster.applocklib.b.k((byte)1, (byte)5, (byte)1).b();
        }
        paramActivity.requestPermissions((String[])localArrayList.toArray(new String[0]), paramInt);
      }
    }
    return;
    label259:
    if (com.cleanmaster.applocklib.bridge.b.a) {
      Toast.makeText(paramActivity, "requestCameraStoragePermission() - 1.jump to app info", 1).show();
    }
    a(paramActivity, paramE);
    return;
    label282:
    if (com.cleanmaster.applocklib.bridge.b.a) {
      Toast.makeText(paramActivity, "requestCameraStoragePermission() - 2.jump to app info", 1).show();
    }
    a(paramActivity, paramE);
  }
  
  public static void a(Notification.Builder paramBuilder, ae paramAe)
  {
    Notification.Action.Builder localBuilder = new Notification.Action.Builder(paramAe.a(), paramAe.b(), paramAe.c());
    if (paramAe.e() != null)
    {
      RemoteInput[] arrayOfRemoteInput = b(paramAe.e());
      int i2 = arrayOfRemoteInput.length;
      int i1 = 0;
      while (i1 < i2)
      {
        localBuilder.addRemoteInput(arrayOfRemoteInput[i1]);
        i1 += 1;
      }
    }
    if (paramAe.d() != null) {
      localBuilder.addExtras(paramAe.d());
    }
    paramBuilder.addAction(localBuilder.build());
  }
  
  public static void a(Context paramContext, int paramInt1, int paramInt2, int paramInt3, Bundle paramBundle)
  {
    if (paramContext == null) {
      return;
    }
    Intent localIntent = new Intent("com.cleanmaster.action.LAUNCH_GAMEBOX");
    if (paramInt1 > 0) {
      localIntent.putExtra("gamebox_open_from", paramInt1);
    }
    if (paramInt2 > 0) {
      localIntent.putExtra("extras_stage_type", paramInt2);
    }
    if (paramInt3 > 0) {
      localIntent.putExtra("extras_guide_type", paramInt3);
    }
    if (paramBundle != null) {
      localIntent.putExtra("extra_bundle", paramBundle);
    }
    if (!(paramContext instanceof Activity)) {
      localIntent.addFlags(268435456);
    }
    try
    {
      paramContext.startActivity(localIntent);
      return;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  public static void a(Context paramContext, int paramInt1, int paramInt2, boolean paramBoolean)
  {
    if (paramContext == null) {
      return;
    }
    Object localObject = new com.cleanmaster.boost.abnormal.abnormalnotify.n(paramContext);
    ((com.cleanmaster.boost.abnormal.abnormalnotify.n)localObject).a = paramInt1;
    ((com.cleanmaster.boost.abnormal.abnormalnotify.n)localObject).d = paramBoolean;
    localObject = ((com.cleanmaster.boost.abnormal.abnormalnotify.n)localObject).a();
    if ((paramContext instanceof Activity))
    {
      ((Activity)paramContext).startActivityForResult((Intent)localObject, paramInt2);
      return;
    }
    paramContext.startActivity((Intent)localObject);
  }
  
  public static void a(Context paramContext, int paramInt, Bundle paramBundle)
  {
    a(paramContext, paramInt, 255, 255, paramBundle);
  }
  
  public static void a(Context paramContext, int paramInt, com.cleanmaster.base.permission.a paramA)
  {
    if (com.cleanmaster.base.util.system.q.a())
    {
      if (paramA != null) {
        paramA.a(true);
      }
      return;
    }
    com.cleanmaster.base.permission.b localB = new com.cleanmaster.base.permission.b();
    localB.a = 3;
    localB.b = paramInt;
    localB.d = paramContext.getString(2131297748);
    a(paramContext, (byte)2).a(localB, paramA);
  }
  
  public static void a(Context paramContext, int paramInt1, String paramString, int paramInt2)
  {
    if ((TextUtils.isEmpty(paramString)) || (paramInt2 <= 0)) {}
    while (paramInt2 < (int)(Math.random() * 100.0D)) {
      return;
    }
    com.keniu.security.update.push.f.b().a(paramContext, paramString, paramInt1);
  }
  
  public static void a(Context paramContext, int paramInt, String paramString1, String paramString2)
  {
    Intent localIntent = new Intent("com.cleanmaster.service.NotificationListener");
    localIntent.putExtra("id", paramInt);
    localIntent.putExtra("tag", paramString1);
    localIntent.putExtra("pkg", paramString2);
    paramContext.sendBroadcast(localIntent);
  }
  
  public static void a(Context paramContext, int paramInt, ArrayList<AppInfoModel> paramArrayList, ArrayList<UnknownFilesSafeModel.ElfSafeModel> paramArrayList1)
  {
    int i2 = 1;
    if (paramContext == null) {}
    label105:
    label109:
    for (;;)
    {
      return;
      int i1;
      if (!paramArrayList.isEmpty())
      {
        i1 = 1;
        if ((paramArrayList1 == null) || (paramArrayList1.isEmpty())) {
          break label105;
        }
      }
      for (;;)
      {
        if ((i1 == 0) && (i2 == 0)) {
          break label109;
        }
        Intent localIntent = new Intent(paramContext, SecurityAppInfoActivity.class);
        localIntent.putExtra("key_from", paramInt);
        if (i1 != 0) {
          localIntent.putParcelableArrayListExtra("key_app_data", paramArrayList);
        }
        if (i2 != 0) {
          localIntent.putParcelableArrayListExtra("key_elf_data", paramArrayList1);
        }
        paramContext.startActivity(localIntent);
        return;
        i1 = 0;
        break;
        i2 = 0;
      }
    }
  }
  
  public static void a(Context paramContext, int paramInt, boolean paramBoolean)
  {
    Intent localIntent = new Intent();
    localIntent.putExtra("launch", paramInt);
    localIntent.setAction("com.cleanmaster.action.LAUNCH_LOCALWEB");
    if (paramBoolean) {
      ((Activity)paramContext).overridePendingTransition(2130968664, 2130968666);
    }
    paramContext.startActivity(localIntent);
  }
  
  public static void a(Context paramContext, Bitmap paramBitmap, String paramString1, long paramLong, String paramString2, boolean paramBoolean)
  {
    View localView = LayoutInflater.from(paramContext).inflate(2130903233, null);
    if (localView == null)
    {
      if (com.cleanmaster.applocklib.bridge.b.b) {
        com.cleanmaster.applocklib.bridge.b.a();
      }
      return;
    }
    Object localObject1 = AppLockUtil.getAppLableName(paramString1);
    Object localObject2 = paramContext.getString(2131296594);
    if (localObject1 != null) {}
    RelativeLayout.LayoutParams localLayoutParams;
    int i1;
    for (;;)
    {
      localObject1 = String.format((String)localObject2, new Object[] { localObject1 });
      localObject2 = new SimpleDateFormat("yyyy/MM/dd HH:mm").format(new Date(paramLong));
      ((TextView)localView.findViewById(2131625098)).setText(Html.fromHtml((String)localObject1));
      ((TextView)localView.findViewById(2131625324)).setText((CharSequence)localObject2);
      localView.findViewById(2131625150).setVisibility(8);
      ((ImageView)localView.findViewById(2131625149)).setImageDrawable(AppLockUtil.getAppIcon(paramString1));
      localObject2 = (ImageView)localView.findViewById(2131625083);
      ((ImageView)localObject2).setImageBitmap(paramBitmap);
      localLayoutParams = (RelativeLayout.LayoutParams)((ImageView)localObject2).getLayoutParams();
      localObject1 = new DisplayMetrics();
      ((WindowManager)paramContext.getSystemService("window")).getDefaultDisplay().getMetrics((DisplayMetrics)localObject1);
      i1 = ((DisplayMetrics)localObject1).heightPixels;
      paramString1 = localView.findViewById(2131625323);
      if (paramString1 != null) {
        break label247;
      }
      if (!com.cleanmaster.applocklib.bridge.b.b) {
        break;
      }
      com.cleanmaster.applocklib.bridge.b.a();
      return;
      localObject1 = paramString1;
    }
    label247:
    int i2 = 0;
    if (paramBitmap.getWidth() != 0)
    {
      i1 = (int)paramContext.getResources().getDimension(2131165511);
      i2 = (((DisplayMetrics)localObject1).widthPixels - (i1 << 1)) * paramBitmap.getHeight() / paramBitmap.getWidth();
      paramString1.setLayoutParams(new ViewGroup.LayoutParams(((DisplayMetrics)localObject1).widthPixels, ((DisplayMetrics)localObject1).heightPixels));
      paramString1.measure(((DisplayMetrics)localObject1).widthPixels, ((DisplayMetrics)localObject1).heightPixels);
      localLayoutParams.width = ((DisplayMetrics)localObject1).widthPixels;
      localLayoutParams.height = i2;
      ((ImageView)localObject2).setLayoutParams(localLayoutParams);
      ((ImageView)localObject2).setScaleType(ImageView.ScaleType.FIT_XY);
      i1 = (int)paramContext.getResources().getDimension(2131165294) + i2 + i1;
      if (i1 <= ((DisplayMetrics)localObject1).heightPixels) {
        break label758;
      }
      i2 = i1 - ((DisplayMetrics)localObject1).heightPixels;
      i1 = ((DisplayMetrics)localObject1).heightPixels;
    }
    for (;;)
    {
      paramString1.setLayoutParams(new ViewGroup.LayoutParams(((DisplayMetrics)localObject1).widthPixels, i1));
      paramString1.measure(((DisplayMetrics)localObject1).widthPixels, i1);
      paramBitmap = (RelativeLayout.LayoutParams)localView.findViewById(2131624960).getLayoutParams();
      paramBitmap.width = ((DisplayMetrics)localObject1).widthPixels;
      paramBitmap.height = (i2 + (int)paramContext.getResources().getDimension(2131165516) + (int)paramContext.getResources().getDimension(2131165517));
      localView.findViewById(2131624960).setLayoutParams(paramBitmap);
      paramBitmap = (RelativeLayout.LayoutParams)localView.findViewById(2131625095).getLayoutParams();
      paramBitmap.width = ((DisplayMetrics)localObject1).widthPixels;
      localView.findViewById(2131625095).setLayoutParams(paramBitmap);
      i2 = ((DisplayMetrics)localObject1).widthPixels;
      paramString1.setDrawingCacheEnabled(true);
      paramString1.measure(i2, i1);
      paramString1.layout(0, 0, i2, i1);
      paramString1.buildDrawingCache(true);
      localObject1 = paramString1.getDrawingCache();
      for (;;)
      {
        try
        {
          if (com.cleanmaster.applocklib.bridge.b.b)
          {
            paramBitmap = new StringBuilder("has Photo data? ");
            if (localObject1 == null) {
              continue;
            }
            bool = true;
            paramBitmap.append(bool);
            com.cleanmaster.applocklib.bridge.b.a();
          }
          if (localObject1 != null)
          {
            paramBitmap = null;
            if (!paramBoolean) {
              continue;
            }
            paramContext = G(paramContext);
            if (!TextUtils.isEmpty(paramContext)) {
              paramBitmap = new File(paramContext);
            }
            if (paramBitmap != null) {
              continue;
            }
          }
        }
        catch (Throwable paramContext)
        {
          boolean bool;
          continue;
        }
        paramString1.setDrawingCacheEnabled(false);
        return;
        ((ImageView)localObject2).setScaleType(ImageView.ScaleType.CENTER);
        break;
        bool = false;
        continue;
        paramContext = H(paramContext);
        continue;
        paramContext = new File(paramBitmap, paramString2);
        bool = a((Bitmap)localObject1, paramContext);
        if ((bool) && (paramBoolean)) {
          f(paramContext);
        }
        if (com.cleanmaster.applocklib.bridge.b.b)
        {
          new StringBuilder("Intruder photo auto saved: ").append(bool).append(", path:").append(paramContext.getAbsolutePath());
          com.cleanmaster.applocklib.bridge.b.a();
        }
      }
      label758:
      i2 = 0;
    }
  }
  
  public static void a(Context paramContext, Handler paramHandler, String paramString1, ImageView paramImageView, String paramString2)
  {
    if ((paramContext == null) || (paramHandler == null) || (paramString1 == null) || (paramImageView == null) || (paramString2 == null)) {}
    com.in2wow.sdk.ui.a localA;
    do
    {
      return;
      paramImageView.setTag(paramString2);
      localA = com.in2wow.sdk.b.d.a(paramContext).e();
    } while (localA == null);
    localA.a(new com.in2wow.sdk.l.i(paramImageView, paramContext, paramString2, paramHandler, paramString1));
  }
  
  public static void a(Context paramContext, WorkerProcessUtils.ServiceInWorker paramServiceInWorker, boolean paramBoolean)
  {
    if (paramServiceInWorker != null) {
      paramServiceInWorker.isOn = paramBoolean;
    }
    u(paramContext);
  }
  
  /* Error */
  public static void a(Context paramContext, com.cleanmaster.util.o paramO)
  {
    // Byte code:
    //   0: aload_0
    //   1: ifnonnull +4 -> 5
    //   4: return
    //   5: aload_1
    //   6: ifnull +21 -> 27
    //   9: aload_1
    //   10: getfield 7458	com/cleanmaster/util/o:a	Landroid/os/Handler;
    //   13: aload_1
    //   14: getfield 7458	com/cleanmaster/util/o:a	Landroid/os/Handler;
    //   17: iconst_1
    //   18: iconst_5
    //   19: iconst_0
    //   20: invokevirtual 7462	android/os/Handler:obtainMessage	(III)Landroid/os/Message;
    //   23: invokevirtual 7466	android/os/Handler:sendMessage	(Landroid/os/Message;)Z
    //   26: pop
    //   27: invokestatic 7469	LibcoreWrapper/a:bY	()Ljava/lang/String;
    //   30: astore 4
    //   32: aload 4
    //   34: ifnonnull +114 -> 148
    //   37: aconst_null
    //   38: astore 4
    //   40: aload 4
    //   42: ifnull +22 -> 64
    //   45: aload_1
    //   46: ifnull +1228 -> 1274
    //   49: aload_1
    //   50: invokevirtual 7470	com/cleanmaster/util/o:a	()V
    //   53: goto +1221 -> 1274
    //   56: aload_1
    //   57: ifnull +7 -> 64
    //   60: aload_1
    //   61: invokevirtual 7470	com/cleanmaster/util/o:a	()V
    //   64: invokestatic 7472	com/cleanmaster/base/c:q	()Ljava/lang/String;
    //   67: ifnull +26 -> 93
    //   70: new 464	java/io/File
    //   73: dup
    //   74: invokestatic 7472	com/cleanmaster/base/c:q	()Ljava/lang/String;
    //   77: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   80: astore_0
    //   81: aload_0
    //   82: invokevirtual 468	java/io/File:exists	()Z
    //   85: ifeq +8 -> 93
    //   88: aload_0
    //   89: invokevirtual 474	java/io/File:delete	()Z
    //   92: pop
    //   93: invokestatic 7469	LibcoreWrapper/a:bY	()Ljava/lang/String;
    //   96: astore_0
    //   97: invokestatic 7472	com/cleanmaster/base/c:q	()Ljava/lang/String;
    //   100: astore 4
    //   102: aload_0
    //   103: ifnull +8 -> 111
    //   106: aload 4
    //   108: ifnonnull +1077 -> 1185
    //   111: invokestatic 7469	LibcoreWrapper/a:bY	()Ljava/lang/String;
    //   114: ifnull +25 -> 139
    //   117: new 464	java/io/File
    //   120: dup
    //   121: invokestatic 7469	LibcoreWrapper/a:bY	()Ljava/lang/String;
    //   124: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   127: astore_0
    //   128: aload_0
    //   129: invokevirtual 468	java/io/File:exists	()Z
    //   132: ifeq +7 -> 139
    //   135: aload_0
    //   136: invokestatic 7474	com/cleanmaster/base/c:d	(Ljava/io/File;)V
    //   139: aload_1
    //   140: ifnull -136 -> 4
    //   143: aload_1
    //   144: invokevirtual 7475	com/cleanmaster/util/o:b	()V
    //   147: return
    //   148: new 464	java/io/File
    //   151: dup
    //   152: aload 4
    //   154: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   157: astore 5
    //   159: aload 5
    //   161: invokevirtual 468	java/io/File:exists	()Z
    //   164: ifne +9 -> 173
    //   167: aload 5
    //   169: invokevirtual 751	java/io/File:mkdir	()Z
    //   172: pop
    //   173: aload 5
    //   175: invokevirtual 480	java/io/File:isDirectory	()Z
    //   178: ifne +9 -> 187
    //   181: aconst_null
    //   182: astore 4
    //   184: goto -144 -> 40
    //   187: aload 5
    //   189: invokestatic 7477	com/cleanmaster/base/c:b	(Ljava/io/File;)V
    //   192: goto -152 -> 40
    //   195: astore_0
    //   196: invokestatic 7469	LibcoreWrapper/a:bY	()Ljava/lang/String;
    //   199: ifnull +28 -> 227
    //   202: new 464	java/io/File
    //   205: dup
    //   206: invokestatic 7469	LibcoreWrapper/a:bY	()Ljava/lang/String;
    //   209: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   212: astore 4
    //   214: aload 4
    //   216: invokevirtual 468	java/io/File:exists	()Z
    //   219: ifeq +8 -> 227
    //   222: aload 4
    //   224: invokestatic 7474	com/cleanmaster/base/c:d	(Ljava/io/File;)V
    //   227: aload_1
    //   228: ifnull +7 -> 235
    //   231: aload_1
    //   232: invokevirtual 7475	com/cleanmaster/util/o:b	()V
    //   235: aload_0
    //   236: athrow
    //   237: invokestatic 144	com/keniu/security/d:a	()Landroid/content/Context;
    //   240: ldc_w 7479
    //   243: invokevirtual 7482	android/content/Context:checkCallingOrSelfPermission	(Ljava/lang/String;)I
    //   246: istore_2
    //   247: iload_2
    //   248: ifne +37 -> 285
    //   251: invokestatic 7488	java/lang/Runtime:getRuntime	()Ljava/lang/Runtime;
    //   254: new 149	java/lang/StringBuilder
    //   257: dup
    //   258: ldc_w 7490
    //   261: invokespecial 260	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   264: aload 4
    //   266: invokestatic 7492	android/support/percent/a:B	(Ljava/lang/String;)Ljava/lang/String;
    //   269: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   272: ldc_w 7494
    //   275: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   278: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   281: invokevirtual 7498	java/lang/Runtime:exec	(Ljava/lang/String;)Ljava/lang/Process;
    //   284: pop
    //   285: aload_1
    //   286: ifnull +7 -> 293
    //   289: aload_1
    //   290: invokevirtual 7470	com/cleanmaster/util/o:a	()V
    //   293: ldc_w 7500
    //   296: new 149	java/lang/StringBuilder
    //   299: dup
    //   300: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   303: aload 4
    //   305: invokestatic 7492	android/support/percent/a:B	(Ljava/lang/String;)Ljava/lang/String;
    //   308: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   311: ldc_w 7502
    //   314: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   317: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   320: new 7504	com/cleanmaster/util/k
    //   323: dup
    //   324: invokespecial 7505	com/cleanmaster/util/k:<init>	()V
    //   327: invokestatic 7508	com/cleanmaster/util/al:a	(Ljava/lang/String;Ljava/lang/String;Lcom/cleanmaster/util/al$b;)V
    //   330: aload_1
    //   331: ifnull +7 -> 338
    //   334: aload_1
    //   335: invokevirtual 7470	com/cleanmaster/util/o:a	()V
    //   338: invokestatic 7513	com/cleanmaster/base/crash/c:e	()Lcom/cleanmaster/base/crash/c;
    //   341: pop
    //   342: invokestatic 7515	com/cleanmaster/base/crash/c:d	()Ljava/lang/String;
    //   345: new 149	java/lang/StringBuilder
    //   348: dup
    //   349: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   352: aload 4
    //   354: invokestatic 7492	android/support/percent/a:B	(Ljava/lang/String;)Ljava/lang/String;
    //   357: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   360: ldc_w 7517
    //   363: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   366: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   369: new 7519	com/cleanmaster/util/l
    //   372: dup
    //   373: invokespecial 7520	com/cleanmaster/util/l:<init>	()V
    //   376: invokestatic 7508	com/cleanmaster/util/al:a	(Ljava/lang/String;Ljava/lang/String;Lcom/cleanmaster/util/al$b;)V
    //   379: invokestatic 7521	com/cleanmaster/base/crash/c:a	()Ljava/lang/String;
    //   382: new 149	java/lang/StringBuilder
    //   385: dup
    //   386: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   389: aload 4
    //   391: invokestatic 7492	android/support/percent/a:B	(Ljava/lang/String;)Ljava/lang/String;
    //   394: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   397: ldc_w 7523
    //   400: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   403: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   406: new 7525	com/cleanmaster/util/m
    //   409: dup
    //   410: invokespecial 7526	com/cleanmaster/util/m:<init>	()V
    //   413: invokestatic 7508	com/cleanmaster/util/al:a	(Ljava/lang/String;Ljava/lang/String;Lcom/cleanmaster/util/al$b;)V
    //   416: aload_1
    //   417: ifnull +7 -> 424
    //   420: aload_1
    //   421: invokevirtual 7470	com/cleanmaster/util/o:a	()V
    //   424: invokestatic 7531	com/cleanmaster/util/OpLog:d	()Lcom/cleanmaster/util/OpLog;
    //   427: astore_0
    //   428: aload_0
    //   429: invokevirtual 7532	com/cleanmaster/util/OpLog:c	()V
    //   432: invokestatic 446	android/os/Environment:getExternalStorageState	()Ljava/lang/String;
    //   435: ldc_w 441
    //   438: invokevirtual 450	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   441: ifeq +683 -> 1124
    //   444: invokestatic 144	com/keniu/security/d:a	()Landroid/content/Context;
    //   447: invokevirtual 147	android/content/Context:getApplicationContext	()Landroid/content/Context;
    //   450: astore 5
    //   452: new 149	java/lang/StringBuilder
    //   455: dup
    //   456: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   459: astore_0
    //   460: aload_0
    //   461: ldc_w 7534
    //   464: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   467: ldc_w 559
    //   470: ldc_w 5889
    //   473: invokestatic 5891	android/os/SystemProperties:get	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   476: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   479: ldc_w 374
    //   482: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   485: pop
    //   486: aload_0
    //   487: ldc_w 7536
    //   490: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   493: ldc_w 7538
    //   496: ldc_w 5889
    //   499: invokestatic 5891	android/os/SystemProperties:get	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   502: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   505: ldc_w 374
    //   508: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   511: pop
    //   512: aload_0
    //   513: ldc_w 7540
    //   516: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   519: ldc_w 7542
    //   522: ldc_w 5889
    //   525: invokestatic 5891	android/os/SystemProperties:get	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   528: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   531: ldc_w 374
    //   534: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   537: pop
    //   538: aload_0
    //   539: ldc_w 7544
    //   542: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   545: astore 6
    //   547: invokestatic 7549	com/cm/root/d:a	()Lcom/cm/root/d;
    //   550: pop
    //   551: aload 6
    //   553: invokestatic 7550	com/cm/root/d:b	()Z
    //   556: invokevirtual 7367	java/lang/StringBuilder:append	(Z)Ljava/lang/StringBuilder;
    //   559: ldc_w 374
    //   562: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   565: pop
    //   566: aload_0
    //   567: ldc_w 7552
    //   570: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   573: invokestatic 7549	com/cm/root/d:a	()Lcom/cm/root/d;
    //   576: invokevirtual 7553	com/cm/root/d:g	()Z
    //   579: invokevirtual 7367	java/lang/StringBuilder:append	(Z)Ljava/lang/StringBuilder;
    //   582: ldc_w 374
    //   585: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   588: pop
    //   589: aload_0
    //   590: ldc_w 7555
    //   593: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   596: aload 5
    //   598: invokestatic 7556	LibcoreWrapper/a:t	(Landroid/content/Context;)Ljava/lang/String;
    //   601: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   604: ldc_w 374
    //   607: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   610: pop
    //   611: aload_0
    //   612: ldc_w 7558
    //   615: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   618: invokestatic 7563	com/cleanmaster/base/util/system/j:a	()Lcom/cleanmaster/base/util/system/j;
    //   621: iconst_0
    //   622: invokevirtual 7566	com/cleanmaster/base/util/system/j:a	(Z)Ljava/lang/String;
    //   625: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   628: ldc_w 374
    //   631: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   634: pop
    //   635: aload_0
    //   636: ldc_w 7568
    //   639: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   642: aload 5
    //   644: aload 5
    //   646: invokevirtual 2314	java/lang/Object:getClass	()Ljava/lang/Class;
    //   649: invokestatic 7571	android/support/percent/a:a	(Landroid/content/Context;Ljava/lang/Class;)Ljava/lang/String;
    //   652: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   655: ldc_w 374
    //   658: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   661: pop
    //   662: aload_0
    //   663: ldc_w 7573
    //   666: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   669: invokestatic 7575	com/cleanmaster/base/c:O	()I
    //   672: invokestatic 283	java/lang/Integer:toString	(I)Ljava/lang/String;
    //   675: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   678: ldc_w 374
    //   681: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   684: pop
    //   685: aload_0
    //   686: ldc_w 7577
    //   689: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   692: aload 5
    //   694: invokestatic 262	LibcoreWrapper/a:p	(Landroid/content/Context;)Ljava/lang/String;
    //   697: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   700: ldc_w 374
    //   703: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   706: pop
    //   707: aload_0
    //   708: ldc_w 7579
    //   711: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   714: pop
    //   715: aload_0
    //   716: ldc_w 7581
    //   719: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   722: aload 5
    //   724: invokestatic 181	LibcoreWrapper/a:c	(Landroid/content/Context;)Ljava/lang/String;
    //   727: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   730: ldc_w 374
    //   733: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   736: pop
    //   737: aload_0
    //   738: ldc_w 7583
    //   741: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   744: invokestatic 222	com/cleanmaster/base/c:A	()Ljava/lang/String;
    //   747: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   750: ldc_w 374
    //   753: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   756: pop
    //   757: aload_0
    //   758: ldc_w 7585
    //   761: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   764: ldc_w 7587
    //   767: ldc_w 5889
    //   770: invokestatic 5891	android/os/SystemProperties:get	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   773: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   776: ldc_w 374
    //   779: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   782: pop
    //   783: aload_0
    //   784: ldc_w 7589
    //   787: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   790: astore 6
    //   792: aload 5
    //   794: invokevirtual 771	android/content/Context:getApplicationInfo	()Landroid/content/pm/ApplicationInfo;
    //   797: astore 7
    //   799: aload 7
    //   801: ifnull +379 -> 1180
    //   804: aload 7
    //   806: getfield 1442	android/content/pm/ApplicationInfo:flags	I
    //   809: ldc_w 7590
    //   812: iand
    //   813: ifeq +362 -> 1175
    //   816: iconst_1
    //   817: istore_3
    //   818: aload 6
    //   820: iload_3
    //   821: invokevirtual 7367	java/lang/StringBuilder:append	(Z)Ljava/lang/StringBuilder;
    //   824: ldc_w 374
    //   827: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   830: pop
    //   831: aload_0
    //   832: ldc_w 7592
    //   835: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   838: aload 5
    //   840: invokestatic 302	com/cleanmaster/configmanager/d:a	(Landroid/content/Context;)Lcom/cleanmaster/configmanager/d;
    //   843: ldc_w 7594
    //   846: ldc -84
    //   848: invokevirtual 381	com/cleanmaster/configmanager/d:a	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   851: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   854: ldc_w 374
    //   857: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   860: pop
    //   861: aload_0
    //   862: ldc_w 7596
    //   865: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   868: aload 5
    //   870: invokestatic 187	com/cleanmaster/base/util/net/b:t	(Landroid/content/Context;)Ljava/lang/String;
    //   873: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   876: ldc_w 374
    //   879: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   882: pop
    //   883: aload_0
    //   884: ldc_w 7598
    //   887: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   890: aload 5
    //   892: invokestatic 302	com/cleanmaster/configmanager/d:a	(Landroid/content/Context;)Lcom/cleanmaster/configmanager/d;
    //   895: ldc_w 7600
    //   898: lconst_0
    //   899: invokevirtual 1057	com/cleanmaster/configmanager/d:a	(Ljava/lang/String;J)J
    //   902: invokevirtual 5553	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   905: ldc_w 374
    //   908: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   911: pop
    //   912: invokestatic 484	android/os/Environment:getDataDirectory	()Ljava/io/File;
    //   915: invokestatic 896	LibcoreWrapper/a:d	(Ljava/io/File;)Lcom/cleanmaster/base/util/e/g;
    //   918: astore 6
    //   920: aload 6
    //   922: ifnull +47 -> 969
    //   925: aload_0
    //   926: ldc_w 7602
    //   929: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   932: aload 6
    //   934: getfield 900	com/cleanmaster/base/util/e/g:a	J
    //   937: invokevirtual 5553	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   940: ldc_w 374
    //   943: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   946: pop
    //   947: aload_0
    //   948: ldc_w 7604
    //   951: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   954: aload 6
    //   956: getfield 910	com/cleanmaster/base/util/e/g:b	J
    //   959: invokevirtual 5553	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   962: ldc_w 374
    //   965: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   968: pop
    //   969: aload_0
    //   970: invokestatic 7607	com/cleanmaster/util/OpLog:a	(Ljava/lang/StringBuilder;)V
    //   973: aload_0
    //   974: ldc_w 7609
    //   977: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   980: invokestatic 7611	com/cleanmaster/base/c:w	()Ljava/lang/String;
    //   983: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   986: ldc_w 374
    //   989: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   992: pop
    //   993: aload_0
    //   994: ldc_w 7613
    //   997: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1000: invokestatic 7615	com/cleanmaster/base/c:t	()Ljava/lang/String;
    //   1003: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1006: ldc_w 374
    //   1009: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1012: pop
    //   1013: aload 5
    //   1015: invokevirtual 1269	android/content/Context:getContentResolver	()Landroid/content/ContentResolver;
    //   1018: ldc_w 6502
    //   1021: invokestatic 1593	android/provider/Settings$Secure:getString	(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;
    //   1024: astore 6
    //   1026: aload 6
    //   1028: invokestatic 166	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   1031: ifne +82 -> 1113
    //   1034: aload_0
    //   1035: ldc_w 7617
    //   1038: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1041: aload 6
    //   1043: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1046: ldc_w 374
    //   1049: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1052: pop
    //   1053: aload 6
    //   1055: ldc_w 7619
    //   1058: invokevirtual 450	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   1061: ifeq +52 -> 1113
    //   1064: aload 5
    //   1066: invokevirtual 132	android/content/Context:getPackageManager	()Landroid/content/pm/PackageManager;
    //   1069: ldc_w 7621
    //   1072: iconst_0
    //   1073: invokevirtual 138	android/content/pm/PackageManager:getPackageInfo	(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;
    //   1076: getfield 2565	android/content/pm/PackageInfo:versionName	Ljava/lang/String;
    //   1079: astore 5
    //   1081: aload_0
    //   1082: ldc_w 7623
    //   1085: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1088: new 149	java/lang/StringBuilder
    //   1091: dup
    //   1092: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   1095: aload 5
    //   1097: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1100: ldc_w 374
    //   1103: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1106: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1109: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1112: pop
    //   1113: aload_0
    //   1114: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1117: getstatic 7626	com/cleanmaster/util/OpLog:c	Ljava/io/File;
    //   1120: invokestatic 7629	com/cleanmaster/base/c:a	(Ljava/lang/String;Ljava/io/File;)Z
    //   1123: pop
    //   1124: getstatic 7631	com/cleanmaster/util/OpLog:b	Ljava/io/File;
    //   1127: invokevirtual 792	java/io/File:getPath	()Ljava/lang/String;
    //   1130: new 149	java/lang/StringBuilder
    //   1133: dup
    //   1134: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   1137: aload 4
    //   1139: invokestatic 7492	android/support/percent/a:B	(Ljava/lang/String;)Ljava/lang/String;
    //   1142: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1145: ldc_w 7633
    //   1148: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1151: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1154: new 7635	com/cleanmaster/util/n
    //   1157: dup
    //   1158: invokespecial 7636	com/cleanmaster/util/n:<init>	()V
    //   1161: invokestatic 7508	com/cleanmaster/util/al:a	(Ljava/lang/String;Ljava/lang/String;Lcom/cleanmaster/util/al$b;)V
    //   1164: goto -1108 -> 56
    //   1167: astore_0
    //   1168: aload_0
    //   1169: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   1172: goto -887 -> 285
    //   1175: iconst_0
    //   1176: istore_3
    //   1177: goto -359 -> 818
    //   1180: iconst_0
    //   1181: istore_3
    //   1182: goto -364 -> 818
    //   1185: new 7638	java/util/zip/ZipOutputStream
    //   1188: dup
    //   1189: new 5382	java/io/FileOutputStream
    //   1192: dup
    //   1193: aload 4
    //   1195: invokespecial 7639	java/io/FileOutputStream:<init>	(Ljava/lang/String;)V
    //   1198: invokespecial 7640	java/util/zip/ZipOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   1201: astore 4
    //   1203: new 464	java/io/File
    //   1206: dup
    //   1207: aload_0
    //   1208: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   1211: astore_0
    //   1212: new 149	java/lang/StringBuilder
    //   1215: dup
    //   1216: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   1219: aload_0
    //   1220: invokevirtual 7642	java/io/File:getParent	()Ljava/lang/String;
    //   1223: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1226: getstatic 1556	java/io/File:separator	Ljava/lang/String;
    //   1229: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1232: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1235: aload_0
    //   1236: invokevirtual 7643	java/io/File:getName	()Ljava/lang/String;
    //   1239: aload 4
    //   1241: invokestatic 7646	LibcoreWrapper/a:a	(Ljava/lang/String;Ljava/lang/String;Ljava/util/zip/ZipOutputStream;)V
    //   1244: aload 4
    //   1246: invokevirtual 7647	java/util/zip/ZipOutputStream:flush	()V
    //   1249: aload 4
    //   1251: invokevirtual 7648	java/util/zip/ZipOutputStream:close	()V
    //   1254: goto -1143 -> 111
    //   1257: astore_0
    //   1258: aload_0
    //   1259: invokevirtual 576	java/lang/Exception:printStackTrace	()V
    //   1262: goto -1151 -> 111
    //   1265: astore_0
    //   1266: goto -142 -> 1124
    //   1269: astore 5
    //   1271: goto -158 -> 1113
    //   1274: aload_0
    //   1275: ifnull -1219 -> 56
    //   1278: aload 4
    //   1280: ifnonnull -1043 -> 237
    //   1283: goto -1227 -> 56
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	1286	0	paramContext	Context
    //   0	1286	1	paramO	com.cleanmaster.util.o
    //   246	2	2	i1	int
    //   817	365	3	bool	boolean
    //   30	1249	4	localObject1	Object
    //   157	939	5	localObject2	Object
    //   1269	1	5	localException	Exception
    //   545	509	6	localObject3	Object
    //   797	8	7	localApplicationInfo	ApplicationInfo
    // Exception table:
    //   from	to	target	type
    //   9	27	195	finally
    //   27	32	195	finally
    //   49	53	195	finally
    //   60	64	195	finally
    //   64	93	195	finally
    //   93	102	195	finally
    //   148	173	195	finally
    //   173	181	195	finally
    //   187	192	195	finally
    //   237	247	195	finally
    //   251	285	195	finally
    //   289	293	195	finally
    //   293	330	195	finally
    //   334	338	195	finally
    //   338	416	195	finally
    //   420	424	195	finally
    //   424	428	195	finally
    //   428	799	195	finally
    //   804	816	195	finally
    //   818	920	195	finally
    //   925	969	195	finally
    //   969	1064	195	finally
    //   1064	1113	195	finally
    //   1113	1124	195	finally
    //   1124	1164	195	finally
    //   1168	1172	195	finally
    //   1185	1254	195	finally
    //   1258	1262	195	finally
    //   251	285	1167	java/io/IOException
    //   64	93	1257	java/lang/Exception
    //   93	102	1257	java/lang/Exception
    //   1185	1254	1257	java/lang/Exception
    //   428	799	1265	java/lang/Exception
    //   804	816	1265	java/lang/Exception
    //   818	920	1265	java/lang/Exception
    //   925	969	1265	java/lang/Exception
    //   969	1064	1265	java/lang/Exception
    //   1113	1124	1265	java/lang/Exception
    //   1064	1113	1269	java/lang/Exception
  }
  
  public static void a(Context paramContext, NativeAd.Image paramImage, UrlLoadImageView paramUrlLoadImageView, ImageView paramImageView)
  {
    if (paramImage == null) {}
    label107:
    for (;;)
    {
      return;
      String str = paramImage.getUrl();
      if ((paramUrlLoadImageView != null) && (!TextUtils.isEmpty(str)))
      {
        paramUrlLoadImageView.setVisibility(0);
        if (paramContext != null)
        {
          paramContext = paramContext.getResources().getDrawable(2130968679);
          paramUrlLoadImageView.a(paramContext, str);
        }
      }
      for (int i1 = 1;; i1 = 0)
      {
        if ((i1 != 0) || (paramImageView == null)) {
          break label107;
        }
        if (paramUrlLoadImageView != null) {
          paramUrlLoadImageView.setVisibility(8);
        }
        paramImageView.setVisibility(0);
        paramImageView.setImageBitmap(null);
        paramImageView.setImageDrawable(null);
        paramImageView.setBackgroundColor(0);
        NativeAd.downloadAndDisplayImage(paramImage, paramImageView);
        return;
        paramContext = null;
        break;
      }
    }
  }
  
  public static void a(Context paramContext, com.ijinshan.cleaner.bean.JunkInfoBase paramJunkInfoBase)
  {
    if ((paramJunkInfoBase instanceof com.ijinshan.cleaner.bean.a)) {
      a(paramContext, (com.ijinshan.cleaner.bean.a)paramJunkInfoBase);
    }
    while (!(paramJunkInfoBase instanceof com.ijinshan.cleaner.bean.f)) {
      return;
    }
    Activity localActivity = (Activity)paramContext;
    com.ijinshan.cleaner.bean.f localF = (com.ijinshan.cleaner.bean.f)paramJunkInfoBase;
    paramJunkInfoBase = null;
    int i1 = localF.d().size();
    if (1 != i1)
    {
      paramContext = paramJunkInfoBase;
      if (i1 == 0)
      {
        paramContext = paramJunkInfoBase;
        if (TextUtils.isEmpty(localF.j())) {}
      }
    }
    else
    {
      if (1 != i1) {
        break label146;
      }
      paramContext = (String)localF.d().get(0);
    }
    paramJunkInfoBase = localF.e();
    String str = localF.f();
    if (localF.hadSetSize()) {}
    for (long l1 = localF.getSize();; l1 = 0L)
    {
      a(localActivity, new ViewFileEntry(str, l1, paramJunkInfoBase, paramContext, localActivity.getClass().getName()));
      return;
      label146:
      paramContext = localF.j();
      break;
    }
  }
  
  public static void a(Context paramContext, com.ijinshan.cleaner.bean.a paramA)
  {
    String str = paramA.u();
    a(paramContext, new ViewFileEntry(paramA.m(), paramA.getSize(), str, paramA.p(), SpaceManagerActivity.class.getName()));
  }
  
  public static void a(Context paramContext, com.keniu.security.util.d paramD)
  {
    if (paramD == null) {}
    int i1;
    do
    {
      do
      {
        return;
      } while (com.cleanmaster.base.util.system.b.b(paramContext));
      i1 = com.cleanmaster.base.util.system.d.a(paramContext, 6.0F);
      if (paramD.d(-1) != null)
      {
        paramD.d(-1).setTextColor(-1);
        paramD.d(-1).setBackgroundResource(2130839215);
        localLayoutParams = (LinearLayout.LayoutParams)paramD.d(-1).getLayoutParams();
        localLayoutParams.height = com.cleanmaster.base.util.system.d.a(paramContext, 40.0F);
        localLayoutParams.setMargins(i1 / 2, i1, i1, i1);
        paramD.d(-1).setLayoutParams(localLayoutParams);
      }
      a(paramD);
    } while (paramD.d(-2) == null);
    paramD.d(-2).setTextColor(-16777216);
    paramD.d(-2).setBackgroundResource(2130839261);
    LinearLayout.LayoutParams localLayoutParams = (LinearLayout.LayoutParams)paramD.d(-2).getLayoutParams();
    localLayoutParams.height = com.cleanmaster.base.util.system.d.a(paramContext, 40.0F);
    localLayoutParams.setMargins(i1, i1, i1 / 2, i1);
    paramD.d(-2).setLayoutParams(localLayoutParams);
  }
  
  public static void a(Context paramContext, Object paramObject)
  {
    try
    {
      paramContext = com.in2wow.sdk.b.d.a(paramContext);
      if (paramContext.k) {
        paramContext.g.t = paramObject;
      }
      return;
    }
    catch (Throwable paramContext)
    {
      com.in2wow.sdk.l.k.a(paramContext);
    }
  }
  
  public static void a(Context paramContext, String paramString, DialogInterface.OnCancelListener paramOnCancelListener)
  {
    paramContext = new com.keniu.security.util.d.a(paramContext);
    paramContext.a(2131301347);
    paramContext.b(2131301346);
    paramContext.a(2131301345, new com.cleanmaster.cmresources.m(paramString));
    paramContext.a(new com.cleanmaster.cmresources.d(paramOnCancelListener));
    paramContext.g(true);
    a(4, 1, paramString, aX());
  }
  
  public static void a(Context paramContext, String paramString1, String paramString2, String paramString3)
  {
    paramContext = paramContext.getSharedPreferences(paramString1, 0).edit();
    paramContext.putString(paramString2, paramString3);
    if (Build.VERSION.SDK_INT >= 9)
    {
      paramContext.apply();
      return;
    }
    new Thread(new bl(paramContext)).start();
  }
  
  public static void a(Context paramContext, String paramString1, String paramString2, String paramString3, String paramString4)
  {
    if ((paramContext == null) || (TextUtils.isEmpty(paramString3)) || (TextUtils.isEmpty(paramString4))) {
      return;
    }
    int i1 = paramString4.length();
    String str = paramString3;
    if (i1 < paramString3.length())
    {
      str = paramString3;
      if (paramString4.equals(paramString3.substring(0, i1).toLowerCase())) {
        str = paramString3.substring(i1);
      }
    }
    ShareHelper.a(paramContext, paramString1, paramString2, str, paramString4);
  }
  
  public static void a(Context paramContext, String paramString1, String paramString2, String paramString3, String paramString4, com.cleanmaster.recommendapps.e paramE)
  {
    com.cleanmaster.ui.app.provider.a.a();
    com.cleanmaster.ui.app.provider.download.f localF = com.cleanmaster.ui.app.provider.a.a(paramContext, paramString1, paramString4);
    com.ijinshan.cleaner.bean.d localD = new com.ijinshan.cleaner.bean.d();
    localD.a(localF);
    switch (localD.a)
    {
    }
    for (;;)
    {
      if (paramE != null) {
        com.cleanmaster.ui.app.provider.a.a().a(new com.cleanmaster.recommendapps.c(paramString1, paramE));
      }
      return;
      a(localD, paramString1, paramString4, paramString2, paramString3, paramContext);
      continue;
      com.cleanmaster.ui.app.provider.a.a();
      com.cleanmaster.ui.app.provider.a.a(paramContext, localF.a, paramString1);
      localD.a(new com.cleanmaster.ui.app.provider.download.f(4).a(localF.a, localF.c, localF.b));
      continue;
      com.cleanmaster.ui.app.provider.a.a();
      com.cleanmaster.ui.app.provider.a.a(paramContext, localF.d);
      continue;
      com.cleanmaster.ui.app.provider.a.a();
      com.cleanmaster.ui.app.provider.a.b(paramContext, localF.a, paramString1);
      localD.a(new com.cleanmaster.ui.app.provider.download.f(1).a(localF.a, localF.c, localF.b));
      continue;
      com.cleanmaster.ui.app.provider.a.a();
      com.cleanmaster.ui.app.provider.a.a(paramContext, localF.a);
      a(localD, paramString1, paramString4, paramString2, paramString3, paramContext);
    }
  }
  
  public static void a(Context paramContext, List<String> paramList)
  {
    String str = "";
    Object localObject = str;
    if (paramList != null)
    {
      Iterator localIterator = paramList.iterator();
      int i1 = 0;
      for (paramList = str;; paramList = (List<String>)localObject)
      {
        localObject = paramList;
        if (!localIterator.hasNext()) {
          break;
        }
        str = (String)localIterator.next();
        localObject = paramList;
        if (!TextUtils.isEmpty(str))
        {
          localObject = paramList;
          if (i1 != 0) {
            localObject = paramList + "##";
          }
          localObject = (String)localObject + str;
        }
        i1 += 1;
      }
    }
    paramList = paramContext;
    if (paramContext == null) {
      paramList = com.keniu.security.d.a().getApplicationContext();
    }
    paramList = com.cleanmaster.configmanager.d.a(paramList);
    paramContext = (Context)localObject;
    if (localObject == null) {
      paramContext = "";
    }
    paramList.b("ats_notify_new_pkgs", paramContext);
  }
  
  public static void a(Context paramContext, List<AbnormalCpuApp> paramList, float paramFloat, String paramString)
  {
    if (!com.cleanmaster.configmanager.d.a(paramContext).aE()) {}
    List localList;
    do
    {
      do
      {
        return;
        localList = com.cleanmaster.boost.cpu.e.a(paramList);
      } while ((localList == null) || (localList.size() <= 0));
      paramList = (AbnormalCpuApp)localList.get(0);
    } while (((!TextUtils.isEmpty(paramString)) && (!TextUtils.isEmpty(paramList.a)) && (paramString.equals(paramList.a))) || (1 == AbnormalIgnoreManager.a((byte)3, (byte)2, paramList.a)));
    int i4 = paramList.k;
    int i3 = Math.round(com.cleanmaster.boost.cpu.e.a(false)[1]);
    if (i3 > a("process_settings", "process_cpu_show_temp_threshold", 50)) {}
    for (int i1 = 1;; i1 = 0)
    {
      int i2 = cS();
      if (paramList.c > i2) {}
      for (i2 = 1;; i2 = 0)
      {
        short s2 = 4;
        short s1;
        if ((i1 != 0) && (i2 == 0)) {
          s1 = 8;
        }
        for (;;)
        {
          if ((((KeyguardManager)paramContext.getSystemService("keyguard")).inKeyguardRestrictedInputMode()) || ((s1 == 6) && (!AbnormalScenePhoneListener.a())))
          {
            i1 = 0;
            label187:
            if (i1 != 0)
            {
              a(paramContext, localList, s1, paramFloat, paramString, false);
              a("CpuAbnormalNotification", s1, paramList, true, false);
              return;
              if (i4 == 44)
              {
                s1 = 6;
                continue;
              }
              if (i4 == 33)
              {
                s1 = 5;
                continue;
              }
              Context localContext = com.keniu.security.d.a();
              s1 = s2;
              if (TextUtils.isEmpty(paramString)) {
                continue;
              }
              s1 = s2;
              if (paramString.equals(localContext.getPackageName())) {
                continue;
              }
              if (!new com.cleanmaster.boost.process.util.k.a(com.keniu.security.d.a()).a(paramString)) {
                break label482;
              }
            }
          }
        }
        label482:
        for (i1 = 1;; i1 = 0)
        {
          s1 = s2;
          if (i1 != 0) {
            break;
          }
          s1 = s2;
          if ("com.cleanmaster.mguard".equals(paramString)) {
            break;
          }
          s1 = s2;
          if ("com.cleanmaster.mguard_cn".equals(paramString)) {
            break;
          }
          s1 = 7;
          break;
          boolean bool = a("process_settings", "process_cpu_notification_switch_standby", true);
          if ((paramList.j) && (bool)) {
            com.cleanmaster.configmanager.d.a(paramContext).b("total_scree_off", true);
          }
          if (s1 == 8) {
            com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).C(i3);
          }
          for (;;)
          {
            com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).D(s1);
            com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).t(paramList.a);
            a("CpuAbnormalNotification", s1, paramList, false, false);
            return;
            if (s1 == 7)
            {
              com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).s(paramString);
            }
            else if (s1 == 6)
            {
              paramContext = new AbnormalScenePhoneListener.b();
              paramContext.a = AbnormalScenePhoneListener.NotifyCacheType.CPU;
              AbnormalScenePhoneListener.a(paramContext);
            }
          }
          i1 = 1;
          break label187;
        }
      }
    }
  }
  
  private static void a(Context paramContext, List<AbnormalCpuApp> paramList, short paramShort, float paramFloat, String paramString, boolean paramBoolean)
  {
    int i2;
    AbnormalCpuApp localAbnormalCpuApp;
    label24:
    int i1;
    label41:
    Object localObject1;
    if (paramList == null)
    {
      i2 = 0;
      if (i2 <= 0) {
        break label90;
      }
      localAbnormalCpuApp = (AbnormalCpuApp)paramList.get(0);
      i1 = 0;
      if (paramList == null) {
        break label96;
      }
      paramList = paramList.iterator();
      i1 = 0;
      if (!paramList.hasNext()) {
        break label96;
      }
      localObject1 = (AbnormalCpuApp)paramList.next();
      if (localObject1 == null) {
        break label1087;
      }
      i1 = ((AbnormalCpuApp)localObject1).c + i1;
    }
    label90:
    label96:
    label142:
    label225:
    label239:
    label367:
    label398:
    label473:
    label544:
    label856:
    label863:
    label882:
    label933:
    label936:
    label938:
    label948:
    label1068:
    label1074:
    label1087:
    for (;;)
    {
      break label41;
      i2 = paramList.size();
      break;
      localAbnormalCpuApp = null;
      break label24;
      if (i1 >= 100) {}
      for (int i3 = 99;; i3 = i1)
      {
        if ((paramContext == null) || (localAbnormalCpuApp == null) || (TextUtils.isEmpty(localAbnormalCpuApp.a)) || (i3 <= 0) || (!com.cleanmaster.configmanager.d.a(paramContext).aE()))
        {
          break label142;
          return;
        }
        if (a("abnormal_detection_notify_key", "abnormal_detection_notify_cpu_abnormal", true))
        {
          localObject1 = localAbnormalCpuApp.a;
          paramList = com.cleanmaster.func.cache.c.b().b((String)localObject1, null);
          if (!TextUtils.isEmpty(paramList)) {
            break label1074;
          }
        }
        for (;;)
        {
          short s1;
          if (b(paramShort))
          {
            if ((paramShort != 7) || (TextUtils.isEmpty(paramString))) {
              break label1068;
            }
            if (!paramBoolean)
            {
              if (!new com.cleanmaster.boost.process.util.k.a(paramContext).a(paramString)) {
                break label1068;
              }
              s1 = 4;
            }
          }
          for (;;)
          {
            int i5;
            Object localObject2;
            boolean bool;
            if (localAbnormalCpuApp.c > cS())
            {
              paramBoolean = true;
              Intent localIntent = a(paramBoolean, s1, paramString);
              if (localIntent == null) {
                break;
              }
              paramList = new Intent();
              paramList.setAction("com.cleanmaster.action.ABNORMALCPU_APP");
              paramList.putExtra("package", localAbnormalCpuApp.a);
              paramList.putExtra("pid", localAbnormalCpuApp.e);
              paramList.putExtra("cpuusage", localAbnormalCpuApp.c);
              paramList.setPackage(localAbnormalCpuApp.a);
              paramContext.sendBroadcast(paramList);
              int i4 = com.cleanmaster.configmanager.d.a(paramContext).a("last_cpu_abnormal_notify_idx", 0);
              i1 = i4;
              if (i4 < 0) {
                i1 = 0;
              }
              i4 = (i1 + 1) % 3;
              if (!paramBoolean) {
                break label856;
              }
              i1 = 20;
              i1 += i4 + 1;
              i5 = cR();
              if (i5 >= 4)
              {
                if (i5 <= 11) {
                  break label863;
                }
                i1 = 6;
              }
              localIntent.putExtra("key_textid", i1);
              CharSequence localCharSequence = a(paramContext, i4, String.valueOf(i3));
              if (paramContext == null) {
                break label933;
              }
              paramList = null;
              i3 = cR();
              localObject2 = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).b(com.keniu.security.d.a()).a();
              if (i3 <= 11) {
                break label882;
              }
              paramList = d("process_settings", com.cleanmaster.cloudconfig.f.a("abnormal_notify_normal_cpu_sub_title_new_23", (String)localObject2), null);
              localObject2 = paramList;
              if (TextUtils.isEmpty(paramList))
              {
                localObject2 = paramList;
                if (i4 >= 0)
                {
                  localObject2 = paramList;
                  if (i4 <= 3) {
                    localObject2 = paramContext.getString(new int[] { 2131296758, 2131296759, 2131296760 }[i4]);
                  }
                }
              }
              if (TextUtils.isEmpty((CharSequence)localObject2)) {
                break label933;
              }
              paramList = Html.fromHtml((String)localObject2);
              if ((localCharSequence == null) || (localCharSequence.length() <= 0) || (paramList == null) || (paramList.length() <= 0)) {
                break label936;
              }
              localObject2 = new com.cleanmaster.boost.abnormal.abnormalnotify.s();
              ((com.cleanmaster.boost.abnormal.abnormalnotify.s)localObject2).a = paramContext;
              ((com.cleanmaster.boost.abnormal.abnormalnotify.s)localObject2).j = paramList;
              ((com.cleanmaster.boost.abnormal.abnormalnotify.s)localObject2).i = localCharSequence;
              ((com.cleanmaster.boost.abnormal.abnormalnotify.s)localObject2).h = localIntent;
              ((com.cleanmaster.boost.abnormal.abnormalnotify.s)localObject2).e = localAbnormalCpuApp.a;
              ((com.cleanmaster.boost.abnormal.abnormalnotify.s)localObject2).f = ((String)localObject1);
              ((com.cleanmaster.boost.abnormal.abnormalnotify.s)localObject2).g = paramString;
              ((com.cleanmaster.boost.abnormal.abnormalnotify.s)localObject2).c = s1;
              ((com.cleanmaster.boost.abnormal.abnormalnotify.s)localObject2).b = 0;
              ((com.cleanmaster.boost.abnormal.abnormalnotify.s)localObject2).k = b((com.cleanmaster.boost.abnormal.abnormalnotify.s)localObject2);
              bool = a((com.cleanmaster.boost.abnormal.abnormalnotify.s)localObject2);
              BoostBGThread.a(new com.cleanmaster.boost.cpu.ui.a());
              if (!bool) {
                break;
              }
              com.cleanmaster.configmanager.d.a(paramContext).b("last_cpu_abnormal_notify_idx", i4);
              if (!com.cleanmaster.configmanager.d.a(paramContext).bl()) {
                break label938;
              }
              W();
            }
            for (;;)
            {
              com.cleanmaster.configmanager.d.a(paramContext).d(System.currentTimeMillis());
              if (((com.cleanmaster.boost.abnormal.abnormalnotify.s)localObject2).k) {
                OpLog.d("CpuAbnormalWindow", "pkgName=" + localAbnormalCpuApp.a + ";labelName=" + com.cleanmaster.func.cache.c.b().b(localAbnormalCpuApp.a, null));
              }
              i3 = (int)(100.0F * paramFloat + 0.5F);
              bool = ((com.cleanmaster.boost.abnormal.abnormalnotify.s)localObject2).k;
              if ((paramContext != null) && (localAbnormalCpuApp != null)) {
                break label948;
              }
              paramContext = com.cleanmaster.boost.cpu.e.a(false);
              if ((paramContext[0] <= 0.0F) || (paramContext[1] <= 0.0F)) {
                break;
              }
              v.a.a(Math.round(paramContext[1]), Math.round(paramContext[0]), com.cleanmaster.boost.cpu.e.a(paramContext[0]), com.cleanmaster.boost.cpu.e.a()).a();
              return;
              s1 = 4;
              break label225;
              paramBoolean = false;
              break label239;
              i1 = 10;
              break label367;
              if (i5 > 7)
              {
                i1 = 5;
                break label398;
              }
              i1 = 4;
              break label398;
              if (i3 > 7)
              {
                paramList = d("process_settings", com.cleanmaster.cloudconfig.f.a("abnormal_notify_normal_cpu_sub_title_new_22", (String)localObject2), null);
                break label473;
              }
              if (i3 <= 3) {
                break label473;
              }
              paramList = d("process_settings", com.cleanmaster.cloudconfig.f.a("abnormal_notify_normal_cpu_sub_title_new_21", (String)localObject2), null);
              break label473;
              paramList = null;
              break label544;
              break label142;
              break label142;
              com.cleanmaster.configmanager.d.a(paramContext).bm();
            }
            paramList = new z();
            paramList.a(localAbnormalCpuApp.a);
            paramList.a(com.cleanmaster.base.c.b(com.cleanmaster.base.util.system.m.e(paramContext, localAbnormalCpuApp.a)));
            paramList.b(0);
            paramList.a(i3);
            paramList.f(2);
            paramList.h(paramShort);
            if (paramBoolean) {}
            for (i3 = 1;; i3 = 2)
            {
              paramList.d(i3);
              paramList.c(localAbnormalCpuApp.k);
              paramList.e(i2);
              paramList.g(i1);
              if (bool)
              {
                paramContext = paramList.b();
                if (paramContext != null) {
                  paramContext.report();
                }
              }
              paramList.report();
              break;
            }
            s1 = paramShort;
          }
          localObject1 = paramList;
        }
      }
    }
  }
  
  private static void a(Context paramContext, Set<String> paramSet, String paramString)
  {
    PackageManager localPackageManager = paramContext.getPackageManager();
    paramContext = paramContext.getPackageName();
    Intent localIntent = new Intent(paramString);
    localIntent.setPackage(paramContext);
    paramContext = localPackageManager.queryBroadcastReceivers(localIntent, 32);
    if (paramContext.isEmpty()) {
      throw new IllegalStateException("No receivers for action " + paramString);
    }
    if (Log.isLoggable("GCMRegistrar", 2))
    {
      com.keniu.security.update.push.gcm.a.a();
      new StringBuilder("Found ").append(paramContext.size()).append(" receivers for action ").append(paramString);
    }
    paramContext = paramContext.iterator();
    while (paramContext.hasNext())
    {
      paramString = ((ResolveInfo)paramContext.next()).activityInfo.name;
      if (!paramSet.contains(paramString)) {
        throw new IllegalStateException("Receiver " + paramString + " is not set with permission com.google.android.c2dm.permission.SEND");
      }
    }
  }
  
  public static void a(Context paramContext, boolean paramBoolean, JSONObject paramJSONObject)
  {
    for (;;)
    {
      try
      {
        Object localObject = com.in2wow.sdk.b.d.a(paramContext);
        if (((com.in2wow.sdk.b.d)localObject).d != null)
        {
          com.in2wow.sdk.h.c localC = ((com.in2wow.sdk.b.d)localObject).d;
          if (paramBoolean)
          {
            paramContext = "Y";
            localC.b(20, paramContext);
            localObject = ((com.in2wow.sdk.b.d)localObject).d;
            ((com.in2wow.sdk.h.c)localObject).k = paramJSONObject;
            if (((com.in2wow.sdk.h.c)localObject).k != null)
            {
              paramContext = ((com.in2wow.sdk.h.c)localObject).k.toString();
              ((com.in2wow.sdk.h.c)localObject).b(21, paramContext);
              return;
            }
            paramContext = "{}";
            continue;
          }
        }
        else
        {
          return;
        }
      }
      catch (Exception paramContext)
      {
        com.in2wow.sdk.l.k.a(paramContext);
        return;
      }
      catch (Error paramContext)
      {
        com.in2wow.sdk.l.k.a(paramContext);
      }
      paramContext = "N";
    }
  }
  
  /* Error */
  public static void a(Context paramContext, boolean paramBoolean1, boolean paramBoolean2)
  {
    // Byte code:
    //   0: ldc 2
    //   2: monitorenter
    //   3: getstatic 8042	com/in2wow/sdk/a/b:g	Z
    //   6: ifeq +18 -> 24
    //   9: getstatic 8047	com/in2wow/sdk/l/k$a:a	Lcom/in2wow/sdk/l/k$a;
    //   12: invokestatic 8050	com/in2wow/sdk/l/k:a	(Lcom/in2wow/sdk/l/k$a;)V
    //   15: aload_0
    //   16: iload_1
    //   17: invokestatic 8053	LibcoreWrapper/a:e	(Landroid/content/Context;Z)V
    //   20: ldc 2
    //   22: monitorexit
    //   23: return
    //   24: iload_2
    //   25: ifeq +26 -> 51
    //   28: getstatic 8055	com/in2wow/sdk/l/k$a:f	Lcom/in2wow/sdk/l/k$a;
    //   31: invokestatic 8050	com/in2wow/sdk/l/k:a	(Lcom/in2wow/sdk/l/k$a;)V
    //   34: goto -19 -> 15
    //   37: astore_0
    //   38: aload_0
    //   39: invokestatic 3043	com/in2wow/sdk/l/k:a	(Ljava/lang/Throwable;)V
    //   42: goto -22 -> 20
    //   45: astore_0
    //   46: ldc 2
    //   48: monitorexit
    //   49: aload_0
    //   50: athrow
    //   51: getstatic 8057	com/in2wow/sdk/l/k$a:g	Lcom/in2wow/sdk/l/k$a;
    //   54: invokestatic 8050	com/in2wow/sdk/l/k:a	(Lcom/in2wow/sdk/l/k$a;)V
    //   57: goto -42 -> 15
    //   60: astore_0
    //   61: aload_0
    //   62: invokestatic 3043	com/in2wow/sdk/l/k:a	(Ljava/lang/Throwable;)V
    //   65: goto -45 -> 20
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	68	0	paramContext	Context
    //   0	68	1	paramBoolean1	boolean
    //   0	68	2	paramBoolean2	boolean
    // Exception table:
    //   from	to	target	type
    //   3	15	37	java/lang/Exception
    //   15	20	37	java/lang/Exception
    //   28	34	37	java/lang/Exception
    //   51	57	37	java/lang/Exception
    //   3	15	45	finally
    //   15	20	45	finally
    //   28	34	45	finally
    //   38	42	45	finally
    //   51	57	45	finally
    //   61	65	45	finally
    //   3	15	60	java/lang/Error
    //   15	20	60	java/lang/Error
    //   28	34	60	java/lang/Error
    //   51	57	60	java/lang/Error
  }
  
  public static void a(Intent paramIntent, int paramInt1, String paramString1, String paramString2, String paramString3, int paramInt2, String paramString4, String paramString5)
  {
    Context localContext = com.keniu.security.d.a().getApplicationContext();
    String str = paramString2;
    if (paramString2 == null) {
      str = localContext.getString(2131296531);
    }
    paramString2 = new NotificationSetting();
    paramString2.a = paramInt1;
    paramString2.f = paramInt2;
    paramString2.l = true;
    com.cleanmaster.notification.normal.f localF = new com.cleanmaster.notification.normal.f();
    localF.b = paramString1;
    localF.c = str;
    localF.d = paramString1;
    localF.u = paramInt1;
    localF.s = PendingIntent.getBroadcast(localContext, paramInt1, paramIntent, 134217728);
    localF.x = paramString3;
    localF.y = paramString4;
    localF.z = paramString5;
    if (16 == paramInt2)
    {
      paramIntent = com.cleanmaster.notification.e.a();
      if (((localF.q != null) || (localF.s != null)) && (com.cleanmaster.notification.e.a(paramString2)))
      {
        if (localF.q != null) {
          localF.q.putExtra("notify_style_type", (byte)1);
        }
        com.cleanmaster.bitmapcache.e.a().b(localF.x, new e.1(paramIntent, localF, paramString2));
      }
    }
    do
    {
      return;
      paramIntent = com.cleanmaster.notification.e.a();
    } while (((localF.q == null) && (localF.s == null)) || (!com.cleanmaster.notification.e.a(paramString2)));
    if (localF.q != null) {
      localF.q.putExtra("notify_style_type", (byte)1);
    }
    com.cleanmaster.bitmapcache.e.a().b(localF.x, new e.2(paramIntent, localF, paramString2));
  }
  
  public static void a(SharedPreferences.Editor paramEditor)
  {
    if (Build.VERSION.SDK_INT >= 9)
    {
      paramEditor.apply();
      return;
    }
    paramEditor.commit();
  }
  
  public static void a(Cursor paramCursor)
  {
    if (paramCursor == null) {
      return;
    }
    try
    {
      paramCursor.close();
      return;
    }
    catch (Exception paramCursor) {}
  }
  
  public static void a(SQLiteDatabase paramSQLiteDatabase, ONewsScenario paramONewsScenario)
  {
    if (paramSQLiteDatabase == null) {
      return;
    }
    ONewsStat.onCreateTable(paramSQLiteDatabase, paramONewsScenario);
  }
  
  public static void a(SQLiteDatabase paramSQLiteDatabase, String paramString1, String paramString2, String paramString3)
  {
    try
    {
      paramSQLiteDatabase.execSQL(String.format("CREATE UNIQUE INDEX IF NOT EXISTS idx_%s ON %s (%s);", new Object[] { paramString1, paramString2, paramString3 }));
      return;
    }
    catch (Exception paramSQLiteDatabase)
    {
      paramSQLiteDatabase.printStackTrace();
    }
  }
  
  public static void a(BitmapFactory.Options paramOptions)
  {
    try
    {
      BitmapFactory.Options.class.getField("inNativeAlloc").setBoolean(paramOptions, true);
      return;
    }
    catch (Exception paramOptions) {}
  }
  
  public static void a(Paint paramPaint, float paramFloat, int paramInt1, int paramInt2)
  {
    int i1 = paramInt1 >>> 24;
    int i2 = paramInt1 >> 16 & 0xFF;
    int i3 = paramInt1 >> 8 & 0xFF;
    paramInt1 &= 0xFF;
    paramPaint.setARGB(i1 + (int)(((paramInt2 >>> 24) - i1) * paramFloat), (int)(((paramInt2 >> 16 & 0xFF) - i2) * paramFloat) + i2, (int)(((paramInt2 >> 8 & 0xFF) - i3) * paramFloat) + i3, (int)(((paramInt2 & 0xFF) - paramInt1) * paramFloat) + paramInt1);
  }
  
  public static void a(Parcel paramParcel, int paramInt, float paramFloat)
  {
    c(paramParcel, paramInt, 4);
    paramParcel.writeFloat(paramFloat);
  }
  
  public static void a(Parcel paramParcel, int paramInt1, int paramInt2)
  {
    c(paramParcel, paramInt1, 4);
    paramParcel.writeInt(paramInt2);
  }
  
  public static void a(Parcel paramParcel, int paramInt, long paramLong)
  {
    c(paramParcel, paramInt, 8);
    paramParcel.writeLong(paramLong);
  }
  
  public static void a(Parcel paramParcel, int paramInt, Bundle paramBundle)
  {
    if (paramBundle == null) {
      return;
    }
    paramInt = t(paramParcel, paramInt);
    paramParcel.writeBundle(paramBundle);
    u(paramParcel, paramInt);
  }
  
  public static void a(Parcel paramParcel, int paramInt, IBinder paramIBinder)
  {
    if (paramIBinder == null) {
      return;
    }
    paramInt = t(paramParcel, paramInt);
    paramParcel.writeStrongBinder(paramIBinder);
    u(paramParcel, paramInt);
  }
  
  public static void a(Parcel paramParcel, int paramInt1, Parcelable paramParcelable, int paramInt2)
  {
    if (paramParcelable == null) {
      return;
    }
    paramInt1 = t(paramParcel, paramInt1);
    paramParcelable.writeToParcel(paramParcel, paramInt2);
    u(paramParcel, paramInt1);
  }
  
  public static void a(Parcel paramParcel, int paramInt, String paramString)
  {
    if (paramString == null) {
      return;
    }
    paramInt = t(paramParcel, paramInt);
    paramParcel.writeString(paramString);
    u(paramParcel, paramInt);
  }
  
  public static void a(Parcel paramParcel, int paramInt, List<String> paramList)
  {
    if (paramList == null) {
      return;
    }
    paramInt = t(paramParcel, paramInt);
    paramParcel.writeStringList(paramList);
    u(paramParcel, paramInt);
  }
  
  public static void a(Parcel paramParcel, int paramInt, boolean paramBoolean)
  {
    c(paramParcel, paramInt, 4);
    if (paramBoolean) {}
    for (paramInt = 1;; paramInt = 0)
    {
      paramParcel.writeInt(paramInt);
      return;
    }
  }
  
  public static void a(Parcel paramParcel, int paramInt, byte[] paramArrayOfByte)
  {
    if (paramArrayOfByte == null) {
      return;
    }
    paramInt = t(paramParcel, paramInt);
    paramParcel.writeByteArray(paramArrayOfByte);
    u(paramParcel, paramInt);
  }
  
  public static <T extends Parcelable> void a(Parcel paramParcel, int paramInt1, T[] paramArrayOfT, int paramInt2)
  {
    if (paramArrayOfT == null) {
      return;
    }
    int i1 = t(paramParcel, paramInt1);
    int i2 = paramArrayOfT.length;
    paramParcel.writeInt(i2);
    paramInt1 = 0;
    if (paramInt1 < i2)
    {
      T ? = paramArrayOfT[paramInt1];
      if (? == null) {
        paramParcel.writeInt(0);
      }
      for (;;)
      {
        paramInt1 += 1;
        break;
        a(paramParcel, ?, paramInt2);
      }
    }
    u(paramParcel, i1);
  }
  
  public static void a(Parcel paramParcel, int paramInt, String[] paramArrayOfString)
  {
    if (paramArrayOfString == null) {
      return;
    }
    paramInt = t(paramParcel, paramInt);
    paramParcel.writeStringArray(paramArrayOfString);
    u(paramParcel, paramInt);
  }
  
  private static <T extends Parcelable> void a(Parcel paramParcel, T paramT, int paramInt)
  {
    int i1 = paramParcel.dataPosition();
    paramParcel.writeInt(1);
    int i2 = paramParcel.dataPosition();
    paramT.writeToParcel(paramParcel, paramInt);
    paramInt = paramParcel.dataPosition();
    paramParcel.setDataPosition(i1);
    paramParcel.writeInt(paramInt - i2);
    paramParcel.setDataPosition(paramInt);
  }
  
  public static void a(android.support.v4.c.a<String, String> paramA, File paramFile)
  {
    byte[] arrayOfByte = new byte[1048576];
    RandomAccessFile localRandomAccessFile;
    int i2;
    long[] arrayOfLong1;
    byte[][] arrayOfByte1;
    File[] arrayOfFile;
    long[] arrayOfLong2;
    for (;;)
    {
      File localFile;
      CRC32 localCRC32;
      FileInputStream localFileInputStream;
      try
      {
        localRandomAccessFile = new RandomAccessFile(paramFile, "rw");
        i2 = paramA.size();
        arrayOfLong1 = new long[i2];
        arrayOfByte1 = new byte[i2][];
        arrayOfFile = new File[i2];
        arrayOfLong2 = new long[i2];
        Iterator localIterator = paramA.keySet().iterator();
        i1 = 0;
        if (!localIterator.hasNext()) {
          break;
        }
        paramFile = (String)localIterator.next();
        localFile = new File(paramFile);
        paramFile = (String)paramA.get(paramFile);
        if ("desc.json".equals(paramFile))
        {
          paramFile = "desc.json";
          paramFile = new String(paramFile.getBytes("8859_1"), "GB2312").getBytes();
          arrayOfLong2[i1] = localRandomAccessFile.getFilePointer();
          a(localRandomAccessFile, 67324752L);
          a(localRandomAccessFile, 10);
          a(localRandomAccessFile, 0);
          a(localRandomAccessFile, 0);
          a(localRandomAccessFile, 0);
          a(localRandomAccessFile, 0);
          l1 = localRandomAccessFile.getFilePointer();
          a(localRandomAccessFile, 0L);
          a(localRandomAccessFile, localFile.length());
          a(localRandomAccessFile, localFile.length());
          a(localRandomAccessFile, paramFile.length);
          a(localRandomAccessFile, 0);
          localRandomAccessFile.write(paramFile);
          localCRC32 = new CRC32();
          localFileInputStream = new FileInputStream(localFile);
          int i3 = localFileInputStream.read(arrayOfByte);
          if (i3 <= 0) {
            break label340;
          }
          localCRC32.update(arrayOfByte, 0, i3);
          localRandomAccessFile.write(arrayOfByte, 0, i3);
          continue;
        }
        paramFile = paramFile + "_" + localFile.getName();
      }
      catch (IOException paramA)
      {
        paramA.printStackTrace();
        return;
      }
      continue;
      label340:
      localFileInputStream.close();
      l2 = localRandomAccessFile.getFilePointer();
      localRandomAccessFile.seek(l1);
      a(localRandomAccessFile, localCRC32.getValue());
      localRandomAccessFile.seek(l2);
      arrayOfLong1[i1] = localCRC32.getValue();
      arrayOfByte1[i1] = paramFile;
      arrayOfFile[i1] = localFile;
      i1 += 1;
    }
    long l1 = localRandomAccessFile.getFilePointer();
    int i1 = 0;
    while (i1 < i2)
    {
      a(localRandomAccessFile, 33639248L);
      a(localRandomAccessFile, 20);
      a(localRandomAccessFile, 10);
      a(localRandomAccessFile, 0);
      a(localRandomAccessFile, 0);
      a(localRandomAccessFile, 0);
      a(localRandomAccessFile, 0);
      a(localRandomAccessFile, arrayOfLong1[i1]);
      a(localRandomAccessFile, arrayOfFile[i1].length());
      a(localRandomAccessFile, arrayOfFile[i1].length());
      a(localRandomAccessFile, arrayOfByte1[i1].length);
      a(localRandomAccessFile, 0);
      a(localRandomAccessFile, 0);
      a(localRandomAccessFile, 0);
      a(localRandomAccessFile, 0);
      a(localRandomAccessFile, 0L);
      a(localRandomAccessFile, arrayOfLong2[i1]);
      localRandomAccessFile.write(arrayOfByte1[i1]);
      i1 += 1;
    }
    long l2 = localRandomAccessFile.getFilePointer();
    a(localRandomAccessFile, 101010256L);
    a(localRandomAccessFile, 0);
    a(localRandomAccessFile, 0);
    a(localRandomAccessFile, paramA.size());
    a(localRandomAccessFile, paramA.size());
    a(localRandomAccessFile, l2 - l1);
    a(localRandomAccessFile, l1);
    a(localRandomAccessFile, 0);
    localRandomAccessFile.close();
  }
  
  public static void a(View paramView, float paramFloat)
  {
    if (com.in2wow.b.b.a.a.a)
    {
      com.in2wow.b.b.a.a.a(paramView).a(paramFloat);
      return;
    }
    paramView.setAlpha(paramFloat);
  }
  
  public static void a(View paramView, int paramInt)
  {
    if (paramView == null) {
      return;
    }
    int i1 = paramView.getPaddingLeft();
    int i2 = paramView.getPaddingTop();
    int i3 = paramView.getPaddingRight();
    int i4 = paramView.getPaddingBottom();
    paramView.setBackgroundResource(paramInt);
    paramView.setPadding(i1, i2, i3, i4);
  }
  
  public static void a(View paramView, int paramInt1, int paramInt2)
  {
    if (paramView == null) {}
    ViewGroup.LayoutParams localLayoutParams;
    do
    {
      return;
      localLayoutParams = paramView.getLayoutParams();
    } while (localLayoutParams == null);
    if (paramInt1 != -3) {
      localLayoutParams.width = paramInt1;
    }
    if (paramInt2 != -3) {
      localLayoutParams.height = paramInt2;
    }
    paramView.setLayoutParams(localLayoutParams);
  }
  
  public static void a(View paramView, int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    if (paramView == null) {}
    ViewGroup.LayoutParams localLayoutParams;
    do
    {
      do
      {
        return;
        localLayoutParams = paramView.getLayoutParams();
      } while (localLayoutParams == null);
      if ((localLayoutParams instanceof RelativeLayout.LayoutParams))
      {
        a(paramView, (RelativeLayout.LayoutParams)localLayoutParams, paramInt1, paramInt2, paramInt3, paramInt4);
        return;
      }
      if ((localLayoutParams instanceof LinearLayout.LayoutParams))
      {
        a(paramView, (LinearLayout.LayoutParams)localLayoutParams, paramInt1, paramInt2, paramInt3, paramInt4);
        return;
      }
    } while (!(localLayoutParams instanceof FrameLayout.LayoutParams));
    a(paramView, (FrameLayout.LayoutParams)localLayoutParams, paramInt1, paramInt2, paramInt3, paramInt4);
  }
  
  public static void a(View paramView, int paramInt, Activity paramActivity, String paramString, com.cleanmaster.kinfocreporter.d paramD)
  {
    if ((paramView == null) || (paramActivity == null)) {
      return;
    }
    com.cleanmaster.cloudconfig.n localN = new com.cleanmaster.cloudconfig.n(paramView, paramActivity, paramString, paramD);
    com.cleanmaster.cloudconfig.o localO = new com.cleanmaster.cloudconfig.o(paramView, localN, paramActivity, paramString, paramD);
    if ((paramView == null) || (paramActivity == null)) {}
    for (;;)
    {
      paramActivity = (com.cleanmaster.cloudconfig.h.a)cM().get(paramString);
      if ((H) || (paramActivity == null) || (!com.cleanmaster.cloudconfig.h.a().a(paramActivity.w)) || (paramActivity.r != 1) || (paramActivity.t >= paramActivity.s)) {
        break;
      }
      paramActivity.t += 1;
      com.cleanmaster.cloudconfig.h.a().a(paramActivity.w, paramActivity);
      paramView.getViewTreeObserver().addOnPreDrawListener(new com.cleanmaster.cloudconfig.p(paramView, localN));
      return;
      Object localObject = com.keniu.security.d.a().getApplicationContext();
      localObject = com.cleanmaster.configmanager.d.a((Context)localObject).b((Context)localObject).a();
      if (("homeicon".equals(paramString)) && (!aW().equalsIgnoreCase((String)localObject)))
      {
        localObject = null;
        label186:
        paramD.a();
        if (localObject == null) {
          break label260;
        }
        if (!(paramView instanceof ImageView)) {
          break label251;
        }
        ((ImageView)paramView).setImageDrawable((Drawable)localObject);
      }
      for (;;)
      {
        paramView.setVisibility(0);
        paramD.b = true;
        com.cleanmaster.cloudconfig.h.a().b(paramString);
        paramView.setOnClickListener(localO);
        break;
        localObject = a(paramString, CloudResourceUtil.RESOURCE_TYPE.NORMAL);
        break label186;
        label251:
        paramView.setBackgroundDrawable((Drawable)localObject);
      }
      label260:
      if (paramInt != -1)
      {
        if ((paramView instanceof ImageView)) {
          com.cleanmaster.base.util.ui.a.a((ImageView)paramView, paramActivity, paramInt);
        } else {
          com.cleanmaster.base.util.ui.a.a(paramView, paramActivity, paramInt);
        }
      }
      else {
        paramView.setVisibility(8);
      }
    }
  }
  
  public static void a(View paramView, Activity paramActivity, String paramString, com.cleanmaster.kinfocreporter.d paramD)
  {
    if (H) {}
    Object localObject1;
    Object localObject2;
    do
    {
      do
      {
        do
        {
          return;
          H = true;
          paramD.a = 1;
          paramD = (com.cleanmaster.cloudconfig.h.a)cM().get(paramString);
        } while (paramD == null);
        if (android.support.percent.a.D(aU() + paramD.B) != null)
        {
          paramView = new com.cleanmaster.cloudconfig.x(paramActivity);
          localObject1 = new y(paramActivity, paramD.q, paramString);
          ((y)localObject1).a(1, paramD.j);
          ((y)localObject1).a(3, paramD.i);
          ((y)localObject1).a(2, paramD.k);
          ((y)localObject1).a(7, paramD.l);
          ((y)localObject1).a(9, paramD.m);
          ((y)localObject1).a(6, paramD.n);
          localObject2 = paramD.u;
          if (((y)localObject1).a == 1) {
            if (((y)localObject1).b != null) {
              ((y)localObject1).b.setText((CharSequence)localObject2);
            }
          }
          for (;;)
          {
            localObject2 = new com.cleanmaster.cloudconfig.q(paramView);
            ((y)localObject1).d.findViewById(2131626240).setOnClickListener((View.OnClickListener)localObject2);
            paramString = a(paramString, CloudResourceUtil.RESOURCE_TYPE.LOTTERY);
            if (paramString == null) {
              break;
            }
            if (((y)localObject1).g != null) {
              ((y)localObject1).g.setImageDrawable(paramString);
            }
            paramString = paramD.p;
            if ((!TextUtils.isEmpty(paramString)) && (((y)localObject1).g != null)) {
              ((y)localObject1).g.setOnClickListener(new com.cleanmaster.cloudconfig.r(paramActivity, paramString));
            }
            paramView.a((com.cleanmaster.base.b.a.e)localObject1);
            paramView.b.setBackgroundDrawable(null);
            paramView.c = new com.cleanmaster.cloudconfig.s((y)localObject1);
            paramView.c();
            return;
            if ((((y)localObject1).a == 2) && (((y)localObject1).f != null))
            {
              ((y)localObject1).f.setText((CharSequence)localObject2);
              ((y)localObject1).f.requestFocus();
              ((y)localObject1).f.b = new y.1((y)localObject1);
            }
          }
        }
        localObject3 = new AlphaAnimation(0.0F, 1.0F);
        ((AlphaAnimation)localObject3).setDuration(300L);
        localObject1 = new AlphaAnimation(1.0F, 0.0F);
        ((AlphaAnimation)localObject1).setStartOffset(2000L);
        ((AlphaAnimation)localObject1).setDuration(300L);
        localObject2 = new AnimationSet(false);
        ((AnimationSet)localObject2).addAnimation((Animation)localObject3);
        ((AnimationSet)localObject2).addAnimation((Animation)localObject1);
        if (android.support.percent.a.D(aU() + paramD.A) == null) {
          break;
        }
        paramString = a(paramString, CloudResourceUtil.RESOURCE_TYPE.POPUP);
      } while (paramString == null);
      paramView = new ImageView(paramActivity);
      paramView.setImageDrawable(paramString);
      paramActivity = new aa(paramActivity);
      paramActivity.a(paramView);
      paramActivity.c = new com.cleanmaster.cloudconfig.t(paramView);
      ((AlphaAnimation)localObject1).setAnimationListener(new com.cleanmaster.cloudconfig.j(paramActivity));
      paramActivity.a((Animation)localObject2);
      return;
    } while (TextUtils.isEmpty(paramD.g));
    paramString = com.keniu.security.d.a().getApplicationContext();
    Object localObject3 = new TextView(paramActivity);
    ((TextView)localObject3).setText(paramD.g);
    ((TextView)localObject3).setTextColor(-16777216);
    ((TextView)localObject3).setTextSize(16.0F);
    ((TextView)localObject3).setMaxWidth((int)(l(paramString) * 0.66F));
    ab.c();
    paramD = new aa(paramActivity);
    paramD.a((View)localObject3);
    Drawable localDrawable = paramActivity.getResources().getDrawable(2130838099);
    if (paramD.g != null) {
      paramD.g.setBackgroundDrawable(localDrawable);
    }
    ((AlphaAnimation)localObject1).setAnimationListener(new com.cleanmaster.cloudconfig.k(paramD));
    int i2 = a(paramActivity);
    int i1 = l(paramString) - com.cleanmaster.base.util.system.d.a(com.keniu.security.d.a().getApplicationContext(), 5.0F);
    i2 += paramView.getTop();
    ((TextView)localObject3).getViewTreeObserver().addOnGlobalLayoutListener(new com.cleanmaster.cloudconfig.l(paramD, i1, i2));
    paramD.a(i1, i2, (Animation)localObject2);
  }
  
  public static void a(View paramView, Drawable paramDrawable)
  {
    if (Build.VERSION.SDK_INT >= 16)
    {
      paramView.setBackground(paramDrawable);
      return;
    }
    paramView.setBackgroundDrawable(paramDrawable);
  }
  
  public static void a(View paramView, Drawable paramDrawable, boolean paramBoolean)
  {
    int i4 = paramView.getWidth();
    int i3 = paramView.getHeight();
    int i2 = paramDrawable.getIntrinsicWidth();
    int i5 = paramDrawable.getIntrinsicHeight();
    float f1 = i4 / i3;
    float f2 = i2 / i5;
    int i1;
    if (i4 > i2)
    {
      i1 = i5;
      if (i3 > i5) {}
    }
    else
    {
      if (f1 <= f2) {
        break label120;
      }
      i2 = (int)(i3 * f2);
      i1 = i3;
    }
    i4 = (i4 - i2) / 2;
    if (paramBoolean) {}
    for (i3 = (i3 - i1) / 2;; i3 = 0)
    {
      paramDrawable.setBounds(i4, i3, i2 + i4, i1 + i3);
      return;
      label120:
      i1 = (int)(i4 / f2);
      i2 = i4;
      break;
    }
  }
  
  public static void a(View paramView, View.OnClickListener paramOnClickListener)
  {
    a(paramView, paramOnClickListener, 5);
  }
  
  public static void a(View paramView, View.OnClickListener paramOnClickListener, int paramInt)
  {
    if (paramInt <= 0) {
      break label4;
    }
    for (;;)
    {
      label4:
      return;
      if (paramView != null)
      {
        paramView.setOnClickListener(paramOnClickListener);
        if ((paramInt <= 1) || (!(paramView instanceof ViewGroup))) {
          break;
        }
        paramView = (ViewGroup)paramView;
        int i1 = 0;
        while (i1 < paramView.getChildCount())
        {
          a(paramView.getChildAt(i1), paramOnClickListener, paramInt - 1);
          i1 += 1;
        }
      }
    }
  }
  
  public static void a(View paramView1, View paramView2, boolean paramBoolean)
  {
    a(new View[] { paramView2, paramView1 });
    paramView1.setAlpha(1.0F);
    paramView1.setVisibility(0);
    AccelerateDecelerateInterpolator localAccelerateDecelerateInterpolator = new AccelerateDecelerateInterpolator();
    int i1 = (paramView1.getMeasuredHeight() + paramView2.getMeasuredHeight()) / 2;
    ObjectAnimator localObjectAnimator1;
    if (paramBoolean)
    {
      f1 = i1;
      localObjectAnimator1 = ObjectAnimator.ofFloat(paramView1, "translationY", new float[] { f1, 0.0F }).setDuration(300L);
      if (!paramBoolean) {
        break label233;
      }
    }
    label233:
    for (float f1 = -i1;; f1 = i1)
    {
      ObjectAnimator localObjectAnimator2 = ObjectAnimator.ofFloat(paramView2, "translationY", new float[] { 0.0F, f1 }).setDuration(300L);
      ObjectAnimator localObjectAnimator3 = ObjectAnimator.ofFloat(paramView2, "alpha", new float[] { 1.0F, 0.0F }).setDuration(300L);
      localObjectAnimator3.addListener(new com.ijinshan.screensavernew.ui.brand.b());
      AnimatorSet localAnimatorSet = new AnimatorSet();
      localAnimatorSet.setInterpolator(localAccelerateDecelerateInterpolator);
      localAnimatorSet.playTogether(new Animator[] { localObjectAnimator2, localObjectAnimator3 });
      localAnimatorSet.start();
      paramView2.setTag(2131623976, localAnimatorSet);
      localObjectAnimator1.setInterpolator(localAccelerateDecelerateInterpolator);
      localObjectAnimator1.start();
      paramView1.setTag(2131623976, localObjectAnimator1);
      return;
      f1 = -i1;
      break;
    }
  }
  
  private static void a(View paramView, ViewGroup.MarginLayoutParams paramMarginLayoutParams, int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    if (paramView == null) {
      return;
    }
    if (paramInt1 != -3) {
      paramMarginLayoutParams.leftMargin = paramInt1;
    }
    if (paramInt2 != -3) {
      paramMarginLayoutParams.topMargin = paramInt2;
    }
    if (paramInt3 != -3) {
      paramMarginLayoutParams.rightMargin = paramInt3;
    }
    if (paramInt4 != -3) {
      paramMarginLayoutParams.bottomMargin = paramInt4;
    }
    paramView.setLayoutParams(paramMarginLayoutParams);
  }
  
  public static void a(View paramView, Runnable paramRunnable)
  {
    if (Build.VERSION.SDK_INT >= 16)
    {
      paramView.postOnAnimation(paramRunnable);
      return;
    }
    paramView.postDelayed(paramRunnable, 16L);
  }
  
  public static void a(ViewGroup paramViewGroup, View paramView, Rect paramRect)
  {
    if ((paramViewGroup == null) || (paramView == null) || (paramRect == null)) {
      return;
    }
    int i1 = (int)a(paramViewGroup, paramView);
    int i2 = (int)b(paramViewGroup, paramView);
    paramRect.set(i1, i2, paramView.getMeasuredWidth() + i1, paramView.getMeasuredHeight() + i2);
  }
  
  public static void a(ViewGroup paramViewGroup, View[] paramArrayOfView)
  {
    int i2 = paramArrayOfView.length;
    int i1 = 0;
    for (;;)
    {
      if (i1 >= i2) {
        return;
      }
      View localView = paramArrayOfView[i1];
      if (localView != null) {
        paramViewGroup.addView(localView);
      }
      i1 += 1;
    }
  }
  
  @SuppressLint({"NewApi"})
  public static void a(WebView paramWebView)
  {
    if ((paramWebView != null) && (Build.VERSION.SDK_INT > 10)) {
      paramWebView.onPause();
    }
  }
  
  @TargetApi(9)
  public static void a(AbsListView paramAbsListView)
  {
    if (Build.VERSION.SDK_INT >= 9) {
      paramAbsListView.setOverScrollMode(2);
    }
  }
  
  public static void a(PopupWindow paramPopupWindow, View paramView)
  {
    a(paramPopupWindow, paramView, paramView.getWidth() / 50 << 3, paramView.getHeight() * 13 / 10);
  }
  
  public static void a(PopupWindow paramPopupWindow, View paramView, int paramInt1, int paramInt2)
  {
    if (paramPopupWindow == null) {
      return;
    }
    if (paramPopupWindow.isShowing())
    {
      paramPopupWindow.dismiss();
      return;
    }
    paramPopupWindow.showAtLocation(paramView, 53, paramInt1, paramInt2);
  }
  
  @TargetApi(9)
  public static void a(ScrollView paramScrollView)
  {
    if (Build.VERSION.SDK_INT >= 9) {
      paramScrollView.setOverScrollMode(2);
    }
  }
  
  private static void a(TextView paramTextView, CharSequence paramCharSequence)
  {
    if (paramTextView == null) {
      return;
    }
    if (TextUtils.isEmpty(paramCharSequence))
    {
      paramTextView.setVisibility(8);
      return;
    }
    paramTextView.setVisibility(0);
    paramTextView.setText(paramCharSequence);
  }
  
  public static void a(TextView paramTextView, String paramString)
  {
    if (TextUtils.isEmpty(paramString))
    {
      b(paramTextView, 8);
      return;
    }
    b(paramTextView, 0);
    paramTextView.setText(paramString);
  }
  
  public static void a(com.cleanmaster.applocklib.b.g paramG)
  {
    if (AppLockLib.getIns().getInfoCReporter() == null) {
      return;
    }
    try
    {
      if (com.cleanmaster.applocklib.bridge.b.b)
      {
        new StringBuilder("forcereport, table:").append(paramG.a()).append(", data:").append(paramG.toString());
        com.cleanmaster.applocklib.bridge.b.a();
      }
      String str = paramG.a();
      paramG = paramG.toString();
      com.cleanmaster.kinfoc.p.a().a("cm_" + str, paramG);
      return;
    }
    catch (Exception paramG) {}
  }
  
  public static void a(com.cleanmaster.base.util.system.h paramH, Context paramContext)
  {
    paramContext = paramContext.getResources();
    if (paramContext == null) {}
    Configuration localConfiguration;
    do
    {
      return;
      localConfiguration = paramContext.getConfiguration();
    } while (localConfiguration == null);
    paramH = new Locale(paramH.M, paramH.N);
    localConfiguration.locale = paramH;
    Locale.setDefault(paramH);
    paramContext.updateConfiguration(localConfiguration, paramContext.getDisplayMetrics());
  }
  
  public static void a(com.cleanmaster.base.util.system.h paramH, boolean paramBoolean)
  {
    Context localContext = com.keniu.security.d.a();
    if (paramBoolean) {
      CmResources.getInstance().loadCmResourcesManual(localContext, paramH.M);
    }
    SwiperService.a(localContext, paramH.M, paramH.N);
    if (com.cleanmaster.configmanager.d.a(localContext).x()) {
      FloatService.b(13);
    }
    if (com.cleanmaster.applock.a.a().e())
    {
      com.cleanmaster.applock.a.a();
      com.cleanmaster.applock.a.a(localContext, paramH.M, paramH.N);
    }
    try
    {
      com.cleanmaster.synipc.b.a().c().n();
      JunkManagerActivity.g();
      return;
    }
    catch (RemoteException paramH)
    {
      for (;;) {}
    }
  }
  
  public static void a(com.cleanmaster.boost.abnormal.abnormalnotify.m paramM, Context paramContext, com.cleanmaster.boost.abnormal.abnormalnotify.b paramB)
  {
    if (paramM == null) {
      return;
    }
    if (paramContext == null)
    {
      paramM.a(paramB, AbnormalDetectionUtils.HandleHelper.Result.EXCEPTION);
      return;
    }
    if (paramB == null)
    {
      paramM.a(paramB, AbnormalDetectionUtils.HandleHelper.Result.EXCEPTION);
      return;
    }
    paramContext = paramB.a;
    if (paramContext == null)
    {
      paramM.a(paramB, AbnormalDetectionUtils.HandleHelper.Result.EXCEPTION);
      return;
    }
    paramContext = paramContext.a;
    if (paramContext == null)
    {
      paramM.a(paramB, AbnormalDetectionUtils.HandleHelper.Result.EXCEPTION);
      return;
    }
    paramContext = paramContext.a;
    if (TextUtils.isEmpty(paramContext))
    {
      paramM.a(paramB, AbnormalDetectionUtils.HandleHelper.Result.EXCEPTION);
      return;
    }
    com.cleanmaster.base.util.concurrent.BackgroundThread.b().post(new com.cleanmaster.boost.abnormal.abnormalnotify.k(paramContext));
    paramM.a(paramB, AbnormalDetectionUtils.HandleHelper.Result.SUCCESS);
  }
  
  public static void a(com.cleanmaster.boost.abnormal.abnormalnotify.m paramM, Context paramContext, com.cleanmaster.boost.abnormal.abnormalnotify.q paramQ)
  {
    if (paramM == null) {
      return;
    }
    if (paramContext == null)
    {
      paramM.a(paramQ, AbnormalDetectionUtils.HandleHelper.Result.EXCEPTION);
      return;
    }
    if (paramQ == null)
    {
      paramM.a(paramQ, AbnormalDetectionUtils.HandleHelper.Result.EXCEPTION);
      return;
    }
    Object localObject = paramQ.a;
    if (localObject == null)
    {
      paramM.a(paramQ, AbnormalDetectionUtils.HandleHelper.Result.EXCEPTION);
      return;
    }
    localObject = ((FreqStartApp)localObject).pkgName;
    if (com.cleanmaster.boost.process.util.m.a())
    {
      com.cleanmaster.base.util.concurrent.BackgroundThread.b().post(new com.cleanmaster.boost.abnormal.abnormalnotify.i((String)localObject));
      paramM.a(paramQ, AbnormalDetectionUtils.HandleHelper.Result.SUCCESS);
      return;
    }
    boolean bool = paramQ.d;
    paramM = new com.cleanmaster.boost.abnormal.abnormalnotify.j(paramM);
    com.cleanmaster.base.util.system.m.d(paramContext, (String)localObject);
    com.cleanmaster.ui.app.l.a().a((String)localObject, AbnormalNotifyActivity.class, paramM);
    if (bool)
    {
      FloatGuideList.a();
      FloatGuideList.c();
      return;
    }
    FloatGuideList.a();
    FloatGuideList.a(true, false);
  }
  
  public static void a(com.cleanmaster.boost.boostengine.c.c paramC)
  {
    Object localObject = com.keniu.security.d.a();
    long l1 = System.currentTimeMillis();
    if ((paramC == null) || (paramC.f == com.cleanmaster.boost.boostengine.a.a))
    {
      com.cleanmaster.configmanager.d.a((Context)localObject).v(l1);
      if (paramC != null)
      {
        localObject = com.cleanmaster.base.util.system.k.b(paramC.e);
        l1 += 80000L;
        l2 = ((com.cleanmaster.base.util.system.k)localObject).b;
        if (WidgetService.a())
        {
          localContext = com.keniu.security.d.a();
          localIntent = WidgetService.a(localContext);
          localIntent.setAction("com.cleanmaster.appwidget.ACTION_SYNC_CLEAN_RESULT");
          localIntent.putExtra("mem_used", l2);
          localIntent.putExtra("hold_end_time", l1);
          localContext.startService(localIntent);
        }
        a(((com.cleanmaster.base.util.system.k)localObject).d, l1);
        ax();
      }
      if ((paramC != null) && (paramC.f == com.cleanmaster.boost.boostengine.a.a)) {
        com.cleanmaster.boost.process.util.d.a().a(b(paramC), false);
      }
    }
    while ((paramC == null) || (paramC.f != com.cleanmaster.boost.boostengine.a.c))
    {
      long l2;
      Context localContext;
      Intent localIntent;
      return;
    }
    com.cleanmaster.configmanager.d.a((Context)localObject).y(l1);
    com.cleanmaster.boost.process.util.d.a().a(b(paramC), true);
  }
  
  public static void a(InternalAppItem paramInternalAppItem, boolean paramBoolean)
  {
    if (paramInternalAppItem == null) {}
    String str;
    label169:
    do
    {
      return;
      str = "";
      switch (paramInternalAppItem.getSource())
      {
      }
      for (;;)
      {
        paramInternalAppItem = com.cleanmaster.ui.app.market.a.a(paramInternalAppItem.getPkgName());
        paramInternalAppItem.n = 3001;
        if (TextUtils.isEmpty(str)) {
          break;
        }
        if (!paramBoolean) {
          break label169;
        }
        if (TextUtils.isEmpty(str)) {
          break;
        }
        com.cleanmaster.ui.app.utils.d.a(paramInternalAppItem, str, null);
        return;
        str = "30113";
        continue;
        str = "30213";
        continue;
        str = "30313";
        continue;
        str = "31313";
        continue;
        str = "31513";
        continue;
        str = "31613";
        continue;
        str = "33013";
      }
    } while (TextUtils.isEmpty(str));
    com.cleanmaster.ui.app.utils.d.a(str, paramInternalAppItem, null);
  }
  
  public static void a(com.cleanmaster.recommendapps.i paramI, String paramString1, String paramString2, int paramInt)
  {
    a(paramI, paramString1, paramString2, paramInt, null);
  }
  
  public static void a(com.cleanmaster.recommendapps.i paramI, String paramString1, String paramString2, int paramInt, Map<String, String> paramMap)
  {
    if ((paramI == null) || (TextUtils.isEmpty(paramString1)) || (TextUtils.isEmpty(paramString2))) {
      return;
    }
    com.cleanmaster.ui.app.market.a localA = com.cleanmaster.ui.app.market.a.a(paramString1);
    paramString1 = null;
    String str = paramI.a(1);
    if (!TextUtils.isEmpty(str)) {
      paramString1 = new com.cleanmaster.base.util.a.b().a(str);
    }
    try
    {
      str = URLEncoder.encode(paramString1, "utf-8");
      paramString1 = str;
    }
    catch (UnsupportedEncodingException localUnsupportedEncodingException)
    {
      for (;;) {}
    }
    com.cleanmaster.ui.app.utils.d.a(paramI.c, paramString1, localA, paramString2, paramInt, paramMap);
  }
  
  public static void a(com.cleanmaster.recommendapps.i paramI, String paramString1, String paramString2, Map<String, String> paramMap)
  {
    k("DmcBridge", "reportFacebookAdImpression pkgname = " + paramString1 + "; posid = " + paramString2);
    a(paramI, paramString1, paramString2, paramMap, 1, 3000);
  }
  
  private static void a(com.cleanmaster.ui.app.market.a paramA)
  {
    if (paramA.q().size() > 2)
    {
      ArrayList localArrayList = new ArrayList();
      localArrayList.add(paramA.q().get(0));
      int i1 = 1;
      int i2 = 1;
      if (i1 < paramA.q().size())
      {
        com.cleanmaster.ui.app.market.a localA = (com.cleanmaster.ui.app.market.a)paramA.q().get(i1);
        Object localObject = localA.s();
        boolean bool1 = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).a(String.valueOf(localA.I), false);
        ((com.cleanmaster.ui.app.market.a.a)localObject).C = bool1;
        ((com.cleanmaster.ui.app.market.a.a)localObject).D = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).y(String.valueOf(localA.I));
        boolean bool2 = com.cleanmaster.ui.game.picks.e.a(localA.s());
        localObject = com.cleanmaster.ui.game.ad.c(localA.u);
        if ((com.cleanmaster.base.util.system.m.a(com.keniu.security.d.a(), localA.d)) && (com.cleanmaster.base.util.net.b.b(localA.e))) {
          localArrayList.add(localA);
        }
        for (;;)
        {
          i1 += 1;
          break;
          if (((bool1) || (((List)localObject).size() <= 0)) && (bool1) && (((List)localObject).size() >= 2) && (!bool2))
          {
            localArrayList.add(localA);
          }
          else
          {
            localArrayList.add(i2, localA);
            i2 += 1;
          }
        }
      }
      paramA.y = localArrayList;
    }
  }
  
  public static void a(com.cleanmaster.ui.app.market.a paramA, String paramString1, int paramInt, String paramString2)
  {
    if ((paramA == null) || (TextUtils.isEmpty(paramString1))) {}
    do
    {
      return;
      paramString1 = com.cleanmaster.util.c.b.a(paramString1, paramInt, 105);
      if (!TextUtils.isEmpty(paramString2)) {
        paramString1.i = paramString2;
      }
      paramString2 = paramA.c();
      com.cleanmaster.util.c localC = new com.cleanmaster.util.c();
      localC.a(paramString2, paramString1);
      localC.c(new Void[0]);
    } while (((paramInt != 61) && (paramInt != 60)) || (paramA.n != 1001) || (TextUtils.isEmpty(paramA.r)) || (TextUtils.isEmpty(paramA.s)));
    new com.cleanmaster.base.util.ui.d(com.keniu.security.d.a(), paramA.r, paramA.s).a();
  }
  
  public static void a(ONews paramONews, int paramInt, String paramString)
  {
    ReportThread.a(new com.cmcm.onews.ui.a.i(paramString, paramInt, paramONews));
  }
  
  public static void a(ONews paramONews, ONewsScenario paramONewsScenario, int paramInt)
  {
    ReportThread.a(new com.cmcm.onews.ui.a.h(paramONewsScenario, paramInt, paramONews));
  }
  
  public static void a(ONews paramONews, ONewsScenario paramONewsScenario, int paramInt, String paramString)
  {
    ReportThread.a(new com.cmcm.onews.ui.a.j(paramONewsScenario, paramString, paramInt, paramONews));
  }
  
  public static void a(ONews paramONews, ONewsScenario paramONewsScenario, int paramInt, String paramString1, String paramString2)
  {
    b(paramString2, paramInt, com.cmcm.onews.report.a.m.a(paramString1), paramONews, ONewsScenario.b(paramONewsScenario.d()));
  }
  
  public static void a(ONews paramONews, ONewsScenario paramONewsScenario, String paramString)
  {
    ReportThread.a(new com.cmcm.onews.ui.a.u(paramString, paramONewsScenario, paramONews));
  }
  
  public static void a(ONews paramONews, ONewsScenario paramONewsScenario, String paramString1, String paramString2)
  {
    ReportThread.a(new com.cmcm.onews.ui.a.t(paramString1, paramONewsScenario, paramONews, paramString2));
  }
  
  public static void a(ONewsScenario paramONewsScenario, ONews paramONews, int paramInt)
  {
    com.cmcm.onews.storage.a.a();
    a(paramInt, com.cmcm.onews.storage.a.a(paramONewsScenario).h, null, paramONews, paramONewsScenario);
  }
  
  public static void a(ONewsScenario paramONewsScenario, ONews paramONews, int paramInt, String paramString1, String paramString2)
  {
    a(paramInt, paramString2, com.cmcm.onews.report.a.m.a(paramString1), paramONews, ONewsScenario.b(paramONewsScenario.d()));
  }
  
  public static void a(ONewsScenario paramONewsScenario, String paramString1, String paramString2, String paramString3)
  {
    ReportThread.a(new com.cmcm.onews.ui.a.r(paramONewsScenario, paramString1, paramString2, paramString3));
  }
  
  public static void a(ONewsScenario paramONewsScenario, List<ONews> paramList1, List<ONews> paramList2, String paramString1, String paramString2)
  {
    ReportThread.a(new com.cmcm.onews.ui.a.g(paramONewsScenario, paramList1, paramString1, paramString2, paramList2));
  }
  
  public static void a(NativeAd paramNativeAd, View paramView)
  {
    if ((paramNativeAd == null) || (paramView == null)) {
      return;
    }
    paramNativeAd.registerViewForInteraction(paramView);
  }
  
  public static void a(NativeAd paramNativeAd, Button paramButton)
  {
    if ((paramNativeAd == null) || (paramButton == null)) {
      return;
    }
    a(paramButton, paramNativeAd.getAdCallToAction());
  }
  
  public static void a(NativeAd paramNativeAd, TextView paramTextView)
  {
    if ((paramNativeAd == null) || (paramTextView == null)) {
      return;
    }
    a(paramTextView, paramNativeAd.getAdTitle());
  }
  
  public static void a(com.facebook.e<com.facebook.share.a> paramE, FacebookException paramFacebookException)
  {
    q("error", paramFacebookException.getMessage());
    if (paramE != null) {
      paramE.a(paramFacebookException);
    }
  }
  
  public static void a(com.facebook.internal.a paramA, FacebookException paramFacebookException)
  {
    com.facebook.internal.x.b(com.facebook.f.g());
    Intent localIntent = new Intent();
    localIntent.setClass(com.facebook.f.g(), FacebookActivity.class);
    localIntent.setAction(FacebookActivity.a);
    com.facebook.internal.r.a(localIntent, paramA.a.toString(), null, com.facebook.internal.r.a(), com.facebook.internal.r.a(paramFacebookException));
    paramA.b = localIntent;
  }
  
  public static void a(com.facebook.internal.a paramA, com.facebook.internal.e paramE, com.facebook.internal.d paramD)
  {
    Context localContext = com.facebook.f.g();
    String str = paramD.getAction();
    int i1 = c(paramD);
    if (i1 == -1) {
      throw new FacebookException("Cannot present this dialog. This likely means that the Facebook app is not installed.");
    }
    if (com.facebook.internal.r.a(i1)) {}
    for (paramE = paramE.a();; paramE = paramE.b())
    {
      paramD = paramE;
      if (paramE == null) {
        paramD = new Bundle();
      }
      paramE = com.facebook.internal.r.a(localContext, paramA.a.toString(), str, i1, paramD);
      if (paramE != null) {
        break;
      }
      throw new FacebookException("Unable to create Intent; this likely means theFacebook app is not installed.");
    }
    paramA.b = paramE;
  }
  
  public static void a(com.facebook.internal.a paramA, String paramString, Bundle paramBundle)
  {
    com.facebook.internal.x.b(com.facebook.f.g());
    com.facebook.internal.x.a(com.facebook.f.g());
    Bundle localBundle = new Bundle();
    localBundle.putString("action", paramString);
    localBundle.putBundle("params", paramBundle);
    paramBundle = new Intent();
    com.facebook.internal.r.a(paramBundle, paramA.a.toString(), paramString, com.facebook.internal.r.a(), localBundle);
    paramBundle.setClass(com.facebook.f.g(), FacebookActivity.class);
    paramBundle.setAction("FacebookDialogFragment");
    paramA.b = paramBundle;
  }
  
  public static void a(ShareContent paramShareContent)
  {
    if (V == null) {
      V = new com.facebook.share.internal.g((byte)0);
    }
    a(paramShareContent, V);
  }
  
  public static void a(ShareContent paramShareContent, com.facebook.share.internal.f paramF)
  {
    if (paramShareContent == null) {
      throw new FacebookException("Must provide non-null content to share");
    }
    if ((paramShareContent instanceof ShareLinkContent))
    {
      paramShareContent = ((ShareLinkContent)paramShareContent).c;
      if ((paramShareContent != null) && (!com.facebook.internal.w.b(paramShareContent))) {
        throw new FacebookException("Image Url must be an http:// or https:// url");
      }
    }
    else
    {
      if (!(paramShareContent instanceof SharePhotoContent)) {
        break label68;
      }
      paramF.a((SharePhotoContent)paramShareContent);
    }
    label68:
    do
    {
      do
      {
        return;
        if ((paramShareContent instanceof ShareVideoContent))
        {
          paramF.a((ShareVideoContent)paramShareContent);
          return;
        }
      } while (!(paramShareContent instanceof ShareOpenGraphContent));
      paramShareContent = (ShareOpenGraphContent)paramShareContent;
      paramF.a = true;
      ShareOpenGraphAction localShareOpenGraphAction = paramShareContent.a;
      if (com.facebook.internal.w.a(localShareOpenGraphAction.a())) {
        throw new FacebookException("ShareOpenGraphAction must have a non-empty actionType");
      }
      paramF.a(localShareOpenGraphAction, false);
      paramF = paramShareContent.b;
      if (com.facebook.internal.w.a(paramF)) {
        throw new FacebookException("Must specify a previewPropertyName.");
      }
    } while (paramShareContent.a.a(paramF) != null);
    throw new FacebookException("Property \"" + paramF + "\" was not found on the action. The name of the preview property must match the name of an action property.");
  }
  
  public static void a(FlurryAdNative paramFlurryAdNative, String paramString1, String paramString2)
  {
    k("DmcBridge", "reportYahooAdImpression pkgname = " + paramString1 + "; posid = " + paramString2);
    a(paramFlurryAdNative, paramString1, paramString2, null, 1, 3008);
  }
  
  public static void a(PullToRefreshBase<?> paramPullToRefreshBase, int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, float paramFloat, boolean paramBoolean)
  {
    int i1;
    int i3;
    int i2;
    PullToRefreshBase.Mode localMode;
    switch (com.handmark.pulltorefresh.library.c.a[paramPullToRefreshBase.k().ordinal()])
    {
    default: 
      i1 = paramPullToRefreshBase.getScrollY();
      i3 = paramInt3;
      i2 = paramInt4;
      if ((paramPullToRefreshBase.h()) && (!paramPullToRefreshBase.i()))
      {
        localMode = paramPullToRefreshBase.c;
        if ((!localMode.permitsPullToRefresh()) || (paramBoolean) || (i3 == 0)) {
          break label321;
        }
        i2 += i3;
        Log.d("OverscrollHelper", "OverScroll. DeltaX: " + paramInt1 + ", ScrollX: " + paramInt2 + ", DeltaY: " + paramInt3 + ", ScrollY: " + paramInt4 + ", NewY: " + i2 + ", ScrollRange: " + paramInt5 + ", CurrentScroll: " + i1);
        if (i2 >= 0 - paramInt6) {
          break label236;
        }
        if (localMode.showHeaderLoadingLayout())
        {
          if (i1 == 0) {
            paramPullToRefreshBase.a(PullToRefreshBase.State.OVERSCROLLING, new boolean[0]);
          }
          paramPullToRefreshBase.setHeaderScroll((int)((i2 + i1) * paramFloat));
        }
      }
      break;
    }
    label236:
    label287:
    label321:
    while ((!paramBoolean) || (PullToRefreshBase.State.OVERSCROLLING != paramPullToRefreshBase.b))
    {
      do
      {
        do
        {
          return;
          i1 = paramPullToRefreshBase.getScrollX();
          i3 = paramInt1;
          i2 = paramInt2;
          break;
          if (i2 <= paramInt5 + paramInt6) {
            break label287;
          }
        } while (!localMode.showFooterLoadingLayout());
        if (i1 == 0) {
          paramPullToRefreshBase.a(PullToRefreshBase.State.OVERSCROLLING, new boolean[0]);
        }
        paramPullToRefreshBase.setHeaderScroll((int)((i2 + i1 - paramInt5) * paramFloat));
        return;
      } while ((Math.abs(i2) > paramInt6) && (Math.abs(i2 - paramInt5) > paramInt6));
      paramPullToRefreshBase.a(PullToRefreshBase.State.RESET, new boolean[0]);
      return;
    }
    paramPullToRefreshBase.a(PullToRefreshBase.State.RESET, new boolean[0]);
  }
  
  public static void a(PullToRefreshBase<?> paramPullToRefreshBase, int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, boolean paramBoolean)
  {
    a(paramPullToRefreshBase, paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, 0, 1.0F, paramBoolean);
  }
  
  public static void a(PullToRefreshBase<?> paramPullToRefreshBase, int paramInt1, int paramInt2, int paramInt3, int paramInt4, boolean paramBoolean)
  {
    a(paramPullToRefreshBase, paramInt1, paramInt2, paramInt3, paramInt4, 0, paramBoolean);
  }
  
  private static void a(com.ijinshan.cleaner.bean.JunkInfoBase paramJunkInfoBase, com.cleanmaster.junk.bean.JunkInfoBase paramJunkInfoBase1)
  {
    paramJunkInfoBase1.setScanType(paramJunkInfoBase.getScanType());
    paramJunkInfoBase1.setCheck(paramJunkInfoBase.isCheck());
    paramJunkInfoBase1.setSize(paramJunkInfoBase.getSize());
    paramJunkInfoBase1.setSysCacheOnCardInfo(paramJunkInfoBase.getSysCacheOnCardInfo());
    paramJunkInfoBase1.setJunkInfoType(paramJunkInfoBase.getJunkDataType());
    paramJunkInfoBase1.setCleanType(paramJunkInfoBase.getCleanType());
    paramJunkInfoBase1.setVideoNum(paramJunkInfoBase.getVideoNum());
    paramJunkInfoBase1.setAudioNum(paramJunkInfoBase.getAudioNum());
    paramJunkInfoBase1.setImageNum(paramJunkInfoBase.getImageNum());
    paramJunkInfoBase1.addMediaList(k(paramJunkInfoBase.getMediaList()));
    paramJunkInfoBase1.setFileType(a(paramJunkInfoBase.getFileType()));
  }
  
  private static void a(com.ijinshan.cleaner.bean.d paramD, String paramString1, String paramString2, String paramString3, String paramString4, Context paramContext)
  {
    Toast.makeText(paramContext, paramContext.getResources().getString(2131299106) + paramString3, 0).show();
    com.cleanmaster.ui.app.provider.a.a();
    paramString1 = com.cleanmaster.ui.app.provider.a.a(paramContext, paramString1, paramString2, paramString3, paramString4, true);
    paramD.a(new com.cleanmaster.ui.app.provider.download.f(1).a(paramString1, paramD.c.c, paramD.c.b));
  }
  
  public static void a(com.ijinshan.screensavershared.a.a paramA)
  {
    if (G == null) {
      G = paramA;
    }
    for (;;)
    {
      android.support.v4.a.c.g("ScreenSaverSharedDepend", "shared instance initialized in process: " + android.os.Process.myPid());
      return;
      android.support.v4.a.c.g("ScreenSaverSharedDepend", "initialized in the same process more than once, regarded as single-process app");
    }
  }
  
  public static void a(com.in2wow.sdk.e.c paramC, String paramString, JSONObject paramJSONObject, com.in2wow.sdk.e.c.a paramA)
  {
    b(new com.in2wow.sdk.m.c(), paramC, paramString, paramJSONObject, paramA);
  }
  
  private static void a(com.in2wow.sdk.m.c paramC, XmlPullParser paramXmlPullParser)
  {
    paramXmlPullParser.require(2, null, "Ad");
    for (;;)
    {
      if (paramXmlPullParser.next() == 3) {
        return;
      }
      if (paramXmlPullParser.getEventType() == 2)
      {
        String str = paramXmlPullParser.getName();
        if ((str != null) && (str.equals("InLine")))
        {
          paramXmlPullParser.require(2, null, "InLine");
          while (paramXmlPullParser.next() != 3) {
            if (paramXmlPullParser.getEventType() == 2)
            {
              str = paramXmlPullParser.getName();
              if ((str != null) && (str.equals("AdSystem"))) {
                paramC.e = a(paramXmlPullParser, "AdSystem");
              } else if ((str != null) && (str.equals("AdTitle"))) {
                paramC.d = a(paramXmlPullParser, "AdTitle");
              } else if ((str != null) && (str.equals("Impression"))) {
                paramC.a(new com.in2wow.sdk.m.b("impression", a(paramXmlPullParser, "Impression")));
              } else if ((str != null) && (str.equals("Creatives"))) {
                b(paramC, paramXmlPullParser);
              } else {
                b(paramXmlPullParser);
              }
            }
          }
        }
        else if ((str != null) && (str.equals("Wrapper")))
        {
          paramC.b = true;
          paramXmlPullParser.require(2, null, "Wrapper");
          while (paramXmlPullParser.next() != 3) {
            if (paramXmlPullParser.getEventType() == 2)
            {
              str = paramXmlPullParser.getName();
              if ((str != null) && (str.equals("Impression"))) {
                paramC.a(new com.in2wow.sdk.m.b("impression", a(paramXmlPullParser, "Impression")));
              } else if ((str != null) && (str.equals("Creatives"))) {
                b(paramC, paramXmlPullParser);
              } else if ((str != null) && (str.equals("VASTAdTagURI"))) {
                paramC.a = a(paramXmlPullParser, "VASTAdTagURI");
              } else {
                b(paramXmlPullParser);
              }
            }
          }
        }
        else
        {
          b(paramXmlPullParser);
        }
      }
    }
  }
  
  private static void a(com.keniu.security.util.d paramD)
  {
    if (paramD != null)
    {
      paramD = paramD.getWindow();
      if (paramD == null) {
        break label84;
      }
      paramD = paramD.getDecorView();
      if (paramD == null) {
        break label84;
      }
      paramD = (ViewGroup)paramD.findViewById(16908290);
      if (paramD == null) {
        break label84;
      }
    }
    label84:
    for (paramD = paramD.getChildAt(0);; paramD = null)
    {
      if (paramD != null)
      {
        View localView = paramD.findViewById(2131628036);
        if (localView != null) {
          localView.setVisibility(8);
        }
        paramD = paramD.findViewById(2131628036);
        if (paramD != null) {
          paramD.setVisibility(8);
        }
      }
      return;
    }
  }
  
  public static void a(Closeable paramCloseable)
  {
    if (paramCloseable == null) {
      return;
    }
    try
    {
      paramCloseable.close();
      return;
    }
    catch (Exception paramCloseable) {}
  }
  
  private static void a(File paramFile, int paramInt, com.cleanmaster.cleancloud.core.residual.h paramH, Collection<String> paramCollection, com.cleanmaster.cleancloud.core.residual.i paramI)
  {
    al.c localC = com.cleanmaster.util.t.a(paramFile.getPath(), paramH);
    if (localC == null) {
      return;
    }
    al.d localD = localC.b();
    if (localD != null)
    {
      int i2 = localD.d();
      int i1 = 0;
      if (i1 < i2)
      {
        String str2 = new File(paramFile, localD.a(i1)).getPath().substring(paramInt);
        boolean bool;
        if (paramI == null) {
          bool = false;
        }
        for (;;)
        {
          if (!bool) {
            paramCollection.add(str2);
          }
          i1 += 1;
          break;
          String str3 = com.cleanmaster.junk.d.x.c(str2);
          String str1 = com.cleanmaster.cleancloud.core.residual.i.a("android/data/", str3);
          paramH = str1;
          if (TextUtils.isEmpty(str1))
          {
            str1 = com.cleanmaster.cleancloud.core.residual.i.a("android/obb/", str3);
            paramH = str1;
            if (TextUtils.isEmpty(str1))
            {
              bool = false;
              continue;
            }
          }
          bool = paramI.a(paramH);
        }
      }
      localD.c();
    }
    localC.c();
  }
  
  public static void a(Class paramClass)
  {
    StringBuilder localStringBuilder = new StringBuilder(">>> ");
    localStringBuilder.append(paramClass.getCanonicalName()).append("\n");
    localStringBuilder.append("Build.VERSION.SDK_INT=").append(Build.VERSION.SDK_INT).append("\n");
    localStringBuilder.append("Build.VERSION.RELEASE=").append(Build.VERSION.RELEASE).append("\n");
    Method[] arrayOfMethod = paramClass.getDeclaredMethods();
    int i3 = arrayOfMethod.length;
    int i1 = 0;
    while (i1 < i3)
    {
      Object localObject = arrayOfMethod[i1];
      localStringBuilder.append(paramClass.getCanonicalName()).append("#").append(((Method)localObject).getName()).append("(");
      localObject = ((Method)localObject).getParameterTypes();
      int i4 = localObject.length;
      int i2 = 0;
      while (i2 < i4)
      {
        localStringBuilder.append(localObject[i2].getCanonicalName()).append(", ");
        i2 += 1;
      }
      localStringBuilder.append(")\n");
      i1 += 1;
    }
    localStringBuilder.append("<<<\n");
    Log.d("ReflectionUtils", localStringBuilder.toString());
  }
  
  public static void a(ClassLoader paramClassLoader, File paramFile, List<File> paramList)
  {
    Object localObject;
    ArrayList localArrayList;
    if (!paramList.isEmpty())
    {
      if (Build.VERSION.SDK_INT < 19) {
        break label232;
      }
      localObject = c(paramClassLoader, "pathList").get(paramClassLoader);
      localArrayList = new ArrayList();
      paramList = new ArrayList(paramList);
      a(localObject, "dexElements", (Object[])a(localObject, "makeDexElements", new Class[] { ArrayList.class, File.class, ArrayList.class }).invoke(localObject, new Object[] { paramList, paramFile, localArrayList }));
      if (localArrayList.size() > 0)
      {
        paramFile = localArrayList.iterator();
        while (paramFile.hasNext()) {
          Log.w("MultiDex", "Exception in makeDexElement", (IOException)paramFile.next());
        }
        paramList = c(paramClassLoader, "dexElementsSuppressedExceptions");
        localObject = (IOException[])paramList.get(paramClassLoader);
        if (localObject != null) {
          break label197;
        }
        paramFile = (IOException[])localArrayList.toArray(new IOException[localArrayList.size()]);
      }
    }
    for (;;)
    {
      paramList.set(paramClassLoader, paramFile);
      return;
      label197:
      paramFile = new IOException[localArrayList.size() + localObject.length];
      localArrayList.toArray(paramFile);
      System.arraycopy(localObject, 0, paramFile, localArrayList.size(), localObject.length);
    }
    label232:
    if (Build.VERSION.SDK_INT >= 14)
    {
      paramClassLoader = c(paramClassLoader, "pathList").get(paramClassLoader);
      paramList = new ArrayList(paramList);
      a(paramClassLoader, "dexElements", (Object[])a(paramClassLoader, "makeDexElements", new Class[] { ArrayList.class, File.class }).invoke(paramClassLoader, new Object[] { paramList, paramFile }));
      return;
    }
    a(paramClassLoader, paramList);
  }
  
  private static void a(ClassLoader paramClassLoader, List<File> paramList)
  {
    int i1 = paramList.size();
    Field localField = c(paramClassLoader, "path");
    StringBuilder localStringBuilder = new StringBuilder((String)localField.get(paramClassLoader));
    String[] arrayOfString = new String[i1];
    File[] arrayOfFile = new File[i1];
    ZipFile[] arrayOfZipFile = new ZipFile[i1];
    DexFile[] arrayOfDexFile = new DexFile[i1];
    paramList = paramList.listIterator();
    while (paramList.hasNext())
    {
      File localFile = (File)paramList.next();
      String str = localFile.getAbsolutePath();
      localStringBuilder.append(':').append(str);
      i1 = paramList.previousIndex();
      arrayOfString[i1] = str;
      arrayOfFile[i1] = localFile;
      arrayOfZipFile[i1] = new ZipFile(localFile);
      arrayOfDexFile[i1] = DexFile.loadDex(str, str + ".dex", 0);
      Log.i("MultiDex", "DexFile.loadDex sourcePath: " + str + ".dex");
    }
    localField.set(paramClassLoader, localStringBuilder.toString());
    a(paramClassLoader, "mPaths", arrayOfString);
    a(paramClassLoader, "mFiles", arrayOfFile);
    a(paramClassLoader, "mZips", arrayOfZipFile);
    a(paramClassLoader, "mDexs", arrayOfDexFile);
  }
  
  public static void a(Object paramObject, View paramView)
  {
    ((Transition)paramObject).setEpicenterCallback(new android.support.v4.app.r(a(paramView)));
  }
  
  public static void a(Object paramObject, View paramView, Map<String, View> paramMap, ArrayList<View> paramArrayList)
  {
    paramObject = (TransitionSet)paramObject;
    paramArrayList.clear();
    paramArrayList.addAll(paramMap.values());
    paramMap = paramObject.getTargets();
    paramMap.clear();
    int i5 = paramArrayList.size();
    int i1 = 0;
    while (i1 < i5)
    {
      Object localObject = (View)paramArrayList.get(i1);
      int i4 = paramMap.size();
      if (!a(paramMap, (View)localObject, i4))
      {
        paramMap.add(localObject);
        int i2 = i4;
        while (i2 < paramMap.size())
        {
          localObject = (View)paramMap.get(i2);
          if ((localObject instanceof ViewGroup))
          {
            localObject = (ViewGroup)localObject;
            int i6 = ((ViewGroup)localObject).getChildCount();
            int i3 = 0;
            while (i3 < i6)
            {
              View localView = ((ViewGroup)localObject).getChildAt(i3);
              if (!a(paramMap, localView, i4)) {
                paramMap.add(localView);
              }
              i3 += 1;
            }
          }
          i2 += 1;
        }
      }
      i1 += 1;
    }
    paramArrayList.add(paramView);
    b(paramObject, paramArrayList);
  }
  
  public static void a(Object paramObject, View paramView, boolean paramBoolean)
  {
    ((Transition)paramObject).excludeTarget(paramView, paramBoolean);
  }
  
  public static void a(Object paramObject, com.facebook.share.internal.f paramF)
  {
    if ((paramObject instanceof ShareOpenGraphObject))
    {
      paramObject = (ShareOpenGraphObject)paramObject;
      if (paramObject == null) {
        throw new FacebookException("Cannot share a null ShareOpenGraphObject");
      }
      paramF.a(paramObject, true);
    }
    while (!(paramObject instanceof SharePhoto)) {
      return;
    }
    paramF.a((SharePhoto)paramObject);
  }
  
  public static void a(Object paramObject1, Object paramObject2, View paramView1, android.support.v4.app.w paramW, View paramView2, android.support.v4.app.v paramV, Map<String, String> paramMap, ArrayList<View> paramArrayList1, Map<String, View> paramMap1, Map<String, View> paramMap2, ArrayList<View> paramArrayList2)
  {
    if ((paramObject1 != null) || (paramObject2 != null))
    {
      paramObject1 = (Transition)paramObject1;
      if (paramObject1 != null) {
        paramObject1.addTarget(paramView2);
      }
      if (paramObject2 != null) {
        a(paramObject2, paramView2, paramMap1, paramArrayList2);
      }
      paramView1.getViewTreeObserver().addOnPreDrawListener(new android.support.v4.app.s(paramView1, paramObject1, paramView2, paramW, paramMap, paramMap2, paramArrayList1));
      if (paramObject1 != null) {
        paramObject1.setEpicenterCallback(new android.support.v4.app.t(paramV));
      }
    }
  }
  
  private static void a(Object paramObject, String paramString1, String paramString2, Map<String, String> paramMap, int paramInt1, int paramInt2)
  {
    if ((paramObject == null) || (TextUtils.isEmpty(paramString1)) || (TextUtils.isEmpty(paramString2))) {
      return;
    }
    try
    {
      localA = com.cleanmaster.ui.app.market.a.a(paramString1);
      localA.n = paramInt2;
      Object localObject = null;
      switch (paramInt2)
      {
      case 3000: 
        paramString1 = ((com.cleanmaster.recommendapps.i)paramObject).b(paramInt1);
        if (paramString1 == null)
        {
          paramString1 = "";
          label81:
          k("DmcBridge", "facebook raw json = " + paramString1);
          str = paramString1;
          paramString1 = localObject;
          if (!TextUtils.isEmpty(str)) {
            paramString1 = new com.cleanmaster.base.util.a.b().a(str);
          }
        }
        break;
      }
    }
    catch (Exception paramObject)
    {
      com.cleanmaster.ui.app.market.a localA;
      String str;
      label143:
      label154:
      return;
    }
    try
    {
      str = URLEncoder.encode(paramString1, "utf-8");
      paramString1 = str;
    }
    catch (UnsupportedEncodingException localUnsupportedEncodingException)
    {
      break label143;
    }
    if (1 == paramInt1)
    {
      paramString2 = com.cleanmaster.util.c.b.a(paramString2);
      com.cleanmaster.util.c.b.a(paramString2, paramMap);
      paramMap = localA.c();
    }
    switch (paramInt2)
    {
    case 3000: 
      paramMap.a(((com.cleanmaster.recommendapps.i)paramObject).c, paramString1);
    case 3008: 
      for (;;)
      {
        paramObject = new com.cleanmaster.dmc.b(paramInt2);
        paramObject.a(paramMap, paramString2);
        paramObject.c(new Void[0]);
        return;
        paramString1 = com.cleanmaster.recommendapps.j.a(paramInt1, (FlurryAdNative)paramObject);
        if (paramString1 == null) {}
        for (paramString1 = "";; paramString1 = paramString1.toString())
        {
          k("DmcBridge", "yahoo raw json = " + paramString1);
          str = paramString1;
          break;
        }
        paramString1 = paramString1.toString();
        break label81;
        if (2 != paramInt1) {
          break;
        }
        paramString2 = com.cleanmaster.util.c.b.b(paramString2);
        break label154;
        paramMap.a(" ", paramString1);
      }
      return;
    }
  }
  
  private static void a(Object paramObject, String paramString, Object[] paramArrayOfObject)
  {
    try
    {
      paramString = c(paramObject, paramString);
      Object[] arrayOfObject1 = (Object[])paramString.get(paramObject);
      Object[] arrayOfObject2 = (Object[])Array.newInstance(arrayOfObject1.getClass().getComponentType(), arrayOfObject1.length + paramArrayOfObject.length);
      System.arraycopy(arrayOfObject1, 0, arrayOfObject2, 0, arrayOfObject1.length);
      System.arraycopy(paramArrayOfObject, 0, arrayOfObject2, arrayOfObject1.length, paramArrayOfObject.length);
      paramString.set(paramObject, arrayOfObject2);
      return;
    }
    finally
    {
      paramObject = finally;
      throw paramObject;
    }
  }
  
  public static void a(Object paramObject, StringBuilder paramStringBuilder)
  {
    if (paramObject == null)
    {
      paramStringBuilder.append("null");
      return;
    }
    String str2 = paramObject.getClass().getSimpleName();
    String str1;
    if (str2 != null)
    {
      str1 = str2;
      if (str2.length() > 0) {}
    }
    else
    {
      str2 = paramObject.getClass().getName();
      int i1 = str2.lastIndexOf('.');
      str1 = str2;
      if (i1 > 0) {
        str1 = str2.substring(i1 + 1);
      }
    }
    paramStringBuilder.append(str1);
    paramStringBuilder.append('{');
    paramStringBuilder.append(Integer.toHexString(System.identityHashCode(paramObject)));
  }
  
  public static void a(Object paramObject, ArrayList<View> paramArrayList)
  {
    paramObject = (Transition)paramObject;
    int i1;
    if ((paramObject instanceof TransitionSet))
    {
      paramObject = (TransitionSet)paramObject;
      int i2 = paramObject.getTransitionCount();
      i1 = 0;
      while (i1 < i2)
      {
        a(paramObject.getTransitionAt(i1), paramArrayList);
        i1 += 1;
      }
    }
    if (!a(paramObject))
    {
      List localList = paramObject.getTargets();
      if ((localList != null) && (localList.size() == paramArrayList.size()) && (localList.containsAll(paramArrayList)))
      {
        i1 = paramArrayList.size() - 1;
        while (i1 >= 0)
        {
          paramObject.removeTarget((View)paramArrayList.get(i1));
          i1 -= 1;
        }
      }
    }
  }
  
  public static void a(Runnable paramRunnable)
  {
    new Thread(paramRunnable, "ResultPageService").start();
  }
  
  public static void a(String paramString)
  {
    if (Build.VERSION.SDK_INT >= 18) {
      Trace.beginSection(paramString);
    }
  }
  
  public static void a(String paramString, int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    int i3;
    String str;
    int i1;
    int i4;
    if (com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).a("is_game_boosted", false))
    {
      i3 = 1;
      str = com.cleanmaster.base.util.system.j.a().a(false);
      i1 = 0;
      i4 = i1;
      if (paramInt1 == 3)
      {
        i4 = i1;
        if (!com.cleanmaster.base.util.c.a.a(com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).a("last_report_gamebox_position_time", 0L))) {
          i4 = 1;
        }
      }
      i1 = com.cleanmaster.ui.game.f.a.c.a().a.e();
      if (1 != i1) {
        break label163;
      }
      i1 = 1;
      label86:
      if (!com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).aQ()) {
        break label180;
      }
    }
    boolean bool;
    label163:
    label180:
    for (int i2 = 1;; i2 = 2)
    {
      if (i1 == 3) {
        i2 = 3;
      }
      bool = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).aA();
      if (i4 == 0) {
        break label186;
      }
      com.cleanmaster.base.util.concurrent.BackgroundThread.b().post(new com.cleanmaster.ui.game.r(str, paramString, paramInt1, paramInt2, paramInt3, paramInt4, i3, i1, i2, bool));
      return;
      i3 = 2;
      break;
      if (i1 == 0)
      {
        i1 = 2;
        break label86;
      }
      i1 = 3;
      break label86;
    }
    label186:
    com.cleanmaster.base.util.concurrent.BackgroundThread.a(new com.cleanmaster.ui.game.s(paramString, paramInt1, paramInt2, paramInt3, paramInt4, i3, str, i1, i2, bool));
  }
  
  public static void a(String paramString, int paramInt, AbnormalCpuApp paramAbnormalCpuApp, boolean paramBoolean1, boolean paramBoolean2)
  {
    if ((paramAbnormalCpuApp == null) || (TextUtils.isEmpty(paramAbnormalCpuApp.a))) {
      return;
    }
    OpLog.d(paramString, "pkgName=" + paramAbnormalCpuApp.a + ";labelName=" + com.cleanmaster.func.cache.c.b().b(paramAbnormalCpuApp.a, null) + ";version:" + paramAbnormalCpuApp.b + ";usage=" + paramAbnormalCpuApp.c + ";envId:" + paramAbnormalCpuApp.k + ";showType:" + paramInt + ";isShowDirect:" + paramBoolean1 + ";isShowDelay:" + paramBoolean2);
  }
  
  private static void a(String paramString1, int paramInt, String paramString2)
  {
    com.cleanmaster.ui.resultpage.ctrl.i localI = com.cleanmaster.ui.resultpage.ctrl.i.a(com.keniu.security.d.a());
    if (TextUtils.isEmpty(paramString1))
    {
      localI.a("result_carousel" + paramInt + paramString2, null);
      return;
    }
    String str = localI.b("result_carousel" + paramInt + paramString2, "");
    if (TextUtils.isEmpty(str))
    {
      localI.a("result_carousel" + paramInt + paramString2, paramString1 + ",");
      return;
    }
    paramString1 = str + paramString1 + ",";
    localI.a("result_carousel" + paramInt + paramString2, paramString1);
  }
  
  private static void a(String paramString, com.cmcm.mixad.e paramE)
  {
    if (TextUtils.isEmpty(paramString)) {}
    do
    {
      return;
      String[] arrayOfString2 = paramString.split(";");
      String[] arrayOfString1;
      if (arrayOfString2 != null)
      {
        arrayOfString1 = arrayOfString2;
        if (arrayOfString2.length > 0) {}
      }
      else
      {
        arrayOfString1 = new String[1];
        arrayOfString1[0] = paramString;
      }
      int i2 = arrayOfString1.length;
      int i1 = 0;
      while (i1 < i2)
      {
        paramString = arrayOfString1[i1];
        if (!TextUtils.isEmpty(paramString))
        {
          if (paramE.n == null) {
            paramE.n = new ArrayList();
          }
          paramE.n.add(paramString.trim());
        }
        i1 += 1;
      }
    } while ((paramE.n == null) || (paramE.n.size() <= 0));
    paramE.m = ((String)paramE.n.get(0));
  }
  
  public static void a(String paramString, ONews paramONews)
  {
    com.cmcm.onews.report.c localC = new com.cmcm.onews.report.c(com.cmcm.onews.report.d.d());
    localC.a("upack", paramString);
    localC.a("data", new com.cmcm.onews.report.b[] { com.cmcm.onews.report.a.a.b(null, paramONews, ONewsScenario.f()) });
    localC.a(com.cmcm.onews.sdk.e.b.A);
  }
  
  private static void a(String paramString1, com.my.target.core.parsers.a paramA, Exception paramException, String paramString2)
  {
    StringBuilder localStringBuilder = new StringBuilder().append(paramString1);
    if (paramException != null) {}
    for (paramException = " message: " + paramException.getMessage();; paramException = "")
    {
      localStringBuilder.append(paramException);
      a(paramString1, paramA.c, 40, "JSON parse exception: " + paramString2, paramA.b, paramA.a);
      return;
    }
  }
  
  public static void a(String paramString1, com.my.target.core.parsers.a paramA, String paramString2)
  {
    a(paramString1 + ", Operation: " + paramA.d + ", Unit: " + paramA.e, paramA, null, paramString2);
  }
  
  private static void a(String paramString, Object paramObject, StringBuffer paramStringBuffer1, StringBuffer paramStringBuffer2)
  {
    if (paramObject != null)
    {
      if (!(paramObject instanceof ic)) {
        break label415;
      }
      int i4 = paramStringBuffer1.length();
      if (paramString != null)
      {
        paramStringBuffer2.append(paramStringBuffer1).append(bx(paramString)).append(" <\n");
        paramStringBuffer1.append("  ");
      }
      Class localClass = paramObject.getClass();
      Object localObject1 = localClass.getFields();
      int i5 = localObject1.length;
      int i1 = 0;
      String str;
      Object localObject2;
      while (i1 < i5)
      {
        Object localObject3 = localObject1[i1];
        i2 = localObject3.getModifiers();
        str = localObject3.getName();
        if (((i2 & 0x1) == 1) && ((i2 & 0x8) != 8) && (!str.startsWith("_")) && (!str.endsWith("_")))
        {
          localObject2 = localObject3.getType();
          localObject3 = localObject3.get(paramObject);
          if ((((Class)localObject2).isArray()) && (((Class)localObject2).getComponentType() != Byte.TYPE))
          {
            if (localObject3 == null) {}
            for (i2 = 0;; i2 = Array.getLength(localObject3))
            {
              int i3 = 0;
              while (i3 < i2)
              {
                a(str, Array.get(localObject3, i3), paramStringBuffer1, paramStringBuffer2);
                i3 += 1;
              }
            }
          }
          a(str, localObject3, paramStringBuffer1, paramStringBuffer2);
        }
        i1 += 1;
      }
      localObject1 = localClass.getMethods();
      int i2 = localObject1.length;
      i1 = 0;
      while (i1 < i2)
      {
        str = localObject1[i1].getName();
        if (str.startsWith("set")) {
          str = str.substring(3);
        }
        for (;;)
        {
          try
          {
            localObject2 = localClass.getMethod("has" + str, new Class[0]);
            if (!((Boolean)((Method)localObject2).invoke(paramObject, new Object[0])).booleanValue()) {}
          }
          catch (NoSuchMethodException localNoSuchMethodException2)
          {
            continue;
          }
          try
          {
            localObject2 = localClass.getMethod("get" + str, new Class[0]);
            a(str, ((Method)localObject2).invoke(paramObject, new Object[0]), paramStringBuffer1, paramStringBuffer2);
          }
          catch (NoSuchMethodException localNoSuchMethodException1) {}
        }
        i1 += 1;
      }
      if (paramString != null)
      {
        paramStringBuffer1.setLength(i4);
        paramStringBuffer2.append(paramStringBuffer1).append(">\n");
      }
    }
    return;
    label415:
    paramString = bx(paramString);
    paramStringBuffer2.append(paramStringBuffer1).append(paramString).append(": ");
    if ((paramObject instanceof String))
    {
      paramObject = (String)paramObject;
      paramString = paramObject;
      if (!paramObject.startsWith("http"))
      {
        paramString = paramObject;
        if (paramObject.length() > 200) {
          paramString = paramObject.substring(0, 200) + "[...]";
        }
      }
      paramString = by(paramString);
      paramStringBuffer2.append("\"").append(paramString).append("\"");
    }
    for (;;)
    {
      paramStringBuffer2.append("\n");
      return;
      if ((paramObject instanceof byte[])) {
        a((byte[])paramObject, paramStringBuffer2);
      } else {
        paramStringBuffer2.append(paramObject);
      }
    }
  }
  
  public static void a(String paramString1, String paramString2, float paramFloat, Context paramContext)
  {
    try
    {
      localObject = URLDecoder.decode(paramString1, "UTF-8");
      paramString1 = (String)localObject;
    }
    catch (IllegalArgumentException localIllegalArgumentException)
    {
      for (;;)
      {
        Object localObject;
        localIllegalArgumentException.toString();
        continue;
        paramString2 = " value: " + paramFloat;
      }
    }
    catch (UnsupportedEncodingException localUnsupportedEncodingException)
    {
      for (;;) {}
    }
    if ((paramString1 != null) && (URLUtil.isNetworkUrl(paramString1)))
    {
      localObject = new StringBuilder("add stat type: ").append(paramString2);
      if (paramFloat == -1.0F)
      {
        paramString2 = "";
        ((StringBuilder)localObject).append(paramString2).append(" url: ").append(paramString1);
        b(paramString1, paramContext).b();
      }
    }
    else
    {
      return;
    }
  }
  
  public static void a(String paramString1, String paramString2, int paramInt, String paramString3, String paramString4, Context paramContext)
  {
    a(paramString1, paramString2, paramInt, paramString3, null, paramString4, paramContext).b();
  }
  
  public static void a(String paramString1, String paramString2, Context paramContext)
  {
    boolean bool2 = false;
    boolean bool1 = bool2;
    if (com.cleanmaster.base.util.system.m.a(paramContext))
    {
      bool1 = bool2;
      if (!TextUtils.isEmpty(paramString1)) {
        bool1 = com.cleanmaster.base.util.system.b.a(paramString1, paramContext);
      }
    }
    if (!bool1) {
      q(paramContext, paramString2);
    }
  }
  
  public static void a(String paramString1, String paramString2, com.cleanmaster.base.util.g.c paramC)
  {
    if ((TextUtils.isEmpty(paramString1)) || (TextUtils.isEmpty(paramString2))) {
      return;
    }
    int i1 = 0;
    for (;;)
    {
      int i2 = paramString1.indexOf(paramString2, i1);
      if (i2 == -1)
      {
        if (i1 >= paramString1.length()) {
          break;
        }
        paramC.a(paramString1.substring(i1));
        return;
      }
      paramC.a(paramString1.substring(i1, i2));
      i1 += i2 - i1 + paramString2.length();
    }
  }
  
  public static void a(String paramString1, String paramString2, String paramString3)
  {
    File localFile = new File(paramString2);
    if (!localFile.exists()) {
      localFile.mkdirs();
    }
    paramString2 = new File(localFile, paramString3);
    if (!paramString2.exists())
    {
      paramString2.mkdirs();
      ZipInputStream localZipInputStream = new ZipInputStream(new FileInputStream(paramString1));
      int i1 = 0;
      for (;;)
      {
        paramString3 = localZipInputStream.getNextEntry();
        if (paramString3 == null) {
          break;
        }
        int i2;
        if (paramString3.isDirectory())
        {
          i2 = 1;
          paramString3 = new File(localFile, paramString3.getName());
          i1 = i2;
          paramString2 = paramString3;
          if (!paramString3.exists())
          {
            paramString3.mkdirs();
            i1 = i2;
            paramString2 = paramString3;
          }
        }
        else
        {
          if (i1 != 0) {}
          for (paramString3 = new File(localFile, paramString3.getName());; paramString3 = new File(paramString2, paramString3.getName()))
          {
            paramString3 = new FileOutputStream(paramString3);
            byte[] arrayOfByte = new byte['⠀'];
            for (;;)
            {
              i2 = localZipInputStream.read(arrayOfByte);
              if (i2 <= 0) {
                break;
              }
              paramString3.write(arrayOfByte, 0, i2);
            }
          }
          paramString3.close();
        }
      }
      localZipInputStream.close();
      paramString1 = new File(paramString1);
      if (paramString1.exists()) {
        paramString1.delete();
      }
    }
  }
  
  public static void a(String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, Context paramContext)
  {
    if (aa < System.currentTimeMillis())
    {
      paramString3 = paramString3 + " with data";
      a(paramString1 + " with data", paramString2, 40, paramString3, null, paramString4, paramString5, paramContext).b();
      aa = System.currentTimeMillis() + 86400000L;
      return;
    }
    a(paramString1, paramString2, 40, paramString3, null, paramString5, paramContext).b();
  }
  
  private static void a(String paramString1, String paramString2, ZipOutputStream paramZipOutputStream)
  {
    int i2 = 0;
    if (paramZipOutputStream == null) {}
    for (;;)
    {
      return;
      Object localObject = new File(paramString1 + paramString2);
      int i1;
      if (((File)localObject).isFile())
      {
        paramString1 = new ZipEntry(paramString2);
        paramString2 = new FileInputStream((File)localObject);
        paramZipOutputStream.putNextEntry(paramString1);
        paramString1 = new byte['Ѐ'];
        for (;;)
        {
          i1 = paramString2.read(paramString1, 0, 1024);
          if (i1 == -1) {
            break;
          }
          paramZipOutputStream.write(paramString1, 0, i1);
        }
        paramString2.close();
        return;
      }
      localObject = com.cleanmaster.util.al.a(((File)localObject).getPath());
      if (localObject == null)
      {
        if (localObject == null) {
          continue;
        }
        ((al.d)localObject).c();
        return;
      }
      try
      {
        int i3 = ((al.d)localObject).d();
        i1 = i2;
        if (i3 <= 0)
        {
          paramZipOutputStream.putNextEntry(new ZipEntry(paramString2 + File.separator));
          i1 = i2;
        }
        while (i1 < i3)
        {
          a(paramString1, paramString2 + File.separator + ((al.d)localObject).a(i1), paramZipOutputStream);
          i1 += 1;
        }
        return;
      }
      finally
      {
        if (localObject != null) {
          ((al.d)localObject).c();
        }
      }
    }
  }
  
  public static void a(String paramString1, String paramString2, Object... paramVarArgs)
  {
    if (TextUtils.isEmpty(paramString2)) {
      return;
    }
    Log.i("DMC", String.format("[%s] %s", new Object[] { paramString1, String.format(paramString2, paramVarArgs) }));
  }
  
  public static void a(String paramString, Throwable paramThrowable)
  {
    if (Z(3)) {
      Log.d("Ads", paramString, paramThrowable);
    }
  }
  
  /* Error */
  public static void a(String paramString, HashMap<Integer, com.cleanmaster.ui.floatwindow.c.r> paramHashMap)
  {
    // Byte code:
    //   0: ldc 2
    //   2: monitorenter
    //   3: aload_0
    //   4: invokestatic 166	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   7: istore 4
    //   9: iload 4
    //   11: ifeq +7 -> 18
    //   14: ldc 2
    //   16: monitorexit
    //   17: return
    //   18: new 655	org/json/JSONObject
    //   21: dup
    //   22: aload_0
    //   23: invokespecial 656	org/json/JSONObject:<init>	(Ljava/lang/String;)V
    //   26: ldc_w 9770
    //   29: invokevirtual 4707	org/json/JSONObject:optJSONArray	(Ljava/lang/String;)Lorg/json/JSONArray;
    //   32: astore_0
    //   33: aload_0
    //   34: ifnull -20 -> 14
    //   37: aload_0
    //   38: invokevirtual 676	org/json/JSONArray:length	()I
    //   41: ifle -27 -> 14
    //   44: aload_1
    //   45: invokevirtual 9771	java/util/HashMap:clear	()V
    //   48: iconst_0
    //   49: istore_2
    //   50: iload_2
    //   51: aload_0
    //   52: invokevirtual 676	org/json/JSONArray:length	()I
    //   55: if_icmpge -41 -> 14
    //   58: aload_0
    //   59: iload_2
    //   60: invokevirtual 9774	org/json/JSONArray:optJSONObject	(I)Lorg/json/JSONObject;
    //   63: astore 5
    //   65: aload 5
    //   67: invokevirtual 4734	org/json/JSONObject:keys	()Ljava/util/Iterator;
    //   70: astore 6
    //   72: aload 6
    //   74: invokeinterface 840 1 0
    //   79: ifeq +68 -> 147
    //   82: aload 6
    //   84: invokeinterface 844 1 0
    //   89: checkcast 174	java/lang/String
    //   92: astore 7
    //   94: aload 7
    //   96: invokestatic 9777	java/lang/Integer:valueOf	(Ljava/lang/String;)Ljava/lang/Integer;
    //   99: invokevirtual 1218	java/lang/Integer:intValue	()I
    //   102: istore_3
    //   103: aload 5
    //   105: aload 7
    //   107: invokevirtual 664	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   110: astore 7
    //   112: new 9779	com/cleanmaster/ui/floatwindow/c/r
    //   115: dup
    //   116: invokespecial 9780	com/cleanmaster/ui/floatwindow/c/r:<init>	()V
    //   119: astore 8
    //   121: aload 8
    //   123: aload 7
    //   125: invokevirtual 9783	com/cleanmaster/ui/floatwindow/c/r:a	(Ljava/lang/String;)Lcom/cleanmaster/ui/floatwindow/c/r;
    //   128: pop
    //   129: aload_1
    //   130: iload_3
    //   131: invokestatic 1206	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   134: aload 8
    //   136: invokevirtual 9784	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   139: pop
    //   140: goto -68 -> 72
    //   143: astore_0
    //   144: goto -130 -> 14
    //   147: iload_2
    //   148: iconst_1
    //   149: iadd
    //   150: istore_2
    //   151: goto -101 -> 50
    //   154: astore_0
    //   155: ldc 2
    //   157: monitorexit
    //   158: aload_0
    //   159: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	160	0	paramString	String
    //   0	160	1	paramHashMap	HashMap<Integer, com.cleanmaster.ui.floatwindow.c.r>
    //   49	102	2	i1	int
    //   102	29	3	i2	int
    //   7	3	4	bool	boolean
    //   63	41	5	localJSONObject	JSONObject
    //   70	13	6	localIterator	Iterator
    //   92	32	7	str	String
    //   119	16	8	localR	com.cleanmaster.ui.floatwindow.c.r
    // Exception table:
    //   from	to	target	type
    //   18	33	143	org/json/JSONException
    //   37	48	143	org/json/JSONException
    //   50	72	143	org/json/JSONException
    //   72	140	143	org/json/JSONException
    //   3	9	154	finally
    //   18	33	154	finally
    //   37	48	154	finally
    //   50	72	154	finally
    //   72	140	154	finally
  }
  
  public static void a(String paramString, List<String> paramList)
  {
    com.cleanmaster.boost.autostarts.data.i localI = new com.cleanmaster.boost.autostarts.data.i();
    localI.a = paramString;
    localI.b = c(paramList);
    if (localI.a())
    {
      paramString = AutoStartRulesStorage.a().a(paramString);
      if ((paramString != null) && (paramString.a()))
      {
        localI.c = paramString.c;
        localI.d = paramString.d;
        AutoStartRulesStorage.a().b(localI);
      }
    }
    else
    {
      return;
    }
    AutoStartRulesStorage.a().a(localI);
  }
  
  public static void a(String paramString, String[] paramArrayOfString, com.cleanmaster.social.sdk.e<com.cleanmaster.social.comment.a.b> paramE)
  {
    Object localObject = new ArrayList(Arrays.asList(paramArrayOfString));
    Collections.sort((List)localObject);
    paramArrayOfString = "";
    int i1 = 1;
    localObject = ((ArrayList)localObject).iterator();
    if (((Iterator)localObject).hasNext())
    {
      String str = (String)((Iterator)localObject).next();
      if (i1 == 0) {
        paramArrayOfString = paramArrayOfString + ",";
      }
      for (;;)
      {
        paramArrayOfString = paramArrayOfString + str;
        break;
        i1 = 0;
      }
    }
    i1 = c("social", "social_comment_cache", 24);
    if (i1 == 0)
    {
      localObject = com.cleanmaster.social.comment.a.b.a("http://uc.cm.ksmobile.com/count/index");
      ((com.cleanmaster.social.sdk.c)localObject).a();
      ((com.cleanmaster.social.sdk.c)localObject).a("app", "cm");
      ((com.cleanmaster.social.sdk.c)localObject).a("source", paramString);
      ((com.cleanmaster.social.sdk.c)localObject).a("resids", paramArrayOfString);
      ((com.cleanmaster.social.sdk.c)localObject).a(paramE);
      return;
    }
    new CommentRequest.QueryCacheTask(paramE, paramString, paramArrayOfString, i1).execute(new Void[0]);
  }
  
  public static void a(StringBuilder paramStringBuilder, HashMap<String, String> paramHashMap)
  {
    paramStringBuilder.append("{");
    Iterator localIterator = paramHashMap.keySet().iterator();
    int i1 = 1;
    while (localIterator.hasNext())
    {
      String str1 = (String)localIterator.next();
      if (i1 == 0) {
        paramStringBuilder.append(",");
      }
      String str2;
      for (;;)
      {
        str2 = (String)paramHashMap.get(str1);
        paramStringBuilder.append("\"").append(str1).append("\":");
        if (str2 != null) {
          break label103;
        }
        paramStringBuilder.append("null");
        break;
        i1 = 0;
      }
      label103:
      paramStringBuilder.append("\"").append(str2).append("\"");
    }
    paramStringBuilder.append("}");
  }
  
  public static void a(StringBuilder paramStringBuilder, double[] paramArrayOfDouble)
  {
    int i2 = paramArrayOfDouble.length;
    int i1 = 0;
    while (i1 < i2)
    {
      if (i1 != 0) {
        paramStringBuilder.append(",");
      }
      paramStringBuilder.append(Double.toString(paramArrayOfDouble[i1]));
      i1 += 1;
    }
  }
  
  public static void a(StringBuilder paramStringBuilder, float[] paramArrayOfFloat)
  {
    int i2 = paramArrayOfFloat.length;
    int i1 = 0;
    while (i1 < i2)
    {
      if (i1 != 0) {
        paramStringBuilder.append(",");
      }
      paramStringBuilder.append(Float.toString(paramArrayOfFloat[i1]));
      i1 += 1;
    }
  }
  
  public static void a(StringBuilder paramStringBuilder, long[] paramArrayOfLong)
  {
    int i2 = paramArrayOfLong.length;
    int i1 = 0;
    while (i1 < i2)
    {
      if (i1 != 0) {
        paramStringBuilder.append(",");
      }
      paramStringBuilder.append(Long.toString(paramArrayOfLong[i1]));
      i1 += 1;
    }
  }
  
  public static <T> void a(StringBuilder paramStringBuilder, T[] paramArrayOfT)
  {
    int i2 = paramArrayOfT.length;
    int i1 = 0;
    while (i1 < i2)
    {
      if (i1 != 0) {
        paramStringBuilder.append(",");
      }
      paramStringBuilder.append(paramArrayOfT[i1].toString());
      i1 += 1;
    }
  }
  
  public static void a(StringBuilder paramStringBuilder, String[] paramArrayOfString)
  {
    int i2 = paramArrayOfString.length;
    int i1 = 0;
    while (i1 < i2)
    {
      if (i1 != 0) {
        paramStringBuilder.append(",");
      }
      paramStringBuilder.append("\"").append(paramArrayOfString[i1]).append("\"");
      i1 += 1;
    }
  }
  
  public static void a(StringBuilder paramStringBuilder, boolean[] paramArrayOfBoolean)
  {
    int i2 = paramArrayOfBoolean.length;
    int i1 = 0;
    while (i1 < i2)
    {
      if (i1 != 0) {
        paramStringBuilder.append(",");
      }
      paramStringBuilder.append(Boolean.toString(paramArrayOfBoolean[i1]));
      i1 += 1;
    }
  }
  
  public static void a(WeakReference<Context> paramWeakReference)
  {
    Object localObject = (Context)paramWeakReference.get();
    if (localObject == null) {}
    while (!AppLockUtil.isUsageAccessSettingLaunchable()) {
      return;
    }
    Intent localIntent = new Intent("android.settings.USAGE_ACCESS_SETTINGS");
    localIntent.addFlags(67108864);
    if ((localObject instanceof Activity)) {
      localObject = (Activity)localObject;
    }
    try
    {
      ((Activity)localObject).startActivityForResult(localIntent, 10);
      new Handler().postDelayed(new com.cleanmaster.applocklib.common.utils.d(paramWeakReference), 1000L);
      return;
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
  }
  
  private static void a(ArrayList paramArrayList, char paramChar, float[] paramArrayOfFloat)
  {
    paramArrayList.add(new com.cmnow.weather.a.aw(paramChar, paramArrayOfFloat, (byte)0));
  }
  
  public static void a(ArrayList<View> paramArrayList, View paramView)
  {
    if (paramView.getVisibility() == 0)
    {
      if (!(paramView instanceof ViewGroup)) {
        break label61;
      }
      paramView = (ViewGroup)paramView;
      if (!paramView.isTransitionGroup()) {
        break label33;
      }
      paramArrayList.add(paramView);
    }
    for (;;)
    {
      return;
      label33:
      int i2 = paramView.getChildCount();
      int i1 = 0;
      while (i1 < i2)
      {
        a(paramArrayList, paramView.getChildAt(i1));
        i1 += 1;
      }
    }
    label61:
    paramArrayList.add(paramView);
  }
  
  public static void a(ArrayList<com.cleanmaster.ui.app.market.a> paramArrayList, String paramString)
  {
    paramArrayList = paramArrayList.iterator();
    while (paramArrayList.hasNext())
    {
      com.cleanmaster.ui.app.market.a localA = (com.cleanmaster.ui.app.market.a)paramArrayList.next();
      if (localA != null) {
        localA.W = paramString;
      }
    }
  }
  
  private static void a(List<com.cleanmaster.ui.resultpage.item.h> paramList, int paramInt, String paramString)
  {
    int i5 = 1;
    Collections.sort(paramList, new com.cleanmaster.ui.resultpage.ctrl.a());
    Object localObject1 = com.cleanmaster.ui.resultpage.ctrl.i.a(com.keniu.security.d.a()).b("result_carousel" + paramInt + paramString, "");
    int i6;
    int i3;
    int i1;
    label83:
    int i2;
    int i4;
    if (TextUtils.isEmpty((CharSequence)localObject1))
    {
      localObject1 = null;
      i6 = paramList.size();
      if ((localObject1 == null) || (localObject1.length <= 0)) {
        break label206;
      }
      i3 = 0;
      i1 = 0;
      i2 = i1;
      if (i3 >= localObject1.length) {
        break label209;
      }
      Object localObject2 = localObject1[i3];
      i4 = 0;
      i2 = 0;
      label107:
      if (i4 >= i6) {
        break label181;
      }
      if (!localObject2.equalsIgnoreCase(Integer.toString(((com.cleanmaster.ui.resultpage.item.h)paramList.get(i4)).o))) {
        break label282;
      }
      ((com.cleanmaster.ui.resultpage.item.h)paramList.get(i4)).G = com.cleanmaster.ui.resultpage.a.b;
      i2 = 1;
    }
    label181:
    label206:
    label209:
    label282:
    for (;;)
    {
      i4 += 1;
      break label107;
      localObject1 = ((String)localObject1).split(",");
      break;
      i4 = i1;
      if (i2 != 0) {
        i4 = i1 + 1;
      }
      i3 += 1;
      i1 = i4;
      break label83;
      i2 = 0;
      Collections.sort(paramList, new com.cleanmaster.ui.resultpage.ctrl.a());
      paramList = (com.cleanmaster.ui.resultpage.item.h)paramList.get(0);
      if (paramList.G == com.cleanmaster.ui.resultpage.a.a) {}
      for (i1 = i5; (i1 != 0) || (i6 == i2 + 1); i1 = 0)
      {
        a(null, paramInt, paramString);
        return;
      }
      a(Integer.toString(paramList.o), paramInt, paramString);
      return;
    }
  }
  
  public static void a(List<com.cleanmaster.boost.process.util.ProcessModel> paramList, long paramLong, int paramInt1, int paramInt2, boolean paramBoolean1, int paramInt3, boolean paramBoolean2)
  {
    if ((paramList == null) || (paramList.isEmpty())) {
      return;
    }
    com.cleanmaster.base.util.concurrent.BackgroundThread.a(new com.cleanmaster.boost.acc.utils.d(paramBoolean2, paramInt3, new ArrayList(paramList), paramBoolean1, paramLong, paramInt1, paramInt2));
  }
  
  private static void a(List paramList, ONews paramONews)
  {
    if ((paramONews != null) && (paramList != null))
    {
      int i1 = 0;
      for (;;)
      {
        try
        {
          if (i1 >= paramList.size()) {
            break;
          }
          Object localObject = paramList.get(i1);
          if ((localObject != null) && ((localObject instanceof ONews)))
          {
            if (((ONews)localObject).contentid().equals(paramONews.contentid()))
            {
              paramList.remove(i1);
              paramList.add(0, paramONews);
            }
          }
          else if ((localObject instanceof com.cmcm.onews.model.a))
          {
            localObject = (com.cmcm.onews.model.a)localObject;
            if ((((com.cmcm.onews.model.a)localObject).a() != null) && (((com.cmcm.onews.model.a)localObject).a().contentid().equals(paramONews.contentid())))
            {
              paramList.remove(i1);
              paramList.add(0, new com.cmcm.onews.loader.o(paramONews));
              return;
            }
          }
        }
        catch (Exception paramList)
        {
          paramList.printStackTrace();
          return;
        }
        i1 += 1;
      }
    }
  }
  
  public static void a(List<com.my.target.core.f.i> paramList, String paramString, Context paramContext)
  {
    paramList = paramList.iterator();
    while (paramList.hasNext())
    {
      com.my.target.core.f.i localI = (com.my.target.core.f.i)paramList.next();
      if (localI.c.equals(paramString)) {
        a(localI.d, localI.c, -1.0F, paramContext);
      }
    }
  }
  
  public static void a(List<com.cleanmaster.ui.app.market.a> paramList, String paramString1, String paramString2)
  {
    if (paramList.isEmpty()) {
      return;
    }
    paramString1 = com.cleanmaster.util.c.b.a(paramString1, 50, 105);
    if (!TextUtils.isEmpty(paramString2)) {
      paramString1.i = paramString2;
    }
    paramString2 = new ArrayList();
    paramList = paramList.iterator();
    while (paramList.hasNext())
    {
      com.cleanmaster.ui.app.market.a localA = (com.cleanmaster.ui.app.market.a)paramList.next();
      if (localA != null) {
        paramString2.add(localA.c());
      }
    }
    paramList = new com.cleanmaster.util.c();
    paramList.a(paramString2, paramString1);
    paramList.c(new Void[0]);
  }
  
  public static void a(List paramList1, List paramList2)
  {
    if (paramList1.isEmpty())
    {
      paramList1.addAll(0, paramList2);
      a(paramList1, t(paramList2));
      return;
    }
    Object localObject = paramList1.get(0);
    if ((localObject instanceof ONews)) {
      localObject = (ONews)localObject;
    }
    for (;;)
    {
      ONews localONews = t(paramList2);
      if (localONews != null)
      {
        ((ONews)localObject).stick(0);
        paramList1.addAll(0, paramList2);
        a(paramList1, localONews);
        return;
        if ((localObject instanceof com.cmcm.onews.model.a)) {
          localObject = ((com.cmcm.onews.model.a)localObject).a();
        }
      }
      else
      {
        if ((localONews == null) && (a((ONews)localObject)))
        {
          paramList1.addAll(0, paramList2);
          a(paramList1, (ONews)localObject);
          return;
        }
        paramList1.addAll(0, paramList2);
        return;
      }
      localObject = null;
    }
  }
  
  private static void a(List<CityData> paramList, Set<String> paramSet)
  {
    com.lock.sideslip.setting.h.a();
    Object localObject = com.lock.sideslip.setting.h.b("weather_city_data_json", null);
    if (localObject != null) {
      try
      {
        localObject = new JSONArray((String)localObject);
        int i2 = ((JSONArray)localObject).length();
        if (i2 > 0)
        {
          int i1 = 0;
          while (i1 < i2)
          {
            CityData localCityData = CityData.a(((JSONArray)localObject).getJSONObject(i1));
            paramList.add(localCityData);
            paramSet.add(localCityData.a);
            i1 += 1;
          }
        }
        return;
      }
      catch (JSONException paramList)
      {
        paramList.printStackTrace();
      }
    }
  }
  
  public static void a(List<com.ijinshan.cleaner.bean.g> paramList, boolean paramBoolean)
  {
    Object localObject3 = ba();
    Object localObject1 = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).a("cm_recommand_game_uninstall_times", "");
    int i2;
    int i1;
    long l1;
    int i3;
    if (!TextUtils.isEmpty((CharSequence)localObject1))
    {
      localObject1 = ((String)localObject1).split(":");
      int i4 = localObject1.length;
      i2 = 0;
      i1 = 0;
      while (i1 < i4)
      {
        l1 = Long.valueOf(localObject1[i1]).longValue();
        i3 = i2;
        if (System.currentTimeMillis() - l1 > 86400000L) {
          i3 = i2 + 1;
        }
        i1 += 1;
        i2 = i3;
      }
      i2 += 3 - localObject1.length;
      if (localObject3 != null) {
        break label116;
      }
    }
    label116:
    long l2;
    do
    {
      return;
      i2 = 3;
      break;
      l2 = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a().getApplicationContext()).M();
    } while (l2 == -1L);
    com.cleanmaster.util.w.a();
    localObject1 = com.ijinshan.cleaner.bean.g.a(paramList);
    label162:
    label180:
    long l4;
    Object localObject2;
    label208:
    Object localObject4;
    Object localObject5;
    label281:
    boolean bool;
    if (((List)localObject1).size() == 0)
    {
      localObject1 = null;
      if ((localObject1 != null) && (((Map)localObject1).size() != 0)) {
        break label476;
      }
      localObject1 = null;
      if (com.ijinshan.cleaner.bean.g.a < 0L) {
        com.ijinshan.cleaner.bean.g.a = l2;
      }
      l4 = System.currentTimeMillis();
      localObject2 = paramList.iterator();
      i1 = 0;
      for (;;)
      {
        if (((Iterator)localObject2).hasNext())
        {
          localObject4 = (com.ijinshan.cleaner.bean.g)((Iterator)localObject2).next();
          if (!((com.ijinshan.cleaner.bean.g)localObject4).c())
          {
            localObject5 = (com.cleanmaster.common.model.AppInfo)((Map)localObject3).get(((com.ijinshan.cleaner.bean.g)localObject4).b);
            if (localObject5 == null) {
              if (l2 > ((com.ijinshan.cleaner.bean.g)localObject4).v)
              {
                ((com.ijinshan.cleaner.bean.g)localObject4).a(l4 - l2);
                if (!paramBoolean) {
                  break label895;
                }
                if (localObject1 != null) {
                  break label605;
                }
                bool = false;
                label293:
                if ((!a((com.ijinshan.cleaner.bean.g)localObject4)) || (!bool)) {
                  break label895;
                }
                com.cleanmaster.service.b.a();
                if ((com.cleanmaster.service.b.o(((com.ijinshan.cleaner.bean.g)localObject4).b)) || (((com.ijinshan.cleaner.bean.g)localObject4).G < 1296000000L) || (i1 >= i2)) {
                  break label895;
                }
                ((com.ijinshan.cleaner.bean.g)localObject4).F = true;
                i1 += 1;
              }
            }
          }
        }
      }
    }
    label476:
    label605:
    label895:
    for (;;)
    {
      break label208;
      localObject2 = com.cleanmaster.util.w.c();
      if (localObject2 == null)
      {
        localObject1 = null;
        break label162;
      }
      localObject4 = ((com.cleanmaster.cleancloud.d)localObject2).a((Collection)localObject1);
      if ((localObject4 == null) || (((Collection)localObject4).size() == 0))
      {
        com.cleanmaster.util.w.a((com.cleanmaster.cleancloud.d)localObject2);
        localObject1 = null;
        break label162;
      }
      localObject1 = new com.cleanmaster.bitloader.a.a();
      localObject4 = ((Collection)localObject4).iterator();
      while (((Iterator)localObject4).hasNext())
      {
        localObject5 = (d.c)((Iterator)localObject4).next();
        if (com.cleanmaster.util.w.a((d.c)localObject5)) {
          ((Map)localObject1).put(((d.c)localObject5).a, localObject5);
        }
      }
      com.cleanmaster.util.w.a((com.cleanmaster.cleancloud.d)localObject2);
      break label162;
      localObject2 = new com.cleanmaster.bitloader.a.a();
      localObject4 = ((Map)localObject1).entrySet().iterator();
      while (((Iterator)localObject4).hasNext()) {
        ((Map)localObject2).put(((Map.Entry)((Iterator)localObject4).next()).getKey(), Boolean.valueOf(true));
      }
      ((Map)localObject1).clear();
      localObject1 = localObject2;
      break label180;
      ((com.ijinshan.cleaner.bean.g)localObject4).a(l4 - ((com.ijinshan.cleaner.bean.g)localObject4).v);
      break label281;
      long l3 = ((com.cleanmaster.common.model.AppInfo)localObject5).getLastOpenTime();
      l1 = l3;
      if (l3 < l2) {
        l1 = l2;
      }
      ((com.ijinshan.cleaner.bean.g)localObject4).a(l4 - l1);
      break label281;
      bool = ((Map)localObject1).containsKey(((com.ijinshan.cleaner.bean.g)localObject4).b);
      break label293;
      if ((i1 > 0) && (com.cleanmaster.base.util.system.o.h()))
      {
        localObject1 = com.keniu.security.d.a().getApplicationContext();
        if (System.currentTimeMillis() - com.cleanmaster.configmanager.d.a((Context)localObject1).a("new_app_to_uninstall_flag_last_time", 0L) > 604800000L) {
          com.cleanmaster.configmanager.d.a((Context)localObject1).c(true);
        }
      }
      localObject3 = com.keniu.security.d.a().getApplicationContext();
      localObject1 = a((Context)localObject3, false);
      localObject2 = new HashMap();
      localObject3 = ((Context)localObject3).getPackageManager();
      localObject4 = new Intent("android.intent.action.MAIN");
      ((Intent)localObject4).addCategory("android.intent.category.HOME");
      localObject3 = ((PackageManager)localObject3).queryIntentActivities((Intent)localObject4, 0);
      if (localObject3 != null)
      {
        i1 = 0;
        while (i1 < ((List)localObject3).size())
        {
          localObject4 = (ResolveInfo)((List)localObject3).get(i1);
          i3 = ((ResolveInfo)localObject4).activityInfo.applicationInfo.flags;
          i2 = 0;
          if (((i3 & 0x1) != 0) || ((i3 & 0x80) != 0)) {
            i2 = 1;
          }
          if (i2 == 0) {
            ((Map)localObject2).put(((ResolveInfo)localObject4).activityInfo.packageName, localObject4);
          }
          i1 += 1;
        }
      }
      paramList = paramList.iterator();
      while (paramList.hasNext())
      {
        localObject3 = (com.ijinshan.cleaner.bean.g)paramList.next();
        localObject4 = ((com.ijinshan.cleaner.bean.g)localObject3).b;
        if ((((Map)localObject1).containsKey(localObject4)) || (((Map)localObject2).containsKey(localObject4))) {
          ((com.ijinshan.cleaner.bean.g)localObject3).a(0L);
        }
      }
      break;
    }
  }
  
  private static void a(Map<String, List<com.cleanmaster.ui.resultpage.item.h>> paramMap, int paramInt1, int paramInt2, int paramInt3)
  {
    if (paramInt1 != 0) {}
    for (;;)
    {
      return;
      paramMap = paramMap.entrySet().iterator();
      while (paramMap.hasNext())
      {
        Object localObject = (Map.Entry)paramMap.next();
        List localList = (List)((Map.Entry)localObject).getValue();
        localObject = (String)((Map.Entry)localObject).getKey();
        if ((localList != null) && (!localList.isEmpty())) {
          if (com.cleanmaster.ui.resultpage.a.b((String)localObject))
          {
            a(localList, paramInt2, (String)localObject);
            if ((localList != null) && (paramInt3 > 0) && (localList.size() > paramInt3))
            {
              localObject = new ArrayList();
              paramInt1 = 0;
              int i1 = 0;
              if (paramInt1 < localList.size())
              {
                com.cleanmaster.ui.resultpage.item.h localH = (com.cleanmaster.ui.resultpage.item.h)localList.get(paramInt1);
                int i2;
                if (com.cleanmaster.ui.resultpage.a.f(localH.o))
                {
                  ((List)localObject).add(localH);
                  i2 = i1;
                }
                for (;;)
                {
                  paramInt1 += 1;
                  i1 = i2;
                  break;
                  i2 = i1;
                  if (i1 < paramInt3)
                  {
                    ((List)localObject).add(localH);
                    i2 = i1 + 1;
                  }
                }
              }
              localList.clear();
              localList.addAll((Collection)localObject);
            }
          }
          else if (com.cleanmaster.ui.resultpage.a.c((String)localObject))
          {
            a(localList, paramInt2, (String)localObject);
          }
          else if (com.cleanmaster.ui.resultpage.a.d((String)localObject))
          {
            a(localList, paramInt2, (String)localObject);
          }
          else
          {
            Collections.sort(localList, new com.cleanmaster.ui.resultpage.ctrl.a());
          }
        }
      }
    }
  }
  
  public static void a(Map<String, View> paramMap, View paramView)
  {
    if (paramView.getVisibility() == 0)
    {
      String str = paramView.getTransitionName();
      if (str != null) {
        paramMap.put(str, paramView);
      }
      if ((paramView instanceof ViewGroup))
      {
        paramView = (ViewGroup)paramView;
        int i2 = paramView.getChildCount();
        int i1 = 0;
        while (i1 < i2)
        {
          a(paramMap, paramView.getChildAt(i1));
          i1 += 1;
        }
      }
    }
  }
  
  private static void a(Vector<com.cleanmaster.ui.resultpage.item.h> paramVector, List<com.cleanmaster.ui.resultpage.item.h> paramList)
  {
    paramVector.clear();
    paramVector.addAll(paramList);
  }
  
  private static void a(Vector<com.cleanmaster.ui.resultpage.item.h> paramVector, List<com.cleanmaster.ui.resultpage.item.h> paramList, int paramInt)
  {
    int i1 = 0;
    while (i1 < paramInt)
    {
      if ((com.cleanmaster.ui.resultpage.item.h)paramVector.get(i1) == null)
      {
        Object localObject2 = null;
        Object localObject1 = localObject2;
        if (paramList != null)
        {
          localObject1 = localObject2;
          if (!paramList.isEmpty())
          {
            localObject1 = (com.cleanmaster.ui.resultpage.item.h)paramList.get(0);
            paramList.remove(localObject1);
          }
        }
        paramVector.set(i1, localObject1);
      }
      i1 += 1;
    }
  }
  
  private static void a(Vector<com.cleanmaster.ui.resultpage.item.h> paramVector, List<com.cleanmaster.ui.resultpage.item.h> paramList, com.cleanmaster.ui.resultpage.ctrl.e paramE, int paramInt)
  {
    TreeMap localTreeMap = new TreeMap(new com.cleanmaster.ui.resultpage.ctrl.e.a());
    if (!paramE.b.isEmpty())
    {
      Iterator localIterator = paramE.b.iterator();
      while (localIterator.hasNext())
      {
        com.cleanmaster.ui.resultpage.ctrl.d localD = (com.cleanmaster.ui.resultpage.ctrl.d)localIterator.next();
        localObject = (ArrayList)localTreeMap.get(Integer.valueOf(localD.c));
        paramE = (com.cleanmaster.ui.resultpage.ctrl.e)localObject;
        if (localObject == null)
        {
          paramE = new ArrayList();
          localTreeMap.put(Integer.valueOf(localD.c), paramE);
        }
        paramE.add(localD);
      }
    }
    Object localObject = localTreeMap.keySet().iterator();
    while (((Iterator)localObject).hasNext())
    {
      paramE = (Integer)((Iterator)localObject).next();
      int i1 = paramE.intValue();
      if ((Math.abs(i1) > paramInt) || (i1 == paramInt))
      {
        i1 = -1;
        label175:
        if ((i1 < 0) || ((com.cleanmaster.ui.resultpage.item.h)paramVector.get(i1) != null)) {
          continue;
        }
        paramE = (ArrayList)localTreeMap.get(paramE);
        if ((paramE == null) || (paramE.isEmpty())) {
          continue;
        }
        switch (e(paramE))
        {
        default: 
          paramE = null;
        }
      }
      while (paramE != null)
      {
        paramVector.set(i1, paramE);
        paramList.remove(paramE);
        break;
        if (i1 < 0)
        {
          i1 += paramInt;
          break label175;
        }
        break label175;
        paramE = a(paramE, paramList);
        continue;
        paramE = a(f(paramE), paramList);
      }
    }
    a(paramVector, paramList, paramInt);
  }
  
  public static void a(JSONObject paramJSONObject, com.in2wow.sdk.k.e paramE, long paramLong)
  {
    try
    {
      com.in2wow.sdk.k.a.a(paramJSONObject, paramE, Long.valueOf(paramLong));
      return;
    }
    catch (JSONException paramJSONObject) {}
  }
  
  public static void a(JSONObject paramJSONObject, com.in2wow.sdk.k.e paramE, String paramString)
  {
    try
    {
      com.in2wow.sdk.k.a.a(paramJSONObject, paramE, paramString);
      return;
    }
    catch (JSONException paramJSONObject) {}
  }
  
  public static void a(boolean paramBoolean, int paramInt)
  {
    try
    {
      com.lock.f.a localA = new com.lock.f.a("cm_weatherforecast_notbar");
      if (paramBoolean) {}
      for (int i1 = 2;; i1 = 1)
      {
        localA = localA.a("action", String.valueOf(i1)).a("click_type", String.valueOf(paramInt)).a("report_time", String.valueOf(by()));
        t("WeatherAlert", "reportMornEvenNotify    alert=" + b(localA.b));
        localA.a(false);
        return;
      }
      return;
    }
    catch (Throwable localThrowable)
    {
      localThrowable.printStackTrace();
      t("WeatherAlert", "reportAlertClick " + Log.getStackTraceString(localThrowable));
    }
  }
  
  public static void a(boolean paramBoolean, int paramInt, String paramString)
  {
    String str = paramString;
    if (TextUtils.isEmpty(paramString)) {
      str = "";
    }
    if (paramBoolean)
    {
      com.cleanmaster.kinfoc.p.a().a("cm_notification_spe_show", "showtype=" + paramInt + "&pkgname=" + str + "&appname=", true);
      return;
    }
    com.cleanmaster.base.util.concurrent.BackgroundThread.b().postDelayed(new com.cleanmaster.func.b.e(paramInt, str), 2000L);
  }
  
  public static void a(boolean paramBoolean, View paramView)
  {
    if (paramView == null) {
      return;
    }
    InputMethodManager localInputMethodManager = (InputMethodManager)paramView.getContext().getSystemService("input_method");
    if (paramBoolean)
    {
      localInputMethodManager.toggleSoftInput(0, 1);
      return;
    }
    localInputMethodManager.hideSoftInputFromWindow(paramView.getWindowToken(), 0);
  }
  
  public static void a(boolean paramBoolean, String paramString1, String paramString2)
  {
    if (paramBoolean) {
      Log.d("KBattery", x(paramString1, paramString2));
    }
  }
  
  private static void a(byte[] paramArrayOfByte, StringBuffer paramStringBuffer)
  {
    if (paramArrayOfByte == null)
    {
      paramStringBuffer.append("\"\"");
      return;
    }
    paramStringBuffer.append('"');
    int i1 = 0;
    if (i1 < paramArrayOfByte.length)
    {
      int i2 = paramArrayOfByte[i1] & 0xFF;
      if ((i2 == 92) || (i2 == 34)) {
        paramStringBuffer.append('\\').append((char)i2);
      }
      for (;;)
      {
        i1 += 1;
        break;
        if ((i2 >= 32) && (i2 < 127)) {
          paramStringBuffer.append((char)i2);
        } else {
          paramStringBuffer.append(String.format("\\%03o", new Object[] { Integer.valueOf(i2) }));
        }
      }
    }
    paramStringBuffer.append('"');
  }
  
  public static void a(View... paramVarArgs)
  {
    int i1 = 0;
    while (i1 < 2)
    {
      Object localObject = paramVarArgs[i1];
      if (localObject != null)
      {
        localObject = ((View)localObject).getTag(2131623976);
        if ((localObject instanceof Animator)) {
          ((Animator)localObject).cancel();
        }
      }
      i1 += 1;
    }
  }
  
  public static void a(com.cleanmaster.cleancloud.h.a[] paramArrayOfA)
  {
    int i3 = 0;
    Object localObject = com.cleanmaster.cleancloud.core.falseproc.g.a();
    if (paramArrayOfA.length <= 0) {
      return;
    }
    int i1 = 0;
    label15:
    int i4;
    int i5;
    com.cleanmaster.cleancloud.core.falseproc.p localP;
    if (i1 < paramArrayOfA.length)
    {
      i4 = paramArrayOfA[i1].a;
      i5 = paramArrayOfA[i1].b;
      localP = ((com.cleanmaster.cleancloud.core.falseproc.g)localObject).c(i4);
      if ((localP == null) || (localP.b == null)) {
        break label157;
      }
    }
    label157:
    for (int i2 = localP.b.a;; i2 = 0)
    {
      if (i5 > i2) {
        ((com.cleanmaster.cleancloud.core.falseproc.g)localObject).a(i4, localP, false);
      }
      i1 += 1;
      break label15;
      paramArrayOfA = new File(((com.cleanmaster.cleancloud.core.falseproc.g)localObject).b()).listFiles(new com.cleanmaster.cleancloud.core.falseproc.g.a());
      if ((paramArrayOfA == null) || (paramArrayOfA.length <= 0)) {
        break;
      }
      i2 = paramArrayOfA.length;
      i1 = i3;
      while (i1 < i2)
      {
        localObject = paramArrayOfA[i1];
        if (localObject != null) {
          ((File)localObject).delete();
        }
        i1 += 1;
      }
      break;
    }
  }
  
  public static void a(String[] paramArrayOfString, int paramInt, PriorityQueue<com.google.android.gms.internal.ad> paramPriorityQueue)
  {
    long l1 = (aS(paramArrayOfString[0]) + 2147483647L) % 1073807359L;
    int i1 = 1;
    while (i1 < 6)
    {
      l2 = aS(paramArrayOfString[i1]);
      i1 += 1;
      l1 = (l1 * 16785407L % 1073807359L + (l2 + 2147483647L) % 1073807359L) % 1073807359L;
    }
    a(paramInt, l1, a(paramArrayOfString, 0, 6), paramPriorityQueue);
    long l2 = c(16785407L, 5);
    i1 = 1;
    while (i1 < paramArrayOfString.length - 6 + 1)
    {
      int i2 = aS(paramArrayOfString[(i1 - 1)]);
      int i3 = aS(paramArrayOfString[(i1 + 6 - 1)]);
      l1 = ((l1 + 1073807359L - (i2 + 2147483647L) % 1073807359L * l2 % 1073807359L) % 1073807359L * 16785407L % 1073807359L + (i3 + 2147483647L) % 1073807359L) % 1073807359L;
      a(paramInt, l1, a(paramArrayOfString, i1, 6), paramPriorityQueue);
      i1 += 1;
    }
  }
  
  public static boolean a(int paramInt, Intent paramIntent, com.facebook.share.internal.e paramE)
  {
    boolean bool = true;
    Object localObject = com.facebook.internal.r.a(paramIntent);
    if (localObject == null)
    {
      localObject = null;
      if (localObject != null) {
        break label36;
      }
      bool = false;
    }
    label36:
    do
    {
      return bool;
      localObject = com.facebook.internal.a.a((UUID)localObject, paramInt);
      break;
      com.facebook.internal.q.a(((com.facebook.internal.a)localObject).a);
    } while (paramE == null);
    FacebookException localFacebookException = com.facebook.internal.r.a(com.facebook.internal.r.e(paramIntent));
    if (localFacebookException != null)
    {
      if ((localFacebookException instanceof FacebookOperationCanceledException))
      {
        paramE.a((com.facebook.internal.a)localObject);
        return true;
      }
      paramE.a((com.facebook.internal.a)localObject, localFacebookException);
      return true;
    }
    paramE.a((com.facebook.internal.a)localObject, com.facebook.internal.r.c(paramIntent));
    return true;
  }
  
  public static boolean a(int paramInt, Bitmap paramBitmap)
  {
    if ((paramInt == 0) || (paramBitmap == null) || (paramBitmap.isRecycled())) {
      return false;
    }
    GLES20.glBindTexture(3553, paramInt);
    GLES20.glTexParameteri(3553, 10241, 9729);
    GLES20.glTexParameteri(3553, 10240, 9729);
    GLES20.glTexParameterf(3553, 10242, 10497.0F);
    GLES20.glTexParameterf(3553, 10243, 10497.0F);
    GLUtils.texImage2D(3553, 0, paramBitmap, 0);
    return true;
  }
  
  public static boolean a(int paramInt, f.e paramE)
  {
    boolean bool2 = true;
    if (paramE == null) {
      return false;
    }
    boolean bool1;
    if ((paramInt == -1) || (paramE.q == -1)) {
      bool1 = false;
    }
    for (;;)
    {
      return bool1;
      if (paramInt == 3)
      {
        bool1 = bool2;
        if (paramE.q > 0) {}
      }
      else if (paramInt == 0)
      {
        bool1 = bool2;
        if (paramE.h != 2)
        {
          bool1 = bool2;
          if (paramE.h == 1) {}
        }
      }
      else
      {
        do
        {
          do
          {
            bool1 = false;
            break;
            bool1 = bool2;
            if (paramInt == paramE.h) {
              break;
            }
          } while (paramInt != 4);
          bool1 = bool2;
          if (paramE.h == 1) {
            break;
          }
        } while ((paramE.h != 2) || (paramE.j == 65535));
        bool1 = bool2;
      }
    }
  }
  
  public static boolean a(int paramInt, com.cleanmaster.security.timewall.core.d paramD, boolean paramBoolean)
  {
    boolean bool4 = true;
    boolean bool2 = false;
    boolean bool3 = false;
    boolean bool5 = false;
    boolean bool1;
    if ((paramInt > 0) && (paramInt <= 400))
    {
      bool1 = true;
      if (!bool1) {
        return bool1;
      }
      switch (paramInt)
      {
      default: 
        paramBoolean = false;
      }
    }
    label247:
    label263:
    label301:
    label321:
    label337:
    label357:
    label373:
    label393:
    label395:
    label438:
    label440:
    label483:
    label485:
    label499:
    do
    {
      do
      {
        do
        {
          do
          {
            do
            {
              do
              {
                do
                {
                  do
                  {
                    do
                    {
                      do
                      {
                        do
                        {
                          do
                          {
                            return paramBoolean;
                            bool1 = false;
                            break;
                            if (paramD == null) {
                              break label247;
                            }
                            paramBoolean = bool4;
                          } while ((paramD instanceof com.cleanmaster.security.timewall.a.g));
                          return false;
                          if (paramD == null) {
                            break label263;
                          }
                          paramBoolean = bool4;
                        } while ((paramD instanceof com.cleanmaster.security.timewall.a.a));
                        return false;
                        if (paramD != null)
                        {
                          paramBoolean = bool5;
                          if (!(paramD instanceof com.cleanmaster.security.timewall.a.b)) {}
                        }
                        else
                        {
                          paramBoolean = true;
                        }
                        return paramBoolean;
                        if (!paramBoolean) {
                          return bool1;
                        }
                        if (paramD == null) {
                          break label301;
                        }
                        paramBoolean = bool4;
                      } while ((paramD instanceof com.cleanmaster.security.timewall.a.e));
                      return false;
                      if (!paramBoolean) {
                        return bool1;
                      }
                      if (paramD == null) {
                        break label321;
                      }
                      paramBoolean = bool4;
                    } while ((paramD instanceof com.cleanmaster.security.timewall.a.c));
                    return false;
                    if (paramD == null) {
                      break label337;
                    }
                    paramBoolean = bool4;
                  } while ((paramD instanceof com.cleanmaster.security.timewall.a.a));
                  return false;
                  if (!paramBoolean) {
                    return bool1;
                  }
                  if (paramD == null) {
                    break label357;
                  }
                  paramBoolean = bool4;
                } while ((paramD instanceof com.cleanmaster.security.timewall.a.i));
                return false;
                if (paramD == null) {
                  break label373;
                }
                paramBoolean = bool4;
              } while ((paramD instanceof com.cleanmaster.security.timewall.a.d));
              return false;
              if (!paramBoolean) {
                break label395;
              }
              if (paramD == null) {
                break label393;
              }
              paramBoolean = bool4;
            } while ((paramD instanceof com.cleanmaster.security.timewall.a.i));
            return false;
            if (paramD != null)
            {
              paramBoolean = bool2;
              if (paramD != null)
              {
                paramBoolean = bool2;
                if (!(paramD instanceof com.cleanmaster.security.timewall.a.a)) {}
              }
            }
            else
            {
              paramBoolean = true;
            }
            return paramBoolean;
            if (!paramBoolean) {
              break label440;
            }
            if (paramD == null) {
              break label438;
            }
            paramBoolean = bool4;
          } while ((paramD instanceof com.cleanmaster.security.timewall.a.i));
          return false;
          if (paramD != null)
          {
            paramBoolean = bool3;
            if (paramD != null)
            {
              paramBoolean = bool3;
              if (!(paramD instanceof com.cleanmaster.security.timewall.a.d)) {}
            }
          }
          else
          {
            paramBoolean = true;
          }
          return paramBoolean;
          if (!paramBoolean) {
            break label485;
          }
          if (paramD == null) {
            break label483;
          }
          paramBoolean = bool4;
        } while ((paramD instanceof com.cleanmaster.security.timewall.a.h));
        return false;
        if (paramD == null) {
          break label499;
        }
        paramBoolean = bool4;
      } while ((paramD instanceof com.cleanmaster.security.timewall.a.g));
      return false;
      if (!paramBoolean) {
        return bool1;
      }
      if (paramD == null) {
        break label519;
      }
      paramBoolean = bool4;
    } while ((paramD instanceof com.cleanmaster.security.timewall.a.h));
    label519:
    return false;
    return bool1;
  }
  
  public static boolean a(int paramInt, String paramString1, String paramString2)
  {
    boolean bool;
    if (paramString1.contains("-"))
    {
      SimpleDateFormat localSimpleDateFormat = new SimpleDateFormat("yyyy-MM-dd-HH");
      if (2 == paramInt) {
        localSimpleDateFormat.setTimeZone(TimeZone.getTimeZone("GMT"));
      }
      if ((!TextUtils.isEmpty(paramString1)) && (!TextUtils.isEmpty(paramString2))) {
        try
        {
          paramString1 = localSimpleDateFormat.parse(paramString1);
          paramString2 = localSimpleDateFormat.parse(paramString2);
          new StringBuilder("1. startData=").append(paramString1).append(" endDate=").append(paramString2).append(" now=").append(new Date());
          if (paramString2.before(paramString1)) {
            return false;
          }
          if (!paramString1.before(new Date())) {
            break label288;
          }
          bool = paramString2.after(new Date());
          if (!bool) {
            break label288;
          }
          return true;
        }
        catch (ParseException paramString1)
        {
          paramString1.printStackTrace();
          return false;
        }
      }
    }
    else if ((!TextUtils.isEmpty(paramString1)) && (!TextUtils.isEmpty(paramString2)))
    {
      try
      {
        paramString1 = new Date(Long.parseLong(paramString1) * 1000L);
        paramString2 = new Date(Long.parseLong(paramString2) * 1000L);
        new StringBuilder("2. startData=").append(paramString1).append(" endDate=").append(paramString2).append(" now=").append(new Date());
        if ((!paramString2.before(paramString1)) && (paramString1.before(new Date())))
        {
          bool = paramString2.after(new Date());
          if (bool) {
            return true;
          }
        }
      }
      catch (Exception paramString1)
      {
        paramString1.printStackTrace();
      }
    }
    label288:
    return false;
  }
  
  public static boolean a(int paramInt, String paramString1, String paramString2, boolean paramBoolean)
  {
    ICloudConfigGetter localICloudConfigGetter = (ICloudConfigGetter)com.cleanmaster.base.ipc.c.a().a(com.cleanmaster.base.ipc.b.e);
    boolean bool = paramBoolean;
    if (localICloudConfigGetter != null) {}
    try
    {
      bool = localICloudConfigGetter.a(paramInt, paramString1, paramString2, paramBoolean);
      return bool;
    }
    catch (RemoteException paramString1)
    {
      paramString1.printStackTrace();
    }
    return paramBoolean;
  }
  
  private static boolean a(int paramInt, String paramString, Collection<String> paramCollection1, Collection<String> paramCollection2, com.cleanmaster.cleancloud.core.residual.i paramI)
  {
    boolean bool2 = true;
    boolean bool1;
    if ((paramCollection1 == null) || (paramCollection1.isEmpty())) {
      bool1 = false;
    }
    Object localObject1;
    Object localObject2;
    do
    {
      return bool1;
      localObject1 = null;
      localObject2 = paramCollection1.iterator();
      int i1 = 0;
      paramCollection1 = (Collection<String>)localObject1;
      while (((Iterator)localObject2).hasNext())
      {
        String str = (String)((Iterator)localObject2).next();
        if (str.compareTo(".") == 0)
        {
          i1 = 1;
        }
        else
        {
          localObject1 = paramCollection1;
          if (paramCollection1 == null) {
            localObject1 = new TreeSet();
          }
          ((TreeSet)localObject1).add(str);
          paramCollection1 = (Collection<String>)localObject1;
        }
      }
      localObject1 = new com.cleanmaster.cleancloud.core.residual.h();
      if (i1 != 0) {
        a(new File(paramString), paramInt, (com.cleanmaster.cleancloud.core.residual.h)localObject1, paramCollection2, paramI);
      }
      bool1 = bool2;
    } while (paramCollection1 == null);
    paramCollection1 = paramCollection1.iterator();
    for (;;)
    {
      bool1 = bool2;
      if (!paramCollection1.hasNext()) {
        break;
      }
      localObject2 = (String)paramCollection1.next();
      a(new File(paramString + File.separator + (String)localObject2), paramInt, (com.cleanmaster.cleancloud.core.residual.h)localObject1, paramCollection2, paramI);
    }
  }
  
  public static boolean a(long paramLong1, long paramLong2, int paramInt)
  {
    if ((paramLong1 <= 0L) || (paramLong2 < 0L)) {
      return false;
    }
    long l2 = 2147483648L;
    long l1 = l2;
    if (1 == paramInt)
    {
      l1 = l2;
      if (!com.cleanmaster.base.util.e.c.a) {
        l1 = 1073741824L;
      }
    }
    paramInt = a(paramLong1, paramLong2);
    if (-1 == paramInt) {
      return false;
    }
    return (paramInt >= 85) && (paramLong2 < l1);
  }
  
  public static boolean a(long paramLong1, long paramLong2, int paramInt1, int paramInt2)
  {
    if (paramLong2 <= android.support.v4.app.b.a("space_ui_setting", "space_notification_remind_size", 500) << 10 << 10) {
      switch (paramInt2)
      {
      case 0: 
      default: 
        i1 = 85;
        if ((paramLong1 <= 0L) || (paramLong2 <= 0L)) {
          i1 = 1;
        }
        break;
      }
    }
    long l1;
    int i2;
    for (;;)
    {
      if (i1 != 0) {
        break label152;
      }
      return false;
      i1 = 90;
      break;
      i1 = 95;
      break;
      i1 = 85;
      break;
      l1 = paramLong1 - paramLong2;
      i2 = 0;
      if (l1 >= 0L) {
        i2 = (int)(l1 * 100L / paramLong1);
      }
      if (i2 >= i1) {
        i1 = 1;
      } else {
        i1 = 0;
      }
    }
    label152:
    if ((paramInt1 == 1) && (paramInt2 == 2)) {
      return false;
    }
    if ((paramLong2 < 0L) || (paramLong1 <= 0L)) {
      return false;
    }
    int i1 = (int)(100L * paramLong2 / paramLong1);
    Context localContext = com.keniu.security.d.a().getApplicationContext();
    String str3 = "";
    String str2 = "";
    String str1 = "";
    if (i1 > 0)
    {
      l1 = i1;
      if (paramInt2 != 2) {
        break label681;
      }
      str3 = localContext.getString(2131300602, new Object[] { l1 + "%" });
      str2 = localContext.getString(2131297886, new Object[] { l1 + "%" });
      str1 = localContext.getString(2131300600);
    }
    for (;;)
    {
      Object localObject = new Intent(localContext, JunkNotificationReceiver.class);
      ((Intent)localObject).putExtra("extra_from", 1);
      ((Intent)localObject).putExtra("extra_notifyid", 1794);
      ((Intent)localObject).putExtra("notification_trigger_type", paramInt2);
      ((Intent)localObject).putExtra("notification_insufficient_type", paramInt1);
      ((Intent)localObject).putExtra("notification_avaliable", paramLong2 / 1048576L);
      ((Intent)localObject).putExtra("notification_total", paramLong1 / 1048576L);
      localObject = PendingIntent.getBroadcast(localContext, 0, (Intent)localObject, 1073741824);
      Intent localIntent = SpaceManagerActivity.a(localContext, 3);
      localIntent.putExtra("notification_trigger_type", paramInt2);
      localIntent.putExtra("notification_insufficient_type", paramInt1);
      localIntent.putExtra("notification_avaliable", paramLong2 / 1048576L);
      localIntent.putExtra("notification_total", paramLong1 / 1048576L);
      NotificationSetting localNotificationSetting = new NotificationSetting();
      localNotificationSetting.a = 1794;
      localNotificationSetting.f = 4;
      com.cleanmaster.notification.normal.f localF = new com.cleanmaster.notification.normal.f();
      localF.b = Html.fromHtml(str3);
      localF.c = Html.fromHtml(str2);
      localF.d = Html.fromHtml(str1);
      localF.e = 2;
      localF.q = localIntent;
      localF.u = 256;
      localF.t = ((PendingIntent)localObject);
      if (!com.cleanmaster.notification.e.a().c(localNotificationSetting, localF)) {
        break label1303;
      }
      com.cleanmaster.configmanager.d.a(localContext).b("InsufficientStorageNotifyTime", Long.valueOf(System.currentTimeMillis()).longValue());
      i2 = com.cleanmaster.e.b.c();
      new com.cleanmaster.junk.report.av((byte)paramInt1, (byte)0, (int)paramLong2 / 1048576, (int)paramLong1 / 1048576, (byte)paramInt2, (byte)i2).report();
      com.cleanmaster.configmanager.d.a(localContext).b("priorityInsufficientStorageNotify", paramInt2);
      if (100 - i1 >= 88) {
        com.cleanmaster.configmanager.d.a(localContext).b("duInsufficientStorageNotify", false);
      }
      com.cleanmaster.configmanager.d.a(localContext).a(1);
      return true;
      l1 = 1L;
      break;
      label681:
      if (paramInt2 == 3)
      {
        str3 = localContext.getString(2131300601, new Object[] { l1 + "%" });
        str2 = localContext.getString(2131297886, new Object[] { l1 + "%" });
        str1 = localContext.getString(2131300599);
      }
      else
      {
        switch (paramInt1)
        {
        default: 
          break;
        case 1: 
          str3 = android.support.v4.app.b.a("junk_notify_storage_copy", "sys_storage_not_enough_ticker", localContext.getString(2131300713), true, new Object[] { l1 + "%" });
          str2 = android.support.v4.app.b.a("junk_notify_storage_copy", "sys_storage_not_enough_title", localContext.getString(2131300714), true, new Object[] { l1 + "%" });
          str1 = android.support.v4.app.b.a("junk_notify_storage_copy", "sys_storage_not_enough_content", localContext.getString(2131300712), true, new Object[0]);
          break;
        case 3: 
          str3 = android.support.v4.app.b.a("junk_notify_storage_copy", "device_storage_not_enough_ticker", localContext.getString(2131297885), true, new Object[] { l1 + "%" });
          str2 = android.support.v4.app.b.a("junk_notify_storage_copy", "device_storage_not_enough_title", localContext.getString(2131297886), true, new Object[] { l1 + "%" });
          str1 = android.support.v4.app.b.a("junk_notify_storage_copy", "sd_storage_not_enough_content", localContext.getString(2131299841), true, new Object[0]);
          break;
        case 2: 
          str3 = android.support.v4.app.b.a("junk_notify_storage_copy", "internal_storage_not_enough_ticker", localContext.getString(2131298371), true, new Object[] { l1 + "%" });
          str2 = android.support.v4.app.b.a("junk_notify_storage_copy", "internal_storage_not_enough_title", localContext.getString(2131298372), true, new Object[] { l1 + "%" });
          str1 = android.support.v4.app.b.a("junk_notify_storage_copy", "sd_storage_not_enough_content", localContext.getString(2131299841), true, new Object[0]);
          break;
        case 4: 
          str3 = android.support.v4.app.b.a("junk_notify_storage_copy", "sd_storage_not_enough_ticker", localContext.getString(2131299842), true, new Object[] { l1 + "%" });
          str2 = android.support.v4.app.b.a("junk_notify_storage_copy", "sd_storage_not_enough_title", localContext.getString(2131299843), true, new Object[] { l1 + "%" });
          str1 = android.support.v4.app.b.a("junk_notify_storage_copy", "sd_storage_not_enough_content", localContext.getString(2131299841), true, new Object[0]);
        }
      }
    }
    label1303:
    return false;
  }
  
  public static boolean a(Context paramContext)
  {
    if (paramContext == null) {
      return false;
    }
    paramContext = (ConnectivityManager)paramContext.getSystemService("connectivity");
    if (paramContext == null) {
      return false;
    }
    try
    {
      Object localObject = paramContext.getNetworkInfo(0);
      if (localObject != null)
      {
        localObject = ((NetworkInfo)localObject).getState();
        if ((localObject == NetworkInfo.State.CONNECTED) || (localObject == NetworkInfo.State.CONNECTING)) {
          break label93;
        }
      }
      paramContext = paramContext.getNetworkInfo(1);
      if (paramContext != null)
      {
        paramContext = paramContext.getState();
        if (paramContext != NetworkInfo.State.CONNECTED)
        {
          localObject = NetworkInfo.State.CONNECTING;
          if (paramContext != localObject) {}
        }
        else
        {
          return true;
        }
      }
    }
    catch (Throwable paramContext)
    {
      return true;
    }
    return false;
    label93:
    return true;
  }
  
  public static boolean a(Context paramContext, View paramView, int paramInt)
  {
    if (paramView == null) {}
    for (;;)
    {
      return false;
      if ((paramView.getParent() != null) && (paramView.getVisibility() == 0) && ((Build.VERSION.SDK_INT < 11) || (paramView.getAlpha() >= 0.9F)))
      {
        int i2 = paramView.getWidth();
        int i1 = paramView.getHeight();
        int[] arrayOfInt = new int[2];
        try
        {
          paramView.getLocationOnScreen(arrayOfInt);
          paramView = paramContext.getResources().getDisplayMetrics();
          if ((arrayOfInt[0] >= 0) && (paramView.widthPixels - arrayOfInt[0] >= i2))
          {
            paramInt = (int)(i1 * (100.0D - paramInt) / 100.0D);
            if (((arrayOfInt[1] >= 0) || (Math.abs(arrayOfInt[1]) <= paramInt)) && (i1 + arrayOfInt[1] - paramView.heightPixels <= paramInt))
            {
              boolean bool = aK(paramContext);
              return bool;
            }
          }
        }
        catch (NullPointerException paramContext) {}
      }
    }
    return false;
  }
  
  public static boolean a(Context paramContext, ViewFileEntry paramViewFileEntry)
  {
    if ((paramContext == null) || (paramViewFileEntry == null) || (TextUtils.isEmpty(paramViewFileEntry.realPath))) {
      return false;
    }
    Object localObject = new File(paramViewFileEntry.realPath);
    while (!((File)localObject).exists())
    {
      File localFile = ((File)localObject).getParentFile();
      localObject = localFile;
      if (localFile == null) {
        return false;
      }
    }
    new Intent("android.intent.action.GET_CONTENT").setDataAndType(Uri.fromFile((File)localObject), "file/*");
    FileManagerTabActivity.a(paramContext, paramViewFileEntry);
    if ((paramContext instanceof JunkManagerActivity)) {
      com.cleanmaster.junk.ui.fragment.a.a(((JunkManagerActivity)paramContext).d(), com.cleanmaster.junk.ui.fragment.a.f);
    }
    return true;
  }
  
  public static boolean a(Context paramContext, com.cleanmaster.security.scan.ui.dialog.d.a paramA, int paramInt)
  {
    if (paramContext == null) {}
    com.cleanmaster.configmanager.h localH;
    do
    {
      return false;
      localH = com.cleanmaster.configmanager.h.a(paramContext);
    } while (localH.a(paramInt));
    switch (paramInt)
    {
    case 3: 
    default: 
      return false;
    case 1: 
      new com.cleanmaster.security.scan.ui.dialog.d(paramContext).a(paramContext.getString(2131299938), paramContext.getString(2131299937), paramContext.getString(2131299932), paramContext.getString(2131299918), false, paramA);
      paramContext = new com.cleanmaster.security.scan.ui.i();
      paramContext.a(1);
      paramContext.a();
      paramContext.report();
      localH.b(1);
      return true;
    case 2: 
      new com.cleanmaster.security.scan.ui.dialog.d(paramContext).a(paramContext.getString(2131299942), paramContext.getString(2131299939, new Object[] { paramContext.getString(2131299941) }), paramContext.getString(2131299922), paramContext.getString(2131299918), false, paramA);
      paramContext = new com.cleanmaster.security.scan.ui.i();
      paramContext.a(2);
      paramContext.a();
      paramContext.report();
      localH.b(6);
      return true;
    }
    new com.cleanmaster.security.scan.ui.dialog.d(paramContext).a(paramContext.getString(2131299942), paramContext.getString(2131299939, new Object[] { paramContext.getString(2131299940) }), paramContext.getString(2131299922), paramContext.getString(2131299918), false, paramA);
    paramContext = new com.cleanmaster.security.scan.ui.i();
    paramContext.a(3);
    paramContext.a();
    paramContext.report();
    localH.b(6);
    return true;
  }
  
  private static boolean a(Context paramContext, com.cleanmaster.ui.app.market.a paramA)
  {
    if (paramA.d.startsWith("ksm.subject.")) {}
    for (paramA = paramA.d.replace("ksm.subject.", "");; paramA = paramA.d) {
      return com.cleanmaster.base.util.system.m.a(paramContext, paramA);
    }
  }
  
  public static boolean a(Context paramContext, com.cleanmaster.ui.app.market.a paramA, int paramInt, boolean paramBoolean)
  {
    int i1;
    boolean bool;
    com.cleanmaster.ui.app.market.a.a localA;
    int i2;
    if ((1 == paramA.w) || (com.cleanmaster.base.util.system.m.a(paramContext, paramA.d)))
    {
      i1 = 1;
      bool = a(paramA, paramInt);
      localA = paramA.s();
      if ((1050 != paramInt) || (i1 != 0)) {
        break label211;
      }
      if ((!com.cleanmaster.configmanager.d.a(paramContext).a(String.valueOf(paramA.I), false)) || (1 == localA.c)) {
        break label183;
      }
      i1 = 0;
      i2 = 1;
    }
    for (;;)
    {
      label80:
      int i3 = i1;
      if (1049 == paramInt)
      {
        i3 = i1;
        if (i2 == 0)
        {
          if ((!com.cleanmaster.configmanager.d.a(paramContext).a(String.valueOf(paramA.I), false)) || (1 == localA.c)) {
            i1 = 1;
          }
          i3 = i1;
          if (paramBoolean)
          {
            paramBoolean = false;
            i2 = 1;
          }
        }
      }
      for (;;)
      {
        if (50000 == paramInt) {}
        for (bool = paramA.i();; bool = false)
        {
          if ((!paramBoolean) && (i1 == 0) && (!bool) && (i2 != 0))
          {
            return true;
            i1 = 0;
            break;
            label183:
            i2 = i1;
            i1 = 1;
            break label80;
          }
          return false;
        }
        paramBoolean = bool;
        i1 = i3;
      }
      label211:
      i2 = i1;
      i1 = 0;
    }
  }
  
  private static boolean a(Context paramContext, com.cleanmaster.ui.resultpage.b.a paramA)
  {
    if ((paramA == null) || (paramContext == null)) {}
    while ((com.cleanmaster.ui.resultpage.ctrl.i.a(paramContext).b(paramA.d)) || (com.cleanmaster.ui.resultpage.ctrl.i.a(paramContext).a(paramA.d) > 2)) {
      return true;
    }
    return false;
  }
  
  public static boolean a(Context paramContext, com.in2wow.sdk.model.a.c paramC)
  {
    paramC = paramC.entrySet().iterator();
    com.in2wow.sdk.model.a.a localA;
    do
    {
      if (!paramC.hasNext()) {
        return true;
      }
      localA = (com.in2wow.sdk.model.a.a)((Map.Entry)paramC.next()).getValue();
    } while ((!localA.b()) || (b(paramContext, localA) == 4));
    return false;
  }
  
  public static boolean a(Context paramContext, String paramString1, String paramString2)
  {
    try
    {
      i1 = paramContext.getPackageManager().getComponentEnabledSetting(new ComponentName(paramString1, paramString2));
      switch (i1)
      {
      case 2: 
      default: 
        return false;
      }
    }
    catch (IllegalArgumentException paramContext)
    {
      for (;;)
      {
        paramContext.printStackTrace();
        int i1 = 0;
      }
    }
    return true;
  }
  
  private static boolean a(Context paramContext, List<CityData> paramList, boolean paramBoolean)
  {
    int i2 = paramList.size();
    int i1;
    if (i2 > 5) {
      i1 = i2 - 1;
    }
    for (;;)
    {
      if (i1 >= 0)
      {
        if (((CityData)paramList.get(i1)).d != 1) {
          paramList.remove(i1);
        }
      }
      else
      {
        if ((!paramBoolean) && (i2 < 5)) {
          break;
        }
        return false;
      }
      i1 -= 1;
    }
    ArrayList localArrayList = new ArrayList();
    CityData localCityData = new CityData();
    localCityData.d = 2;
    localCityData.c = paramContext.getString(2131300360);
    localArrayList.add(localCityData);
    if (localArrayList.size() > 0) {
      paramList.addAll(localArrayList);
    }
    return true;
  }
  
  public static boolean a(Context paramContext, int[] paramArrayOfInt1, int[] paramArrayOfInt2)
  {
    if ((paramArrayOfInt1 == null) || (paramArrayOfInt2 == null) || (paramArrayOfInt1.length != paramArrayOfInt2.length)) {
      return false;
    }
    GLES20.glGenTextures(paramArrayOfInt2.length, paramArrayOfInt2, 0);
    int i1 = 0;
    Object localObject;
    if (i1 < paramArrayOfInt1.length)
    {
      localObject = new BitmapFactory.Options();
      ((BitmapFactory.Options)localObject).inScaled = false;
      localObject = BitmapFactory.decodeResource(paramContext.getResources(), paramArrayOfInt1[i1], (BitmapFactory.Options)localObject);
      if ((localObject == null) || (((Bitmap)localObject).isRecycled()))
      {
        paramArrayOfInt2[i1] = 0;
        i1 = 1;
      }
    }
    for (;;)
    {
      if (i1 != 0) {
        GLES20.glDeleteTextures(paramArrayOfInt2.length, paramArrayOfInt2, 0);
      }
      return true;
      if (paramArrayOfInt2[i1] == 0)
      {
        ((Bitmap)localObject).recycle();
        i1 = 0;
      }
      else
      {
        GLES20.glBindTexture(3553, paramArrayOfInt2[i1]);
        GLES20.glTexParameteri(3553, 10241, 9729);
        GLES20.glTexParameteri(3553, 10240, 9729);
        GLES20.glTexParameterf(3553, 10242, 10497.0F);
        GLES20.glTexParameterf(3553, 10243, 10497.0F);
        GLUtils.texImage2D(3553, 0, (Bitmap)localObject, 0);
        ((Bitmap)localObject).recycle();
        i1 += 1;
        break;
        i1 = 0;
      }
    }
  }
  
  public static boolean a(Intent paramIntent)
  {
    try
    {
      paramIntent.getStringArrayExtra("SecurityCheck");
      return true;
    }
    catch (Exception paramIntent) {}
    return false;
  }
  
  public static boolean a(Intent paramIntent, int paramInt, String paramString1, String paramString2, Uri paramUri)
  {
    if (TextUtils.isEmpty(paramString1)) {
      return false;
    }
    Context localContext = com.keniu.security.d.a().getApplicationContext();
    String str = paramString2;
    if (paramString2 == null) {
      str = localContext.getString(2131296531);
    }
    paramString2 = new NotificationSetting();
    paramString2.a = paramInt;
    paramString2.f = 2;
    paramString2.l = true;
    com.cleanmaster.notification.normal.f localF = new com.cleanmaster.notification.normal.f();
    localF.b = paramString1;
    localF.c = str;
    localF.d = paramString1;
    localF.f = paramUri;
    localF.e = 1;
    localF.u = paramInt;
    localF.s = PendingIntent.getBroadcast(localContext, paramInt, paramIntent, 134217728);
    return com.cleanmaster.notification.e.a().c(paramString2, localF);
  }
  
  public static boolean a(PackageManager paramPackageManager, String paramString)
  {
    boolean bool2 = false;
    boolean bool1 = bool2;
    if (paramPackageManager != null)
    {
      bool1 = bool2;
      if (paramString == null) {}
    }
    try
    {
      paramString = paramPackageManager.getPackageInfo(paramString, 64);
      paramPackageManager = paramPackageManager.getPackageInfo("android", 64);
      bool1 = bool2;
      if (paramString != null)
      {
        bool1 = bool2;
        if (paramString.signatures != null)
        {
          bool1 = bool2;
          if (paramString.signatures.length > 0)
          {
            bool1 = bool2;
            if (paramPackageManager != null)
            {
              bool1 = bool2;
              if (paramPackageManager.signatures != null)
              {
                bool1 = bool2;
                if (paramPackageManager.signatures.length > 0)
                {
                  boolean bool3 = paramPackageManager.signatures[0].equals(paramString.signatures[0]);
                  bool1 = bool2;
                  if (!bool3) {
                    bool1 = true;
                  }
                }
              }
            }
          }
        }
      }
      return bool1;
    }
    catch (Exception paramPackageManager) {}
    return false;
  }
  
  private static boolean a(AssetManager paramAssetManager, FileOutputStream paramFileOutputStream, String paramString)
  {
    try
    {
      byte[] arrayOfByte = new byte['က'];
      int i1 = 0;
      boolean bool1 = false;
      boolean bool2;
      for (;;)
      {
        bool2 = bool1;
        if (i1 < 99) {
          try
          {
            InputStream localInputStream = paramAssetManager.open(paramString + ".zip_" + String.format(Locale.US, "%02d", new Object[] { Integer.valueOf(i1) }));
            if (localInputStream != null)
            {
              for (;;)
              {
                int i2 = localInputStream.read(arrayOfByte);
                if (i2 <= 0) {
                  break;
                }
                paramFileOutputStream.write(arrayOfByte, 0, i2);
              }
              localInputStream.close();
              bool1 = true;
            }
            i1 += 1;
          }
          catch (Exception paramAssetManager)
          {
            return bool1;
          }
        }
      }
      return bool2;
    }
    catch (Exception paramAssetManager)
    {
      bool2 = false;
    }
  }
  
  private static boolean a(AssetManager paramAssetManager, String paramString)
  {
    try
    {
      paramAssetManager.open(paramString + ".zip_00").close();
      return true;
    }
    catch (Exception paramAssetManager) {}
    return false;
  }
  
  public static boolean a(Resources paramResources)
  {
    if (paramResources == null) {}
    label81:
    label86:
    label89:
    for (;;)
    {
      return false;
      int i1;
      if ((paramResources.getConfiguration().screenLayout & 0xF) > 3)
      {
        i1 = 1;
        if ((!aa(11)) || (i1 == 0))
        {
          paramResources = paramResources.getConfiguration();
          if (!aa(13)) {
            break label86;
          }
          if (((paramResources.screenLayout & 0xF) > 3) || (paramResources.smallestScreenWidthDp < 600)) {
            break label81;
          }
          i1 = 1;
        }
      }
      for (;;)
      {
        if (i1 == 0) {
          break label89;
        }
        return true;
        i1 = 0;
        break;
        i1 = 0;
        continue;
        i1 = 0;
      }
    }
  }
  
  /* Error */
  private static boolean a(Bitmap paramBitmap, File paramFile)
  {
    // Byte code:
    //   0: getstatic 7293	com/cleanmaster/applocklib/bridge/b:b	Z
    //   3: ifeq +24 -> 27
    //   6: new 149	java/lang/StringBuilder
    //   9: dup
    //   10: ldc_w 10520
    //   13: invokespecial 260	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   16: aload_1
    //   17: invokevirtual 754	java/io/File:getAbsolutePath	()Ljava/lang/String;
    //   20: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23: pop
    //   24: invokestatic 7294	com/cleanmaster/applocklib/bridge/b:a	()V
    //   27: iconst_0
    //   28: istore_2
    //   29: new 5382	java/io/FileOutputStream
    //   32: dup
    //   33: aload_1
    //   34: invokevirtual 754	java/io/File:getAbsolutePath	()Ljava/lang/String;
    //   37: invokespecial 7639	java/io/FileOutputStream:<init>	(Ljava/lang/String;)V
    //   40: astore 4
    //   42: aload 4
    //   44: astore_1
    //   45: aload_0
    //   46: getstatic 10526	android/graphics/Bitmap$CompressFormat:JPEG	Landroid/graphics/Bitmap$CompressFormat;
    //   49: bipush 80
    //   51: aload 4
    //   53: invokevirtual 10530	android/graphics/Bitmap:compress	(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z
    //   56: istore_3
    //   57: iload_3
    //   58: istore_2
    //   59: aload 4
    //   61: invokevirtual 10531	java/io/FileOutputStream:flush	()V
    //   64: aload 4
    //   66: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   69: iload_2
    //   70: ireturn
    //   71: astore_0
    //   72: aload_0
    //   73: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   76: iload_2
    //   77: ireturn
    //   78: astore 5
    //   80: aconst_null
    //   81: astore_0
    //   82: aload_0
    //   83: astore_1
    //   84: aload 5
    //   86: invokevirtual 576	java/lang/Exception:printStackTrace	()V
    //   89: aload_0
    //   90: ifnull -21 -> 69
    //   93: aload_0
    //   94: invokevirtual 10531	java/io/FileOutputStream:flush	()V
    //   97: aload_0
    //   98: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   101: iconst_0
    //   102: ireturn
    //   103: astore_0
    //   104: aload_0
    //   105: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   108: iconst_0
    //   109: ireturn
    //   110: astore_0
    //   111: aconst_null
    //   112: astore_1
    //   113: aload_1
    //   114: ifnull +11 -> 125
    //   117: aload_1
    //   118: invokevirtual 10531	java/io/FileOutputStream:flush	()V
    //   121: aload_1
    //   122: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   125: aload_0
    //   126: athrow
    //   127: astore_1
    //   128: aload_1
    //   129: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   132: goto -7 -> 125
    //   135: astore_0
    //   136: goto -23 -> 113
    //   139: astore 5
    //   141: aload 4
    //   143: astore_0
    //   144: goto -62 -> 82
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	147	0	paramBitmap	Bitmap
    //   0	147	1	paramFile	File
    //   28	49	2	bool1	boolean
    //   56	2	3	bool2	boolean
    //   40	102	4	localFileOutputStream	FileOutputStream
    //   78	7	5	localException1	Exception
    //   139	1	5	localException2	Exception
    // Exception table:
    //   from	to	target	type
    //   59	69	71	java/io/IOException
    //   29	42	78	java/lang/Exception
    //   93	101	103	java/io/IOException
    //   29	42	110	finally
    //   117	125	127	java/io/IOException
    //   45	57	135	finally
    //   84	89	135	finally
    //   45	57	139	java/lang/Exception
  }
  
  private static boolean a(Transition paramTransition)
  {
    return (!r(paramTransition.getTargetIds())) || (!r(paramTransition.getTargetNames())) || (!r(paramTransition.getTargetTypes()));
  }
  
  public static boolean a(ViewParent paramViewParent, View paramView, float paramFloat1, float paramFloat2)
  {
    try
    {
      boolean bool = paramViewParent.onNestedPreFling(paramView, paramFloat1, paramFloat2);
      return bool;
    }
    catch (AbstractMethodError paramView)
    {
      Log.e("ViewParentCompat", "ViewParent " + paramViewParent + " does not implement interface method onNestedPreFling", paramView);
    }
    return false;
  }
  
  public static boolean a(ViewParent paramViewParent, View paramView, float paramFloat1, float paramFloat2, boolean paramBoolean)
  {
    try
    {
      paramBoolean = paramViewParent.onNestedFling(paramView, paramFloat1, paramFloat2, paramBoolean);
      return paramBoolean;
    }
    catch (AbstractMethodError paramView)
    {
      Log.e("ViewParentCompat", "ViewParent " + paramViewParent + " does not implement interface method onNestedFling", paramView);
    }
    return false;
  }
  
  public static boolean a(ViewParent paramViewParent, View paramView1, View paramView2, int paramInt)
  {
    try
    {
      boolean bool = paramViewParent.onStartNestedScroll(paramView1, paramView2, paramInt);
      return bool;
    }
    catch (AbstractMethodError paramView1)
    {
      Log.e("ViewParentCompat", "ViewParent " + paramViewParent + " does not implement interface method onStartNestedScroll", paramView1);
    }
    return false;
  }
  
  private static boolean a(com.cleanmaster.base.util.g.a paramA, int paramInt)
  {
    int i3 = paramA.a;
    int i1 = (paramInt << 1) + 1;
    int i2 = (paramInt << 1) + 2;
    if ((i1 < i3) && (paramA.a(paramInt, i1) < 0)) {}
    for (;;)
    {
      if ((i2 < i3) && (paramA.a(i1, i2) < 0)) {
        i1 = i2;
      }
      for (;;)
      {
        if (i1 != paramInt)
        {
          paramA.b(i1, paramInt);
          paramInt = i1;
          break;
        }
        return true;
      }
      i1 = paramInt;
    }
  }
  
  public static boolean a(com.cleanmaster.boost.abnormal.abnormalnotify.s paramS)
  {
    boolean bool2 = false;
    boolean bool1 = bool2;
    if (paramS.a != null)
    {
      if (paramS.h == null) {
        bool1 = bool2;
      }
    }
    else {
      return bool1;
    }
    Object localObject1 = paramS.a;
    switch (paramS.b)
    {
    default: 
      localObject1 = null;
      paramS.l = ((CharSequence)localObject1);
      aa();
      localObject1 = new NotificationSetting();
      if (paramS.b != 1) {
        break;
      }
    }
    for (int i1 = 514;; i1 = 515)
    {
      ((NotificationSetting)localObject1).a = i1;
      ((NotificationSetting)localObject1).f = 3;
      ((NotificationSetting)localObject1).i = true;
      if (com.cleanmaster.base.e.M()) {
        ((NotificationSetting)localObject1).u = true;
      }
      Object localObject2 = new com.cleanmaster.notification.normal.f();
      ((com.cleanmaster.notification.normal.f)localObject2).b = paramS.i;
      ((com.cleanmaster.notification.normal.f)localObject2).c = paramS.i;
      ((com.cleanmaster.notification.normal.f)localObject2).d = paramS.j;
      ((com.cleanmaster.notification.normal.f)localObject2).e = 2;
      ((com.cleanmaster.notification.normal.f)localObject2).h = 2130839672;
      ((com.cleanmaster.notification.normal.f)localObject2).i = paramS.a.getString(2131297164);
      ((com.cleanmaster.notification.normal.f)localObject2).k = null;
      ((com.cleanmaster.notification.normal.f)localObject2).q = paramS.h;
      ((com.cleanmaster.notification.normal.f)localObject2).j = true;
      if (paramS.k)
      {
        ((NotificationSetting)localObject1).p = true;
        ((NotificationSetting)localObject1).g = 1;
        ((com.cleanmaster.notification.normal.f)localObject2).m = paramS.l;
        ((com.cleanmaster.notification.normal.f)localObject2).l = 2130838165;
        ((com.cleanmaster.notification.normal.f)localObject2).n = 2131297135;
        int i2 = aN();
        if (i2 > 0)
        {
          i1 = i2;
          if (i2 < 120) {}
        }
        else
        {
          i1 = 10;
        }
        ((NotificationSetting)localObject1).s = (i1 * 1000);
      }
      bool2 = com.cleanmaster.notification.e.a().c((NotificationSetting)localObject1, (com.cleanmaster.notification.normal.f)localObject2);
      bool1 = bool2;
      if (!bool2) {
        break;
      }
      LocalService.a(com.keniu.security.d.a(), 14);
      return bool2;
      String str = b(true, false);
      localObject2 = ((Context)localObject1).getString(2131296764);
      localObject1 = null;
      for (;;)
      {
        localObject2 = com.cleanmaster.base.util.g.d.a((String)localObject2, str, new Object[] { localObject1 });
        localObject1 = localObject2;
        if (!TextUtils.isEmpty((CharSequence)localObject2)) {
          break;
        }
        localObject1 = null;
        break;
        if (paramS.d == 1) {}
        for (bool1 = true;; bool1 = false)
        {
          str = b(false, bool1);
          if (paramS.d != 1) {
            break label444;
          }
          if (!TextUtils.isEmpty(paramS.f)) {
            break label422;
          }
          localObject2 = ((Context)localObject1).getString(2131296808);
          localObject1 = null;
          break;
        }
        label422:
        localObject2 = ((Context)localObject1).getString(2131296807);
        localObject1 = D(paramS.f);
        continue;
        label444:
        localObject2 = ((Context)localObject1).getString(2131296806);
        localObject1 = D(String.valueOf(paramS.d));
      }
    }
  }
  
  public static boolean a(com.cleanmaster.boost.boostengine.autostart.a.a paramA, List<String> paramList)
  {
    if (paramA == null) {}
    for (Object localObject2 = null; TextUtils.isEmpty((CharSequence)localObject2); localObject2 = paramA.a) {
      return false;
    }
    Object localObject1 = "";
    HashSet localHashSet = new HashSet();
    Iterator localIterator = paramA.f.values().iterator();
    boolean bool1 = true;
    paramA = (com.cleanmaster.boost.boostengine.autostart.a.a)localObject1;
    while (localIterator.hasNext())
    {
      com.cleanmaster.boost.boostengine.autostart.a.a.b localB = (com.cleanmaster.boost.boostengine.autostart.a.a.b)localIterator.next();
      localObject1 = paramA;
      boolean bool2 = bool1;
      int i1;
      if (localB != null)
      {
        localObject1 = paramA;
        bool2 = bool1;
        if (!TextUtils.isEmpty(localB.a))
        {
          localObject1 = paramA;
          bool2 = bool1;
          if (a(paramList, localB.d))
          {
            localObject1 = localB.a;
            if ((!TextUtils.isEmpty((CharSequence)localObject2)) && (!TextUtils.isEmpty((CharSequence)localObject1))) {
              break label232;
            }
            i1 = 0;
            if (i1 == 0) {
              bool1 = false;
            }
            paramA = paramA + localB.a + ',';
            localObject1 = paramA;
            bool2 = bool1;
            if (localB.d.size() > 0)
            {
              localHashSet.addAll(localB.d);
              bool2 = bool1;
              localObject1 = paramA;
            }
          }
        }
      }
      bool1 = bool2;
      paramA = (com.cleanmaster.boost.boostengine.autostart.a.a)localObject1;
      continue;
      label232:
      localObject1 = new ComponentName((String)localObject2, (String)localObject1);
      if (al()) {
        com.cmcm.rtstub.a.a().a((ComponentName)localObject1, true);
      }
      for (;;)
      {
        i1 = 1;
        break;
        com.cm.root.d.a().a((ComponentName)localObject1, true);
      }
    }
    OpLog.d("AutoStart", "execute enable # pkg:" + (String)localObject2 + "| action:" + d(localHashSet) + "| receiver:" + paramA);
    return bool1;
  }
  
  public static boolean a(com.cleanmaster.boost.boostengine.autostart.a.b paramB, com.cleanmaster.boost.boostengine.autostart.a.a paramA)
  {
    boolean bool2 = false;
    if ((paramB == null) || (paramA == null) || (paramA.j.a)) {}
    while ((!paramB.b) && (!paramB.a(false, true))) {
      return false;
    }
    paramA.j.d = paramB.a(paramA.a, paramA.d);
    paramA.j.e = paramB.b(paramA.a, paramA.d);
    paramA.j.b = paramB.a(paramA.a);
    paramB = paramA.j;
    FreqStartApp localFreqStartApp = paramA.j.b;
    boolean bool1 = bool2;
    if (localFreqStartApp != null)
    {
      bool1 = bool2;
      if (localFreqStartApp.totalCount > 0) {
        bool1 = true;
      }
    }
    paramB.c = bool1;
    paramA.j.a = true;
    return true;
  }
  
  public static boolean a(com.cleanmaster.boost.powerengine.process.clond.ext.l paramL, String paramString)
  {
    return (paramL != null) && (paramL.g) && (paramL.a.equals(paramString));
  }
  
  private static boolean a(com.cleanmaster.cleancloud.core.base.e paramE, String paramString, Collection<String> paramCollection1, Collection<String> paramCollection2)
  {
    if ((paramCollection1 == null) || (paramCollection1.isEmpty())) {
      return false;
    }
    Iterator localIterator = paramCollection1.iterator();
    boolean[] arrayOfBoolean;
    int i1;
    for (;;)
    {
      if (localIterator.hasNext())
      {
        localObject = (String)localIterator.next();
        arrayOfBoolean = new boolean[1];
        if ((TextUtils.isEmpty((CharSequence)localObject)) || (TextUtils.isEmpty(paramString)))
        {
          paramCollection1 = null;
          if (arrayOfBoolean[0] == 0) {
            paramCollection1 = null;
          }
          if (!TextUtils.isEmpty(paramCollection1)) {
            paramCollection2.add(paramCollection1);
          }
        }
        else
        {
          i1 = ((String)localObject).indexOf('+');
          if (-1 == i1)
          {
            paramCollection1 = null;
            label111:
            if (localObject == null) {
              break label291;
            }
          }
        }
      }
    }
    label291:
    for (Object localObject = paramE.a(paramString, (String)localObject, true);; localObject = null)
    {
      if (localObject != null)
      {
        String str = paramString + File.separator;
        localObject = str + (String)localObject;
        if (paramCollection1 != null)
        {
          localObject = (String)localObject + File.separator;
          paramCollection1 = (String)localObject + paramCollection1;
          arrayOfBoolean[0] = new File(paramE.c(paramCollection1)).isDirectory();
          break;
          paramCollection1 = ((String)localObject).substring(0, i1);
          str = ((String)localObject).substring(i1 + 1);
          localObject = paramCollection1;
          paramCollection1 = str;
          break label111;
        }
        arrayOfBoolean[0] = true;
        paramCollection1 = (Collection<String>)localObject;
        break;
        return true;
      }
      paramCollection1 = null;
      break;
    }
  }
  
  public static boolean a(com.cleanmaster.cleancloud.core.falseproc.b paramB)
  {
    boolean bool2 = false;
    boolean bool1 = bool2;
    if (paramB != null)
    {
      bool1 = bool2;
      if (paramB.a > 0) {
        bool1 = true;
      }
    }
    return bool1;
  }
  
  public static boolean a(com.cleanmaster.cleancloud.core.falseproc.q paramQ)
  {
    boolean bool2 = false;
    boolean bool1 = bool2;
    if (paramQ != null)
    {
      bool1 = bool2;
      if (paramQ.b >= 0)
      {
        bool1 = bool2;
        if (paramQ.b >= 0)
        {
          bool1 = bool2;
          if (paramQ.c >= 0) {
            if ((paramQ.b <= 0) && (paramQ.a <= 0))
            {
              bool1 = bool2;
              if (paramQ.c <= 0) {}
            }
            else
            {
              bool1 = true;
            }
          }
        }
      }
    }
    return bool1;
  }
  
  public static boolean a(com.cleanmaster.cleancloud.j.b paramB)
  {
    boolean bool2 = false;
    boolean bool1;
    if (((paramB.n == null) || (paramB.n.isEmpty())) && ((paramB.o == null) || (paramB.o.isEmpty())))
    {
      bool1 = bool2;
      if (paramB.p != null)
      {
        bool1 = bool2;
        if (paramB.p.isEmpty()) {}
      }
    }
    else if ((paramB.a != 2) && (paramB.a != 3))
    {
      bool1 = bool2;
      if (paramB.a != 5) {}
    }
    else
    {
      bool1 = true;
    }
    return bool1;
  }
  
  public static boolean a(BatteryDoctorADItem paramBatteryDoctorADItem)
  {
    int i1 = c("app_mgr", "app_mgr_bd_level_min", 10);
    int i2 = c("app_mgr", "app_mgr_bd_level_max", 80);
    int i3 = paramBatteryDoctorADItem.getPersentage();
    if ((i3 < i1) || (i3 > i2)) {}
    while (com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).a("batterydoctor_ad_ignore_drain", false)) {
      return false;
    }
    return true;
  }
  
  public static boolean a(TimeWallDefine.EVENT_TYPE paramEVENT_TYPE, com.cleanmaster.security.timewall.core.d paramD, long paramLong)
  {
    com.cleanmaster.security.timewall.core.c localC = d(true);
    localC.a(null);
    boolean bool = localC.a(paramEVENT_TYPE, paramD, paramLong);
    localC.a();
    return bool;
  }
  
  public static boolean a(com.cleanmaster.security.timewall.core.d paramD)
  {
    if ((paramD != null) && ((paramD instanceof com.cleanmaster.security.timewall.a.g)))
    {
      paramD = (com.cleanmaster.security.timewall.a.g)paramD;
      return (paramD != null) && (paramD.b > 0) && (paramD.a == 1);
    }
    return false;
  }
  
  public static boolean a(com.cleanmaster.ui.app.market.a paramA, int paramInt)
  {
    boolean bool2 = false;
    paramA = paramA.s();
    boolean bool1;
    if ((1047 != paramInt) && (paramInt != 0))
    {
      bool1 = bool2;
      if (1050 != paramInt) {}
    }
    else
    {
      bool1 = bool2;
      if (1 == paramA.b) {
        bool1 = true;
      }
    }
    if (1049 == paramInt) {
      return true;
    }
    return bool1;
  }
  
  public static boolean a(com.cmcm.b.a.a paramA, boolean paramBoolean)
  {
    paramA = paramA.c();
    if ((paramA == null) || (!(paramA instanceof NativeAd))) {
      return false;
    }
    com.cleanmaster.recommendapps.i localI = new com.cleanmaster.recommendapps.i();
    localI.b = ((NativeAd)paramA);
    if (paramBoolean) {}
    for (paramA = "com.facebook.ad.high";; paramA = "com.facebook.ad")
    {
      a(localI, paramA, "34701", 3000);
      return true;
    }
  }
  
  private static boolean a(ONews paramONews)
  {
    if (paramONews.stick() == 1) {
      return System.currentTimeMillis() / 1000L <= paramONews.stickttl();
    }
    return false;
  }
  
  public static boolean a(WeatherHourlyData paramWeatherHourlyData, WeatherSunPhaseTimeData paramWeatherSunPhaseTimeData)
  {
    int i3;
    int i2;
    int i1;
    int i4;
    if ((paramWeatherHourlyData != null) && (paramWeatherSunPhaseTimeData != null))
    {
      String str = paramWeatherSunPhaseTimeData.a;
      paramWeatherSunPhaseTimeData = paramWeatherSunPhaseTimeData.b;
      i3 = com.cmnow.weather.a.be.a(str);
      i2 = com.cmnow.weather.a.be.a(paramWeatherSunPhaseTimeData);
      i1 = paramWeatherHourlyData.a;
      i4 = 1;
    }
    for (;;)
    {
      if (i4 == 0)
      {
        paramWeatherHourlyData = Calendar.getInstance();
        paramWeatherHourlyData.setTimeInMillis(System.currentTimeMillis());
        i1 = paramWeatherHourlyData.get(11);
      }
      return (i1 <= i2) && (i1 > i3);
      i2 = 22;
      i3 = 6;
      i4 = 0;
      i1 = 0;
    }
  }
  
  public static boolean a(com.facebook.internal.d paramD)
  {
    return c(paramD) != -1;
  }
  
  public static boolean a(com.ijinshan.cleaner.bean.g paramG)
  {
    if (paramG == null) {}
    do
    {
      return false;
      paramG = paramG.k;
    } while ((paramG == null) || ((paramG.flags & 0x1) != 0) || ((paramG.flags & 0x80) != 0));
    return true;
  }
  
  public static boolean a(com.in2wow.sdk.model.c paramC, int paramInt)
  {
    if (!c(paramC)) {}
    do
    {
      return false;
      Set localSet = paramC.g.h;
      paramC = paramC.g.i;
      if (localSet != null) {
        return localSet.contains(Integer.valueOf(paramInt));
      }
      if (paramC == null) {
        break;
      }
    } while (paramC.contains(Integer.valueOf(paramInt)));
    return true;
    return true;
  }
  
  public static boolean a(com.in2wow.sdk.model.c paramC, long paramLong)
  {
    if (!c(paramC)) {}
    label100:
    label115:
    label190:
    label219:
    label273:
    label278:
    label327:
    label330:
    for (;;)
    {
      return false;
      int i2;
      Object localObject;
      int i3;
      int i1;
      int i4;
      if (!paramC.g.e)
      {
        i2 = paramC.g.f;
        localObject = Calendar.getInstance(TimeZone.getTimeZone("GMT"));
        ((Calendar)localObject).setTimeInMillis(paramLong);
        i3 = ((Calendar)localObject).get(7);
        if (((Calendar)localObject).getFirstDayOfWeek() == 1)
        {
          i1 = 1;
          i4 = i3 - i1;
          i3 = ((Calendar)localObject).get(11) + i2;
          if (i3 >= 0) {
            break label190;
          }
          i2 = i4 - 1;
          i1 = i3 + 24;
          if (i2 >= 0) {
            break label219;
          }
          i3 = i2 + 7;
          i4 = i1;
          if (!paramC.e) {
            break label327;
          }
          localObject = paramC.g;
          if (((com.in2wow.sdk.model.c.c)localObject).d != null) {
            break label278;
          }
          if (((com.in2wow.sdk.model.c.c)localObject).c == null) {
            break label327;
          }
          if (((com.in2wow.sdk.model.c.c)localObject).c.charAt(i4) != '1') {
            break label273;
          }
          i1 = 1;
        }
      }
      for (;;)
      {
        if ((i1 == 0) || (paramC.m() > paramLong) || (paramC.n() <= paramLong)) {
          break label330;
        }
        return true;
        i1 = 0;
        break;
        i1 = i3;
        i2 = i4;
        if (i3 < 24) {
          break label100;
        }
        i2 = i4 + 1;
        i1 = i3 - 24;
        break label100;
        i4 = i1;
        i3 = i2;
        if (i2 <= 7) {
          break label115;
        }
        i3 = i2 - 7;
        i4 = i1;
        break label115;
        localObject = new Date(paramLong);
        i4 = ((Date)localObject).getHours();
        i3 = ((Date)localObject).getDay();
        break label115;
        i1 = 0;
        continue;
        if ((i3 < 0) || (i3 >= ((com.in2wow.sdk.model.c.c)localObject).d.length())) {
          i1 = 0;
        } else if ((1 << i4 & ((com.in2wow.sdk.model.c.c)localObject).d.optInt(i3, 16777215)) != 0) {
          i1 = 1;
        } else {
          i1 = 0;
        }
      }
    }
  }
  
  public static boolean a(com.in2wow.sdk.model.c paramC, long paramLong1, long paramLong2, int paramInt)
  {
    return a(paramC, paramLong1, paramLong2, paramInt, true);
  }
  
  public static boolean a(com.in2wow.sdk.model.c paramC, long paramLong1, long paramLong2, int paramInt, boolean paramBoolean)
  {
    if (paramC.t()) {
      return true;
    }
    long l1;
    int i1;
    if (paramC.g != null)
    {
      l1 = paramC.g.g;
      if (l1 != -1L) {
        if (paramLong1 > l1) {
          i1 = 1;
        }
      }
    }
    while (i1 != 0)
    {
      return true;
      i1 = 0;
      continue;
      i1 = 0;
    }
    if (paramBoolean)
    {
      if (!paramC.e)
      {
        l1 = 0L;
        if (paramLong1 - l1 >= paramLong2) {
          break label106;
        }
      }
      label106:
      for (i1 = 1;; i1 = 0)
      {
        if (i1 == 0) {
          break label112;
        }
        return true;
        l1 = paramC.a;
        break;
      }
    }
    label112:
    if (d(paramC)) {
      return true;
    }
    if (!e(paramC)) {
      return true;
    }
    if (f(paramC)) {
      return true;
    }
    c.d localD;
    Iterator localIterator;
    if (paramC.f != null)
    {
      localD = paramC.f;
      localIterator = localD.c.keySet().iterator();
    }
    label265:
    for (;;)
    {
      if (!localIterator.hasNext())
      {
        i1 = 0;
        if (i1 != 0) {
          return true;
        }
      }
      else
      {
        Object localObject = (Integer)localIterator.next();
        localObject = (c.d.a)localD.c.get(localObject);
        if ((((c.d.a)localObject).d + ((c.d.a)localObject).e > paramLong1) && (((c.d.a)localObject).c >= ((c.d.a)localObject).b)) {}
        for (i1 = 1;; i1 = 0)
        {
          if (i1 == 0) {
            break label265;
          }
          i1 = 1;
          break;
        }
      }
    }
    return !a(paramC, paramInt);
  }
  
  public static boolean a(com.in2wow.sdk.model.c paramC, Set<String> paramSet)
  {
    paramC = paramC.j;
    if (paramC.a.length == 0) {
      return true;
    }
    paramC = paramC.a;
    int i3 = paramC.length;
    int i1 = 0;
    for (;;)
    {
      if (i1 >= i3) {
        return false;
      }
      Iterator localIterator = paramC[i1].iterator();
      if (!localIterator.hasNext()) {}
      for (int i2 = 1;; i2 = 0)
      {
        if (i2 == 0) {
          break label84;
        }
        return true;
        if (paramSet.contains((String)localIterator.next())) {
          break;
        }
      }
      label84:
      i1 += 1;
    }
  }
  
  /* Error */
  public static boolean a(File paramFile1, File paramFile2)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 4
    //   3: aconst_null
    //   4: astore_3
    //   5: new 1167	java/io/FileInputStream
    //   8: dup
    //   9: aload_0
    //   10: invokespecial 1170	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   13: astore_0
    //   14: new 5382	java/io/FileOutputStream
    //   17: dup
    //   18: aload_1
    //   19: invokespecial 5383	java/io/FileOutputStream:<init>	(Ljava/io/File;)V
    //   22: astore_3
    //   23: sipush 1024
    //   26: newarray byte
    //   28: astore_1
    //   29: aload_0
    //   30: aload_1
    //   31: invokevirtual 5384	java/io/InputStream:read	([B)I
    //   34: istore_2
    //   35: iload_2
    //   36: ifle +36 -> 72
    //   39: aload_3
    //   40: aload_1
    //   41: iconst_0
    //   42: iload_2
    //   43: invokevirtual 2431	java/io/OutputStream:write	([BII)V
    //   46: goto -17 -> 29
    //   49: astore_1
    //   50: aload_0
    //   51: astore_1
    //   52: aload_3
    //   53: astore_0
    //   54: aload_1
    //   55: ifnull +7 -> 62
    //   58: aload_1
    //   59: invokevirtual 5380	java/io/InputStream:close	()V
    //   62: aload_0
    //   63: ifnull +7 -> 70
    //   66: aload_0
    //   67: invokevirtual 5385	java/io/OutputStream:close	()V
    //   70: iconst_0
    //   71: ireturn
    //   72: aload_0
    //   73: invokevirtual 5380	java/io/InputStream:close	()V
    //   76: aload_3
    //   77: invokevirtual 5385	java/io/OutputStream:close	()V
    //   80: iconst_1
    //   81: ireturn
    //   82: astore_0
    //   83: iconst_1
    //   84: ireturn
    //   85: astore_1
    //   86: aconst_null
    //   87: astore_0
    //   88: aload 4
    //   90: astore_3
    //   91: aload_0
    //   92: ifnull +7 -> 99
    //   95: aload_0
    //   96: invokevirtual 5380	java/io/InputStream:close	()V
    //   99: aload_3
    //   100: ifnull +7 -> 107
    //   103: aload_3
    //   104: invokevirtual 5385	java/io/OutputStream:close	()V
    //   107: aload_1
    //   108: athrow
    //   109: astore_0
    //   110: goto -34 -> 76
    //   113: astore_1
    //   114: goto -52 -> 62
    //   117: astore_0
    //   118: iconst_0
    //   119: ireturn
    //   120: astore_0
    //   121: goto -22 -> 99
    //   124: astore_0
    //   125: goto -18 -> 107
    //   128: astore_1
    //   129: aload 4
    //   131: astore_3
    //   132: goto -41 -> 91
    //   135: astore_1
    //   136: goto -45 -> 91
    //   139: astore_0
    //   140: aconst_null
    //   141: astore_0
    //   142: aload_3
    //   143: astore_1
    //   144: goto -90 -> 54
    //   147: astore_1
    //   148: aconst_null
    //   149: astore_3
    //   150: aload_0
    //   151: astore_1
    //   152: aload_3
    //   153: astore_0
    //   154: goto -100 -> 54
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	157	0	paramFile1	File
    //   0	157	1	paramFile2	File
    //   34	9	2	i1	int
    //   4	149	3	localObject1	Object
    //   1	129	4	localObject2	Object
    // Exception table:
    //   from	to	target	type
    //   23	29	49	java/io/IOException
    //   29	35	49	java/io/IOException
    //   39	46	49	java/io/IOException
    //   76	80	82	java/io/IOException
    //   5	14	85	finally
    //   72	76	109	java/io/IOException
    //   58	62	113	java/io/IOException
    //   66	70	117	java/io/IOException
    //   95	99	120	java/io/IOException
    //   103	107	124	java/io/IOException
    //   14	23	128	finally
    //   23	29	135	finally
    //   29	35	135	finally
    //   39	46	135	finally
    //   5	14	139	java/io/IOException
    //   14	23	147	java/io/IOException
  }
  
  /* Error */
  public static boolean a(InputStream paramInputStream, File paramFile)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 5
    //   3: new 464	java/io/File
    //   6: dup
    //   7: aload_1
    //   8: invokevirtual 10388	java/io/File:getParentFile	()Ljava/io/File;
    //   11: new 149	java/lang/StringBuilder
    //   14: dup
    //   15: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   18: aload_1
    //   19: invokevirtual 7643	java/io/File:getName	()Ljava/lang/String;
    //   22: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25: ldc_w 10846
    //   28: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   34: invokespecial 1668	java/io/File:<init>	(Ljava/io/File;Ljava/lang/String;)V
    //   37: astore 6
    //   39: new 5382	java/io/FileOutputStream
    //   42: dup
    //   43: aload_1
    //   44: invokespecial 5383	java/io/FileOutputStream:<init>	(Ljava/io/File;)V
    //   47: astore 4
    //   49: sipush 8192
    //   52: newarray byte
    //   54: astore 5
    //   56: aload_0
    //   57: aload 5
    //   59: invokevirtual 5384	java/io/InputStream:read	([B)I
    //   62: istore_2
    //   63: iload_2
    //   64: iflt +22 -> 86
    //   67: aload 4
    //   69: aload 5
    //   71: iconst_0
    //   72: iload_2
    //   73: invokevirtual 9741	java/io/FileOutputStream:write	([BII)V
    //   76: aload_0
    //   77: aload 5
    //   79: invokevirtual 5384	java/io/InputStream:read	([B)I
    //   82: istore_2
    //   83: goto -20 -> 63
    //   86: aload 6
    //   88: aload_1
    //   89: invokevirtual 10850	java/io/File:renameTo	(Ljava/io/File;)Z
    //   92: pop
    //   93: aload 4
    //   95: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   98: aload_0
    //   99: invokevirtual 5380	java/io/InputStream:close	()V
    //   102: iconst_1
    //   103: istore_3
    //   104: iload_3
    //   105: ifne +9 -> 114
    //   108: aload 6
    //   110: invokevirtual 474	java/io/File:delete	()Z
    //   113: pop
    //   114: iload_3
    //   115: ireturn
    //   116: astore_0
    //   117: iconst_1
    //   118: istore_3
    //   119: goto -15 -> 104
    //   122: astore_1
    //   123: aconst_null
    //   124: astore 4
    //   126: aload 4
    //   128: ifnull +8 -> 136
    //   131: aload 4
    //   133: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   136: aload_0
    //   137: invokevirtual 5380	java/io/InputStream:close	()V
    //   140: iconst_0
    //   141: istore_3
    //   142: goto -38 -> 104
    //   145: astore_0
    //   146: iconst_0
    //   147: istore_3
    //   148: goto -44 -> 104
    //   151: astore_1
    //   152: aconst_null
    //   153: astore 4
    //   155: aload 4
    //   157: ifnull +8 -> 165
    //   160: aload 4
    //   162: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   165: aload_0
    //   166: invokevirtual 5380	java/io/InputStream:close	()V
    //   169: iconst_0
    //   170: istore_3
    //   171: goto -67 -> 104
    //   174: astore_0
    //   175: iconst_0
    //   176: istore_3
    //   177: goto -73 -> 104
    //   180: astore_1
    //   181: aconst_null
    //   182: astore 4
    //   184: aload 4
    //   186: ifnull +8 -> 194
    //   189: aload 4
    //   191: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   194: aload_0
    //   195: invokevirtual 5380	java/io/InputStream:close	()V
    //   198: iconst_0
    //   199: istore_3
    //   200: goto -96 -> 104
    //   203: astore_0
    //   204: iconst_0
    //   205: istore_3
    //   206: goto -102 -> 104
    //   209: astore_1
    //   210: aload 5
    //   212: astore 4
    //   214: aload 4
    //   216: ifnull +8 -> 224
    //   219: aload 4
    //   221: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   224: aload_0
    //   225: invokevirtual 5380	java/io/InputStream:close	()V
    //   228: aload_1
    //   229: athrow
    //   230: astore_1
    //   231: goto -133 -> 98
    //   234: astore_1
    //   235: goto -99 -> 136
    //   238: astore_1
    //   239: goto -74 -> 165
    //   242: astore_1
    //   243: goto -49 -> 194
    //   246: astore 4
    //   248: goto -24 -> 224
    //   251: astore_0
    //   252: goto -24 -> 228
    //   255: astore_1
    //   256: goto -42 -> 214
    //   259: astore_1
    //   260: goto -76 -> 184
    //   263: astore_1
    //   264: goto -109 -> 155
    //   267: astore_1
    //   268: goto -142 -> 126
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	271	0	paramInputStream	InputStream
    //   0	271	1	paramFile	File
    //   62	21	2	i1	int
    //   103	103	3	bool	boolean
    //   47	173	4	localObject	Object
    //   246	1	4	localIOException	IOException
    //   1	210	5	arrayOfByte	byte[]
    //   37	72	6	localFile	File
    // Exception table:
    //   from	to	target	type
    //   98	102	116	java/io/IOException
    //   39	49	122	java/io/FileNotFoundException
    //   136	140	145	java/io/IOException
    //   39	49	151	java/io/IOException
    //   165	169	174	java/io/IOException
    //   39	49	180	java/lang/Exception
    //   194	198	203	java/io/IOException
    //   39	49	209	finally
    //   93	98	230	java/io/IOException
    //   131	136	234	java/io/IOException
    //   160	165	238	java/io/IOException
    //   189	194	242	java/io/IOException
    //   219	224	246	java/io/IOException
    //   224	228	251	java/io/IOException
    //   49	63	255	finally
    //   67	83	255	finally
    //   86	93	255	finally
    //   49	63	259	java/lang/Exception
    //   67	83	259	java/lang/Exception
    //   86	93	259	java/lang/Exception
    //   49	63	263	java/io/IOException
    //   67	83	263	java/io/IOException
    //   86	93	263	java/io/IOException
    //   49	63	267	java/io/FileNotFoundException
    //   67	83	267	java/io/FileNotFoundException
    //   86	93	267	java/io/FileNotFoundException
  }
  
  /* Error */
  public static boolean a(java.io.Serializable paramSerializable, File paramFile)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 4
    //   3: aconst_null
    //   4: astore_3
    //   5: aconst_null
    //   6: astore 8
    //   8: aconst_null
    //   9: astore 7
    //   11: aconst_null
    //   12: astore 5
    //   14: aconst_null
    //   15: astore 6
    //   17: aload_0
    //   18: ifnonnull +5 -> 23
    //   21: iconst_0
    //   22: ireturn
    //   23: aload_1
    //   24: invokevirtual 468	java/io/File:exists	()Z
    //   27: ifne +8 -> 35
    //   30: aload_1
    //   31: invokevirtual 501	java/io/File:createNewFile	()Z
    //   34: pop
    //   35: new 5382	java/io/FileOutputStream
    //   38: dup
    //   39: aload_1
    //   40: invokespecial 5383	java/io/FileOutputStream:<init>	(Ljava/io/File;)V
    //   43: astore_1
    //   44: new 10853	java/io/ObjectOutputStream
    //   47: dup
    //   48: aload_1
    //   49: invokespecial 10854	java/io/ObjectOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   52: astore_2
    //   53: aload 8
    //   55: astore_3
    //   56: aload 7
    //   58: astore 4
    //   60: aload 5
    //   62: astore 6
    //   64: aload_1
    //   65: invokevirtual 10858	java/io/FileOutputStream:getChannel	()Ljava/nio/channels/FileChannel;
    //   68: invokevirtual 10864	java/nio/channels/FileChannel:lock	()Ljava/nio/channels/FileLock;
    //   71: astore 5
    //   73: aload 5
    //   75: astore_3
    //   76: aload 5
    //   78: astore 4
    //   80: aload 5
    //   82: astore 6
    //   84: aload_2
    //   85: aload_0
    //   86: invokevirtual 10867	java/io/ObjectOutputStream:writeUnshared	(Ljava/lang/Object;)V
    //   89: aload 5
    //   91: astore_3
    //   92: aload 5
    //   94: astore 4
    //   96: aload 5
    //   98: astore 6
    //   100: aload_2
    //   101: invokevirtual 10868	java/io/ObjectOutputStream:flush	()V
    //   104: aload 5
    //   106: astore_3
    //   107: aload 5
    //   109: astore 4
    //   111: aload 5
    //   113: astore 6
    //   115: aload_1
    //   116: invokevirtual 10531	java/io/FileOutputStream:flush	()V
    //   119: aload_2
    //   120: invokevirtual 10869	java/io/ObjectOutputStream:reset	()V
    //   123: aload 5
    //   125: ifnull +8 -> 133
    //   128: aload 5
    //   130: invokevirtual 10874	java/nio/channels/FileLock:release	()V
    //   133: aload_2
    //   134: invokevirtual 10875	java/io/ObjectOutputStream:close	()V
    //   137: aload_1
    //   138: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   141: iconst_1
    //   142: ireturn
    //   143: astore_0
    //   144: aconst_null
    //   145: astore_2
    //   146: aconst_null
    //   147: astore_1
    //   148: aload_2
    //   149: ifnull +7 -> 156
    //   152: aload_2
    //   153: invokevirtual 10869	java/io/ObjectOutputStream:reset	()V
    //   156: aload 6
    //   158: ifnull +8 -> 166
    //   161: aload 6
    //   163: invokevirtual 10874	java/nio/channels/FileLock:release	()V
    //   166: aload_2
    //   167: ifnull +7 -> 174
    //   170: aload_2
    //   171: invokevirtual 10875	java/io/ObjectOutputStream:close	()V
    //   174: aload_1
    //   175: ifnull -154 -> 21
    //   178: aload_1
    //   179: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   182: iconst_0
    //   183: ireturn
    //   184: astore_0
    //   185: iconst_0
    //   186: ireturn
    //   187: astore_0
    //   188: aconst_null
    //   189: astore_2
    //   190: aconst_null
    //   191: astore_1
    //   192: aload_2
    //   193: ifnull +7 -> 200
    //   196: aload_2
    //   197: invokevirtual 10869	java/io/ObjectOutputStream:reset	()V
    //   200: aload 4
    //   202: ifnull +8 -> 210
    //   205: aload 4
    //   207: invokevirtual 10874	java/nio/channels/FileLock:release	()V
    //   210: aload_2
    //   211: ifnull +7 -> 218
    //   214: aload_2
    //   215: invokevirtual 10875	java/io/ObjectOutputStream:close	()V
    //   218: aload_1
    //   219: ifnull -198 -> 21
    //   222: aload_1
    //   223: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   226: iconst_0
    //   227: ireturn
    //   228: astore_0
    //   229: iconst_0
    //   230: ireturn
    //   231: astore_0
    //   232: aconst_null
    //   233: astore_2
    //   234: aconst_null
    //   235: astore_1
    //   236: aload_2
    //   237: ifnull +7 -> 244
    //   240: aload_2
    //   241: invokevirtual 10869	java/io/ObjectOutputStream:reset	()V
    //   244: aload_3
    //   245: ifnull +7 -> 252
    //   248: aload_3
    //   249: invokevirtual 10874	java/nio/channels/FileLock:release	()V
    //   252: aload_2
    //   253: ifnull +7 -> 260
    //   256: aload_2
    //   257: invokevirtual 10875	java/io/ObjectOutputStream:close	()V
    //   260: aload_1
    //   261: ifnull +7 -> 268
    //   264: aload_1
    //   265: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   268: aload_0
    //   269: athrow
    //   270: astore_2
    //   271: goto -236 -> 35
    //   274: astore_0
    //   275: goto -152 -> 123
    //   278: astore_0
    //   279: goto -146 -> 133
    //   282: astore_0
    //   283: goto -146 -> 137
    //   286: astore_0
    //   287: goto -146 -> 141
    //   290: astore_0
    //   291: goto -135 -> 156
    //   294: astore_0
    //   295: goto -129 -> 166
    //   298: astore_0
    //   299: goto -125 -> 174
    //   302: astore_0
    //   303: goto -103 -> 200
    //   306: astore_0
    //   307: goto -97 -> 210
    //   310: astore_0
    //   311: goto -93 -> 218
    //   314: astore 4
    //   316: goto -72 -> 244
    //   319: astore_3
    //   320: goto -68 -> 252
    //   323: astore_2
    //   324: goto -64 -> 260
    //   327: astore_1
    //   328: goto -60 -> 268
    //   331: astore_0
    //   332: aconst_null
    //   333: astore_2
    //   334: goto -98 -> 236
    //   337: astore_0
    //   338: goto -102 -> 236
    //   341: astore_0
    //   342: aconst_null
    //   343: astore_2
    //   344: goto -152 -> 192
    //   347: astore_0
    //   348: goto -156 -> 192
    //   351: astore_0
    //   352: aconst_null
    //   353: astore_2
    //   354: goto -206 -> 148
    //   357: astore_0
    //   358: goto -210 -> 148
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	361	0	paramSerializable	java.io.Serializable
    //   0	361	1	paramFile	File
    //   52	205	2	localObjectOutputStream	java.io.ObjectOutputStream
    //   270	1	2	localIOException1	IOException
    //   323	1	2	localIOException2	IOException
    //   333	21	2	localObject1	Object
    //   4	245	3	localObject2	Object
    //   319	1	3	localIOException3	IOException
    //   1	205	4	localObject3	Object
    //   314	1	4	localIOException4	IOException
    //   12	117	5	localFileLock1	java.nio.channels.FileLock
    //   15	147	6	localFileLock2	java.nio.channels.FileLock
    //   9	48	7	localObject4	Object
    //   6	48	8	localObject5	Object
    // Exception table:
    //   from	to	target	type
    //   35	44	143	java/lang/Exception
    //   178	182	184	java/io/IOException
    //   35	44	187	java/lang/OutOfMemoryError
    //   222	226	228	java/io/IOException
    //   35	44	231	finally
    //   30	35	270	java/io/IOException
    //   119	123	274	java/io/IOException
    //   128	133	278	java/io/IOException
    //   133	137	282	java/io/IOException
    //   137	141	286	java/io/IOException
    //   152	156	290	java/io/IOException
    //   161	166	294	java/io/IOException
    //   170	174	298	java/io/IOException
    //   196	200	302	java/io/IOException
    //   205	210	306	java/io/IOException
    //   214	218	310	java/io/IOException
    //   240	244	314	java/io/IOException
    //   248	252	319	java/io/IOException
    //   256	260	323	java/io/IOException
    //   264	268	327	java/io/IOException
    //   44	53	331	finally
    //   64	73	337	finally
    //   84	89	337	finally
    //   100	104	337	finally
    //   115	119	337	finally
    //   44	53	341	java/lang/OutOfMemoryError
    //   64	73	347	java/lang/OutOfMemoryError
    //   84	89	347	java/lang/OutOfMemoryError
    //   100	104	347	java/lang/OutOfMemoryError
    //   115	119	347	java/lang/OutOfMemoryError
    //   44	53	351	java/lang/Exception
    //   64	73	357	java/lang/Exception
    //   84	89	357	java/lang/Exception
    //   100	104	357	java/lang/Exception
    //   115	119	357	java/lang/Exception
  }
  
  public static boolean a(Object paramObject, float paramFloat)
  {
    ((EdgeEffect)paramObject).onPull(paramFloat);
    return true;
  }
  
  public static boolean a(Object paramObject1, Object paramObject2)
  {
    return (paramObject1 == paramObject2) || ((paramObject1 != null) && (paramObject1.equals(paramObject2)));
  }
  
  /* Error */
  public static boolean a(String paramString, com.cleanmaster.boost.boostengine.autostart.a.c paramC)
  {
    // Byte code:
    //   0: iconst_1
    //   1: istore 6
    //   3: aload_0
    //   4: invokestatic 166	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   7: ifeq +5 -> 12
    //   10: iconst_0
    //   11: ireturn
    //   12: new 464	java/io/File
    //   15: dup
    //   16: aload_0
    //   17: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   20: astore 9
    //   22: aload 9
    //   24: invokevirtual 468	java/io/File:exists	()Z
    //   27: ifeq +591 -> 618
    //   30: aload 9
    //   32: invokevirtual 471	java/io/File:isFile	()Z
    //   35: ifeq +583 -> 618
    //   38: aload 9
    //   40: invokevirtual 1165	java/io/File:length	()J
    //   43: lconst_0
    //   44: lcmp
    //   45: ifle +573 -> 618
    //   48: new 1167	java/io/FileInputStream
    //   51: dup
    //   52: aload 9
    //   54: invokespecial 1170	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   57: astore 7
    //   59: aload 7
    //   61: astore_0
    //   62: iconst_4
    //   63: newarray byte
    //   65: astore 8
    //   67: aload 7
    //   69: astore_0
    //   70: aload 7
    //   72: aload 8
    //   74: invokevirtual 1177	java/io/FileInputStream:read	([B)I
    //   77: istore_2
    //   78: iconst_4
    //   79: iload_2
    //   80: if_icmpeq +13 -> 93
    //   83: aload 7
    //   85: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   88: iconst_0
    //   89: ireturn
    //   90: astore_0
    //   91: iconst_0
    //   92: ireturn
    //   93: aload 7
    //   95: astore_0
    //   96: new 149	java/lang/StringBuilder
    //   99: dup
    //   100: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   103: aload 8
    //   105: iconst_0
    //   106: baload
    //   107: invokevirtual 609	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   110: ldc_w 1413
    //   113: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   116: aload 8
    //   118: iconst_1
    //   119: baload
    //   120: invokevirtual 609	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   123: bipush 46
    //   125: invokevirtual 1198	java/lang/StringBuilder:append	(C)Ljava/lang/StringBuilder;
    //   128: aload 8
    //   130: iconst_2
    //   131: baload
    //   132: invokevirtual 609	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   135: bipush 46
    //   137: invokevirtual 1198	java/lang/StringBuilder:append	(C)Ljava/lang/StringBuilder;
    //   140: aload 8
    //   142: iconst_3
    //   143: baload
    //   144: invokevirtual 609	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   147: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   150: astore 10
    //   152: aload 7
    //   154: astore_0
    //   155: aload_1
    //   156: getfield 10889	com/cleanmaster/boost/boostengine/autostart/a/c:a	Lcom/cleanmaster/boost/boostengine/autostart/a/d;
    //   159: aload 10
    //   161: putfield 10892	com/cleanmaster/boost/boostengine/autostart/a/d:h	Ljava/lang/String;
    //   164: aload 7
    //   166: astore_0
    //   167: aload 7
    //   169: aload 8
    //   171: invokevirtual 1177	java/io/FileInputStream:read	([B)I
    //   174: istore_2
    //   175: iconst_4
    //   176: iload_2
    //   177: if_icmpeq +13 -> 190
    //   180: aload 7
    //   182: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   185: iconst_0
    //   186: ireturn
    //   187: astore_0
    //   188: iconst_0
    //   189: ireturn
    //   190: aload 7
    //   192: astore_0
    //   193: aload 8
    //   195: getstatic 2288	java/nio/ByteOrder:BIG_ENDIAN	Ljava/nio/ByteOrder;
    //   198: invokestatic 10894	LibcoreWrapper/a:a	([BLjava/nio/ByteOrder;)I
    //   201: istore_2
    //   202: aload 7
    //   204: astore_0
    //   205: aload 9
    //   207: invokevirtual 1165	java/io/File:length	()J
    //   210: ldc2_w 5386
    //   213: lsub
    //   214: l2i
    //   215: istore_3
    //   216: iload_3
    //   217: ifle +10 -> 227
    //   220: iload_3
    //   221: bipush 8
    //   223: irem
    //   224: ifeq +13 -> 237
    //   227: aload 7
    //   229: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   232: iconst_0
    //   233: ireturn
    //   234: astore_0
    //   235: iconst_0
    //   236: ireturn
    //   237: aload 7
    //   239: astore_0
    //   240: iload_3
    //   241: newarray byte
    //   243: astore 10
    //   245: aload 7
    //   247: astore_0
    //   248: aload 7
    //   250: aload 10
    //   252: invokevirtual 1177	java/io/FileInputStream:read	([B)I
    //   255: istore 4
    //   257: iload 4
    //   259: iload_3
    //   260: if_icmpeq +24 -> 284
    //   263: aload 7
    //   265: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   268: iconst_0
    //   269: ireturn
    //   270: astore_0
    //   271: iconst_0
    //   272: ireturn
    //   273: astore_0
    //   274: aload 7
    //   276: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   279: iconst_0
    //   280: ireturn
    //   281: astore_0
    //   282: iconst_0
    //   283: ireturn
    //   284: aload 7
    //   286: astore_0
    //   287: aload 10
    //   289: invokestatic 697	LibcoreWrapper/a:c	([B)I
    //   292: istore 4
    //   294: iload_2
    //   295: iload 4
    //   297: if_icmpeq +13 -> 310
    //   300: aload 7
    //   302: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   305: iconst_0
    //   306: ireturn
    //   307: astore_0
    //   308: iconst_0
    //   309: ireturn
    //   310: iconst_0
    //   311: istore_2
    //   312: iload_2
    //   313: iload_3
    //   314: if_icmpge +219 -> 533
    //   317: aload 8
    //   319: iconst_0
    //   320: aload 10
    //   322: iload_2
    //   323: baload
    //   324: bastore
    //   325: aload 8
    //   327: iconst_1
    //   328: aload 10
    //   330: iload_2
    //   331: iconst_1
    //   332: iadd
    //   333: baload
    //   334: bastore
    //   335: aload 8
    //   337: iconst_2
    //   338: aload 10
    //   340: iload_2
    //   341: iconst_2
    //   342: iadd
    //   343: baload
    //   344: bastore
    //   345: aload 8
    //   347: iconst_3
    //   348: aload 10
    //   350: iload_2
    //   351: iconst_3
    //   352: iadd
    //   353: baload
    //   354: bastore
    //   355: aload 7
    //   357: astore_0
    //   358: aload 8
    //   360: getstatic 2288	java/nio/ByteOrder:BIG_ENDIAN	Ljava/nio/ByteOrder;
    //   363: invokestatic 10894	LibcoreWrapper/a:a	([BLjava/nio/ByteOrder;)I
    //   366: istore 4
    //   368: aload 8
    //   370: iconst_0
    //   371: aload 10
    //   373: iload_2
    //   374: iconst_4
    //   375: iadd
    //   376: baload
    //   377: bastore
    //   378: aload 8
    //   380: iconst_1
    //   381: aload 10
    //   383: iload_2
    //   384: iconst_5
    //   385: iadd
    //   386: baload
    //   387: bastore
    //   388: aload 8
    //   390: iconst_2
    //   391: aload 10
    //   393: iload_2
    //   394: bipush 6
    //   396: iadd
    //   397: baload
    //   398: bastore
    //   399: aload 8
    //   401: iconst_3
    //   402: aload 10
    //   404: iload_2
    //   405: bipush 7
    //   407: iadd
    //   408: baload
    //   409: bastore
    //   410: aload 7
    //   412: astore_0
    //   413: aload 8
    //   415: getstatic 2288	java/nio/ByteOrder:BIG_ENDIAN	Ljava/nio/ByteOrder;
    //   418: invokestatic 10894	LibcoreWrapper/a:a	([BLjava/nio/ByteOrder;)I
    //   421: istore 5
    //   423: aload 7
    //   425: astore_0
    //   426: aload_1
    //   427: getfield 10889	com/cleanmaster/boost/boostengine/autostart/a/c:a	Lcom/cleanmaster/boost/boostengine/autostart/a/d;
    //   430: getfield 10896	com/cleanmaster/boost/boostengine/autostart/a/d:i	Ljava/lang/Object;
    //   433: astore 9
    //   435: aload 7
    //   437: astore_0
    //   438: aload 9
    //   440: monitorenter
    //   441: iconst_m1
    //   442: iload 5
    //   444: if_icmpne +32 -> 476
    //   447: aload_1
    //   448: getfield 10889	com/cleanmaster/boost/boostengine/autostart/a/c:a	Lcom/cleanmaster/boost/boostengine/autostart/a/d;
    //   451: getfield 10897	com/cleanmaster/boost/boostengine/autostart/a/d:a	Ljava/util/List;
    //   454: iload 4
    //   456: invokestatic 1206	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   459: invokeinterface 1827 2 0
    //   464: pop
    //   465: aload 9
    //   467: monitorexit
    //   468: iload_2
    //   469: bipush 8
    //   471: iadd
    //   472: istore_2
    //   473: goto -161 -> 312
    //   476: aload_1
    //   477: getfield 10889	com/cleanmaster/boost/boostengine/autostart/a/c:a	Lcom/cleanmaster/boost/boostengine/autostart/a/d;
    //   480: getfield 10898	com/cleanmaster/boost/boostengine/autostart/a/d:b	Ljava/util/HashMap;
    //   483: iload 4
    //   485: invokestatic 1206	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   488: iload 5
    //   490: invokestatic 1206	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   493: invokevirtual 9784	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   496: pop
    //   497: goto -32 -> 465
    //   500: astore_1
    //   501: aload 9
    //   503: monitorexit
    //   504: aload 7
    //   506: astore_0
    //   507: aload_1
    //   508: athrow
    //   509: astore_1
    //   510: aload 7
    //   512: astore_0
    //   513: aload_1
    //   514: invokevirtual 1185	java/io/FileNotFoundException:printStackTrace	()V
    //   517: aload 7
    //   519: ifnull +99 -> 618
    //   522: aload 7
    //   524: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   527: iconst_0
    //   528: istore 6
    //   530: iload 6
    //   532: ireturn
    //   533: aload 7
    //   535: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   538: goto -8 -> 530
    //   541: astore_0
    //   542: goto -12 -> 530
    //   545: astore_0
    //   546: iconst_0
    //   547: istore 6
    //   549: goto -19 -> 530
    //   552: astore_1
    //   553: aconst_null
    //   554: astore 7
    //   556: aload 7
    //   558: astore_0
    //   559: aload_1
    //   560: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   563: aload 7
    //   565: ifnull +53 -> 618
    //   568: aload 7
    //   570: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   573: iconst_0
    //   574: istore 6
    //   576: goto -46 -> 530
    //   579: astore_0
    //   580: iconst_0
    //   581: istore 6
    //   583: goto -53 -> 530
    //   586: astore_1
    //   587: aconst_null
    //   588: astore_0
    //   589: aload_0
    //   590: ifnull +7 -> 597
    //   593: aload_0
    //   594: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   597: aload_1
    //   598: athrow
    //   599: astore_0
    //   600: goto -3 -> 597
    //   603: astore_1
    //   604: goto -15 -> 589
    //   607: astore_1
    //   608: goto -52 -> 556
    //   611: astore_1
    //   612: aconst_null
    //   613: astore 7
    //   615: goto -105 -> 510
    //   618: iconst_0
    //   619: istore 6
    //   621: goto -91 -> 530
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	624	0	paramString	String
    //   0	624	1	paramC	com.cleanmaster.boost.boostengine.autostart.a.c
    //   77	396	2	i1	int
    //   215	100	3	i2	int
    //   255	229	4	i3	int
    //   421	68	5	i4	int
    //   1	619	6	bool	boolean
    //   57	557	7	localFileInputStream	FileInputStream
    //   65	349	8	arrayOfByte	byte[]
    //   20	482	9	localObject1	Object
    //   150	253	10	localObject2	Object
    // Exception table:
    //   from	to	target	type
    //   83	88	90	java/lang/Exception
    //   180	185	187	java/lang/Exception
    //   227	232	234	java/lang/Exception
    //   263	268	270	java/lang/Exception
    //   240	245	273	java/lang/OutOfMemoryError
    //   274	279	281	java/lang/Exception
    //   300	305	307	java/lang/Exception
    //   447	465	500	finally
    //   465	468	500	finally
    //   476	497	500	finally
    //   501	504	500	finally
    //   62	67	509	java/io/FileNotFoundException
    //   70	78	509	java/io/FileNotFoundException
    //   96	152	509	java/io/FileNotFoundException
    //   155	164	509	java/io/FileNotFoundException
    //   167	175	509	java/io/FileNotFoundException
    //   193	202	509	java/io/FileNotFoundException
    //   205	216	509	java/io/FileNotFoundException
    //   240	245	509	java/io/FileNotFoundException
    //   248	257	509	java/io/FileNotFoundException
    //   287	294	509	java/io/FileNotFoundException
    //   358	368	509	java/io/FileNotFoundException
    //   413	423	509	java/io/FileNotFoundException
    //   426	435	509	java/io/FileNotFoundException
    //   438	441	509	java/io/FileNotFoundException
    //   507	509	509	java/io/FileNotFoundException
    //   533	538	541	java/lang/Exception
    //   522	527	545	java/lang/Exception
    //   48	59	552	java/io/IOException
    //   568	573	579	java/lang/Exception
    //   48	59	586	finally
    //   593	597	599	java/lang/Exception
    //   62	67	603	finally
    //   70	78	603	finally
    //   96	152	603	finally
    //   155	164	603	finally
    //   167	175	603	finally
    //   193	202	603	finally
    //   205	216	603	finally
    //   240	245	603	finally
    //   248	257	603	finally
    //   287	294	603	finally
    //   358	368	603	finally
    //   413	423	603	finally
    //   426	435	603	finally
    //   438	441	603	finally
    //   507	509	603	finally
    //   513	517	603	finally
    //   559	563	603	finally
    //   62	67	607	java/io/IOException
    //   70	78	607	java/io/IOException
    //   96	152	607	java/io/IOException
    //   155	164	607	java/io/IOException
    //   167	175	607	java/io/IOException
    //   193	202	607	java/io/IOException
    //   205	216	607	java/io/IOException
    //   240	245	607	java/io/IOException
    //   248	257	607	java/io/IOException
    //   287	294	607	java/io/IOException
    //   358	368	607	java/io/IOException
    //   413	423	607	java/io/IOException
    //   426	435	607	java/io/IOException
    //   438	441	607	java/io/IOException
    //   507	509	607	java/io/IOException
    //   48	59	611	java/io/FileNotFoundException
  }
  
  public static boolean a(String paramString, com.cleanmaster.cleancloud.core.falseproc.p paramP)
  {
    if (TextUtils.isEmpty(paramString)) {}
    while ((paramP == null) || (paramP.b == null)) {
      return false;
    }
    if ((paramP == null) || (paramP.b == null)) {
      paramP = null;
    }
    for (;;)
    {
      return a(paramString, paramP);
      int i2 = paramP.a;
      Object localObject = paramP.b;
      if (((com.cleanmaster.cleancloud.core.b.e)localObject).c != null) {}
      int i4;
      for (int i1 = ((com.cleanmaster.cleancloud.core.b.e)localObject).c.length;; i1 = 0)
      {
        i4 = (i1 << 2) + 12;
        paramP = new byte[i4 + 16];
        paramP[0] = 1;
        com.cleanmaster.base.util.b.b.a(i2, paramP, 4);
        com.cleanmaster.base.util.b.b.a(i4, paramP, 8);
        com.cleanmaster.base.util.b.b.a(((com.cleanmaster.cleancloud.core.b.e)localObject).a, paramP, 16);
        com.cleanmaster.base.util.b.b.a(((com.cleanmaster.cleancloud.core.b.e)localObject).b, paramP, 20);
        com.cleanmaster.base.util.b.b.a(i1, paramP, 24);
        i2 = 0;
        int i3 = 28;
        while (i2 < i1)
        {
          com.cleanmaster.base.util.b.b.a(localObject.c[i2], paramP, i3);
          i3 += 4;
          i2 += 1;
        }
      }
      localObject = new CRC32();
      ((CRC32)localObject).update(paramP, 16, i4);
      com.cleanmaster.base.util.b.b.a((int)((CRC32)localObject).getValue(), paramP, 12);
    }
  }
  
  public static boolean a(String paramString1, String paramString2, byte paramByte)
  {
    if (TextUtils.isEmpty(paramString2)) {
      return false;
    }
    paramString1 = new com.cleanmaster.security.timewall.a.a(8, paramString1, paramString2, null, null, null, 0L, paramByte, false);
    return a(TimeWallDefine.EVENT_TYPE.EVENT_TYPE_DEAL_MALWARE, paramString1, 200L);
  }
  
  public static boolean a(String paramString1, String paramString2, File paramFile, String paramString3)
  {
    try
    {
      byte[] arrayOfByte = new byte['Ѐ'];
      paramString2 = (HttpURLConnection)new URL(paramString2).openConnection();
      paramString2.setConnectTimeout(10000);
      paramString2.setReadTimeout(10000);
      paramString2.setDoInput(true);
      paramString2.setDoOutput(true);
      paramString2.setUseCaches(false);
      paramString2.setRequestMethod("POST");
      paramString2.setRequestProperty("Connection", "Keep-Alive");
      paramString2.setRequestProperty("Content-Type", "multipart/form-data; boundary=" + "7d51e5840296");
      paramString2.setRequestProperty("User-Agent", "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322;");
      if (!TextUtils.isEmpty(paramString3)) {
        paramString2.setRequestProperty("Host", paramString3);
      }
      paramString3 = new DataOutputStream(paramString2.getOutputStream());
      paramString3.writeBytes("--" + "7d51e5840296" + "\r\n");
      paramString3.writeBytes("Content-Disposition: form-data; name=\"filename\"; filename=\"" + paramString1 + "\"" + "\r\n");
      paramString3.writeBytes("\r\n");
      paramString3.flush();
      paramString1 = new FileInputStream(paramFile);
      for (;;)
      {
        int i1 = paramString1.read(arrayOfByte, 0, 1024);
        if (i1 <= 0) {
          break;
        }
        paramString3.write(arrayOfByte, 0, i1);
      }
      paramString1.printStackTrace();
    }
    catch (Exception paramString1)
    {
      bool = false;
    }
    return bool;
    paramString1.close();
    paramString3.writeBytes("\r\n");
    paramString3.writeBytes("--" + "7d51e5840296" + "--" + "\r\n");
    paramString3.flush();
    paramString3.close();
    paramString1 = new DataInputStream(paramString2.getInputStream());
    paramString2 = paramString1.readLine();
    if (paramString2 != null)
    {
      bool = paramString2.trim().equals("0");
      if (!bool) {}
    }
    for (boolean bool = true;; bool = false)
    {
      try
      {
        paramString1.close();
        return bool;
      }
      catch (Exception paramString1) {}
      break;
    }
  }
  
  public static boolean a(String paramString1, String paramString2, String paramString3, String paramString4)
  {
    if ((TextUtils.isEmpty(paramString2)) || (TextUtils.isEmpty(paramString1))) {
      return false;
    }
    Object localObject2 = bC();
    Object localObject1 = localObject2;
    if (localObject2 == null) {
      localObject1 = new HashMap();
    }
    localObject2 = new com.cleanmaster.security.timewall.a.f();
    ((com.cleanmaster.security.timewall.a.f)localObject2).a = paramString2;
    if (!TextUtils.isEmpty(paramString3)) {}
    for (;;)
    {
      ((com.cleanmaster.security.timewall.a.f)localObject2).b = paramString3;
      ((com.cleanmaster.security.timewall.a.f)localObject2).c = paramString4;
      ((HashMap)localObject1).put(paramString1, localObject2);
      return a((HashMap)localObject1);
      paramString3 = bo(paramString1);
    }
  }
  
  public static boolean a(String paramString1, String paramString2, String paramString3, String paramString4, byte paramByte, boolean paramBoolean)
  {
    if (TextUtils.isEmpty(paramString2)) {
      return false;
    }
    paramString1 = new com.cleanmaster.security.timewall.a.a(2, paramString1, paramString2, paramString3, paramString4, null, 0L, paramByte, paramBoolean);
    return a(TimeWallDefine.EVENT_TYPE.EVENT_TYPE_FINISH_INSTALL_MONITOR_SCAN, paramString1, 0L);
  }
  
  public static boolean a(String paramString1, String paramString2, String paramString3, String paramString4, long paramLong)
  {
    if (TextUtils.isEmpty(paramString2)) {
      return false;
    }
    paramString1 = new com.cleanmaster.security.timewall.a.a(14, paramString1, paramString2, paramString3, null, paramString4, paramLong, (byte)2, false);
    return a(TimeWallDefine.EVENT_TYPE.EVENT_TYPE_UNKNOWN_FILES_SAFE, paramString1, 0L);
  }
  
  public static boolean a(String paramString1, String paramString2, boolean paramBoolean)
  {
    ICloudConfigGetter localICloudConfigGetter = (ICloudConfigGetter)com.cleanmaster.base.ipc.c.a().a(com.cleanmaster.base.ipc.b.e);
    boolean bool = paramBoolean;
    if (localICloudConfigGetter != null) {}
    try
    {
      bool = localICloudConfigGetter.a(11, paramString1, paramString2, paramBoolean);
      return bool;
    }
    catch (RemoteException paramString1)
    {
      paramString1.printStackTrace();
    }
    return paramBoolean;
  }
  
  /* Error */
  private static boolean a(String paramString, byte[] paramArrayOfByte)
  {
    // Byte code:
    //   0: aload_0
    //   1: invokestatic 166	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   4: ifne +7 -> 11
    //   7: aload_1
    //   8: ifnonnull +5 -> 13
    //   11: iconst_0
    //   12: ireturn
    //   13: new 464	java/io/File
    //   16: dup
    //   17: aload_0
    //   18: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   21: astore_0
    //   22: aload_0
    //   23: invokevirtual 468	java/io/File:exists	()Z
    //   26: ifeq +41 -> 67
    //   29: aload_0
    //   30: invokevirtual 474	java/io/File:delete	()Z
    //   33: pop
    //   34: aconst_null
    //   35: astore_2
    //   36: aconst_null
    //   37: astore_3
    //   38: new 5382	java/io/FileOutputStream
    //   41: dup
    //   42: aload_0
    //   43: invokespecial 5383	java/io/FileOutputStream:<init>	(Ljava/io/File;)V
    //   46: astore_0
    //   47: aload_0
    //   48: astore_2
    //   49: aload_0
    //   50: aload_1
    //   51: invokevirtual 10971	java/io/FileOutputStream:write	([B)V
    //   54: aload_0
    //   55: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   58: iconst_1
    //   59: ireturn
    //   60: astore_0
    //   61: aload_0
    //   62: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   65: iconst_1
    //   66: ireturn
    //   67: aload_0
    //   68: invokevirtual 10388	java/io/File:getParentFile	()Ljava/io/File;
    //   71: astore_2
    //   72: aload_2
    //   73: ifnull -39 -> 34
    //   76: aload_2
    //   77: invokevirtual 468	java/io/File:exists	()Z
    //   80: ifne -46 -> 34
    //   83: aload_2
    //   84: invokevirtual 477	java/io/File:mkdirs	()Z
    //   87: ifeq -53 -> 34
    //   90: aload_2
    //   91: invokevirtual 792	java/io/File:getPath	()Ljava/lang/String;
    //   94: sipush 505
    //   97: iconst_m1
    //   98: iconst_m1
    //   99: invokestatic 10977	android/os/FileUtils:setPermissions	(Ljava/lang/String;III)I
    //   102: pop
    //   103: goto -69 -> 34
    //   106: astore_2
    //   107: aload_2
    //   108: invokevirtual 576	java/lang/Exception:printStackTrace	()V
    //   111: goto -77 -> 34
    //   114: astore_1
    //   115: aconst_null
    //   116: astore_0
    //   117: aload_0
    //   118: astore_2
    //   119: aload_1
    //   120: invokevirtual 1185	java/io/FileNotFoundException:printStackTrace	()V
    //   123: aload_0
    //   124: ifnull -113 -> 11
    //   127: aload_0
    //   128: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   131: iconst_0
    //   132: ireturn
    //   133: astore_0
    //   134: aload_0
    //   135: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   138: iconst_0
    //   139: ireturn
    //   140: astore_1
    //   141: aload_3
    //   142: astore_0
    //   143: aload_0
    //   144: astore_2
    //   145: aload_1
    //   146: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   149: aload_0
    //   150: ifnull -139 -> 11
    //   153: aload_0
    //   154: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   157: iconst_0
    //   158: ireturn
    //   159: astore_0
    //   160: aload_0
    //   161: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   164: iconst_0
    //   165: ireturn
    //   166: astore_0
    //   167: aload_2
    //   168: ifnull +7 -> 175
    //   171: aload_2
    //   172: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   175: aload_0
    //   176: athrow
    //   177: astore_1
    //   178: aload_1
    //   179: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   182: goto -7 -> 175
    //   185: astore_0
    //   186: goto -19 -> 167
    //   189: astore_1
    //   190: goto -47 -> 143
    //   193: astore_1
    //   194: goto -77 -> 117
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	197	0	paramString	String
    //   0	197	1	paramArrayOfByte	byte[]
    //   35	56	2	localObject1	Object
    //   106	2	2	localException	Exception
    //   118	54	2	str	String
    //   37	105	3	localObject2	Object
    // Exception table:
    //   from	to	target	type
    //   54	58	60	java/io/IOException
    //   83	103	106	java/lang/Exception
    //   38	47	114	java/io/FileNotFoundException
    //   127	131	133	java/io/IOException
    //   38	47	140	java/io/IOException
    //   153	157	159	java/io/IOException
    //   38	47	166	finally
    //   145	149	166	finally
    //   171	175	177	java/io/IOException
    //   49	54	185	finally
    //   119	123	185	finally
    //   49	54	189	java/io/IOException
    //   49	54	193	java/io/FileNotFoundException
  }
  
  public static boolean a(PublicKey paramPublicKey, String paramString1, String paramString2)
  {
    try
    {
      java.security.Signature localSignature = java.security.Signature.getInstance("SHA1withRSA");
      localSignature.initVerify(paramPublicKey);
      localSignature.update(paramString1.getBytes());
      if (!localSignature.verify(Base64.decode(paramString2, 0)))
      {
        aO("Signature verification failed.");
        return false;
      }
      return true;
    }
    catch (NoSuchAlgorithmException paramPublicKey)
    {
      aO("NoSuchAlgorithmException.");
      return false;
    }
    catch (InvalidKeyException paramPublicKey)
    {
      aO("Invalid key specification.");
      return false;
    }
    catch (SignatureException paramPublicKey)
    {
      aO("Signature exception.");
    }
    return false;
  }
  
  private static boolean a(Collection<String> paramCollection1, Collection<String> paramCollection2)
  {
    if ((paramCollection1 == null) || (paramCollection1.size() <= 0) || (paramCollection2 == null) || (paramCollection2.size() <= 0)) {
      return false;
    }
    paramCollection2 = paramCollection2.iterator();
    while (paramCollection2.hasNext())
    {
      String str = (String)paramCollection2.next();
      if ((!TextUtils.isEmpty(str)) && (paramCollection1.contains(str))) {
        return true;
      }
    }
    return false;
  }
  
  public static boolean a(HashMap<String, com.cleanmaster.security.timewall.a.f> paramHashMap)
  {
    Object localObject2 = "";
    Object localObject1 = localObject2;
    if (paramHashMap != null)
    {
      localObject1 = localObject2;
      if (paramHashMap.size() > 0)
      {
        Iterator localIterator = paramHashMap.entrySet().iterator();
        paramHashMap = (HashMap<String, com.cleanmaster.security.timewall.a.f>)localObject2;
        String str;
        do
        {
          do
          {
            localObject1 = paramHashMap;
            if (!localIterator.hasNext()) {
              break;
            }
            localObject1 = (Map.Entry)localIterator.next();
          } while (localObject1 == null);
          str = (String)((Map.Entry)localObject1).getKey();
          localObject2 = (com.cleanmaster.security.timewall.a.f)((Map.Entry)localObject1).getValue();
        } while ((TextUtils.isEmpty(str)) || (localObject2 == null) || (TextUtils.isEmpty(((com.cleanmaster.security.timewall.a.f)localObject2).a)));
        localObject1 = paramHashMap;
        if (!TextUtils.isEmpty(paramHashMap)) {
          localObject1 = paramHashMap + ";;;";
        }
        localObject1 = new StringBuilder().append((String)localObject1).append(str).append("###").append(((com.cleanmaster.security.timewall.a.f)localObject2).a).append("###");
        if (((com.cleanmaster.security.timewall.a.f)localObject2).b == null)
        {
          paramHashMap = "error";
          label175:
          localObject1 = ((StringBuilder)localObject1).append(paramHashMap).append("###");
          if (((com.cleanmaster.security.timewall.a.f)localObject2).c != null) {
            break label217;
          }
        }
        label217:
        for (paramHashMap = "";; paramHashMap = ((com.cleanmaster.security.timewall.a.f)localObject2).c)
        {
          paramHashMap = paramHashMap;
          break;
          paramHashMap = ((com.cleanmaster.security.timewall.a.f)localObject2).b;
          break label175;
        }
      }
    }
    if (TextUtils.isEmpty((CharSequence)localObject1)) {
      return com.cleanmaster.security.timewall.db.a.a().c();
    }
    paramHashMap = new com.cleanmaster.security.timewall.db.b();
    paramHashMap.a = 15;
    paramHashMap.b = ((String)localObject1);
    paramHashMap.c = "";
    return com.cleanmaster.security.timewall.db.a.a().a(paramHashMap);
  }
  
  public static boolean a(HashMap<Integer, ? extends com.cleanmaster.ui.floatwindow.c.r> paramHashMap, int paramInt)
  {
    if (paramInt != 0)
    {
      paramHashMap = (com.cleanmaster.ui.floatwindow.c.r)paramHashMap.get(Integer.valueOf(paramInt));
      if (paramHashMap == null) {
        return false;
      }
      paramInt = N(paramInt);
      if (paramHashMap.d == 1)
      {
        if (com.cleanmaster.base.util.c.a.b() - paramHashMap.b > 0)
        {
          paramHashMap.a();
          return false;
        }
        return true;
      }
      if (com.cleanmaster.base.util.c.a.b() - paramHashMap.b >= 2)
      {
        paramHashMap.a();
        return false;
      }
      return paramHashMap.c > paramInt;
    }
    return true;
  }
  
  public static boolean a(List<ProcCloudDefine.CLOUD_APP_FILTER> paramList, int paramInt1, int paramInt2, boolean paramBoolean1, boolean paramBoolean2)
  {
    boolean bool1 = false;
    boolean bool2 = bool1;
    if (paramList != null)
    {
      if (paramList.size() <= 0) {
        bool2 = bool1;
      }
    }
    else {
      return bool2;
    }
    paramList = paramList.iterator();
    bool1 = false;
    label37:
    while (paramList.hasNext())
    {
      ProcCloudDefine.CLOUD_APP_FILTER localCLOUD_APP_FILTER = (ProcCloudDefine.CLOUD_APP_FILTER)paramList.next();
      if (localCLOUD_APP_FILTER != null)
      {
        if (ProcCloudDefine.CLOUD_APP_FILTER.FILTER_HIDE_APP == localCLOUD_APP_FILTER)
        {
          if (!paramBoolean1) {
            break label182;
          }
          bool1 = true;
        }
        label182:
        for (;;)
        {
          bool2 = bool1;
          if (bool1) {
            break;
          }
          break label37;
          if (ProcCloudDefine.CLOUD_APP_FILTER.FILTER_SYSTEM_APP == localCLOUD_APP_FILTER)
          {
            if (paramInt1 == 4) {
              bool1 = true;
            }
          }
          else if (ProcCloudDefine.CLOUD_APP_FILTER.FILTER_SYSCORE_APP == localCLOUD_APP_FILTER)
          {
            if (paramBoolean2) {
              bool1 = true;
            }
          }
          else if (ProcCloudDefine.CLOUD_APP_FILTER.FILTER_SYSUPDATE_APP == localCLOUD_APP_FILTER)
          {
            if ((paramInt2 & 0x80) == 128) {
              bool1 = true;
            }
          }
          else if ((ProcCloudDefine.CLOUD_APP_FILTER.FILTER_SYSNOUPDATE_APP == localCLOUD_APP_FILTER) && (paramInt1 == 4) && ((paramInt2 & 0x80) != 128)) {
            bool1 = true;
          }
        }
      }
    }
    return bool1;
  }
  
  private static boolean a(List<View> paramList, View paramView, int paramInt)
  {
    boolean bool2 = false;
    int i1 = 0;
    for (;;)
    {
      boolean bool1 = bool2;
      if (i1 < paramInt)
      {
        if (paramList.get(i1) == paramView) {
          bool1 = true;
        }
      }
      else {
        return bool1;
      }
      i1 += 1;
    }
  }
  
  private static boolean a(List<com.cleanmaster.boost.powerengine.process.clond.ext.m> paramList, com.cleanmaster.boost.powerengine.process.clond.ext.n paramN, com.cleanmaster.boost.powerengine.process.clond.ext.o paramO)
  {
    boolean bool2 = true;
    if (paramN == null) {}
    for (Object localObject1 = null; (localObject1 == null) || (((List)localObject1).size() <= 0) || (paramList == null) || (paramList.size() <= 0); localObject1 = paramN.a)
    {
      bool2 = false;
      return bool2;
    }
    localObject1 = ((List)localObject1).iterator();
    int i1 = 0;
    boolean bool1 = bool2;
    com.cleanmaster.boost.powerengine.process.clond.ext.l localL;
    Object localObject2;
    if (((Iterator)localObject1).hasNext())
    {
      localL = (com.cleanmaster.boost.powerengine.process.clond.ext.l)((Iterator)localObject1).next();
      localObject2 = paramList.iterator();
      com.cleanmaster.boost.powerengine.process.clond.ext.m localM;
      do
      {
        if (!((Iterator)localObject2).hasNext()) {
          break;
        }
        localM = (com.cleanmaster.boost.powerengine.process.clond.ext.m)((Iterator)localObject2).next();
      } while (ProcCloudRuleDefine.ENUM_MATCH.em_rule_match != localM.a(localL));
    }
    for (int i2 = 1;; i2 = 0)
    {
      int i3;
      if ((paramO != null) && (!TextUtils.isEmpty(localL.a)) && (!TextUtils.isEmpty(localL.b)))
      {
        if (!"exist".equals(localL.b)) {
          break label355;
        }
        localObject2 = new StringBuilder().append(paramO.g).append(localL.a).append("_e=");
        if (i2 == 0) {
          break label349;
        }
        i3 = 1;
        label216:
        paramO.g = (i3 + "&");
      }
      for (;;)
      {
        if (i2 == 0)
        {
          bool1 = false;
          if ((!TextUtils.isEmpty(paramO.g)) && (paramO != null) && (paramO.g.endsWith("&"))) {
            paramO.g = paramO.g.substring(0, paramO.g.length() - 1);
          }
          bool2 = bool1;
          if (!bool1) {
            break;
          }
          bool2 = bool1;
          if (paramO == null) {
            break;
          }
          bool2 = bool1;
          if (i1 == 0) {
            break;
          }
          if (paramO.h == null) {
            paramO.h = new ArrayList();
          }
          paramO.h.add(paramN);
          return bool1;
          label349:
          i3 = 0;
          break label216;
          label355:
          if ("lasttime".equals(localL.b))
          {
            localObject2 = new StringBuilder().append(paramO.g).append(localL.a).append("_l=");
            if (i2 != 0) {}
            for (i3 = 1;; i3 = 0)
            {
              paramO.g = (i3 + "&");
              break;
            }
          }
          if ("size".equals(localL.b))
          {
            localObject2 = new StringBuilder().append(paramO.g).append(localL.a).append("_s=");
            if (i2 != 0) {}
            for (i3 = 1;; i3 = 0)
            {
              paramO.g = (i3 + "&");
              break;
            }
          }
          if ("disable".equals(localL.b))
          {
            localObject2 = new StringBuilder().append(paramO.g).append(localL.a).append("_d=");
            if (i2 != 0) {}
            for (i3 = 1;; i3 = 0)
            {
              paramO.g = (i3 + "&");
              break;
            }
          }
          if ("delaytime".equals(localL.b))
          {
            localObject2 = new StringBuilder().append(paramO.g).append(localL.a).append("_dt=");
            if (i2 != 0) {}
            for (i3 = 1;; i3 = 0)
            {
              paramO.g = (i3 + "&");
              break;
            }
          }
          if ("bgtime".equals(localL.b))
          {
            localObject2 = new StringBuilder().append(paramO.g).append(localL.a).append("_bgt=");
            if (i2 != 0) {}
            for (i3 = 1;; i3 = 0)
            {
              paramO.g = (i3 + "&");
              break;
            }
          }
          if ("fgtime".equals(localL.b))
          {
            localObject2 = new StringBuilder().append(paramO.g).append(localL.a).append("_fgt=");
            if (i2 != 0) {}
            for (i3 = 1;; i3 = 0)
            {
              paramO.g = (i3 + "&");
              break;
            }
          }
        }
      }
      if (localL.a()) {
        i1 = 1;
      }
      for (;;)
      {
        break;
      }
    }
  }
  
  public static boolean a(List<Long> paramList, String paramString)
  {
    boolean bool2 = false;
    boolean bool1 = bool2;
    if (!TextUtils.isEmpty(paramString))
    {
      bool1 = bool2;
      if (paramList != null)
      {
        bool1 = bool2;
        if (paramList.size() > 0)
        {
          long l1 = com.cleanmaster.utilext.c.a(paramString);
          bool1 = bool2;
          if (0L != l1) {
            bool1 = paramList.contains(Long.valueOf(l1));
          }
        }
      }
    }
    return bool1;
  }
  
  public static <T> boolean a(List<T> paramList, Comparator<? super T> paramComparator)
  {
    if ((paramList == null) || (paramList.isEmpty())) {
      return false;
    }
    switch (paramList.size())
    {
    default: 
      paramList = new com.cleanmaster.base.util.g.a(paramList, paramComparator);
      if (paramList.a < 3) {
        return false;
      }
      break;
    case 1: 
      return true;
    case 2: 
      Collections.sort(paramList, paramComparator);
      return true;
    }
    int i1 = paramList.a - 1 - 1 >> 1;
    while (i1 >= 0)
    {
      a(paramList, i1);
      i1 -= 1;
    }
    i1 = 5;
    for (;;)
    {
      paramList.b(0, paramList.a - 1);
      i1 -= 1;
      if (i1 <= 0) {
        break;
      }
      int i2 = paramList.a - 1;
      paramList.a = i2;
      if (i2 <= 0) {
        break;
      }
      a(paramList, 0);
    }
    return true;
  }
  
  public static boolean a(List<com.cleanmaster.boost.powerengine.process.clond.ext.m> paramList, List<com.cleanmaster.boost.powerengine.process.clond.ext.n> paramList1, com.cleanmaster.boost.powerengine.process.clond.ext.o paramO, boolean paramBoolean)
  {
    boolean bool2;
    if ((paramList1 == null) || (paramList1.size() <= 0) || (paramList == null) || (paramList.size() <= 0))
    {
      bool2 = false;
      return bool2;
    }
    if (paramBoolean) {
      paramO.g += "#";
    }
    paramList1 = paramList1.iterator();
    for (boolean bool1 = false;; bool1 = bool2)
    {
      bool2 = bool1;
      if (!paramList1.hasNext()) {
        break;
      }
      com.cleanmaster.boost.powerengine.process.clond.ext.n localN = (com.cleanmaster.boost.powerengine.process.clond.ext.n)paramList1.next();
      bool2 = bool1;
      if (localN != null)
      {
        if (a(paramList, localN, paramO)) {
          bool1 = true;
        }
        paramO.g += ";";
        bool2 = bool1;
        if (!paramBoolean)
        {
          bool2 = bool1;
          if (bool1) {
            break;
          }
          bool2 = bool1;
        }
      }
    }
  }
  
  /* Error */
  private static boolean a(JSONObject paramJSONObject, File paramFile)
  {
    // Byte code:
    //   0: new 11105	java/io/ByteArrayInputStream
    //   3: dup
    //   4: aload_0
    //   5: invokevirtual 728	org/json/JSONObject:toString	()Ljava/lang/String;
    //   8: invokevirtual 694	java/lang/String:getBytes	()[B
    //   11: invokespecial 11106	java/io/ByteArrayInputStream:<init>	([B)V
    //   14: astore_0
    //   15: aload_0
    //   16: aload_1
    //   17: invokestatic 11108	LibcoreWrapper/a:b	(Ljava/io/InputStream;Ljava/io/File;)Z
    //   20: istore_2
    //   21: aload_0
    //   22: invokevirtual 11109	java/io/ByteArrayInputStream:close	()V
    //   25: iload_2
    //   26: ireturn
    //   27: astore_1
    //   28: aload_0
    //   29: invokevirtual 11109	java/io/ByteArrayInputStream:close	()V
    //   32: aload_1
    //   33: athrow
    //   34: astore_0
    //   35: iload_2
    //   36: ireturn
    //   37: astore_0
    //   38: goto -6 -> 32
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	41	0	paramJSONObject	JSONObject
    //   0	41	1	paramFile	File
    //   20	16	2	bool	boolean
    // Exception table:
    //   from	to	target	type
    //   15	21	27	finally
    //   21	25	34	java/lang/Exception
    //   28	32	37	java/lang/Exception
  }
  
  public static boolean a(JSONObject paramJSONObject, String paramString)
  {
    return a(paramJSONObject, new File(paramString));
  }
  
  private static boolean a(Node paramNode, String paramString, List<String> paramList)
  {
    if ((paramString == null) || (paramList == null)) {}
    do
    {
      return true;
      paramNode = paramNode.getAttributes();
      if (paramNode == null) {
        break;
      }
      paramNode = paramNode.getNamedItem(paramString);
    } while ((paramNode != null) && (paramList.contains(paramNode.getNodeValue())));
    return false;
  }
  
  public static boolean a(short paramShort)
  {
    return (paramShort >= 0) && (paramShort < 9);
  }
  
  public static boolean a(boolean paramBoolean, com.cleanmaster.boost.boostengine.autostart.a.a paramA)
  {
    boolean bool2 = false;
    boolean bool1 = bool2;
    if (paramA != null)
    {
      bool1 = bool2;
      if (!TextUtils.isEmpty(paramA.a))
      {
        com.cleanmaster.boost.boostengine.a.b localB = new com.cleanmaster.boost.boostengine.a.b();
        localB.a = com.cleanmaster.boost.boostengine.a.b;
        com.cleanmaster.boost.boostengine.autostart.b localB1 = new com.cleanmaster.boost.boostengine.autostart.b();
        localB1.a = paramBoolean;
        localB1.c.add(paramA);
        localB.b.put(Integer.valueOf(com.cleanmaster.boost.boostengine.a.b), localB1);
        paramA = new com.cleanmaster.boost.boostengine.a.a(com.keniu.security.d.a().getApplicationContext(), localB).a(com.cleanmaster.boost.boostengine.a.b);
        bool1 = bool2;
        if (paramA != null)
        {
          bool1 = bool2;
          if ((paramA instanceof com.cleanmaster.boost.boostengine.autostart.d))
          {
            paramA = ((com.cleanmaster.boost.boostengine.autostart.d)paramA).c();
            bool1 = bool2;
            if (paramA.size() == 1)
            {
              paramA = (com.cleanmaster.boost.boostengine.autostart.a.a)paramA.get(0);
              if ((paramA == null) || (paramA.k != paramBoolean)) {
                break label169;
              }
            }
          }
        }
      }
    }
    label169:
    for (paramBoolean = true;; paramBoolean = false)
    {
      bool1 = paramBoolean;
      return bool1;
    }
  }
  
  public static boolean a(boolean paramBoolean, List<com.in2wow.sdk.model.a.a.a> paramList)
  {
    paramList = paramList.iterator();
    com.in2wow.sdk.model.a.a.a localA;
    do
    {
      if (!paramList.hasNext()) {
        return true;
      }
      localA = (com.in2wow.sdk.model.a.a.a)paramList.next();
      if ((localA == com.in2wow.sdk.model.a.a.a.b) && (!paramBoolean)) {
        return false;
      }
    } while ((localA != com.in2wow.sdk.model.a.a.a.c) || (!paramBoolean));
    return false;
  }
  
  public static boolean a(byte[] paramArrayOfByte1, short paramShort1, short paramShort2, int paramInt, byte[] paramArrayOfByte2, byte[] paramArrayOfByte3, short paramShort3)
  {
    com.cleanmaster.base.util.b.b.a(paramShort1, paramArrayOfByte1, 0);
    paramArrayOfByte1[6] = 1;
    com.cleanmaster.base.util.b.b.a(paramShort2, paramArrayOfByte1, 7);
    com.cleanmaster.base.util.b.b.a(paramInt, paramArrayOfByte1, 9);
    System.arraycopy(paramArrayOfByte2, 0, paramArrayOfByte1, 13, 6);
    System.arraycopy(paramArrayOfByte3, 0, paramArrayOfByte1, 19, paramArrayOfByte3.length);
    com.cleanmaster.base.util.b.b.a(paramShort3, paramArrayOfByte1, 43);
    return true;
  }
  
  public static boolean a(byte[] paramArrayOfByte1, short paramShort, byte[] paramArrayOfByte2)
  {
    com.cleanmaster.base.util.b.b.a(paramArrayOfByte1, 9, paramShort - 9, paramArrayOfByte2);
    CRC32 localCRC32 = new CRC32();
    localCRC32.update(paramArrayOfByte1, 6, paramShort - 6);
    localCRC32.update(paramArrayOfByte2);
    com.cleanmaster.base.util.b.b.a((int)localCRC32.getValue(), paramArrayOfByte1, 2);
    return true;
  }
  
  public static boolean a(File[] paramArrayOfFile, File paramFile)
  {
    for (;;)
    {
      int i1;
      try
      {
        byte[] arrayOfByte = new byte['Ѐ'];
        paramFile = new ZipOutputStream(new FileOutputStream(paramFile));
        i1 = 0;
        if (i1 < paramArrayOfFile.length)
        {
          if (paramArrayOfFile[i1].exists())
          {
            FileInputStream localFileInputStream = new FileInputStream(paramArrayOfFile[i1]);
            paramFile.putNextEntry(new ZipEntry(paramArrayOfFile[i1].getName()));
            int i2 = localFileInputStream.read(arrayOfByte, 0, 1024);
            if (i2 > 0)
            {
              paramFile.write(arrayOfByte, 0, i2);
              continue;
            }
            localFileInputStream.close();
          }
        }
        else
        {
          paramFile.flush();
          paramFile.close();
          return true;
        }
      }
      catch (IOException paramArrayOfFile)
      {
        return false;
      }
      catch (FileNotFoundException paramArrayOfFile)
      {
        return false;
      }
      i1 += 1;
    }
  }
  
  public static byte[] a(int paramInt, ByteOrder paramByteOrder)
  {
    int i4 = 0;
    int i1;
    int i2;
    if (paramByteOrder == ByteOrder.BIG_ENDIAN)
    {
      i1 = 3;
      i2 = -1;
    }
    for (;;)
    {
      paramByteOrder = new byte[4];
      int i3 = paramInt;
      paramInt = i4;
      while (paramInt < 4)
      {
        paramByteOrder[i1] = ((byte)i3);
        i3 >>= 8;
        i1 += i2;
        paramInt += 1;
      }
      i2 = 1;
      i1 = 0;
    }
    return paramByteOrder;
  }
  
  public static byte[] a(Parcel paramParcel)
  {
    if (paramParcel != null) {
      return paramParcel.marshall();
    }
    return null;
  }
  
  public static byte[] a(String paramString, Collection<com.cleanmaster.cleancloud.core.security.d> paramCollection)
  {
    Object localObject1 = new ArrayList();
    paramCollection = paramCollection.iterator();
    while (paramCollection.hasNext())
    {
      Object localObject2 = (com.cleanmaster.cleancloud.core.security.d)paramCollection.next();
      if ((!TextUtils.isEmpty(((com.cleanmaster.cleancloud.core.security.d)localObject2).a)) && (!TextUtils.isEmpty(((com.cleanmaster.cleancloud.core.security.d)localObject2).b)) && (((com.cleanmaster.cleancloud.core.security.d)localObject2).b.length() < 50))
      {
        String str = ((com.cleanmaster.cleancloud.core.security.d)localObject2).a;
        localObject2 = ((com.cleanmaster.cleancloud.core.security.d)localObject2).b;
        com.cleanmaster.cleancloud.core.security.b localB = new com.cleanmaster.cleancloud.core.security.b();
        localB.a = str;
        localB.c = ((String)localObject2);
        ((List)localObject1).add(localB);
      }
    }
    if (((List)localObject1).isEmpty()) {
      return null;
    }
    paramCollection = new com.cleanmaster.cleancloud.core.security.c();
    paramCollection.a = 81;
    paramCollection.b = 1;
    if (paramString != null) {
      paramCollection.c = paramString;
    }
    paramString = new com.cleanmaster.cleancloud.core.security.a();
    paramString.a = paramCollection;
    paramString.b = 0;
    paramString.c = new ArrayList();
    paramCollection = ((List)localObject1).iterator();
    while (paramCollection.hasNext())
    {
      localObject1 = (com.cleanmaster.cleancloud.core.security.b)paramCollection.next();
      if (localObject1 != null)
      {
        paramString.c.add(localObject1);
        paramString.b += 1;
      }
    }
    return paramString.a();
  }
  
  public static Bundle[] a(aj[] paramArrayOfAj)
  {
    if (paramArrayOfAj == null) {
      return null;
    }
    Bundle[] arrayOfBundle = new Bundle[paramArrayOfAj.length];
    int i1 = 0;
    while (i1 < paramArrayOfAj.length)
    {
      aj localAj = paramArrayOfAj[i1];
      Bundle localBundle = new Bundle();
      localBundle.putString("resultKey", localAj.a());
      localBundle.putCharSequence("label", localAj.b());
      localBundle.putCharSequenceArray("choices", localAj.c());
      localBundle.putBoolean("allowFreeFormInput", localAj.d());
      localBundle.putBundle("extras", localAj.e());
      arrayOfBundle[i1] = localBundle;
      i1 += 1;
    }
    return arrayOfBundle;
  }
  
  public static String[] a(Context paramContext, String... paramVarArgs)
  {
    int i2 = 0;
    ArrayList localArrayList = new ArrayList(paramVarArgs.length);
    int i1 = 0;
    if (i1 < paramVarArgs.length)
    {
      if (!TextUtils.isEmpty(paramVarArgs[i1]))
      {
        if ((Build.VERSION.SDK_INT >= 16) || (!paramVarArgs[i1].equals("android.permission.READ_EXTERNAL_STORAGE"))) {
          break label73;
        }
        if (com.cleanmaster.applocklib.bridge.b.a) {
          Log.d("PermissionGuardUtil", "No need to check READ_EXTERNAL_STORAGE under api 16");
        }
      }
      for (;;)
      {
        i1 += 1;
        break;
        label73:
        if (a(paramContext, paramVarArgs[i1]) != 0) {
          localArrayList.add(paramVarArgs[i1]);
        }
      }
    }
    if ((com.cleanmaster.applocklib.bridge.b.a) && (localArrayList.size() > 0))
    {
      paramContext = new StringBuilder("not granted permissions\n");
      i1 = i2;
      while (i1 < localArrayList.size())
      {
        paramContext.append("  ").append((String)localArrayList.get(i1)).append(",");
        i1 += 1;
      }
      Log.d("PermissionGuardUtil", paramContext.toString());
    }
    return (String[])localArrayList.toArray(new String[localArrayList.size()]);
  }
  
  public static MediaAdView aA(Context paramContext)
  {
    return new MediaAdView(paramContext);
  }
  
  public static String aA(String paramString)
  {
    try
    {
      if (s == null) {
        s = r.getSharedPreferences(t, 0);
      }
      paramString = s.getString("config_cache", paramString);
    }
    catch (Exception paramString)
    {
      for (;;)
      {
        new StringBuilder("get cache json error...").append(paramString.getMessage());
        paramString = "";
      }
    }
    finally {}
    return paramString;
  }
  
  public static boolean aA()
  {
    if (a("process_settings", "abnormal_stop_acc_enabled", true))
    {
      int i1 = g("process_settings", "abnormal_stop_acc_mcc");
      int i2 = i("process_settings", "abnormal_stop_acc_rate");
      if ((i1 == 20) || (i1 == 24))
      {
        i1 = 1;
        if ((i2 != 26) && (i2 != 20)) {
          break label76;
        }
      }
      label76:
      for (i2 = 1;; i2 = 0)
      {
        if ((i1 == 0) || (i2 == 0)) {
          break label81;
        }
        return true;
        i1 = 0;
        break;
      }
      label81:
      return false;
    }
    return false;
  }
  
  public static ks.cm.antivirus.applock.a.b aB(Context paramContext)
  {
    paramContext = new ks.cm.antivirus.applock.a.a(paramContext, null);
    ks.cm.antivirus.common.ui.a.a localA = paramContext.a;
    if (localA.g != null) {
      localA.g.setVisibility(8);
    }
    localA.b();
    localA = paramContext.a;
    if (localA.f != null) {
      localA.f.setVisibility(8);
    }
    localA.b();
    return paramContext;
  }
  
  public static void aB(String paramString)
  {
    try
    {
      if (s == null) {
        s = r.getSharedPreferences(t, 0);
      }
      SharedPreferences.Editor localEditor = s.edit();
      localEditor.putString("config_cache", paramString);
      a(localEditor);
    }
    catch (Exception paramString)
    {
      for (;;)
      {
        new StringBuilder("save cache json error...").append(paramString.getMessage());
      }
    }
    finally {}
  }
  
  public static boolean aB()
  {
    Object localObject = d("boost_power", "quick_power_saver_open_xaid", "1,e,5,d");
    if (TextUtils.isEmpty((CharSequence)localObject)) {}
    for (;;)
    {
      return false;
      if ("all".equalsIgnoreCase((String)localObject)) {
        return true;
      }
      if (!"none".equalsIgnoreCase((String)localObject))
      {
        localObject = ((String)localObject).split(",");
        if ((localObject != null) && (localObject.length > 0))
        {
          String str = p(com.keniu.security.d.a());
          if (!TextUtils.isEmpty(str))
          {
            str = str.substring(str.length() - 1);
            int i2 = localObject.length;
            int i1 = 0;
            while (i1 < i2)
            {
              if (localObject[i1].equalsIgnoreCase(str)) {
                return true;
              }
              i1 += 1;
            }
          }
        }
      }
    }
  }
  
  public static long aC()
  {
    return a("boost_power", "power_screen_off_time_min", 120L);
  }
  
  public static String aC(String paramString)
  {
    String str = "";
    if (paramString.equals("fb_l")) {
      str = "low";
    }
    for (;;)
    {
      return String.format("%s.%s", new Object[] { "com.facebook.ad", str });
      if (paramString.equals("fb_b")) {
        str = "balance";
      } else if (paramString.equals("fb_h")) {
        str = "hight";
      }
    }
  }
  
  /* Error */
  public static ArrayList<ContentValues> aC(Context paramContext)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_2
    //   2: aconst_null
    //   3: astore_3
    //   4: aconst_null
    //   5: astore 4
    //   7: getstatic 336	android/os/Build$VERSION:SDK_INT	I
    //   10: bipush 19
    //   12: if_icmplt +61 -> 73
    //   15: aload_0
    //   16: ldc_w 11280
    //   19: iconst_0
    //   20: invokevirtual 11284	android/content/Context:getDir	(Ljava/lang/String;I)Ljava/io/File;
    //   23: astore_0
    //   24: aload_0
    //   25: invokevirtual 468	java/io/File:exists	()Z
    //   28: ifne +13 -> 41
    //   31: aconst_null
    //   32: astore_0
    //   33: aload_0
    //   34: ifnonnull +67 -> 101
    //   37: aconst_null
    //   38: astore_3
    //   39: aload_3
    //   40: areturn
    //   41: new 464	java/io/File
    //   44: dup
    //   45: aload_0
    //   46: ldc_w 11286
    //   49: invokespecial 1668	java/io/File:<init>	(Ljava/io/File;Ljava/lang/String;)V
    //   52: astore_0
    //   53: aload_0
    //   54: invokevirtual 468	java/io/File:exists	()Z
    //   57: ifne +8 -> 65
    //   60: aconst_null
    //   61: astore_0
    //   62: goto -29 -> 33
    //   65: aload_0
    //   66: invokevirtual 754	java/io/File:getAbsolutePath	()Ljava/lang/String;
    //   69: astore_0
    //   70: goto -37 -> 33
    //   73: aload_0
    //   74: ldc_w 11288
    //   77: invokevirtual 11291	android/content/Context:getDatabasePath	(Ljava/lang/String;)Ljava/io/File;
    //   80: astore_0
    //   81: aload_0
    //   82: invokevirtual 468	java/io/File:exists	()Z
    //   85: ifne +8 -> 93
    //   88: aconst_null
    //   89: astore_0
    //   90: goto -57 -> 33
    //   93: aload_0
    //   94: invokevirtual 754	java/io/File:getAbsolutePath	()Ljava/lang/String;
    //   97: astore_0
    //   98: goto -65 -> 33
    //   101: aload_0
    //   102: aconst_null
    //   103: iconst_0
    //   104: invokestatic 11295	android/database/sqlite/SQLiteDatabase:openDatabase	(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)Landroid/database/sqlite/SQLiteDatabase;
    //   107: astore_0
    //   108: new 149	java/lang/StringBuilder
    //   111: dup
    //   112: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   115: getstatic 11298	ks/cm/antivirus/privatebrowsing/l$a:a	Ljava/lang/String;
    //   118: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   121: ldc_w 11300
    //   124: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   127: getstatic 11298	ks/cm/antivirus/privatebrowsing/l$a:a	Ljava/lang/String;
    //   130: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   133: ldc_w 11302
    //   136: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   139: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   142: astore_2
    //   143: invokestatic 11305	ks/cm/antivirus/privatebrowsing/l$a:b	()[Ljava/lang/String;
    //   146: astore 5
    //   148: invokestatic 11307	ks/cm/antivirus/privatebrowsing/l$a:a	()[Ljava/lang/String;
    //   151: astore 6
    //   153: aload_0
    //   154: ldc_w 11309
    //   157: aconst_null
    //   158: aload_2
    //   159: iconst_2
    //   160: anewarray 174	java/lang/String
    //   163: dup
    //   164: iconst_0
    //   165: ldc_w 11311
    //   168: aastore
    //   169: dup
    //   170: iconst_1
    //   171: ldc_w 11313
    //   174: aastore
    //   175: aconst_null
    //   176: aconst_null
    //   177: aconst_null
    //   178: invokevirtual 11316	android/database/sqlite/SQLiteDatabase:query	(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
    //   181: astore_3
    //   182: aload_3
    //   183: ifnull +185 -> 368
    //   186: new 981	java/util/ArrayList
    //   189: dup
    //   190: invokespecial 1804	java/util/ArrayList:<init>	()V
    //   193: astore_2
    //   194: aload_3
    //   195: invokeinterface 6297 1 0
    //   200: istore_1
    //   201: iload_1
    //   202: ifeq +24 -> 226
    //   205: aload_2
    //   206: aload_3
    //   207: aload 5
    //   209: aload 6
    //   211: invokestatic 11318	LibcoreWrapper/a:a	(Landroid/database/Cursor;[Ljava/lang/String;[Ljava/lang/String;)Landroid/content/ContentValues;
    //   214: invokevirtual 1032	java/util/ArrayList:add	(Ljava/lang/Object;)Z
    //   217: pop
    //   218: goto -24 -> 194
    //   221: astore 4
    //   223: goto -29 -> 194
    //   226: aload_3
    //   227: ifnull +18 -> 245
    //   230: aload_3
    //   231: invokeinterface 11321 1 0
    //   236: ifne +9 -> 245
    //   239: aload_3
    //   240: invokeinterface 6298 1 0
    //   245: aload_0
    //   246: ifnull +7 -> 253
    //   249: aload_0
    //   250: invokevirtual 11322	android/database/sqlite/SQLiteDatabase:close	()V
    //   253: aload_2
    //   254: areturn
    //   255: astore_3
    //   256: aconst_null
    //   257: astore_2
    //   258: aload 4
    //   260: ifnull +20 -> 280
    //   263: aload 4
    //   265: invokeinterface 11321 1 0
    //   270: ifne +10 -> 280
    //   273: aload 4
    //   275: invokeinterface 6298 1 0
    //   280: aload_3
    //   281: athrow
    //   282: astore_3
    //   283: aload_2
    //   284: astore_3
    //   285: aload_0
    //   286: astore_2
    //   287: aload_3
    //   288: astore_0
    //   289: aload_0
    //   290: astore_3
    //   291: aload_2
    //   292: ifnull -253 -> 39
    //   295: aload_2
    //   296: invokevirtual 11322	android/database/sqlite/SQLiteDatabase:close	()V
    //   299: aload_0
    //   300: areturn
    //   301: astore_2
    //   302: aload_3
    //   303: astore_0
    //   304: aload_0
    //   305: ifnull +7 -> 312
    //   308: aload_0
    //   309: invokevirtual 11322	android/database/sqlite/SQLiteDatabase:close	()V
    //   312: aload_2
    //   313: athrow
    //   314: astore_2
    //   315: goto -11 -> 304
    //   318: astore_0
    //   319: aconst_null
    //   320: astore_0
    //   321: goto -32 -> 289
    //   324: astore_2
    //   325: aconst_null
    //   326: astore_3
    //   327: aload_0
    //   328: astore_2
    //   329: aload_3
    //   330: astore_0
    //   331: goto -42 -> 289
    //   334: astore_3
    //   335: aload_0
    //   336: astore_3
    //   337: aload_2
    //   338: astore_0
    //   339: aload_3
    //   340: astore_2
    //   341: goto -52 -> 289
    //   344: astore 5
    //   346: aconst_null
    //   347: astore_2
    //   348: aload_3
    //   349: astore 4
    //   351: aload 5
    //   353: astore_3
    //   354: goto -96 -> 258
    //   357: astore 5
    //   359: aload_3
    //   360: astore 4
    //   362: aload 5
    //   364: astore_3
    //   365: goto -107 -> 258
    //   368: aconst_null
    //   369: astore_2
    //   370: goto -144 -> 226
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	373	0	paramContext	Context
    //   200	2	1	bool	boolean
    //   1	295	2	localObject1	Object
    //   301	12	2	localObject2	Object
    //   314	1	2	localObject3	Object
    //   324	1	2	localException1	Exception
    //   328	42	2	localObject4	Object
    //   3	237	3	localObject5	Object
    //   255	26	3	localObject6	Object
    //   282	1	3	localException2	Exception
    //   284	46	3	localObject7	Object
    //   334	1	3	localException3	Exception
    //   336	29	3	localObject8	Object
    //   5	1	4	localObject9	Object
    //   221	53	4	localException4	Exception
    //   349	12	4	localObject10	Object
    //   146	62	5	arrayOfString1	String[]
    //   344	8	5	localObject11	Object
    //   357	6	5	localObject12	Object
    //   151	59	6	arrayOfString2	String[]
    // Exception table:
    //   from	to	target	type
    //   205	218	221	java/lang/Exception
    //   153	182	255	finally
    //   263	280	282	java/lang/Exception
    //   280	282	282	java/lang/Exception
    //   101	108	301	finally
    //   108	153	314	finally
    //   230	245	314	finally
    //   263	280	314	finally
    //   280	282	314	finally
    //   101	108	318	java/lang/Exception
    //   108	153	324	java/lang/Exception
    //   230	245	334	java/lang/Exception
    //   186	194	344	finally
    //   194	201	357	finally
    //   205	218	357	finally
  }
  
  public static void aD()
  {
    Object localObject = com.cleanmaster.cleancloud.core.falseproc.g.a();
    com.cleanmaster.cleancloud.n localN = com.cleanmaster.cleancloud.n.a();
    localObject = new g.2((com.cleanmaster.cleancloud.core.falseproc.g)localObject);
    localN.a.b((Runnable)localObject);
  }
  
  public static void aD(Context paramContext)
  {
    if (System.currentTimeMillis() - com.cleanmaster.configmanager.d.a(paramContext).a("last_lbm_notify_achievement_show_time", 0L) < 86400000L) {
      return;
    }
    com.cleanmaster.boost.lowbatterymode.c.d().a(2, new com.cleanmaster.boost.lowbatterymode.i(paramContext), -1L, com.cleanmaster.boost.lowbatterymode.h.b(), -1, false);
  }
  
  public static void aD(String paramString)
  {
    Log.e("ASSURE fail", paramString);
  }
  
  public static File aE(Context paramContext)
  {
    return new File(android.support.percent.a.t(paramContext) + "/rootkeeper.jar");
  }
  
  public static String aE(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {}
    for (;;)
    {
      return null;
      Context localContext = android.support.v4.a.d.a;
      if (localContext != null) {
        try
        {
          paramString = localContext.getPackageManager().getPackageInfo(paramString, 0);
          if (paramString != null)
          {
            paramString = paramString.applicationInfo.loadLabel(localContext.getPackageManager()).toString();
            return paramString;
          }
        }
        catch (Exception paramString)
        {
          paramString.printStackTrace();
        }
      }
    }
    return null;
  }
  
  public static com.cleanmaster.cleancloud.core.falseproc.b[] aE()
  {
    com.cleanmaster.cleancloud.core.falseproc.b[] arrayOfB = new com.cleanmaster.cleancloud.core.falseproc.b[2];
    com.cleanmaster.cleancloud.core.falseproc.b localB1 = new com.cleanmaster.cleancloud.core.falseproc.b();
    com.cleanmaster.cleancloud.core.falseproc.b localB2 = new com.cleanmaster.cleancloud.core.falseproc.b();
    arrayOfB[0] = localB1;
    arrayOfB[1] = localB2;
    TreeMap localTreeMap = KFalseDBHelper.h().j();
    if (localTreeMap == null)
    {
      localB1.a = 0;
      localB2.a = 0;
      return arrayOfB;
    }
    localB1.a = KFalseDBHelper.a(localTreeMap, "pkgquery");
    localB2.a = KFalseDBHelper.a(localTreeMap, "hf_c_pkgquery");
    return arrayOfB;
  }
  
  public static boolean aF(Context paramContext)
  {
    return paramContext.getPackageManager().hasSystemFeature("android.hardware.type.watch");
  }
  
  public static boolean aF(String paramString)
  {
    return (paramString == null) || (paramString.trim().length() == 0);
  }
  
  public static com.cleanmaster.cleancloud.core.falseproc.q[] aF()
  {
    com.cleanmaster.cleancloud.core.falseproc.q[] arrayOfQ = new com.cleanmaster.cleancloud.core.falseproc.q[2];
    com.cleanmaster.cleancloud.core.falseproc.q localQ1 = new com.cleanmaster.cleancloud.core.falseproc.q();
    com.cleanmaster.cleancloud.core.falseproc.q localQ2 = new com.cleanmaster.cleancloud.core.falseproc.q();
    arrayOfQ[0] = localQ1;
    arrayOfQ[1] = localQ2;
    TreeMap localTreeMap = KFalseDBHelper.i().j();
    if (localTreeMap == null)
    {
      localQ1.b = 0;
      localQ1.a = 0;
      localQ1.c = 0;
      localQ2.b = 0;
      localQ2.a = 0;
      localQ2.c = 0;
      return arrayOfQ;
    }
    localQ1.b = KFalseDBHelper.a(localTreeMap, "pkgquery");
    localQ1.a = KFalseDBHelper.a(localTreeMap, "dirquery");
    localQ1.c = KFalseDBHelper.a(localTreeMap, "repkgquery");
    localQ2.b = KFalseDBHelper.a(localTreeMap, "hf_r_pkgquery");
    localQ2.a = KFalseDBHelper.a(localTreeMap, "hf_r_dirquery");
    localQ2.c = KFalseDBHelper.a(localTreeMap, "hf_r_repkgquery");
    return arrayOfQ;
  }
  
  public static int aG(String paramString)
  {
    try
    {
      if (TextUtils.isEmpty(paramString)) {
        return -1;
      }
      Date localDate = new Date();
      SimpleDateFormat localSimpleDateFormat = new SimpleDateFormat("yyyyMMdd");
      paramString = localSimpleDateFormat.parse(paramString);
      localDate = localSimpleDateFormat.parse(localSimpleDateFormat.format(localDate));
      if (localDate.getTime() >= paramString.getTime())
      {
        long l1 = (localDate.getTime() - paramString.getTime()) / 86400000L;
        return (int)l1;
      }
    }
    catch (Exception paramString) {}
    return -1;
  }
  
  private static String aG(Context paramContext)
  {
    if (paramContext == null) {
      return null;
    }
    if ((paramContext != null) && (Build.VERSION.SDK_INT >= 8))
    {
      localObject1 = paramContext.getExternalFilesDir(null);
      if (localObject1 == null) {
        break label138;
      }
    }
    Object localObject2;
    label138:
    for (Object localObject1 = ((File)localObject1).getAbsolutePath();; localObject2 = null) {
      try
      {
        if (TextUtils.isEmpty((CharSequence)localObject1))
        {
          paramContext = new File(Environment.getExternalStorageDirectory(), "/android/data/" + paramContext.getPackageName() + "/files/").getAbsolutePath();
          try
          {
            new File(paramContext + "/").mkdirs();
            return paramContext;
          }
          catch (Exception localException1) {}
          localException1.printStackTrace();
          return paramContext;
          localObject2 = null;
        }
      }
      catch (Exception localException2)
      {
        for (;;)
        {
          paramContext = localObject2;
          localObject2 = localException2;
          continue;
          paramContext = localObject2;
        }
      }
    }
  }
  
  public static Path aH(String paramString)
  {
    Path localPath = new Path();
    com.cmnow.weather.a.aw[] arrayOfAw = bt(paramString);
    if (arrayOfAw != null) {
      try
      {
        com.cmnow.weather.a.aw.a(arrayOfAw, localPath);
        return localPath;
      }
      catch (RuntimeException localRuntimeException)
      {
        throw new RuntimeException("Error in parsing " + paramString, localRuntimeException);
      }
    }
    return null;
  }
  
  public static boolean aH()
  {
    boolean bool2 = true;
    int i1 = com.cleanmaster.junk.d.m.a("junk_clean_cloud_eng_setting", "detected_result_upload_rate", 10000);
    boolean bool1 = bool2;
    if (i1 < 10000)
    {
      bool1 = bool2;
      if ((int)com.cleanmaster.junk.d.d.f() * 10000 <= i1) {
        bool1 = false;
      }
    }
    return bool1;
  }
  
  private static Account[] aH(Context paramContext)
  {
    paramContext = AccountManager.get(paramContext);
    try
    {
      paramContext = paramContext.getAccounts();
      return paramContext;
    }
    catch (Exception paramContext) {}
    return null;
  }
  
  private static float aI(Context paramContext)
  {
    return paramContext.getResources().getDisplayMetrics().density;
  }
  
  public static ApplicationInfo aI(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {}
    for (;;)
    {
      return null;
      Context localContext = com.cmnow.weather.sdk.k.a().b();
      if (localContext != null) {
        try
        {
          paramString = localContext.getPackageManager().getPackageInfo(paramString, 0);
          if (paramString != null)
          {
            paramString = paramString.applicationInfo;
            return paramString;
          }
        }
        catch (Exception paramString) {}
      }
    }
    return null;
  }
  
  public static boolean aI()
  {
    return a("APP_INDEXING_KEY", "APP_INDEXING_ENABLED", true);
  }
  
  public static String aJ(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return "";
    }
    float f1;
    if (paramString.contains("~"))
    {
      paramString = paramString.split("~");
      String str1 = paramString[0];
      String str2 = paramString[1];
      if ((paramString.length < 2) || (!bv(str1)) || (!bv(str2))) {
        return "";
      }
      try
      {
        Float.parseFloat(str1);
        f1 = Float.parseFloat(str2);
        if (f1 < 1.0F) {
          return "0";
        }
        if (f1 < 6.0F) {
          return "1";
        }
        if (f1 < 12.0F) {
          return "2";
        }
        if (f1 < 20.0F) {
          return "3";
        }
        if (f1 < 29.0F) {
          return "4";
        }
        if (f1 < 39.0F) {
          return "5";
        }
        if (f1 < 50.0F) {
          return "6";
        }
        if (f1 < 62.0F) {
          return "7";
        }
        if (f1 < 75.0F) {
          return "8";
        }
        if (f1 < 89.0F) {
          return "9";
        }
        if (f1 < 103.0F) {
          return "10";
        }
        if (f1 < 118.0F) {
          return "11";
        }
        return "12";
      }
      catch (Exception paramString)
      {
        return "";
      }
    }
    if (!bv(paramString)) {
      return "";
    }
    try
    {
      f1 = Float.parseFloat(paramString);
      if (f1 < 1.0F) {
        return "0";
      }
      if (f1 < 6.0F) {
        return "1";
      }
      if (f1 < 12.0F) {
        return "2";
      }
      if (f1 < 20.0F) {
        return "3";
      }
      if (f1 < 29.0F) {
        return "4";
      }
      if (f1 < 39.0F) {
        return "5";
      }
      if (f1 < 50.0F) {
        return "6";
      }
      if (f1 < 62.0F) {
        return "7";
      }
      if (f1 < 75.0F) {
        return "8";
      }
      if (f1 < 89.0F) {
        return "9";
      }
      if (f1 < 103.0F) {
        return "10";
      }
      if (f1 < 118.0F) {
        return "11";
      }
      return "12";
    }
    catch (Exception paramString) {}
    return "";
  }
  
  public static boolean aJ()
  {
    int i1 = g("process_settings", "check_mcc_high_mem_usage");
    int i2 = i("process_settings", "check_rate_high_mem_usage");
    return (20 == i1) && (20 == i2);
  }
  
  /* Error */
  private static boolean aJ(Context paramContext)
  {
    // Byte code:
    //   0: iconst_1
    //   1: istore_1
    //   2: ldc 2
    //   4: monitorenter
    //   5: invokestatic 11510	com/cleanmaster/base/util/system/o:i	()Z
    //   8: ifeq +64 -> 72
    //   11: invokestatic 144	com/keniu/security/d:a	()Landroid/content/Context;
    //   14: invokestatic 302	com/cleanmaster/configmanager/d:a	(Landroid/content/Context;)Lcom/cleanmaster/configmanager/d;
    //   17: iconst_1
    //   18: invokevirtual 11513	com/cleanmaster/configmanager/d:D	(Z)Z
    //   21: ifeq +46 -> 67
    //   24: getstatic 11517	com/cleanmaster/base/util/system/WorkerProcessUtils$ServiceInWorker:SCREEN_SAVER	Lcom/cleanmaster/base/util/system/WorkerProcessUtils$ServiceInWorker;
    //   27: getfield 7409	com/cleanmaster/base/util/system/WorkerProcessUtils$ServiceInWorker:isOn	Z
    //   30: ifne +37 -> 67
    //   33: getstatic 11520	com/cleanmaster/base/util/system/WorkerProcessUtils$ServiceInWorker:FLOAT_SWIPE	Lcom/cleanmaster/base/util/system/WorkerProcessUtils$ServiceInWorker;
    //   36: getfield 7409	com/cleanmaster/base/util/system/WorkerProcessUtils$ServiceInWorker:isOn	Z
    //   39: ifne +28 -> 67
    //   42: getstatic 11523	com/cleanmaster/base/util/system/WorkerProcessUtils$ServiceInWorker:FLOAT_WINDOW	Lcom/cleanmaster/base/util/system/WorkerProcessUtils$ServiceInWorker;
    //   45: getfield 7409	com/cleanmaster/base/util/system/WorkerProcessUtils$ServiceInWorker:isOn	Z
    //   48: ifne +19 -> 67
    //   51: getstatic 11526	com/cleanmaster/base/util/system/WorkerProcessUtils$ServiceInWorker:APP_LOCK	Lcom/cleanmaster/base/util/system/WorkerProcessUtils$ServiceInWorker;
    //   54: getfield 7409	com/cleanmaster/base/util/system/WorkerProcessUtils$ServiceInWorker:isOn	Z
    //   57: istore_2
    //   58: iload_2
    //   59: ifne +8 -> 67
    //   62: ldc 2
    //   64: monitorexit
    //   65: iload_1
    //   66: ireturn
    //   67: iconst_0
    //   68: istore_1
    //   69: goto -7 -> 62
    //   72: invokestatic 144	com/keniu/security/d:a	()Landroid/content/Context;
    //   75: invokestatic 302	com/cleanmaster/configmanager/d:a	(Landroid/content/Context;)Lcom/cleanmaster/configmanager/d;
    //   78: astore_3
    //   79: aload_3
    //   80: iconst_1
    //   81: invokevirtual 11513	com/cleanmaster/configmanager/d:D	(Z)Z
    //   84: ifeq +35 -> 119
    //   87: aload_3
    //   88: invokevirtual 8639	com/cleanmaster/configmanager/d:x	()Z
    //   91: ifne +28 -> 119
    //   94: aload_0
    //   95: invokestatic 11531	com/cleanmaster/configmanager/e:a	(Landroid/content/Context;)Lcom/cleanmaster/configmanager/e;
    //   98: ldc_w 11533
    //   101: iconst_0
    //   102: invokevirtual 11534	com/cleanmaster/configmanager/e:a	(Ljava/lang/String;Z)Z
    //   105: ifne +14 -> 119
    //   108: invokestatic 8645	com/cleanmaster/applock/a:a	()Lcom/cleanmaster/applock/a;
    //   111: invokevirtual 8647	com/cleanmaster/applock/a:e	()Z
    //   114: istore_2
    //   115: iload_2
    //   116: ifeq -54 -> 62
    //   119: iconst_0
    //   120: istore_1
    //   121: goto -59 -> 62
    //   124: astore_0
    //   125: ldc 2
    //   127: monitorexit
    //   128: aload_0
    //   129: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	130	0	paramContext	Context
    //   1	120	1	bool1	boolean
    //   57	59	2	bool2	boolean
    //   78	10	3	localD	com.cleanmaster.configmanager.d
    // Exception table:
    //   from	to	target	type
    //   5	58	124	finally
    //   72	115	124	finally
  }
  
  public static com.cmnow.weather.sdk.alert.c aK(String paramString)
  {
    if ((v != null) && (TextUtils.equals(v.c, paramString)) && (TextUtils.equals(v.b, com.cmnow.weather.sdk.alert.b.a()))) {
      return v;
    }
    List localList = ck();
    paramString = a(com.cmnow.weather.sdk.alert.b.a(), paramString, localList);
    v = paramString;
    return paramString;
  }
  
  public static boolean aK()
  {
    int i1 = g("onetap_settings", "replace_new_onetap_mcc");
    int i2 = i("onetap_settings", "replace_new_onetap_range");
    if (i1 == 20)
    {
      i1 = 1;
      if ((i2 != 26) && (i2 != 20)) {
        break label57;
      }
    }
    label57:
    for (i2 = 1;; i2 = 0)
    {
      if ((i1 == 0) || (i2 == 0)) {
        break label62;
      }
      return true;
      i1 = 0;
      break;
    }
    label62:
    return false;
  }
  
  private static boolean aK(Context paramContext)
  {
    try
    {
      if (!((PowerManager)paramContext.getSystemService("power")).isScreenOn()) {
        return false;
      }
      boolean bool = ((KeyguardManager)paramContext.getSystemService("keyguard")).inKeyguardRestrictedInputMode();
      return !bool;
    }
    catch (Exception paramContext) {}
    return false;
  }
  
  private static int aL(Context paramContext)
  {
    paramContext = com.cleanmaster.base.util.net.b.b(paramContext, "");
    if (TextUtils.isEmpty(paramContext)) {}
    do
    {
      return 3;
      if (paramContext.equals("wifi")) {
        return 4;
      }
      if (paramContext.equals("2g")) {
        return 5;
      }
      if ((paramContext.equals("3g")) || (paramContext.equals("3.5g"))) {
        return 6;
      }
    } while (!paramContext.equals("4g"));
    return 7;
  }
  
  public static Pair<String, String> aL(String paramString)
  {
    Object localObject2 = null;
    int i1 = paramString.indexOf(':');
    Object localObject1 = localObject2;
    String str = paramString;
    if (i1 != -1)
    {
      localObject1 = localObject2;
      str = paramString;
      if (paramString.length() > i1 + 1)
      {
        localObject1 = paramString.substring(0, i1);
        str = paramString.substring(i1 + 1);
      }
    }
    return new Pair(localObject1, str);
  }
  
  public static long[] aL()
  {
    int i1 = 0;
    Object localObject = d("onetap_settings", "new_one_tap_ufo_anim_time_list", "");
    if (TextUtils.isEmpty((CharSequence)localObject)) {}
    long[] arrayOfLong;
    for (;;)
    {
      return null;
      localObject = com.cleanmaster.base.util.g.d.a((String)localObject, "_");
      if ((localObject != null) && (localObject.length == 10))
      {
        arrayOfLong = new long[localObject.length];
        int i3 = localObject.length;
        int i2 = 0;
        if (i1 < i3)
        {
          CharSequence localCharSequence = localObject[i1];
          if ((TextUtils.isEmpty(localCharSequence)) || (TextUtils.isEmpty(localCharSequence.trim()))) {
            continue;
          }
          try
          {
            long l1 = Long.parseLong(localCharSequence);
            if (l1 > 0L)
            {
              arrayOfLong[i2] = l1;
              i2 += 1;
              i1 += 1;
            }
          }
          catch (NumberFormatException localNumberFormatException)
          {
            return null;
          }
        }
      }
    }
    return arrayOfLong;
  }
  
  private static String aM(Context paramContext)
  {
    try
    {
      int i1 = paramContext.getPackageManager().getPackageInfo(paramContext.getPackageName(), 0).versionCode;
      return String.valueOf(i1);
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return null;
  }
  
  public static PublicKey aM(String paramString)
  {
    try
    {
      paramString = Base64.decode(paramString, 0);
      paramString = KeyFactory.getInstance("RSA").generatePublic(new X509EncodedKeySpec(paramString));
      return paramString;
    }
    catch (NoSuchAlgorithmException paramString)
    {
      throw new RuntimeException(paramString);
    }
    catch (InvalidKeySpecException paramString)
    {
      aO("Invalid key specification.");
      throw new IllegalArgumentException(paramString);
    }
  }
  
  public static boolean aM()
  {
    int i1 = g("onetap_settings", "follow_onetap_icon_mcc");
    int i2 = i("onetap_settings", "follow_onetap_icon_rate");
    if ((i1 == 20) || (i1 == 24))
    {
      i1 = 1;
      if ((i2 != 26) && (i2 != 20)) {
        break label63;
      }
    }
    label63:
    for (i2 = 1;; i2 = 0)
    {
      if ((i1 == 0) || (i2 == 0)) {
        break label68;
      }
      return true;
      i1 = 0;
      break;
    }
    label68:
    return false;
  }
  
  public static int aN()
  {
    return a("process_settings", "abnormal_toast_show_time_s", 10);
  }
  
  public static void aN(String paramString)
  {
    if (Z(3)) {
      Log.d("Ads", paramString);
    }
  }
  
  private static boolean aN(Context paramContext)
  {
    boolean bool2 = false;
    String str = paramContext.getPackageName() + "/com.cleanmaster.boost.acc.service.AccessibilityKillService";
    try
    {
      i1 = Settings.Secure.getInt(paramContext.getApplicationContext().getContentResolver(), "accessibility_enabled");
      TextUtils.SimpleStringSplitter localSimpleStringSplitter = new TextUtils.SimpleStringSplitter(':');
      boolean bool1 = bool2;
      if (i1 == 1)
      {
        paramContext = Settings.Secure.getString(paramContext.getApplicationContext().getContentResolver(), "enabled_accessibility_services");
        bool1 = bool2;
        if (paramContext != null)
        {
          localSimpleStringSplitter.setString(paramContext);
          do
          {
            bool1 = bool2;
            if (!localSimpleStringSplitter.hasNext()) {
              break;
            }
          } while (!localSimpleStringSplitter.next().equalsIgnoreCase(str));
          bool1 = true;
        }
      }
      return bool1;
    }
    catch (Settings.SettingNotFoundException localSettingNotFoundException)
    {
      for (;;)
      {
        int i1 = 0;
      }
    }
  }
  
  public static String aO()
  {
    return d("process_settings", "new_memory_notify_default_size", "[{\"1\":85},{\"2\":85},{\"3\":80},{\"4\":75}]");
  }
  
  public static void aO(String paramString)
  {
    if (Z(6)) {
      Log.e("Ads", paramString);
    }
  }
  
  private static boolean aO(Context paramContext)
  {
    if (Build.VERSION.SDK_INT >= 16) {
      try
      {
        paramContext = (KeyguardManager)paramContext.getSystemService("keyguard");
        boolean bool = ((Boolean)paramContext.getClass().getMethod("isKeyguardSecure", new Class[0]).invoke(paramContext, new Object[0])).booleanValue();
        return bool;
      }
      catch (Exception paramContext)
      {
        return false;
      }
    }
    return false;
  }
  
  public static int aP()
  {
    return a("process_settings", "low_mem_notification_show_period", 12);
  }
  
  public static void aP(String paramString)
  {
    if (Z(4)) {
      Log.i("Ads", paramString);
    }
  }
  
  private static boolean aP(Context paramContext)
  {
    boolean bool = false;
    try
    {
      int i1 = Settings.System.getInt(paramContext.getContentResolver(), "lock_pattern_autolock");
      if (i1 != 0) {
        bool = true;
      }
      return bool;
    }
    catch (Exception paramContext)
    {
      return false;
    }
    catch (SecurityException paramContext)
    {
      return false;
    }
    catch (Settings.SettingNotFoundException paramContext) {}
    return false;
  }
  
  public static int aQ()
  {
    return a("notification", "notify_new_install_notify_time_h", 24);
  }
  
  public static void aQ(String paramString)
  {
    if (Z(2)) {
      Log.v("Ads", paramString);
    }
  }
  
  private static boolean aQ(Context paramContext)
  {
    boolean bool = false;
    try
    {
      long l1 = Settings.Secure.getLong(paramContext.getContentResolver(), "lockscreen.password_type", 0L);
      if ((l1 == 327680L) || (l1 == 131072L) || (l1 == 262144L)) {
        bool = true;
      }
      return bool;
    }
    catch (Exception paramContext)
    {
      return false;
    }
    catch (SecurityException paramContext) {}
    return false;
  }
  
  private static int aR(Context paramContext)
  {
    try
    {
      int i1 = paramContext.getPackageManager().getPackageInfo(paramContext.getPackageName(), 0).versionCode;
      return i1;
    }
    catch (Exception paramContext)
    {
      com.keniu.security.update.push.gcm.a.a();
      new StringBuilder("Coult not get package name: ").append(paramContext.getMessage());
    }
    return 0;
  }
  
  public static List<Integer> aR()
  {
    ArrayList localArrayList = new ArrayList();
    Object localObject = d("notification", "notify_new_install_notify_control_notify_id", "");
    if (!TextUtils.isEmpty((CharSequence)localObject))
    {
      localObject = com.cleanmaster.base.util.g.d.a((String)localObject, ",");
      if ((localObject != null) && (localObject.length > 0))
      {
        int i2 = localObject.length;
        int i1 = 0;
        while (i1 < i2)
        {
          CharSequence localCharSequence = localObject[i1];
          if (!TextUtils.isEmpty(localCharSequence)) {}
          try
          {
            int i3 = Integer.valueOf(localCharSequence.trim()).intValue();
            if (-1 != i3) {
              localArrayList.add(Integer.valueOf(i3));
            }
          }
          catch (Exception localException)
          {
            for (;;) {}
          }
          i1 += 1;
        }
      }
    }
    return localArrayList;
  }
  
  public static void aR(String paramString)
  {
    if (Z(5)) {
      Log.w("Ads", paramString);
    }
  }
  
  public static int aS()
  {
    return c("string_info", "string_version", 0);
  }
  
  public static int aS(String paramString)
  {
    int i3 = 0;
    int i4 = 0;
    try
    {
      byte[] arrayOfByte = paramString.getBytes("UTF-8");
      paramString = arrayOfByte;
    }
    catch (UnsupportedEncodingException localUnsupportedEncodingException)
    {
      for (;;)
      {
        paramString = paramString.getBytes();
      }
      i2 = i4;
      switch (i5 & 0x3)
      {
      }
    }
    int i5 = paramString.length;
    int i6 = (i5 & 0xFFFFFFFC) + 0;
    int i2 = 0;
    for (int i1 = 0; i2 < i6; i1 = -430675100 + (i1 >>> 19 | i1 << 13) * 5)
    {
      int i7 = (paramString[i2] & 0xFF | (paramString[(i2 + 1)] & 0xFF) << 8 | (paramString[(i2 + 2)] & 0xFF) << 16 | paramString[(i2 + 3)] << 24) * -862048943;
      i1 ^= (i7 >>> 17 | i7 << 15) * 461845907;
      i2 += 4;
    }
    for (;;)
    {
      i1 ^= i5;
      i1 = (i1 ^ i1 >>> 16) * -2048144789;
      i1 = (i1 ^ i1 >>> 13) * -1028477387;
      return i1 ^ i1 >>> 16;
      i2 = (paramString[(i6 + 2)] & 0xFF) << 16;
      i3 = i2 | (paramString[(i6 + 1)] & 0xFF) << 8;
      i2 = (paramString[i6] & 0xFF | i3) * -862048943;
      i1 = (i2 >>> 17 | i2 << 15) * 461845907 ^ i1;
    }
  }
  
  private static String aS(Context paramContext)
  {
    Object localObject = new Intent("android.intent.action.MAIN");
    ((Intent)localObject).addCategory("android.intent.category.HOME");
    paramContext = paramContext.getPackageManager();
    localObject = paramContext.resolveActivity((Intent)localObject, 0);
    if ((localObject != null) && (((ResolveInfo)localObject).activityInfo != null) && (((ResolveInfo)localObject).activityInfo.packageName != null) && (((ResolveInfo)localObject).activityInfo.applicationInfo != null)) {}
    for (;;)
    {
      int i1;
      try
      {
        paramContext = paramContext.queryContentProviders(((ResolveInfo)localObject).activityInfo.packageName, ((ResolveInfo)localObject).activityInfo.applicationInfo.uid, 8);
        if (paramContext == null) {
          break;
        }
        i1 = 0;
        if (i1 >= paramContext.size()) {
          break;
        }
        localObject = (ProviderInfo)paramContext.get(i1);
        if ((((ProviderInfo)localObject).readPermission == null) || (!Pattern.matches(".*launcher.*READ_SETTINGS", ((ProviderInfo)localObject).readPermission))) {
          break label148;
        }
        return ((ProviderInfo)localObject).authority;
      }
      catch (NullPointerException paramContext)
      {
        paramContext.printStackTrace();
      }
      paramContext = null;
      continue;
      label148:
      i1 += 1;
    }
    return null;
  }
  
  public static File aT()
  {
    File localFile = null;
    String str = aU();
    if (!TextUtils.isEmpty(str)) {
      localFile = new File(str + "res.cfg");
    }
    return localFile;
  }
  
  public static String[] aT(String paramString)
  {
    if (paramString == null) {
      return null;
    }
    ArrayList localArrayList = new ArrayList();
    char[] arrayOfChar = paramString.toCharArray();
    int i5 = paramString.length();
    int i2 = 0;
    int i1 = 0;
    int i3 = 0;
    int i7;
    int i6;
    int i4;
    if (i3 < i5)
    {
      i7 = Character.codePointAt(arrayOfChar, i3);
      i6 = Character.charCount(i7);
      if (Character.isLetter(i7))
      {
        paramString = Character.UnicodeBlock.of(i7);
        if ((paramString == Character.UnicodeBlock.BOPOMOFO) || (paramString == Character.UnicodeBlock.BOPOMOFO_EXTENDED) || (paramString == Character.UnicodeBlock.CJK_COMPATIBILITY) || (paramString == Character.UnicodeBlock.CJK_COMPATIBILITY_IDEOGRAPHS) || (paramString == Character.UnicodeBlock.CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT) || (paramString == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS) || (paramString == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A) || (paramString == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B) || (paramString == Character.UnicodeBlock.ENCLOSED_CJK_LETTERS_AND_MONTHS) || (paramString == Character.UnicodeBlock.HANGUL_JAMO) || (paramString == Character.UnicodeBlock.HANGUL_SYLLABLES) || (paramString == Character.UnicodeBlock.HIRAGANA) || (paramString == Character.UnicodeBlock.KATAKANA) || (paramString == Character.UnicodeBlock.KATAKANA_PHONETIC_EXTENSIONS))
        {
          i4 = 1;
          label169:
          if (i4 == 0)
          {
            if (((i7 < 65382) || (i7 > 65437)) && ((i7 < 65441) || (i7 > 65500))) {
              break label295;
            }
            i4 = 1;
            label209:
            if (i4 == 0) {
              break label301;
            }
          }
          i4 = 1;
          label217:
          if (i4 == 0) {
            break label307;
          }
          if (i2 != 0) {
            localArrayList.add(new String(arrayOfChar, i1, i3 - i1));
          }
          localArrayList.add(new String(arrayOfChar, i3, i6));
          i4 = 0;
          i2 = i1;
          i1 = i4;
        }
      }
    }
    for (;;)
    {
      i4 = i3 + i6;
      i3 = i2;
      i2 = i1;
      i1 = i3;
      i3 = i4;
      break;
      i4 = 0;
      break label169;
      label295:
      i4 = 0;
      break label209;
      label301:
      i4 = 0;
      break label217;
      label307:
      if ((Character.isLetterOrDigit(i7)) || (Character.getType(i7) == 6) || (Character.getType(i7) == 8))
      {
        if (i2 == 0) {
          i1 = i3;
        }
        i2 = i1;
        i1 = 1;
      }
      else if (i2 != 0)
      {
        localArrayList.add(new String(arrayOfChar, i1, i3 - i1));
        i2 = i1;
        i1 = 0;
        continue;
        if (i2 != 0) {
          localArrayList.add(new String(arrayOfChar, i1, i3 - i1));
        }
        return (String[])localArrayList.toArray(new String[localArrayList.size()]);
      }
      else
      {
        i4 = i1;
        i1 = i2;
        i2 = i4;
      }
    }
  }
  
  public static hk aU(String paramString)
  {
    JSONObject localJSONObject1 = new JSONObject(paramString);
    paramString = localJSONObject1.get("resource");
    JSONObject localJSONObject2;
    hl localHl;
    com.google.android.gms.internal.e[] arrayOfE;
    Object localObject;
    List localList1;
    List localList2;
    List localList3;
    if ((paramString instanceof JSONObject))
    {
      localJSONObject2 = (JSONObject)paramString;
      localHl = new hl((byte)0);
      arrayOfE = f(localJSONObject2);
      paramString = localJSONObject2.getJSONArray("properties");
      localObject = localJSONObject2.getJSONArray("key");
      localList1 = a(localJSONObject2.getJSONArray("tags"), paramString, (JSONArray)localObject, arrayOfE);
      localList2 = a(localJSONObject2.getJSONArray("predicates"), paramString, (JSONArray)localObject, arrayOfE);
      localList3 = a(localJSONObject2.getJSONArray("macros"), paramString, (JSONArray)localObject, arrayOfE);
      Iterator localIterator = localList3.iterator();
      while (localIterator.hasNext())
      {
        hi localHi = (hi)localIterator.next();
        String str = bv.a((com.google.android.gms.internal.e)Collections.unmodifiableMap(localHi.a).get(zzae.zzfu.toString()));
        localObject = (List)localHl.b.get(str);
        paramString = (String)localObject;
        if (localObject == null)
        {
          paramString = new ArrayList();
          localHl.b.put(str, paramString);
        }
        paramString.add(localHi);
      }
    }
    throw new zzqp.zzg("Resource map not found");
    paramString = localJSONObject2.getJSONArray("rules");
    int i1 = 0;
    while (i1 < paramString.length())
    {
      localObject = a(paramString.getJSONObject(i1), localList1, localList3, localList2, arrayOfE);
      localHl.a.add(localObject);
      i1 += 1;
    }
    localHl.c = "1";
    localHl.d = 1;
    localJSONObject1.optJSONArray("runtime");
    return new hk(localHl.a, localHl.b, localHl.c, (byte)0);
  }
  
  public static String aU()
  {
    String str = com.keniu.security.update.c.a.e.a().a("op1");
    if (TextUtils.isEmpty(str)) {
      return "";
    }
    return str + File.separator;
  }
  
  public static String aV()
  {
    return y("version", "ver");
  }
  
  public static String aV(String paramString)
  {
    return URLEncoder.encode(paramString, "UTF-8").replaceAll("\\+", "%20");
  }
  
  public static String aW()
  {
    return y("config", "language");
  }
  
  public static JSONObject aW(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return null;
    }
    return l(new File(paramString));
  }
  
  public static int aX()
  {
    long l1 = com.cleanmaster.kinfoc.base.b.a().l();
    if (System.currentTimeMillis() - l1 > 86400000L) {
      return 2;
    }
    return 1;
  }
  
  public static String aX(String paramString)
  {
    if ("softdetail".equals(paramString)) {
      return "";
    }
    cs();
    return com.keniu.security.update.m.a().b(com.keniu.security.update.d.a(paramString));
  }
  
  public static byte aY()
  {
    if (Build.VERSION.SDK_INT < 21) {}
    for (;;)
    {
      return 1;
      String[] arrayOfString1 = Build.SUPPORTED_ABIS;
      if ((arrayOfString1 != null) && (arrayOfString1.length > 0))
      {
        String[] arrayOfString2 = Build.SUPPORTED_64_BIT_ABIS;
        if ((arrayOfString2 != null) && (arrayOfString2.length > 0))
        {
          int i3 = arrayOfString1.length;
          int i1 = 0;
          while (i1 < i3)
          {
            String str1 = arrayOfString1[i1];
            if (!TextUtils.isEmpty(str1))
            {
              int i4 = arrayOfString2.length;
              int i2 = 0;
              while (i2 < i4)
              {
                String str2 = arrayOfString2[i2];
                if ((!TextUtils.isEmpty(str2)) && (str1.equalsIgnoreCase(str2))) {
                  return 2;
                }
                i2 += 1;
              }
            }
            i1 += 1;
          }
        }
      }
    }
  }
  
  public static int aY(String paramString)
  {
    if (android.support.v4.a.c.a(paramString)) {}
    do
    {
      return 0;
      if ("force".compareToIgnoreCase(paramString) == 0) {
        return 1;
      }
      if ("allow".compareTo(paramString) == 0) {
        return 2;
      }
      if ("allow_apk".compareTo(paramString) == 0) {
        return 3;
      }
      if ("allow_data".compareTo(paramString) == 0) {
        return 4;
      }
      if ("deny".compareTo(paramString) == 0) {
        return 5;
      }
      if ("deny_apk".compareTo(paramString) == 0) {
        return 6;
      }
      if ("deny_data".compareTo(paramString) == 0) {
        return 7;
      }
    } while ("allow_choice".compareTo(paramString) != 0);
    return 8;
  }
  
  public static Map<String, com.cleanmaster.common.model.AppInfo> aZ()
  {
    try
    {
      Object localObject = com.cleanmaster.synipc.b.a().c().f();
      if ((localObject != null) && (((List)localObject).size() != 0))
      {
        com.cleanmaster.bitloader.a.a localA = new com.cleanmaster.bitloader.a.a();
        localObject = ((List)localObject).iterator();
        while (((Iterator)localObject).hasNext())
        {
          com.cleanmaster.common.model.AppInfo localAppInfo = (com.cleanmaster.common.model.AppInfo)((Iterator)localObject).next();
          try
          {
            localA.put(localAppInfo.getPackageName(), new com.cleanmaster.common.model.AppInfo(localAppInfo));
          }
          catch (Exception localException)
          {
            localException.printStackTrace();
          }
        }
        return localRemoteException;
      }
    }
    catch (RemoteException localRemoteException)
    {
      localRemoteException.printStackTrace();
      return null;
    }
    return null;
  }
  
  public static int aa(Context paramContext)
  {
    int i1 = 2;
    for (;;)
    {
      try
      {
        if (aP(paramContext)) {
          return 2;
        }
        switch ((int)Settings.Secure.getLong(paramContext.getContentResolver(), "lockscreen.password_type", 0L))
        {
        case 32768: 
          boolean bool = ((KeyguardManager)paramContext.getSystemService("keyguard")).inKeyguardRestrictedInputMode();
          if (!bool) {
            continue;
          }
          return 1;
        }
      }
      catch (Exception paramContext)
      {
        i1 = 7;
        return i1;
      }
      return 4;
      return 3;
      return 5;
      return 5;
      return 5;
      return 6;
    }
  }
  
  public static void aa()
  {
    com.cleanmaster.notification.e.a();
    com.cleanmaster.notification.e.a(514);
    com.cleanmaster.notification.e.a();
    com.cleanmaster.notification.e.a(515);
    if (com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).bf()) {
      com.cleanmaster.boost.cpu.d.b();
    }
  }
  
  public static boolean aa(int paramInt)
  {
    return Build.VERSION.SDK_INT >= paramInt;
  }
  
  public static boolean aa(String paramString)
  {
    Object localObject = com.keniu.security.d.a().getPackageManager();
    Intent localIntent = new Intent("android.intent.action.MAIN");
    localIntent.addCategory("android.intent.category.HOME");
    localObject = ((PackageManager)localObject).queryIntentActivities(localIntent, 0).iterator();
    while (((Iterator)localObject).hasNext()) {
      if (((ResolveInfo)((Iterator)localObject).next()).activityInfo.packageName.equals(paramString)) {
        return true;
      }
    }
    return false;
  }
  
  public static com.cleanmaster.photomanager.MediaFile ab(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      throw new NullPointerException("path can't be empty");
    }
    return g(new File(paramString));
  }
  
  public static void ab(Context paramContext)
  {
    try
    {
      paramContext = com.in2wow.sdk.b.d.a(paramContext);
      if (paramContext.k)
      {
        paramContext = paramContext.h;
        int i1 = paramContext.b;
        paramContext.b = (i1 + 1);
        com.in2wow.sdk.ui.a.a.a localA;
        if ((i1 == 0) && (paramContext.c == 0L)) {
          if (paramContext.d != null) {
            localA = paramContext.d;
          }
        }
        try
        {
          Bundle localBundle = new Bundle();
          localBundle.putInt("type", g.b.d.ordinal());
          com.in2wow.sdk.b.d.j(localA.a).a(localBundle);
          paramContext.a.removeCallbacks(paramContext.e);
          paramContext.c = System.currentTimeMillis();
          com.in2wow.sdk.l.k.a("APP_STATE", "ActivityResume - count: %s", new Object[] { String.valueOf(paramContext.b) });
          return;
        }
        catch (Throwable localThrowable)
        {
          for (;;)
          {
            com.in2wow.sdk.l.k.a(localThrowable);
          }
        }
      }
      return;
    }
    catch (Exception paramContext)
    {
      com.in2wow.sdk.l.k.a(paramContext);
      return;
    }
    catch (Error paramContext)
    {
      com.in2wow.sdk.l.k.a(paramContext);
    }
  }
  
  public static boolean ab()
  {
    int i3 = 1;
    int i1 = g("boost_power", "power_main_entry_mcc");
    int i2 = i("boost_power", "power_main_entry_rate");
    if ((i1 == 20) || (i1 == 24))
    {
      i1 = 1;
      if ((i2 != 26) && (i2 != 20)) {
        break label71;
      }
      i2 = 1;
      label50:
      if ((i1 == 0) || (i2 == 0)) {
        break label76;
      }
    }
    label71:
    label76:
    for (i1 = i3;; i1 = 0)
    {
      if (i1 != 0) {
        break label81;
      }
      return false;
      i1 = 0;
      break;
      i2 = 0;
      break label50;
    }
    label81:
    return ac();
  }
  
  public static boolean ab(int paramInt)
  {
    return (paramInt != 0) && (paramInt != 1);
  }
  
  public static String ac(String paramString)
  {
    return android.support.v4.app.f.a.a("cmlocker_recommend_card_string", paramString, "");
  }
  
  public static void ac(Context paramContext)
  {
    try
    {
      paramContext = com.in2wow.sdk.b.d.a(paramContext);
      if (paramContext.k)
      {
        paramContext = paramContext.h;
        int i1 = paramContext.b - 1;
        paramContext.b = i1;
        if (i1 == 0)
        {
          paramContext.a.removeCallbacks(paramContext.e);
          paramContext.a.postDelayed(paramContext.e, 2000L);
        }
        com.in2wow.sdk.l.k.a("APP_STATE", "ActivityPause - count: %s", new Object[] { String.valueOf(paramContext.b) });
      }
      return;
    }
    catch (Exception paramContext)
    {
      com.in2wow.sdk.l.k.a(paramContext);
      return;
    }
    catch (Error paramContext)
    {
      com.in2wow.sdk.l.k.a(paramContext);
    }
  }
  
  public static boolean ac()
  {
    boolean bool;
    int i1;
    if ((Build.MANUFACTURER.contains("MIUI")) || (Build.ID.contains("MIUI")) || (Build.MODEL.contains("MIUI")) || (Build.MODEL.contains("MI 3")) || (Build.MODEL.contains("MI 2S")) || (Build.MODEL.startsWith("MI-ONE")))
    {
      bool = true;
      if ((!bool) && (!android.support.v4.a.c.a())) {
        break label118;
      }
      if (i("boost_power", "power_miui_entry_rate") != 20) {
        break label113;
      }
      i1 = 1;
      label100:
      if (i1 != 0) {
        break label118;
      }
    }
    label113:
    label118:
    do
    {
      return false;
      bool = com.cleanmaster.base.util.system.d.g();
      break;
      i1 = 0;
      break label100;
      if (Build.VERSION.SDK_INT >= 16) {
        break label134;
      }
    } while (!af());
    label134:
    label157:
    label293:
    label388:
    for (;;)
    {
      return true;
      String str = Build.DISPLAY;
      if ((str != null) && (str.toUpperCase().contains("amigo2.2.5")))
      {
        i1 = 1;
        if (i1 == 0)
        {
          str = Build.DISPLAY;
          if ((str == null) || (!str.toUpperCase().contains("ALPS.JB3.TDD.MP.V2"))) {
            break label293;
          }
          i1 = 1;
        }
      }
      for (;;)
      {
        if (i1 == 0) {
          break label388;
        }
        if (!af()) {
          break;
        }
        return true;
        str = Build.DEVICE;
        if ((str != null) && (str.contains("GiONEE")))
        {
          i1 = 1;
          break label157;
        }
        str = Build.BRAND;
        if ((str != null) && (str.equalsIgnoreCase("GIONEE")))
        {
          i1 = 1;
          break label157;
        }
        str = Build.MANUFACTURER;
        if ((str != null) && (str.equalsIgnoreCase("GiONEE")))
        {
          i1 = 1;
          break label157;
        }
        str = Build.PRODUCT;
        if ((str != null) && (str.contains("GiONEE")))
        {
          i1 = 1;
          break label157;
        }
        i1 = 0;
        break label157;
        str = Build.DEVICE;
        if ((str != null) && (str.contains("bbk72_t_jb3")))
        {
          i1 = 1;
        }
        else
        {
          str = Build.MODEL;
          if ((str != null) && (str.contains("vivo Y11")))
          {
            i1 = 1;
          }
          else
          {
            str = Build.MANUFACTURER;
            if ((str != null) && (str.equalsIgnoreCase("BBK")))
            {
              i1 = 1;
            }
            else
            {
              str = Build.PRODUCT;
              if ((str != null) && (str.contains("bbk72_t_jb3"))) {
                i1 = 1;
              } else {
                i1 = 0;
              }
            }
          }
        }
      }
    }
  }
  
  public static boolean ac(int paramInt)
  {
    return (paramInt != 2) && (paramInt != 5);
  }
  
  public static String ad(int paramInt)
  {
    switch (paramInt)
    {
    default: 
      return "UNKNOWN";
    case 1: 
      return "NONE";
    case 2: 
      return "WIFI";
    case 3: 
      return "2G";
    case 4: 
      return "3G";
    }
    return "4G";
  }
  
  public static String ad(String paramString)
  {
    int i1;
    if (!TextUtils.isEmpty(paramString))
    {
      i1 = paramString.lastIndexOf("/");
      if (i1 > 0) {}
    }
    for (;;)
    {
      if (paramString != null) {}
      for (;;)
      {
        i1 = 0;
        for (;;)
        {
          if (i1 < 16)
          {
            localObject = paramString.getBytes();
            if ((localObject == null) || (localObject.length < 16))
            {
              paramString = "/" + paramString;
              i1 += 1;
              continue;
              paramString = paramString.substring(0, i1);
              break;
            }
          }
        }
        Object localObject = null;
        if (!TextUtils.isEmpty(paramString)) {
          localObject = paramString.getBytes();
        }
        localObject = g(f((byte[])localObject));
        paramString = (String)localObject;
        if (localObject == null) {
          paramString = "";
        }
        return paramString;
        paramString = "";
      }
      paramString = "";
    }
  }
  
  public static void ad(Context paramContext)
  {
    try
    {
      paramContext = com.in2wow.sdk.b.d.a(paramContext);
      if (paramContext.k)
      {
        Bundle localBundle = new Bundle();
        localBundle.putInt("type", g.b.l.ordinal());
        paramContext.e.a(localBundle);
      }
      return;
    }
    catch (Exception paramContext)
    {
      com.in2wow.sdk.l.k.a(paramContext);
      return;
    }
    catch (Error paramContext)
    {
      com.in2wow.sdk.l.k.a(paramContext);
    }
  }
  
  public static boolean ad()
  {
    Object localObject1 = com.keniu.security.d.a();
    Object localObject2;
    Object localObject3;
    if (Build.VERSION.SDK_INT > 14)
    {
      localObject2 = (AccessibilityManager)((Context)localObject1).getSystemService("accessibility");
      if (localObject2 != null)
      {
        localObject2 = ((AccessibilityManager)localObject2).getEnabledAccessibilityServiceList(16);
        if ((localObject2 != null) && (!((List)localObject2).isEmpty()))
        {
          localObject2 = ((List)localObject2).iterator();
          do
          {
            do
            {
              do
              {
                if (!((Iterator)localObject2).hasNext()) {
                  break;
                }
                localObject3 = (AccessibilityServiceInfo)((Iterator)localObject2).next();
              } while (localObject3 == null);
              localObject3 = ((AccessibilityServiceInfo)localObject3).getResolveInfo();
            } while (localObject3 == null);
            localObject3 = ((ResolveInfo)localObject3).serviceInfo;
          } while ((localObject3 == null) || (TextUtils.isEmpty(((ServiceInfo)localObject3).packageName)) || (!((Context)localObject1).getPackageName().equals(((ServiceInfo)localObject3).packageName)));
        }
      }
    }
    for (boolean bool1 = true;; bool1 = false)
    {
      boolean bool2 = bool1;
      int i2;
      int i1;
      if (!bool1)
      {
        localObject1 = com.keniu.security.d.a();
        localObject3 = Settings.Secure.getString(((Context)localObject1).getContentResolver(), "enabled_accessibility_services");
        if (!TextUtils.isEmpty((CharSequence)localObject3))
        {
          localObject1 = ((Context)localObject1).getPackageName();
          localObject2 = AccessibilityKillService.class.getName();
          localObject3 = ((String)localObject3).split(":");
          if ((localObject3 != null) && (localObject3.length > 0))
          {
            i2 = localObject3.length;
            i1 = 0;
          }
        }
      }
      else
      {
        while (i1 < i2)
        {
          Object localObject4 = localObject3[i1];
          if (!TextUtils.isEmpty((CharSequence)localObject4))
          {
            Object localObject5 = ComponentName.unflattenFromString((String)localObject4);
            if (localObject5 != null)
            {
              localObject4 = ((ComponentName)localObject5).getPackageName();
              localObject5 = ((ComponentName)localObject5).getClassName();
              if ((((String)localObject1).equals(localObject4)) && (((String)localObject2).equals(localObject5)))
              {
                bool2 = true;
                return bool2;
              }
            }
          }
          i1 += 1;
        }
      }
      return false;
    }
  }
  
  public static String ae(String paramString)
  {
    Object localObject = "";
    if (!TextUtils.isEmpty(paramString))
    {
      int i1 = paramString.lastIndexOf("/");
      int i2 = paramString.length();
      if ((i1 < 0) || (i2 <= 0) || (i1 + 1 > i2))
      {
        if (paramString == null) {
          return paramString;
        }
        localObject = paramString.toCharArray();
        if (localObject != null) {
          break label115;
        }
      }
      int i3;
      label115:
      for (i1 = 0;; i1 = localObject.length)
      {
        if (i1 <= 0) {
          return paramString;
        }
        i3 = 64;
        i2 = 0;
        while ((i2 < i1) && (i2 < i3))
        {
          int i4 = i3;
          if (localObject[i2] > 'ÿ') {
            i4 = i3 - 1;
          }
          i2 += 1;
          i3 = i4;
        }
        paramString = paramString.substring(i1 + 1, i2);
        break;
      }
      if ((i3 > 0) && (i3 < paramString.length())) {
        localObject = paramString.substring(0, i3);
      }
    }
    else
    {
      return localObject;
    }
    return paramString;
  }
  
  public static JSONObject ae(Context paramContext)
  {
    try
    {
      paramContext = com.in2wow.sdk.b.d.a(paramContext).i();
      return paramContext;
    }
    catch (Throwable paramContext)
    {
      Log.e(com.intowow.sdk.a.a.a, paramContext.getMessage(), paramContext);
    }
    return new JSONObject();
  }
  
  public static void ae(int paramInt)
  {
    com.lock.sideslip.setting.g localG = new com.lock.sideslip.setting.g("cm_edgeweather_setting");
    localG.a("action", String.valueOf(paramInt));
    localG.a(false);
  }
  
  public static boolean ae()
  {
    boolean bool2 = ad();
    boolean bool1 = bool2;
    if (!bool2)
    {
      bool1 = com.cm.root.d.a().g();
      boolean bool3 = com.cmcm.rtstub.a.a().d();
      if (!bool1)
      {
        bool1 = bool2;
        if (!bool3) {}
      }
      else
      {
        bool1 = true;
      }
    }
    return bool1;
  }
  
  public static int af(Context paramContext)
  {
    int i1;
    do
    {
      try
      {
        NetworkInfo localNetworkInfo = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
        if (localNetworkInfo == null) {
          return 1;
        }
        if (localNetworkInfo.isConnectedOrConnecting())
        {
          i1 = localNetworkInfo.getType();
          if (i1 == 1)
          {
            return 2;
            if (i1 == 0)
            {
              i1 = ((TelephonyManager)paramContext.getSystemService("phone")).getNetworkType();
              switch (i1)
              {
              default: 
                return 0;
              case 1: 
              case 2: 
              case 4: 
              case 7: 
              case 11: 
                return 3;
              case 3: 
              case 5: 
              case 6: 
              case 8: 
              case 9: 
              case 10: 
              case 12: 
              case 14: 
              case 15: 
                return 4;
              }
              return 5;
            }
            return 0;
          }
        }
        else
        {
          return 1;
        }
      }
      catch (Exception paramContext)
      {
        com.in2wow.sdk.l.k.a(paramContext);
        return 0;
      }
      if (i1 == 9) {
        return 2;
      }
    } while (i1 != 6);
    return 5;
  }
  
  public static String af(int paramInt)
  {
    if (com.lock.e.g.a().a.n())
    {
      paramInt = (int)(paramInt * 1.8D + 32.0D);
      return paramInt + "°";
    }
    return paramInt + "°";
  }
  
  public static String af(String paramString)
  {
    int i2 = 0;
    com.cleanmaster.security.scan.sdcard.n localN = com.cleanmaster.security.scan.sdcard.n.a();
    if (localN.a) {
      while (localN.b) {
        try
        {
          Thread.sleep(100L);
        }
        catch (InterruptedException localInterruptedException) {}
      }
    }
    if (localN.a)
    {
      int i1 = i2;
      if (!TextUtils.isEmpty(paramString))
      {
        i1 = i2;
        if ((float)ah(paramString) / 1024.0F > 4194304.0F) {
          i1 = 1;
        }
      }
      if (i1 == 0) {}
    }
    else
    {
      return null;
    }
    com.antiy.sdk.c.a().a = localN.c;
    return com.antiy.sdk.c.a().a(paramString);
  }
  
  public static boolean af()
  {
    if (com.cmcm.rtstub.a.a().d()) {}
    while (com.cm.root.d.a().g()) {
      return true;
    }
    return false;
  }
  
  public static Bitmap ag(int paramInt)
  {
    int i1 = paramInt / 4;
    i1 = paramInt / 32 + i1;
    int i2 = paramInt / 8;
    Object localObject = Bitmap.Config.ARGB_8888;
    try
    {
      localObject = Bitmap.createBitmap(paramInt, paramInt, (Bitmap.Config)localObject);
      if (localObject == null) {
        return null;
      }
    }
    catch (OutOfMemoryError localOutOfMemoryError)
    {
      Bitmap localBitmap;
      for (;;)
      {
        localBitmap = null;
      }
      Canvas localCanvas = new Canvas(localBitmap);
      Paint localPaint = new Paint();
      localPaint.setAntiAlias(true);
      localPaint.setColor(-2013265920);
      localCanvas.drawOval(new RectF(0.0F, 0.0F, paramInt, paramInt), localPaint);
      localPaint = new Paint();
      localPaint.setColor(0);
      localCanvas.drawPaint(localPaint);
      localPaint.setStrokeWidth(4.0F);
      localPaint.setColor(-16733198);
      localPaint.setStyle(Paint.Style.FILL_AND_STROKE);
      localPaint.setAntiAlias(true);
      Point localPoint1 = new Point(i2 * 3, i1);
      Point localPoint2 = new Point(i2 * 3, paramInt - i1);
      Point localPoint3 = new Point(paramInt - (i2 << 1), paramInt / 2);
      Path localPath = new Path();
      localPath.setFillType(Path.FillType.EVEN_ODD);
      localPath.moveTo(localPoint1.x, localPoint1.y);
      localPath.lineTo(localPoint2.x, localPoint2.y);
      localPath.lineTo(localPoint3.x, localPoint3.y);
      localPath.lineTo(localPoint1.x, localPoint1.y);
      localPath.close();
      localCanvas.drawPath(localPath, localPaint);
      return localBitmap;
    }
  }
  
  public static boolean ag(String paramString)
  {
    if ((TextUtils.isEmpty(paramString)) || (ah(paramString) < 22L)) {}
    String str;
    do
    {
      return false;
      str = paramString.toLowerCase();
    } while (((TextUtils.isEmpty(str)) || (!str.endsWith(".apk"))) && (!bn(paramString)));
    return true;
  }
  
  /* Error */
  public static double[] ag(Context paramContext)
  {
    // Byte code:
    //   0: aload_0
    //   1: ifnonnull +5 -> 6
    //   4: aconst_null
    //   5: areturn
    //   6: aload_0
    //   7: ldc_w 12209
    //   10: invokevirtual 509	android/content/Context:getSystemService	(Ljava/lang/String;)Ljava/lang/Object;
    //   13: checkcast 12211	android/location/LocationManager
    //   16: ldc_w 12213
    //   19: invokevirtual 12217	android/location/LocationManager:getLastKnownLocation	(Ljava/lang/String;)Landroid/location/Location;
    //   22: astore_1
    //   23: aload_1
    //   24: ifnull +33 -> 57
    //   27: iconst_2
    //   28: newarray double
    //   30: astore_0
    //   31: aload_0
    //   32: iconst_0
    //   33: aload_1
    //   34: invokevirtual 12222	android/location/Location:getLatitude	()D
    //   37: dastore
    //   38: aload_0
    //   39: iconst_1
    //   40: aload_1
    //   41: invokevirtual 12225	android/location/Location:getLongitude	()D
    //   44: dastore
    //   45: aload_0
    //   46: areturn
    //   47: astore_0
    //   48: aconst_null
    //   49: astore_0
    //   50: goto -5 -> 45
    //   53: astore_1
    //   54: goto -9 -> 45
    //   57: aconst_null
    //   58: astore_0
    //   59: goto -14 -> 45
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	62	0	paramContext	Context
    //   22	19	1	localLocation	android.location.Location
    //   53	1	1	localException	Exception
    // Exception table:
    //   from	to	target	type
    //   6	23	47	java/lang/Exception
    //   27	31	47	java/lang/Exception
    //   31	45	53	java/lang/Exception
  }
  
  public static byte ah()
  {
    byte b1 = 1;
    if (Build.VERSION.SDK_INT >= 21)
    {
      if ((com.cleanmaster.base.util.system.q.b(com.keniu.security.d.a())) && (com.cleanmaster.base.util.system.q.b())) {
        b1 = 3;
      }
    }
    else {
      return b1;
    }
    return 2;
  }
  
  public static byte ah(int paramInt)
  {
    switch (paramInt)
    {
    default: 
      return 0;
    case 0: 
      return ks.cm.antivirus.privatebrowsing.g.k.e;
    case 1: 
      return ks.cm.antivirus.privatebrowsing.g.k.d;
    case 2: 
      return ks.cm.antivirus.privatebrowsing.g.k.f;
    }
    return ks.cm.antivirus.privatebrowsing.g.k.g;
  }
  
  public static long ah(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return 0L;
    }
    return new File(paramString).length();
  }
  
  public static String ah(Context paramContext)
  {
    return Settings.Secure.getString(paramContext.getContentResolver(), "android_id");
  }
  
  public static int ai(int paramInt)
  {
    try
    {
      DataInputStream localDataInputStream = new DataInputStream(new FileInputStream(new File("/proc/" + Integer.valueOf(paramInt) + "/oom_adj")));
      String str = localDataInputStream.readLine().trim();
      localDataInputStream.close();
      paramInt = Integer.valueOf(str).intValue();
      return paramInt;
    }
    catch (Exception localException) {}
    return 0;
  }
  
  public static long ai(String paramString)
  {
    paramString = com.cleanmaster.base.util.system.m.c(com.keniu.security.d.a().getApplicationContext(), paramString);
    if (paramString != null) {
      return paramString.versionCode;
    }
    return 0L;
  }
  
  public static boolean ai()
  {
    return z(com.keniu.security.d.a()) != null;
  }
  
  /* Error */
  public static boolean ai(Context paramContext)
  {
    // Byte code:
    //   0: aload_0
    //   1: ifnonnull +5 -> 6
    //   4: iconst_0
    //   5: ireturn
    //   6: aload_0
    //   7: invokevirtual 494	android/content/Context:getPackageName	()Ljava/lang/String;
    //   10: astore 5
    //   12: aload_0
    //   13: invokevirtual 132	android/content/Context:getPackageManager	()Landroid/content/pm/PackageManager;
    //   16: aload 5
    //   18: iconst_0
    //   19: invokevirtual 138	android/content/pm/PackageManager:getPackageInfo	(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;
    //   22: getfield 1673	android/content/pm/PackageInfo:versionCode	I
    //   25: istore_2
    //   26: invokestatic 12248	com/keniu/security/update/push/f:a	()Lcom/keniu/security/update/push/pushapi/b;
    //   29: ifnull -25 -> 4
    //   32: getstatic 12254	com/keniu/security/update/push/functionhandles/PushConstants$MessageChannel:CHANNEL_NOTIFY_UPDATE_APK	Lcom/keniu/security/update/push/functionhandles/PushConstants$MessageChannel;
    //   35: invokevirtual 12256	com/keniu/security/update/push/functionhandles/PushConstants$MessageChannel:value	()I
    //   38: invokestatic 400	java/lang/String:valueOf	(I)Ljava/lang/String;
    //   41: getstatic 12262	com/keniu/security/update/push/functionhandles/PushConstants$MessageAction:ACTION_PUSH_UPDATE	Lcom/keniu/security/update/push/functionhandles/PushConstants$MessageAction;
    //   44: invokevirtual 12263	com/keniu/security/update/push/functionhandles/PushConstants$MessageAction:value	()I
    //   47: invokestatic 12268	com/keniu/security/update/push/pushapi/b:a	(Ljava/lang/String;I)Lcom/keniu/security/update/push/pushapi/PushMessage;
    //   50: astore_0
    //   51: aload_0
    //   52: ifnull -48 -> 4
    //   55: aload_0
    //   56: getstatic 12269	com/keniu/security/update/c/a/a/b:A	Ljava/lang/String;
    //   59: invokevirtual 6237	com/keniu/security/update/push/pushapi/PushMessage:b	(Ljava/lang/String;)Ljava/lang/String;
    //   62: astore_0
    //   63: aload_0
    //   64: invokestatic 166	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   67: ifne -63 -> 4
    //   70: aload_0
    //   71: ldc_w 2515
    //   74: invokevirtual 1597	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   77: astore_0
    //   78: aload_0
    //   79: ifnull -75 -> 4
    //   82: aload_0
    //   83: arraylength
    //   84: ifle -80 -> 4
    //   87: aload_0
    //   88: arraylength
    //   89: istore_3
    //   90: iconst_0
    //   91: istore_1
    //   92: iload_1
    //   93: iload_3
    //   94: if_icmpge -90 -> 4
    //   97: aload_0
    //   98: iload_1
    //   99: aaload
    //   100: astore 5
    //   102: aload 5
    //   104: invokestatic 166	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   107: ifne +21 -> 128
    //   110: aload 5
    //   112: invokestatic 9777	java/lang/Integer:valueOf	(Ljava/lang/String;)Ljava/lang/Integer;
    //   115: invokevirtual 1218	java/lang/Integer:intValue	()I
    //   118: istore 4
    //   120: iload_2
    //   121: iload 4
    //   123: if_icmpne +5 -> 128
    //   126: iconst_1
    //   127: ireturn
    //   128: iload_1
    //   129: iconst_1
    //   130: iadd
    //   131: istore_1
    //   132: goto -40 -> 92
    //   135: astore_0
    //   136: iconst_0
    //   137: ireturn
    //   138: astore_0
    //   139: iconst_0
    //   140: ireturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	141	0	paramContext	Context
    //   91	41	1	i1	int
    //   25	99	2	i2	int
    //   89	6	3	i3	int
    //   118	6	4	i4	int
    //   10	101	5	str	String
    // Exception table:
    //   from	to	target	type
    //   70	78	135	java/lang/Exception
    //   82	90	135	java/lang/Exception
    //   102	120	135	java/lang/Exception
    //   6	26	138	java/lang/Exception
  }
  
  public static int aj(int paramInt)
  {
    try
    {
      DataInputStream localDataInputStream = new DataInputStream(new FileInputStream(new File("/proc/" + Integer.valueOf(paramInt) + "/oom_score_adj")));
      String str = localDataInputStream.readLine().trim();
      localDataInputStream.close();
      paramInt = (Integer.valueOf(str).intValue() * 17 + 500) / 1000;
      return paramInt;
    }
    catch (Exception localException) {}
    return 0;
  }
  
  public static long aj(String paramString)
  {
    try
    {
      paramString = com.cleanmaster.base.util.system.m.c(com.keniu.security.d.a().getApplicationContext(), paramString);
      if (paramString == null) {
        return 0L;
      }
      if (O()) {
        return com.cleanmaster.base.util.system.m.a(paramString);
      }
      long l1 = com.cleanmaster.base.util.system.m.c(paramString);
      return l1;
    }
    catch (Throwable paramString) {}
    return 0L;
  }
  
  public static void aj(Context paramContext)
  {
    PackageManager localPackageManager = paramContext.getPackageManager();
    Object localObject1 = paramContext.getPackageName();
    Object localObject2 = (String)localObject1 + ".permission.C2D_MESSAGE";
    try
    {
      localPackageManager.getPermissionInfo((String)localObject2, 4096);
      if (!Log.isLoggable("GCMRegistrar", 2)) {
        break label190;
      }
    }
    catch (PackageManager.NameNotFoundException paramContext)
    {
      try
      {
        localObject2 = localPackageManager.getPackageInfo((String)localObject1, 2);
        localObject2 = ((PackageInfo)localObject2).receivers;
        if ((localObject2 != null) && (localObject2.length != 0)) {
          break label149;
        }
        throw new IllegalStateException("No receiver for package " + (String)localObject1);
      }
      catch (PackageManager.NameNotFoundException paramContext)
      {
        throw new IllegalStateException("Could not get receivers for package " + (String)localObject1);
      }
      paramContext = paramContext;
      throw new IllegalStateException("Application does not define permission " + (String)localObject2);
    }
    label149:
    com.keniu.security.update.push.gcm.a.a();
    new StringBuilder("number of receivers for ").append((String)localObject1).append(": ").append(localObject2.length);
    label190:
    localObject1 = new HashSet();
    int i2 = localObject2.length;
    int i1 = 0;
    while (i1 < i2)
    {
      localPackageManager = localObject2[i1];
      if ("com.google.android.c2dm.permission.SEND".equals(localPackageManager.permission)) {
        ((Set)localObject1).add(localPackageManager.name);
      }
      i1 += 1;
    }
    if (((Set)localObject1).isEmpty()) {
      throw new IllegalStateException("No receiver allowed to receive com.google.android.c2dm.permission.SEND");
    }
    a(paramContext, (Set)localObject1, "com.google.android.c2dm.intent.REGISTRATION");
    a(paramContext, (Set)localObject1, "com.google.android.c2dm.intent.RECEIVE");
  }
  
  public static boolean aj()
  {
    if (ak())
    {
      if (Build.VERSION.SDK_INT < 21) {}
      while (com.cm.root.d.a().g()) {
        return true;
      }
    }
    return false;
  }
  
  private static int ak(int paramInt)
  {
    if (paramInt <= 0) {
      return 29;
    }
    String str = p(com.keniu.security.d.a());
    if (!TextUtils.isEmpty(str)) {}
    for (;;)
    {
      try
      {
        str = str.substring(str.length() - 1);
        i1 = Math.round(Integer.parseInt(str, 16) * 10 / 16.0F);
        if (str == null) {
          return 27;
        }
      }
      catch (Exception localException)
      {
        localObject = null;
        i1 = 0;
        continue;
        if ((i1 < 0) || (i1 > 9)) {
          return 27;
        }
        i1 *= 100;
      }
      if ((i1 < 0) || (i1 > paramInt * 9)) {
        break;
      }
      return 20;
      Object localObject = null;
      int i1 = 0;
    }
  }
  
  public static String ak(String paramString)
  {
    paramString = com.cleanmaster.base.util.system.m.c(com.keniu.security.d.a().getApplicationContext(), paramString);
    if (paramString != null) {
      return paramString.versionName;
    }
    return null;
  }
  
  /* Error */
  public static void ak(Context paramContext)
  {
    // Byte code:
    //   0: ldc 2
    //   2: monitorenter
    //   3: getstatic 12308	LibcoreWrapper/a:Z	Lcom/keniu/security/update/push/gcm/sdk/GCMBroadcastReceiver;
    //   6: ifnonnull +80 -> 86
    //   9: getstatic 12310	LibcoreWrapper/a:E	Ljava/lang/String;
    //   12: ifnonnull +78 -> 90
    //   15: invokestatic 8012	com/keniu/security/update/push/gcm/a:a	()Lcom/keniu/security/update/push/gcm/a;
    //   18: pop
    //   19: new 12312	com/keniu/security/update/push/gcm/sdk/GCMBroadcastReceiver
    //   22: dup
    //   23: invokespecial 12313	com/keniu/security/update/push/gcm/sdk/GCMBroadcastReceiver:<init>	()V
    //   26: putstatic 12308	LibcoreWrapper/a:Z	Lcom/keniu/security/update/push/gcm/sdk/GCMBroadcastReceiver;
    //   29: aload_0
    //   30: invokevirtual 494	android/content/Context:getPackageName	()Ljava/lang/String;
    //   33: astore_2
    //   34: new 561	android/content/IntentFilter
    //   37: dup
    //   38: ldc_w 12315
    //   41: invokespecial 564	android/content/IntentFilter:<init>	(Ljava/lang/String;)V
    //   44: astore_1
    //   45: aload_1
    //   46: aload_2
    //   47: invokevirtual 12317	android/content/IntentFilter:addCategory	(Ljava/lang/String;)V
    //   50: new 149	java/lang/StringBuilder
    //   53: dup
    //   54: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   57: aload_2
    //   58: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   61: ldc_w 12274
    //   64: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   67: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   70: astore_2
    //   71: invokestatic 8012	com/keniu/security/update/push/gcm/a:a	()Lcom/keniu/security/update/push/gcm/a;
    //   74: pop
    //   75: aload_0
    //   76: getstatic 12308	LibcoreWrapper/a:Z	Lcom/keniu/security/update/push/gcm/sdk/GCMBroadcastReceiver;
    //   79: aload_1
    //   80: aload_2
    //   81: aconst_null
    //   82: invokevirtual 12320	android/content/Context:registerReceiver	(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;
    //   85: pop
    //   86: ldc 2
    //   88: monitorexit
    //   89: return
    //   90: getstatic 12310	LibcoreWrapper/a:E	Ljava/lang/String;
    //   93: invokestatic 940	java/lang/Class:forName	(Ljava/lang/String;)Ljava/lang/Class;
    //   96: invokevirtual 943	java/lang/Class:newInstance	()Ljava/lang/Object;
    //   99: checkcast 12312	com/keniu/security/update/push/gcm/sdk/GCMBroadcastReceiver
    //   102: putstatic 12308	LibcoreWrapper/a:Z	Lcom/keniu/security/update/push/gcm/sdk/GCMBroadcastReceiver;
    //   105: goto -76 -> 29
    //   108: astore_1
    //   109: invokestatic 8012	com/keniu/security/update/push/gcm/a:a	()Lcom/keniu/security/update/push/gcm/a;
    //   112: pop
    //   113: new 149	java/lang/StringBuilder
    //   116: dup
    //   117: ldc_w 12322
    //   120: invokespecial 260	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   123: getstatic 12310	LibcoreWrapper/a:E	Ljava/lang/String;
    //   126: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   129: ldc_w 12324
    //   132: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   135: ldc_w 12312
    //   138: invokevirtual 2819	java/lang/Class:getName	()Ljava/lang/String;
    //   141: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   144: ldc_w 12326
    //   147: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   150: pop
    //   151: new 12312	com/keniu/security/update/push/gcm/sdk/GCMBroadcastReceiver
    //   154: dup
    //   155: invokespecial 12313	com/keniu/security/update/push/gcm/sdk/GCMBroadcastReceiver:<init>	()V
    //   158: putstatic 12308	LibcoreWrapper/a:Z	Lcom/keniu/security/update/push/gcm/sdk/GCMBroadcastReceiver;
    //   161: goto -132 -> 29
    //   164: astore_0
    //   165: ldc 2
    //   167: monitorexit
    //   168: aload_0
    //   169: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	170	0	paramContext	Context
    //   44	36	1	localIntentFilter	IntentFilter
    //   108	1	1	localException	Exception
    //   33	48	2	str	String
    // Exception table:
    //   from	to	target	type
    //   90	105	108	java/lang/Exception
    //   3	29	164	finally
    //   29	86	164	finally
    //   90	105	164	finally
    //   109	161	164	finally
  }
  
  public static boolean ak()
  {
    com.cm.root.d.a();
    if (com.cm.root.d.b()) {}
    for (boolean bool1 = true;; bool1 = false)
    {
      boolean bool2 = bool1;
      if (!bool1) {
        bool2 = al();
      }
      return bool2;
    }
  }
  
  public static String al(Context paramContext)
  {
    Object localObject;
    if (paramContext == null) {
      localObject = null;
    }
    com.keniu.security.update.push.c localC;
    String str;
    int i1;
    int i2;
    do
    {
      do
      {
        do
        {
          return localObject;
          localC = com.keniu.security.update.push.c.a(paramContext);
          localObject = "";
        } while (localC == null);
        str = localC.a();
        i1 = localC.b("push_reg_version", 0);
        i2 = aR(paramContext);
        localObject = str;
      } while (i1 == 0);
      localObject = str;
    } while (i1 == i2);
    com.keniu.security.update.push.gcm.a.a();
    new StringBuilder("App version changed from ").append(i1).append(" to ").append(i2).append("; resetting registration id");
    localC.a("push_reg_id_old", str);
    u(paramContext, "");
    return "";
  }
  
  public static boolean al()
  {
    if (com.cleanmaster.base.e.H()) {
      return com.cmcm.rtstub.a.a().d();
    }
    return false;
  }
  
  public static boolean al(String paramString)
  {
    Context localContext = com.keniu.security.d.a().getApplicationContext();
    if ((TextUtils.isEmpty(paramString)) || (localContext == null)) {
      return false;
    }
    if (!com.cleanmaster.base.util.system.m.j(localContext, "com.cleanmaster.security"))
    {
      if (!com.cleanmaster.security.scan.b.a.b()) {
        a("market://details?id=com.cleanmaster.security&referrer=utm_source%3DCM_Pri_0110", "https://play.google.com/store/apps/details?id=com.cleanmaster.security&referrer=utm_source%3DCM_Pri_0110", localContext);
      }
      return true;
    }
    if (paramString.equals("Scan"))
    {
      paramString = new Intent();
      paramString.setComponent(ComponentName.unflattenFromString("com.cleanmaster.security/ks.cm.antivirus.scan.ScanMainActivity"));
      paramString.putExtra("enter", 2);
      paramString.putExtra("enter_from", 16);
    }
    for (;;)
    {
      paramString.setFlags(268435456);
      if (!com.cleanmaster.base.util.system.b.a(localContext, paramString)) {
        break;
      }
      return true;
      Intent localIntent = new Intent("ks.cm.antivirus.launch");
      localIntent.putExtra("Activity", paramString);
      paramString = localIntent;
    }
    com.cleanmaster.base.util.system.m.p(localContext, "com.cleanmaster.security");
    return true;
  }
  
  private static String[] al(int paramInt)
  {
    Object localObject;
    if ((paramInt != 30) && (com.cleanmaster.ui.resultpage.a.a()))
    {
      localObject = null;
      return localObject;
    }
    ArrayList localArrayList = new ArrayList();
    for (;;)
    {
      try
      {
        String[] arrayOfString = a(3, String.valueOf(paramInt)).trim().split("\n");
        localObject = arrayOfString;
        if (arrayOfString == null) {
          break;
        }
        paramInt = 0;
        if (paramInt < arrayOfString.length)
        {
          if (arrayOfString[paramInt] == null)
          {
            localObject = "";
            if (!TextUtils.isEmpty((CharSequence)localObject)) {
              localArrayList.add(localObject);
            }
          }
          else
          {
            localObject = arrayOfString[paramInt].trim();
            continue;
          }
        }
        else {
          return (String[])localArrayList.toArray(new String[localArrayList.size()]);
        }
      }
      catch (Exception localException)
      {
        new StringBuilder("云端下发规则error : ").append(localException.toString());
      }
      paramInt += 1;
    }
  }
  
  public static ThreadFactory am(String paramString)
  {
    return new com.cleanmaster.ui.app.utils.i(paramString);
  }
  
  public static void am()
  {
    for (;;)
    {
      Object localObject2;
      try
      {
        boolean bool = ak();
        if (!bool) {
          return;
        }
        if ((!com.cm.root.d.a().g()) && (!al())) {
          continue;
        }
        com.cleanmaster.boost.boostengine.autostart.a.d localD = new com.cleanmaster.boost.boostengine.autostart.a.d();
        localD.a();
        if (!localD.b()) {
          continue;
        }
        localObject2 = localD.h;
        if (TextUtils.isEmpty((CharSequence)localObject2)) {
          continue;
        }
        Object localObject3 = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).a("autostart_wlib_undo_version", "");
        if ((!TextUtils.isEmpty((CharSequence)localObject3)) && (((String)localObject2).equals(localObject3))) {
          continue;
        }
        com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).b("autostart_wlib_undo_version", (String)localObject2);
        localObject2 = new com.cleanmaster.boost.boostengine.autostart.b();
        ((com.cleanmaster.boost.boostengine.autostart.b)localObject2).a = true;
        ((com.cleanmaster.boost.boostengine.autostart.b)localObject2).b = new HashMap();
        localObject3 = AutoStartRulesStorage.a().b();
        if (localObject3 != null)
        {
          localObject3 = ((ArrayList)localObject3).iterator();
          if (((Iterator)localObject3).hasNext())
          {
            com.cleanmaster.boost.autostarts.data.i localI = (com.cleanmaster.boost.autostarts.data.i)((Iterator)localObject3).next();
            if ((localI == null) || (!localI.a()) || (localI.b == 0)) {
              continue;
            }
            List localList = localD.a(localI.a);
            if ((localList == null) || (localList.size() <= 0)) {
              continue;
            }
            com.cleanmaster.boost.boostengine.autostart.a.a localA = a(localI.a, localList, true);
            if (localA == null) {
              continue;
            }
            ((com.cleanmaster.boost.boostengine.autostart.b)localObject2).b.put(localI.a, Integer.valueOf(c(localList)));
            ((com.cleanmaster.boost.boostengine.autostart.b)localObject2).c.add(localA);
            continue;
          }
        }
        if (((com.cleanmaster.boost.boostengine.autostart.b)localObject2).c.size() <= 0) {
          continue;
        }
      }
      finally {}
      com.cleanmaster.boost.boostengine.a.b localB = new com.cleanmaster.boost.boostengine.a.b();
      localB.a = com.cleanmaster.boost.boostengine.a.b;
      localB.b.put(Integer.valueOf(com.cleanmaster.boost.boostengine.a.b), localObject2);
      new com.cleanmaster.boost.boostengine.a.a(com.keniu.security.d.a().getApplicationContext(), localB).a(com.cleanmaster.boost.boostengine.a.b);
    }
  }
  
  public static boolean am(Context paramContext)
  {
    paramContext = com.keniu.security.update.push.c.a(paramContext);
    if (paramContext != null)
    {
      if (TextUtils.isEmpty("push_reg_id_on_server")) {}
      for (boolean bool1 = false;; bool1 = paramContext.a.getBoolean("push_reg_id_on_server", false))
      {
        bool2 = bool1;
        if (!bool1) {
          break;
        }
        long l1 = paramContext.b("push_reg_id_expired_time", 0L);
        bool2 = bool1;
        if (System.currentTimeMillis() <= l1) {
          break;
        }
        com.keniu.security.update.push.gcm.a.a();
        new StringBuilder("flag expired on: ").append(new Timestamp(l1));
        return false;
      }
    }
    boolean bool2 = false;
    com.keniu.security.update.push.gcm.a.a();
    return bool2;
  }
  
  public static long an()
  {
    return com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).a("ats_last_scan_time", 0L);
  }
  
  public static com.cleanmaster.ui.game.b.a an(String paramString)
  {
    if ((paramString == null) || (TextUtils.isEmpty(paramString))) {}
    for (;;)
    {
      return null;
      try
      {
        JSONObject localJSONObject = new JSONObject(paramString);
        com.cleanmaster.ui.game.b.b localB = new com.cleanmaster.ui.game.b.b();
        if ((!localJSONObject.isNull("action_type")) && (localJSONObject.getInt("action_type") == 4))
        {
          paramString = new com.cleanmaster.ui.game.b.d();
          if (!localJSONObject.isNull("action_pkname")) {
            localJSONObject.getString("action_pkname");
          }
          if (!localJSONObject.isNull("action_priority")) {
            paramString.b = localJSONObject.getInt("action_priority");
          }
          if (!localJSONObject.isNull("action_gp_url")) {
            paramString.c = localJSONObject.getString("action_gp_url");
          }
          if (!localJSONObject.isNull("action_probability_type")) {
            localB.b = localJSONObject.getInt("action_probability_type");
          }
          if (!localJSONObject.isNull("action_probability")) {
            localB.c = localJSONObject.getInt("action_probability");
          }
          if (!localJSONObject.isNull("action_stage"))
          {
            String[] arrayOfString = localJSONObject.getString("action_stage").split("_");
            ArrayList localArrayList = new ArrayList();
            int i2 = arrayOfString.length;
            int i1 = 0;
            while (i1 < i2)
            {
              localArrayList.add(Integer.valueOf(arrayOfString[i1]));
              i1 += 1;
            }
            localB.d = localArrayList;
          }
          if (!localJSONObject.isNull("action_id")) {
            localJSONObject.getInt("action_id");
          }
          if (!localJSONObject.isNull("title_text")) {
            paramString.e = localJSONObject.getString("title_text");
          }
          if (!localJSONObject.isNull("subtitle_text")) {
            paramString.f = localJSONObject.getString("subtitle_text");
          }
          if (!localJSONObject.isNull("positive_btn_text")) {
            paramString.h = localJSONObject.getString("positive_btn_text");
          }
          if (!localJSONObject.isNull("negative_btn_text")) {
            paramString.g = localJSONObject.getString("negative_btn_text");
          }
          if (!localJSONObject.isNull("action_utag")) {
            localJSONObject.getString("action_utag");
          }
          localB.a = paramString;
          paramString.d = localB;
        }
      }
      catch (Exception paramString)
      {
        for (;;)
        {
          paramString.printStackTrace();
          paramString = null;
        }
      }
    }
    return paramString;
  }
  
  public static void an(Context paramContext)
  {
    com.keniu.security.update.push.gcm.a.a();
    new StringBuilder("resetting backoff for ").append(paramContext.getPackageName());
    j(paramContext, 3000);
  }
  
  public static String ao(Context paramContext)
  {
    if (paramContext == null) {
      return null;
    }
    String str2 = com.lock.g.a.a(paramContext);
    String str1 = str2;
    if (TextUtils.isEmpty(str2)) {
      str1 = "/data/data/" + paramContext.getPackageName() + "/files";
    }
    return str1 + "/blur/blur.jpg";
  }
  
  public static List<AbnormalCpuApp> ao()
  {
    Object localObject1 = (IProcessCpuManager)com.cleanmaster.base.ipc.c.a().a(com.cleanmaster.base.ipc.b.a);
    if (localObject1 == null) {
      return null;
    }
    try
    {
      localObject1 = com.cleanmaster.boost.cpu.e.a(((IProcessCpuManager)localObject1).e());
      return localObject1;
    }
    catch (RemoteException localRemoteException)
    {
      for (;;)
      {
        localRemoteException.printStackTrace();
        Object localObject2 = null;
      }
    }
  }
  
  /* Error */
  public static void ao(String paramString)
  {
    // Byte code:
    //   0: aload_0
    //   1: invokestatic 166	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   4: ifeq +4 -> 8
    //   7: return
    //   8: invokestatic 446	android/os/Environment:getExternalStorageState	()Ljava/lang/String;
    //   11: ldc_w 441
    //   14: invokestatic 667	android/text/TextUtils:equals	(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z
    //   17: ifeq -10 -> 7
    //   20: invokestatic 144	com/keniu/security/d:a	()Landroid/content/Context;
    //   23: aconst_null
    //   24: invokevirtual 11411	android/content/Context:getExternalFilesDir	(Ljava/lang/String;)Ljava/io/File;
    //   27: astore_2
    //   28: aload_2
    //   29: astore_1
    //   30: aload_2
    //   31: ifnonnull +7 -> 38
    //   34: invokestatic 12479	com/keniu/security/a:h	()Ljava/io/File;
    //   37: astore_1
    //   38: aload_1
    //   39: invokevirtual 468	java/io/File:exists	()Z
    //   42: ifne +10 -> 52
    //   45: aload_1
    //   46: invokevirtual 477	java/io/File:mkdirs	()Z
    //   49: ifeq -42 -> 7
    //   52: new 149	java/lang/StringBuilder
    //   55: dup
    //   56: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   59: aload_0
    //   60: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   63: ldc_w 12481
    //   66: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   69: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   72: astore_2
    //   73: invokestatic 12484	LibcoreWrapper/a:bN	()Ljava/lang/String;
    //   76: astore_0
    //   77: new 464	java/io/File
    //   80: dup
    //   81: aload_1
    //   82: aload_2
    //   83: invokespecial 1668	java/io/File:<init>	(Ljava/io/File;Ljava/lang/String;)V
    //   86: astore_1
    //   87: aload_1
    //   88: invokevirtual 468	java/io/File:exists	()Z
    //   91: ifne +40 -> 131
    //   94: aload_1
    //   95: invokevirtual 501	java/io/File:createNewFile	()Z
    //   98: pop
    //   99: new 5839	java/io/DataOutputStream
    //   102: dup
    //   103: new 5382	java/io/FileOutputStream
    //   106: dup
    //   107: aload_1
    //   108: invokespecial 5383	java/io/FileOutputStream:<init>	(Ljava/io/File;)V
    //   111: invokespecial 5868	java/io/DataOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   114: astore_1
    //   115: aload_1
    //   116: aload_0
    //   117: invokevirtual 12487	java/io/DataOutputStream:writeUTF	(Ljava/lang/String;)V
    //   120: aload_1
    //   121: invokevirtual 5840	java/io/DataOutputStream:close	()V
    //   124: return
    //   125: astore_0
    //   126: aload_0
    //   127: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   130: return
    //   131: aload_1
    //   132: invokevirtual 474	java/io/File:delete	()Z
    //   135: pop
    //   136: goto -37 -> 99
    //   139: astore_0
    //   140: aload_1
    //   141: invokevirtual 5840	java/io/DataOutputStream:close	()V
    //   144: aload_0
    //   145: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	146	0	paramString	String
    //   29	112	1	localObject1	Object
    //   27	56	2	localObject2	Object
    // Exception table:
    //   from	to	target	type
    //   87	99	125	java/io/IOException
    //   99	115	125	java/io/IOException
    //   120	124	125	java/io/IOException
    //   131	136	125	java/io/IOException
    //   140	146	125	java/io/IOException
    //   115	120	139	finally
  }
  
  public static String ap(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return null;
    }
    return com.cleanmaster.base.util.b.a.b(paramString.getBytes());
  }
  
  public static List<AndroidAppProcess> ap(Context paramContext)
  {
    localArrayList = new ArrayList();
    File[] arrayOfFile = new File("/proc").listFiles();
    paramContext = paramContext.getPackageManager();
    int i2 = arrayOfFile.length;
    int i1 = 0;
    while (i1 < i2)
    {
      Object localObject = arrayOfFile[i1];
      if (((File)localObject).isDirectory()) {}
      for (;;)
      {
        try
        {
          i3 = Integer.parseInt(((File)localObject).getName());
        }
        catch (NumberFormatException localNumberFormatException)
        {
          int i3;
          continue;
        }
        try
        {
          localObject = new AndroidAppProcess(i3);
          if ((((AndroidAppProcess)localObject).a) && ((((AndroidAppProcess)localObject).b < 1000) || (((AndroidAppProcess)localObject).b > 9999)) && (!((AndroidAppProcess)localObject).c.contains(":")) && (paramContext.getLaunchIntentForPackage(((AndroidAppProcess)localObject).a()) != null)) {
            localArrayList.add(localObject);
          }
        }
        catch (IOException localIOException)
        {
          continue;
          return localArrayList;
        }
        catch (AndroidAppProcess.NotAndroidAppProcessException localNotAndroidAppProcessException) {}
      }
      i1 += 1;
    }
  }
  
  public static boolean ap()
  {
    return 1 == a(1, "cm_acc_ad_1", "ad_acc", 1);
  }
  
  public static OFeedHelper.OGC_FEED_OPEN_STATUS aq(Context paramContext)
  {
    if (com.lock.sideslip.feed.loader.b.a()) {
      return OFeedHelper.OGC_FEED_OPEN_STATUS.OPEN;
    }
    com.lock.sideslip.d.a();
    if (com.lock.sideslip.b.i.a("cm_new_content", "content_switch_set", 1) == 0) {
      return OFeedHelper.OGC_FEED_OPEN_STATUS.CLOSED_BECAUSE_OF_CLOUD_SETTING;
    }
    if (com.lock.sideslip.feed.loader.b.a(paramContext)) {
      return OFeedHelper.OGC_FEED_OPEN_STATUS.OPEN;
    }
    com.lock.sideslip.d.a();
    int i2 = com.lock.sideslip.b.i.a("cm_new_content", "content_switch_enabled", -1);
    com.lock.sideslip.setting.h.a();
    if (!com.lock.sideslip.setting.h.b("content_switch_enabled", false))
    {
      i1 = i2;
      if (i2 > 0)
      {
        com.lock.sideslip.setting.h.a();
        com.lock.sideslip.setting.h.a("content_switch_enabled", true);
      }
    }
    for (int i1 = i2; i1 > 0; i1 = 1) {
      return OFeedHelper.OGC_FEED_OPEN_STATUS.OPEN;
    }
    return OFeedHelper.OGC_FEED_OPEN_STATUS.CLOSED_BECAUSE_OF_PROBABILITY;
  }
  
  public static List<String> aq(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {}
    for (;;)
    {
      return null;
      try
      {
        paramString = paramString.split("-");
        if ((paramString != null) && (paramString.length > 0))
        {
          paramString = Arrays.asList(paramString);
          return paramString;
        }
      }
      catch (PatternSyntaxException paramString) {}
    }
    return null;
  }
  
  public static boolean aq()
  {
    boolean bool2 = as();
    boolean bool1 = bool2;
    if (bool2) {
      bool1 = a("boost_power", "power_cloud_soff_cloudctrl_enable", false);
    }
    return bool1;
  }
  
  public static void ar(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {}
    String str;
    do
    {
      return;
      str = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).a("new_install_game_pkgs_in_one_day", "");
      if (TextUtils.isEmpty(str))
      {
        com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).b("new_install_game_pkgs_in_one_day", paramString);
        return;
      }
    } while (str.contains(paramString));
    com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).b("new_install_game_pkgs_in_one_day", str + "-" + paramString);
  }
  
  public static boolean ar()
  {
    boolean bool2 = as();
    boolean bool1 = bool2;
    if (bool2) {
      bool1 = a("boost_power", "power_cloud_soff_blackbox_enable", false);
    }
    return bool1;
  }
  
  public static boolean ar(Context paramContext)
  {
    return aq(paramContext) == OFeedHelper.OGC_FEED_OPEN_STATUS.OPEN;
  }
  
  public static boolean as()
  {
    boolean bool2 = com.cleanmaster.boost.lowbatterymode.d.h();
    boolean bool1 = bool2;
    if (bool2) {
      bool1 = a("boost_power", "power_cloud_soff_powersave_enable", true);
    }
    return bool1;
  }
  
  public static boolean as(Context paramContext)
  {
    return (cB()) && (ar(paramContext));
  }
  
  public static boolean as(String paramString)
  {
    Context localContext = com.keniu.security.d.a();
    int i1 = a(8, "result_business_optimize", paramString, 1);
    if (i1 == 1) {
      return true;
    }
    if (i1 == 2) {
      return false;
    }
    paramString = p(localContext);
    if (!TextUtils.isEmpty(paramString)) {}
    for (;;)
    {
      try
      {
        i1 = Integer.parseInt(paramString.substring(paramString.length() - 1), 16);
        if ((i1 >= 0) && (i1 <= 7)) {
          break;
        }
        return false;
      }
      catch (Exception paramString) {}
      i1 = 0;
    }
  }
  
  public static int at(String paramString)
  {
    if (au(paramString)) {
      return 1;
    }
    com.cleanmaster.util.w.a();
    if (com.cleanmaster.util.w.a(paramString)) {
      return 3;
    }
    AppInfoCacheMgr.a();
    com.cleanmaster.dao.c localC = com.cleanmaster.dao.f.l(com.keniu.security.d.a().getApplicationContext());
    if (localC != null)
    {
      paramString = localC.a(paramString);
      if (paramString == null) {}
    }
    switch (paramString.c)
    {
    default: 
      paramString = new AppInfoCacheMgr.a(false);
    }
    for (;;)
    {
      if (!paramString.cK()) {
        break label170;
      }
      return 2;
      paramString = new AppInfoCacheMgr.a(true);
      continue;
      paramString = new AppInfoCacheMgr.a(false);
      continue;
      if (paramString.d / 60 / 24 != System.currentTimeMillis() / 1000L / 60L / 60L / 24L) {
        break;
      }
      paramString = new AppInfoCacheMgr.a(false);
    }
    label170:
    return 0;
  }
  
  public static List<CityData> at(Context paramContext)
  {
    Object localObject = new HashSet();
    ArrayList localArrayList = new ArrayList();
    a(localArrayList, (Set)localObject);
    boolean bool;
    if (!localArrayList.isEmpty())
    {
      bool = true;
      localObject = a((Set)localObject);
      if (!((List)localObject).isEmpty())
      {
        if (!localArrayList.isEmpty()) {
          break label77;
        }
        localArrayList.addAll((Collection)localObject);
      }
    }
    for (;;)
    {
      a(paramContext, localArrayList, bool);
      return localArrayList;
      bool = false;
      break;
      label77:
      if (((CityData)localArrayList.get(localArrayList.size() - 1)).d == 2) {
        localArrayList.addAll(localArrayList.size() - 1, (Collection)localObject);
      } else {
        localArrayList.addAll((Collection)localObject);
      }
    }
  }
  
  public static boolean at()
  {
    if ((com.cleanmaster.base.util.system.o.h()) && (com.cmcm.rtstub.a.a().d()))
    {
      com.cleanmaster.boost.powerengine.b.a.a.a().c();
      boolean bool = as();
      au();
      if ((bool) || (!av()))
      {
        com.cleanmaster.boost.sceneengine.a.a localA = com.cleanmaster.boost.sceneengine.a.a.a();
        localA.h = false;
        Handler localHandler = localA.c;
        if ((localHandler != null) && (SystemClock.elapsedRealtime() - localA.d > localA.e))
        {
          localA.d = SystemClock.elapsedRealtime();
          localHandler.postDelayed(localA.i, localA.f);
        }
      }
      return bool;
    }
    return false;
  }
  
  /* Error */
  public static Bitmap au(Context paramContext)
  {
    // Byte code:
    //   0: ldc 2
    //   2: monitorenter
    //   3: aload_0
    //   4: invokestatic 12635	android/app/WallpaperManager:getInstance	(Landroid/content/Context;)Landroid/app/WallpaperManager;
    //   7: astore_0
    //   8: aload_0
    //   9: astore_2
    //   10: aload_0
    //   11: invokevirtual 12638	android/app/WallpaperManager:getDrawable	()Landroid/graphics/drawable/Drawable;
    //   14: astore_3
    //   15: aload_0
    //   16: astore_2
    //   17: aload_3
    //   18: instanceof 12640
    //   21: ifeq +59 -> 80
    //   24: aload_0
    //   25: astore_2
    //   26: aload_3
    //   27: checkcast 12640	android/graphics/drawable/BitmapDrawable
    //   30: invokevirtual 12643	android/graphics/drawable/BitmapDrawable:getBitmap	()Landroid/graphics/Bitmap;
    //   33: astore_3
    //   34: aload_3
    //   35: ifnull +16 -> 51
    //   38: aload_0
    //   39: astore_2
    //   40: aload_3
    //   41: invokevirtual 2169	android/graphics/Bitmap:isRecycled	()Z
    //   44: istore_1
    //   45: aload_3
    //   46: astore_2
    //   47: iload_1
    //   48: ifeq +5 -> 53
    //   51: aconst_null
    //   52: astore_2
    //   53: aload_2
    //   54: astore_3
    //   55: getstatic 336	android/os/Build$VERSION:SDK_INT	I
    //   58: bipush 14
    //   60: if_icmplt +15 -> 75
    //   63: aload_2
    //   64: astore_3
    //   65: aload_0
    //   66: ifnull +9 -> 75
    //   69: aload_0
    //   70: invokevirtual 12646	android/app/WallpaperManager:forgetLoadedWallpaper	()V
    //   73: aload_2
    //   74: astore_3
    //   75: ldc 2
    //   77: monitorexit
    //   78: aload_3
    //   79: areturn
    //   80: getstatic 336	android/os/Build$VERSION:SDK_INT	I
    //   83: bipush 14
    //   85: if_icmplt +11 -> 96
    //   88: aload_0
    //   89: ifnull +7 -> 96
    //   92: aload_0
    //   93: invokevirtual 12646	android/app/WallpaperManager:forgetLoadedWallpaper	()V
    //   96: aconst_null
    //   97: astore_3
    //   98: goto -23 -> 75
    //   101: astore_3
    //   102: aconst_null
    //   103: astore_0
    //   104: aload_0
    //   105: astore_2
    //   106: aload_3
    //   107: invokevirtual 576	java/lang/Exception:printStackTrace	()V
    //   110: getstatic 336	android/os/Build$VERSION:SDK_INT	I
    //   113: bipush 14
    //   115: if_icmplt -19 -> 96
    //   118: aload_0
    //   119: ifnull -23 -> 96
    //   122: aload_0
    //   123: invokevirtual 12646	android/app/WallpaperManager:forgetLoadedWallpaper	()V
    //   126: goto -30 -> 96
    //   129: astore_0
    //   130: ldc 2
    //   132: monitorexit
    //   133: aload_0
    //   134: athrow
    //   135: astore_0
    //   136: aconst_null
    //   137: astore_2
    //   138: getstatic 336	android/os/Build$VERSION:SDK_INT	I
    //   141: bipush 14
    //   143: if_icmplt +11 -> 154
    //   146: aload_2
    //   147: ifnull +7 -> 154
    //   150: aload_2
    //   151: invokevirtual 12646	android/app/WallpaperManager:forgetLoadedWallpaper	()V
    //   154: aload_0
    //   155: athrow
    //   156: astore_0
    //   157: goto -19 -> 138
    //   160: astore_3
    //   161: goto -57 -> 104
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	164	0	paramContext	Context
    //   44	4	1	bool	boolean
    //   9	142	2	localObject1	Object
    //   14	84	3	localObject2	Object
    //   101	6	3	localException1	Exception
    //   160	1	3	localException2	Exception
    // Exception table:
    //   from	to	target	type
    //   3	8	101	java/lang/Exception
    //   55	63	129	finally
    //   69	73	129	finally
    //   80	88	129	finally
    //   92	96	129	finally
    //   110	118	129	finally
    //   122	126	129	finally
    //   138	146	129	finally
    //   150	154	129	finally
    //   154	156	129	finally
    //   3	8	135	finally
    //   10	15	156	finally
    //   17	24	156	finally
    //   26	34	156	finally
    //   40	45	156	finally
    //   106	110	156	finally
    //   10	15	160	java/lang/Exception
    //   17	24	160	java/lang/Exception
    //   26	34	160	java/lang/Exception
    //   40	45	160	java/lang/Exception
  }
  
  public static boolean au()
  {
    if ((com.cleanmaster.base.util.system.o.h()) && (com.cmcm.rtstub.a.a().d()) && (!com.cleanmaster.boost.sceneengine.a.a.a().g))
    {
      com.cleanmaster.boost.powerengine.b.a.b localB = new com.cleanmaster.boost.powerengine.b.a.b();
      com.cleanmaster.boost.sceneengine.a.a.a().a(localB, com.keniu.security.d.a());
      return true;
    }
    return false;
  }
  
  public static boolean au(String paramString)
  {
    com.cleanmaster.dao.i localI = com.cleanmaster.dao.f.m(com.keniu.security.d.a().getApplicationContext());
    if (localI == null) {}
    while (localI.a(paramString) == null) {
      return false;
    }
    return true;
  }
  
  public static ActivityInfo av(Context paramContext)
  {
    try
    {
      paramContext = c(paramContext, new Intent("android.intent.action.CALL_BUTTON"));
      return paramContext;
    }
    finally
    {
      paramContext = finally;
      throw paramContext;
    }
  }
  
  public static SQLiteDatabase av(String paramString)
  {
    SQLiteDatabase localSQLiteDatabase2;
    try
    {
      SQLiteDatabase localSQLiteDatabase1 = SQLiteDatabase.openDatabase(paramString, null, 17);
      if (localSQLiteDatabase1 != null) {}
    }
    catch (SQLException localSQLException)
    {
      for (;;)
      {
        try
        {
          com.cleanmaster.configmanager.d.a(com.keniu.security.d.a().getApplicationContext()).b("db_update_need_full_string", true);
          paramString = SQLiteDatabase.openDatabase(paramString, null, 0);
          return paramString;
        }
        catch (Exception paramString)
        {
          return null;
        }
        catch (SQLException paramString)
        {
          return null;
        }
        localSQLException = localSQLException;
        localSQLiteDatabase2 = null;
      }
    }
    catch (Exception paramString)
    {
      return null;
    }
    return localSQLiteDatabase2;
  }
  
  public static boolean av()
  {
    com.cleanmaster.boost.sceneengine.a.c localC = com.cleanmaster.boost.sceneengine.a.a.a().a;
    if (localC == null) {}
    for (;;)
    {
      return false;
      if ((localC.a != null) && (localC.a.size() <= 0)) {}
      for (int i1 = 1; i1 != 0; i1 = 0) {
        return true;
      }
    }
  }
  
  public static Bitmap aw(Context paramContext)
  {
    byte[] arrayOfByte = Base64.decode("iVBORw0KGgoAAAANSUhEUgAAADkAAAA5CAMAAAC7xnO3AAAAh1BMVEUAAAAAAAAODg52dnb8/PzR0dH+/v7///9cXFz+/v7///////+urq7///87Ozv7+/seHh6oqKhxcXHi4uL////////////////p6enX19f///+7u7uOjo4nJyf////////////////////////////////////n5+exsbFnZ2f///8aGhr////Z+xC/AAAALHRSTlOAAISn/dn4Y5z74Lu3kpHwiLaj1vfw29PTx7+5rYpbNCkkDgYEo8npxKCih+zUVHsAAAHASURBVEjHlNFXcuMwAATRMegFmKNyTo7b9z+fU9kWKYKS+xtvgCrorq+9y5LJOCIaT5LM7XvP9MhtFtMuzrbX5clNgWi2XIX5ulzn4Wo5i4CpOw3LTQx2HhidZ4K5hXgzIHcLKKpSl5VVAYudT7oRNjXqz6SWkeuVxwdocvnLG3g9XspDAqmGSyE5dOXhEVvrWrXl8dCWx4Qi1PXCguTYkg/YFvRTy+u5dFDrtmpwv3I3ItWtpYx2P3JBo9trWHzLDTbX7eWWzZc8xaT6Synx6VM6CvMnaQrcp5xS6bz/9bWhiumH3GJLnffMvy4NnlqfVlq27zJjrlYv910a3HeeNSd7lzFB94YODS6niO+0JzLyUB+UidjLMZM81AelGU4ZS3moH2pJpoSVBuhLL9SKRBNCDdCqFypkojG5Bqjp380ZK2ItL30y6m9NJCjl6Rmat9br3QRgGAbCcOEFskNwp/3nC6gMnBI+3LgzQq+7X+HrVTXHrM4yxBzz7FxDnnNt+w21/erniv30GfK59V3h/XRN+K1D661DrH2ut67x7CvsZe6f7NnKCdvZhHmIGQy5b9/Kmsy3ytTM8cduB79XHuAaRA2hai6cAAAAAElFTkSuQmCC", 0);
    BitmapFactory.Options localOptions = new BitmapFactory.Options();
    localOptions.inDensity = 320;
    localOptions.inTargetDensity = paramContext.getResources().getDisplayMetrics().densityDpi;
    return BitmapFactory.decodeByteArray(arrayOfByte, 0, arrayOfByte.length, localOptions);
  }
  
  public static BoostExportUtils.PreScanResultType aw()
  {
    if ((Build.VERSION.SDK_INT <= 16) || (com.cleanmaster.base.util.system.d.g())) {
      return BoostExportUtils.PreScanResultType.TYPE_NONE;
    }
    long l1 = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).da();
    if (System.currentTimeMillis() - l1 < 300000L) {
      return BoostExportUtils.PreScanResultType.TYPE_NONE;
    }
    if ((com.cmcm.rtstub.a.a().d()) || (com.cm.root.d.a().g())) {
      return BoostExportUtils.PreScanResultType.TYPE_NONE;
    }
    return BoostExportUtils.PreScanResultType.TYPE_KNOWN;
  }
  
  public static String aw(String paramString)
  {
    return a(15, "screensaver_news_sdk", "B_SCREENSAVER_NEWS_WEB_APP_TITLE", paramString);
  }
  
  public static Bitmap ax(Context paramContext)
  {
    byte[] arrayOfByte = Base64.decode("iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AMXCy8fw79+rQAAAhVJREFUeNrt2y9IXlEYx3H3ooIiiCAIC4JgMRgsCyaLwWaxLK0srZhWVtYWVtYWlpYMNsvK0sKKRTANBivDIIggIiLiZ+URDncHFgzbznN+8d77nvPwvec99zz/xsa6uv4oPMWjzADgK55kBnCvj3icGQBc4hWmsgK41w/sZAPwswLiC9ayAJjGa1wNrt/hAxaaBlBcW8ReZTVc4CUmmwZQ3FvHYQXEd2w3DyDuj/AMJxUQn7HaNIDiuRm8wfUAwi3eY75pAMXzS9ivrIZz7GKiaQDF7zZwVAHxDVvNAyj2h+c4rYD4hJWmARRjzOItbir7wzvMNQ2gGGsZB5XVcIYXGG8aQDHmJo4rII6x2TyAGHc83vpZBcQBlpsGUIw/F/vA7QDCTewbs00DKOZZiS/DUKfxJRk1DaCYbyvOCkMdYaN5ADHnRJwazysg9rHUNIBi7vnwI4b7w3X4HTNNAyhsWA3PcqiT8ERHTQMobNmOWMNQh1hvHkDYMxlRp4sKiD0sNg2gsGsh4pB3AwhXEbecbhpAYd9aRKZVItgPT+v96wAKO3ciVzHUw9J6/wuAsHUqslaXFRC/pfVGY139L9A3wf4Z7AehfhTuzlB3h3tApIfE/jqAtEHRtGHx1ImRtKmxtMnRtOnx1AUSaUtk0hZJpS2TS10ombZUNm2xdPpy+d4w0VtmetNU2ra51I2TuVtnuxrWL/YiKQ6CN9uRAAAAAElFTkSuQmCC", 0);
    BitmapFactory.Options localOptions = new BitmapFactory.Options();
    localOptions.inDensity = 420;
    localOptions.inTargetDensity = paramContext.getResources().getDisplayMetrics().densityDpi;
    return BitmapFactory.decodeByteArray(arrayOfByte, 0, arrayOfByte.length, localOptions);
  }
  
  public static String ax(String paramString)
  {
    return a(15, "screensaver_news_sdk", "B_SCREENSAVER_NEWS_WEB_APP_DESC", paramString);
  }
  
  public static void ax()
  {
    Context localContext = com.keniu.security.d.a();
    Intent localIntent = new Intent();
    localIntent.setAction("action_reflesh_memory");
    localIntent.setPackage(localContext.getPackageName());
    localContext.sendBroadcast(localIntent);
  }
  
  public static Bitmap ay(Context paramContext)
  {
    byte[] arrayOfByte = Base64.decode("iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AMXCjITNKc0rQAAAJFJREFUeNrt2tENgCAMQEEwLuD+QzpC3cBURWLsvV+JNRfhi9YkSSpbP3sYETF0WO89s27m3KX6H1AeYL2wdrs5Y3/4ja/OTZ8B2f074h0z5zoDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/lr6rvDoK+xfmWsLNEmSVLUD47EiX/OuE8UAAAAASUVORK5CYII=", 0);
    BitmapFactory.Options localOptions = new BitmapFactory.Options();
    localOptions.inDensity = 420;
    localOptions.inTargetDensity = paramContext.getResources().getDisplayMetrics().densityDpi;
    return BitmapFactory.decodeByteArray(arrayOfByte, 0, arrayOfByte.length, localOptions);
  }
  
  public static String ay(String paramString)
  {
    return a(15, "screensaver_news_sdk", "B_SCREENSAVER_NEWS_WEB_APP_BTN_TXT", paramString);
  }
  
  public static boolean ay()
  {
    return Build.VERSION.SDK_INT >= 23;
  }
  
  /* Error */
  public static long az()
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_2
    //   2: aconst_null
    //   3: astore 4
    //   5: new 5688	java/io/BufferedReader
    //   8: dup
    //   9: new 3166	java/io/InputStreamReader
    //   12: dup
    //   13: new 1167	java/io/FileInputStream
    //   16: dup
    //   17: ldc_w 12726
    //   20: invokespecial 2681	java/io/FileInputStream:<init>	(Ljava/lang/String;)V
    //   23: invokespecial 5693	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
    //   26: invokespecial 5694	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   29: astore_3
    //   30: aload_3
    //   31: invokevirtual 12727	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   34: invokevirtual 1417	java/lang/String:trim	()Ljava/lang/String;
    //   37: invokestatic 765	java/lang/Long:parseLong	(Ljava/lang/String;)J
    //   40: lstore_0
    //   41: aload_3
    //   42: invokevirtual 5704	java/io/BufferedReader:close	()V
    //   45: lload_0
    //   46: lreturn
    //   47: astore_2
    //   48: aload_2
    //   49: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   52: lload_0
    //   53: lreturn
    //   54: astore_2
    //   55: aload 4
    //   57: astore_3
    //   58: aload_2
    //   59: astore 4
    //   61: aload_3
    //   62: astore_2
    //   63: aload 4
    //   65: invokevirtual 576	java/lang/Exception:printStackTrace	()V
    //   68: aload_3
    //   69: ifnull +7 -> 76
    //   72: aload_3
    //   73: invokevirtual 5704	java/io/BufferedReader:close	()V
    //   76: lconst_0
    //   77: lreturn
    //   78: astore_2
    //   79: aload_2
    //   80: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   83: goto -7 -> 76
    //   86: astore 4
    //   88: aload_2
    //   89: astore_3
    //   90: aload 4
    //   92: astore_2
    //   93: aload_3
    //   94: ifnull +7 -> 101
    //   97: aload_3
    //   98: invokevirtual 5704	java/io/BufferedReader:close	()V
    //   101: aload_2
    //   102: athrow
    //   103: astore_3
    //   104: aload_3
    //   105: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   108: goto -7 -> 101
    //   111: astore_2
    //   112: goto -19 -> 93
    //   115: astore 4
    //   117: goto -56 -> 61
    // Local variable table:
    //   start	length	slot	name	signature
    //   40	13	0	l1	long
    //   1	1	2	localObject1	Object
    //   47	2	2	localIOException1	IOException
    //   54	5	2	localException1	Exception
    //   62	1	2	localObject2	Object
    //   78	11	2	localIOException2	IOException
    //   92	10	2	localObject3	Object
    //   111	1	2	localObject4	Object
    //   29	69	3	localObject5	Object
    //   103	2	3	localIOException3	IOException
    //   3	61	4	localException2	Exception
    //   86	5	4	localObject6	Object
    //   115	1	4	localException3	Exception
    // Exception table:
    //   from	to	target	type
    //   41	45	47	java/io/IOException
    //   5	30	54	java/lang/Exception
    //   72	76	78	java/io/IOException
    //   5	30	86	finally
    //   63	68	86	finally
    //   97	101	103	java/io/IOException
    //   30	41	111	finally
    //   30	41	115	java/lang/Exception
  }
  
  public static Bitmap az(Context paramContext)
  {
    byte[] arrayOfByte = Base64.decode("iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AMXCjM59gfMOgAAA59JREFUeNrtmkloFEEUhl/N6KgxriiJOHEXF4gENYlgRFA8uyAoCNGggl68CCJ6EQx6cCFqUFzABQQRMYh4EfSi4IJbiFERQVxRgxuRMWri5yE1UBY9yWh6Znq6+z+96a6ZV/8/tbz3qkRChAgRwiMAFgJngWgQyVcDHXTiFKCCRH4Df6MFKAkK+W0W+VfAxCAQV8A+i/wTIB4E8lHgpEX+LjA8COQHAM8t8o3ATKC338kXA59IjXbgEVAPLAb6+k2AHRbhVrrGV+AwMNVPIpx3INncjRi/gTPAWL+IcMIieBGIAXFgGXAU+OggRALY7ItIEdhvkTsNRIz3MWCp3h1sXAGK/RAHnLKIHUzRdgnwwmr7Epjsh3jggkWsNkXbQuC4Q8g8Ld9F6ANctYht7KL9GiNpAnib94ujDo5uaUIdwMo00uafhghNQL98F2EYcA9YlGb75daoOeqHnSHyj+23WyLMC1oRJQpct7LJXkETYSrwyxBhlQQNwAFrFKigCTDK2hXmBnEUnDMEOBZEARYaArwLogAF1jRIq4YQ8YsASqmEiNw2HpUHSgCNB4Y9KYgCPDXs8UEU4LNhF6bzhW7DRmCEiFTqjx+VUtc8LECrYfd3RQA9lxq03SgiZR4WIGbYv9yaAt8Me5DHp8DAFP3ukQDvDTvu8WxrnGG/dUUApdQrEUkYU2a8hwWYnGJH6PEu0GzYczwaCSoRqTIeNbkpwFXDnu/Rf79URJKnyz9E5Kab6i4wYuxvQKEHR8BO8+DE7R+PAu8MB6s9Rj4GvDH6tzYTTvZaVZeIhwSoMfr2HRiUCSd21aXGI+T7WRcu6jLp7Ijh6AMw1AMCmKXxtozeLgOKgC+Gw4ZcFiCB2fpWSRLbsuF0nXUYsSlH5EfqE+IknmblSo0+1m6wRKjOMvnB+jzQHPpl2ezAEOCx0YEOYH2WfMct8rlZkIES4LXVkXqgTwZ9Vjn43JrLFXgC8Mzq0H2g0mU/BTrSa7d8bfHCPlwE3HC41XWyp9fbdIS3Tt8fxprzq7wUivYGdmnithCXgRXpxgw67K4A9ljhdxKPgVK3+q5cFqJcRA6JyAyn1zpFfaBz9RZdtYnpStNonc/PEpEhDt9vE5FaEdmtlPrh2YoEEAEWpbje9j9o1aNrhOQbgOlAncNC2R0SwCVgZaZTb5VFMUpEpEJEpojIGBEZLJ21+zbpLGe3iMgTEXkoIneUUj8lRIgQIUKECJFJ/AEepzU1TSID5QAAAABJRU5ErkJggg==", 0);
    BitmapFactory.Options localOptions = new BitmapFactory.Options();
    localOptions.inDensity = 420;
    localOptions.inTargetDensity = paramContext.getResources().getDisplayMetrics().densityDpi;
    return BitmapFactory.decodeByteArray(arrayOfByte, 0, arrayOfByte.length, localOptions);
  }
  
  public static String az(String paramString)
  {
    return a(15, "screensaver_news_sdk", "B_SCREENSAVER_NEWS_WEB_APP_GO_URL", paramString);
  }
  
  public static double b(com.cleanmaster.photomanager.MediaFile paramMediaFile)
  {
    paramMediaFile = new com.ijinshan.cleaner.c.b(paramMediaFile.j);
    paramMediaFile.start();
    try
    {
      paramMediaFile.join(5000L);
      return com.ijinshan.cleaner.c.b.a(paramMediaFile);
    }
    catch (InterruptedException localInterruptedException)
    {
      for (;;) {}
    }
  }
  
  public static float b(View paramView1, View paramView2)
  {
    if ((paramView2 == null) || (paramView1 == null) || (paramView1 == paramView2)) {
      return 0.0F;
    }
    float f1 = paramView2.getY();
    paramView2 = paramView2.getParent();
    if (((paramView2 instanceof View)) && (paramView2 != paramView1)) {
      return b(paramView1, (View)paramView2) + f1;
    }
    return f1;
  }
  
  public static float b(JSONObject paramJSONObject, String paramString, com.my.target.core.parsers.a paramA)
  {
    float f1 = (float)a(paramJSONObject, paramString, paramA, 0.0D, false);
    if ((f1 > 5.0D) || (f1 < 0.0D)) {
      a("Native Banner parse error: rating '" + f1 + "' is out of bounds [0, 5]", paramA, "Out of bounds rating");
    }
    return f1;
  }
  
  public static int b(long paramLong1, long paramLong2, int paramInt)
  {
    if ((paramLong1 <= 0L) || (paramLong2 <= 0L)) {
      return 3;
    }
    long l3 = android.support.v4.app.b.a("space_ui_setting", "space_notification_remind_size", 500) << 10 << 10;
    long l2 = 2147483648L;
    long l1 = l2;
    if (1 == paramInt)
    {
      l1 = l2;
      if (!com.cleanmaster.base.util.e.c.a) {
        l1 = 1073741824L;
      }
    }
    paramInt = a(paramLong1, paramLong2);
    if (-1 == paramInt) {
      return 0;
    }
    if ((paramInt >= 85) && (paramLong2 < l3)) {
      return 3;
    }
    if ((paramInt >= 80) && (paramLong2 > l3) && (paramLong2 <= l1)) {
      return 2;
    }
    return 1;
  }
  
  public static int b(Context paramContext, float paramFloat)
  {
    return (int)a(paramContext, 2, paramFloat, paramContext.getResources().getDisplayMetrics());
  }
  
  public static int b(Context paramContext, com.in2wow.sdk.model.a.a paramA)
  {
    int i2 = 4;
    paramContext = c(paramContext, paramA);
    int i1;
    if ((paramContext == null) || (!paramContext.exists())) {
      i1 = 1;
    }
    do
    {
      do
      {
        return i1;
        i1 = i2;
      } while (paramContext.length() == a(paramA));
      i1 = i2;
    } while (a(paramA) == -1L);
    return 2;
  }
  
  public static int b(Parcel paramParcel)
  {
    int i2 = paramParcel.readInt();
    int i3 = a(paramParcel, i2);
    int i1 = paramParcel.dataPosition();
    if ((0xFFFF & i2) != 20293) {
      throw new zza.zza("Expected object header. Got 0x" + Integer.toHexString(i2), paramParcel);
    }
    i2 = i1 + i3;
    if ((i2 < i1) || (i2 > paramParcel.dataSize())) {
      throw new zza.zza("Size read is invalid start=" + i1 + " end=" + i2, paramParcel);
    }
    return i2;
  }
  
  public static int b(RecyclerView.n paramN, android.support.v7.widget.g paramG, View paramView1, View paramView2, RecyclerView.g paramG1, boolean paramBoolean)
  {
    if ((paramG1.l() == 0) || (paramN.a() == 0) || (paramView1 == null) || (paramView2 == null)) {
      return 0;
    }
    if (!paramBoolean) {
      return paramN.a();
    }
    int i1 = paramG.b(paramView2);
    int i2 = paramG.a(paramView1);
    int i3 = Math.abs(RecyclerView.g.a(paramView1) - RecyclerView.g.a(paramView2));
    return (int)((i1 - i2) / (i3 + 1) * paramN.a());
  }
  
  public static int b(View paramView)
  {
    if (!J) {}
    try
    {
      Field localField = View.class.getDeclaredField("mMinWidth");
      I = localField;
      localField.setAccessible(true);
      J = true;
      if (I != null) {
        try
        {
          int i1 = ((Integer)I.get(paramView)).intValue();
          return i1;
        }
        catch (Exception paramView) {}
      }
      return 0;
    }
    catch (NoSuchFieldException localNoSuchFieldException)
    {
      for (;;) {}
    }
  }
  
  public static int b(String paramString, int paramInt)
  {
    paramString = p(paramString, "");
    if (TextUtils.isEmpty(paramString)) {
      return paramInt;
    }
    try
    {
      int i1 = Integer.parseInt(paramString);
      return i1;
    }
    catch (NumberFormatException paramString) {}
    return paramInt;
  }
  
  public static int b(String paramString1, String paramString2)
  {
    int i1 = 0;
    if ((paramString1 == null) && (paramString2 == null)) {}
    do
    {
      return 0;
      if (paramString1 == null) {
        return -1;
      }
      if (paramString2 == null) {
        return 1;
      }
      paramString1 = paramString1.split("\\.");
      paramString2 = paramString2.split("\\.");
    } while ((paramString1 == null) && (paramString2 == null));
    if (paramString1 == null) {
      return -1;
    }
    if (paramString2 == null) {
      return 1;
    }
    for (;;)
    {
      i1 += 1;
      if ((i1 >= paramString1.length) || (i1 >= paramString2.length)) {
        break label115;
      }
      try
      {
        long l1 = Long.parseLong(paramString1[i1]);
        long l2;
        if (l1 >= l2) {}
      }
      catch (NumberFormatException paramString1)
      {
        try
        {
          l2 = Long.parseLong(paramString2[i1]);
          if (l1 <= l2) {
            break label106;
          }
          return 1;
        }
        catch (NumberFormatException paramString1)
        {
          return 1;
        }
        paramString1 = paramString1;
        return -1;
      }
    }
    label106:
    return -1;
    label115:
    return paramString1.length - paramString2.length;
  }
  
  public static int b(JSONObject paramJSONObject, String paramString, com.my.target.core.parsers.a paramA, int paramInt)
  {
    Object localObject = "";
    try
    {
      paramJSONObject = a(paramJSONObject, paramString, paramA, "", false);
      localObject = paramJSONObject;
      if (TextUtils.isEmpty(paramJSONObject)) {
        return paramInt;
      }
      localObject = paramJSONObject;
      int i1 = Color.parseColor(paramJSONObject);
      return i1;
    }
    catch (Exception paramJSONObject)
    {
      a("Unable to parse color: '" + paramString + "', value: " + (String)localObject + ", Operation: " + paramA.d + ", Unit: " + paramA.e, paramA, paramJSONObject, "Color parse error");
    }
    return paramInt;
  }
  
  /* Error */
  public static long b(File paramFile)
  {
    // Byte code:
    //   0: aload_0
    //   1: invokevirtual 471	java/io/File:isFile	()Z
    //   4: ifne +7 -> 11
    //   7: ldc2_w 766
    //   10: lreturn
    //   11: aload_0
    //   12: invokevirtual 12792	java/io/File:canRead	()Z
    //   15: ifeq -8 -> 7
    //   18: sipush 4096
    //   21: newarray byte
    //   23: astore_3
    //   24: new 5934	java/util/zip/CRC32
    //   27: dup
    //   28: invokespecial 5935	java/util/zip/CRC32:<init>	()V
    //   31: astore_2
    //   32: new 1167	java/io/FileInputStream
    //   35: dup
    //   36: aload_0
    //   37: invokespecial 1170	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   40: astore_0
    //   41: aload_0
    //   42: aload_3
    //   43: iconst_0
    //   44: sipush 4096
    //   47: invokevirtual 9754	java/io/FileInputStream:read	([BII)I
    //   50: istore_1
    //   51: iload_1
    //   52: iconst_m1
    //   53: if_icmpeq +31 -> 84
    //   56: aload_2
    //   57: aload_3
    //   58: iconst_0
    //   59: iload_1
    //   60: invokevirtual 8213	java/util/zip/CRC32:update	([BII)V
    //   63: goto -22 -> 41
    //   66: astore_2
    //   67: aload_0
    //   68: ifnull -61 -> 7
    //   71: aload_0
    //   72: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   75: ldc2_w 766
    //   78: lreturn
    //   79: astore_0
    //   80: ldc2_w 766
    //   83: lreturn
    //   84: aload_0
    //   85: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   88: aload_0
    //   89: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   92: aload_2
    //   93: invokevirtual 5940	java/util/zip/CRC32:getValue	()J
    //   96: lreturn
    //   97: astore_2
    //   98: aconst_null
    //   99: astore_0
    //   100: aload_0
    //   101: ifnull +7 -> 108
    //   104: aload_0
    //   105: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   108: aload_2
    //   109: athrow
    //   110: astore_0
    //   111: goto -19 -> 92
    //   114: astore_0
    //   115: goto -7 -> 108
    //   118: astore_2
    //   119: goto -19 -> 100
    //   122: astore_0
    //   123: aconst_null
    //   124: astore_0
    //   125: goto -58 -> 67
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	128	0	paramFile	File
    //   50	10	1	i1	int
    //   31	26	2	localCRC32	CRC32
    //   66	27	2	localException	Exception
    //   97	12	2	localObject1	Object
    //   118	1	2	localObject2	Object
    //   23	35	3	arrayOfByte	byte[]
    // Exception table:
    //   from	to	target	type
    //   41	51	66	java/lang/Exception
    //   56	63	66	java/lang/Exception
    //   84	88	66	java/lang/Exception
    //   71	75	79	java/io/IOException
    //   32	41	97	finally
    //   88	92	110	java/io/IOException
    //   104	108	114	java/io/IOException
    //   41	51	118	finally
    //   56	63	118	finally
    //   84	88	118	finally
    //   32	41	122	java/lang/Exception
  }
  
  public static long b(String paramString1, String paramString2, long paramLong)
  {
    paramString1 = e(paramString1, paramString2, Long.toString(paramLong));
    if ((paramString1 == null) || (paramString1.length() <= 0)) {
      return paramLong;
    }
    try
    {
      long l1 = Long.parseLong(paramString1);
      return l1;
    }
    catch (NumberFormatException paramString1)
    {
      paramString1.printStackTrace();
      com.cleanmaster.base.crash.c.e().a(paramString1, false);
    }
    return paramLong;
  }
  
  public static Intent b(int paramInt)
  {
    Intent localIntent = new Intent(AppLockLib.getContext(), AppLockLib.getExternalServiceClass());
    localIntent.putExtra("applock_command", paramInt);
    return localIntent;
  }
  
  public static Intent b(ArrayList<com.cleanmaster.filemanager.a.a> paramArrayList)
  {
    ArrayList localArrayList = new ArrayList();
    Object localObject = paramArrayList.iterator();
    paramArrayList = "*/*";
    while (((Iterator)localObject).hasNext())
    {
      com.cleanmaster.filemanager.a.a localA = (com.cleanmaster.filemanager.a.a)((Iterator)localObject).next();
      if (!localA.d)
      {
        File localFile = new File(localA.b);
        paramArrayList = bm(localA.a);
        localArrayList.add(Uri.fromFile(localFile));
      }
    }
    if (localArrayList.size() == 0) {
      return null;
    }
    int i1;
    if (localArrayList.size() > 1)
    {
      i1 = 1;
      if (i1 == 0) {
        break label145;
      }
      localObject = "android.intent.action.SEND_MULTIPLE";
      label108:
      localObject = new Intent((String)localObject);
      if (i1 == 0) {
        break label152;
      }
      ((Intent)localObject).setType("*/*");
      ((Intent)localObject).putParcelableArrayListExtra("android.intent.extra.STREAM", localArrayList);
    }
    for (;;)
    {
      return localObject;
      i1 = 0;
      break;
      label145:
      localObject = "android.intent.action.SEND";
      break label108;
      label152:
      ((Intent)localObject).setType(paramArrayList);
      ((Intent)localObject).putExtra("android.intent.extra.STREAM", (Parcelable)localArrayList.get(0));
    }
  }
  
  public static Bitmap b(Context paramContext, List<String> paramList)
  {
    if ((paramContext == null) || (paramList == null) || (paramList.isEmpty())) {
      return null;
    }
    int i2 = paramList.size();
    int i1 = i2;
    if (i2 > 4) {
      i1 = 4;
    }
    ArrayList localArrayList = new ArrayList();
    i2 = 0;
    while (i2 < i1)
    {
      Object localObject = com.cleanmaster.base.util.system.m.r(paramContext, (String)paramList.get(i2));
      if ((localObject != null) && ((localObject instanceof BitmapDrawable)))
      {
        localObject = ((BitmapDrawable)localObject).getBitmap();
        if ((localObject != null) && (!((Bitmap)localObject).isRecycled())) {
          localArrayList.add(localObject);
        }
      }
      i2 += 1;
    }
    if (!localArrayList.isEmpty()) {}
    for (paramContext = new Bitmap[localArrayList.size()];; paramContext = null) {
      try
      {
        localArrayList.toArray(paramContext);
        new com.cleanmaster.ui.game.j();
        paramList = com.keniu.security.d.a();
        com.cleanmaster.ui.game.ac.a();
        com.cleanmaster.ui.game.ac.l();
        return com.cleanmaster.ui.game.k.a(paramList).a(paramContext, null, true);
      }
      catch (Exception paramList)
      {
        for (;;)
        {
          paramList.printStackTrace();
        }
      }
    }
  }
  
  public static Bitmap b(byte[] paramArrayOfByte, int paramInt)
  {
    if (paramArrayOfByte != null) {
      try
      {
        BitmapFactory.Options localOptions = new BitmapFactory.Options();
        localOptions.inJustDecodeBounds = true;
        localOptions.inSampleSize = 1;
        BitmapFactory.decodeByteArray(paramArrayOfByte, 0, paramArrayOfByte.length, localOptions);
        int i1 = 1;
        if (localOptions.outWidth < localOptions.outHeight) {}
        for (int i2 = localOptions.outWidth;; i2 = localOptions.outHeight)
        {
          if (i2 <= paramInt) {
            break label99;
          }
          i1 += 1;
          localOptions.inSampleSize = i1;
          localOptions.inJustDecodeBounds = true;
          BitmapFactory.decodeByteArray(paramArrayOfByte, 0, paramArrayOfByte.length, localOptions);
          break;
        }
        label99:
        localOptions.inSampleSize = i1;
        localOptions.inJustDecodeBounds = false;
        paramArrayOfByte = BitmapFactory.decodeByteArray(paramArrayOfByte, 0, paramArrayOfByte.length, localOptions);
        return paramArrayOfByte;
      }
      catch (Exception paramArrayOfByte)
      {
        paramArrayOfByte.printStackTrace();
      }
    }
    return null;
  }
  
  public static Uri b(com.facebook.internal.d paramD)
  {
    Object localObject = paramD.name();
    paramD = paramD.getAction();
    localObject = com.facebook.internal.w.a(com.facebook.f.j(), paramD, (String)localObject);
    paramD = null;
    if (localObject != null) {
      paramD = ((w.a)localObject).c;
    }
    return paramD;
  }
  
  public static com.cleanmaster.boost.autostarts.core.a b(Collection<com.cleanmaster.boost.boostengine.autostart.a.a> paramCollection)
  {
    com.cleanmaster.boost.autostarts.core.a localA = new com.cleanmaster.boost.autostarts.core.a();
    if ((paramCollection != null) && (paramCollection.size() > 0))
    {
      Object localObject = com.cleanmaster.func.cache.e.a().b.a();
      int i1;
      if (localObject == null)
      {
        i1 = 0;
        localA.c = i1;
        paramCollection = paramCollection.iterator();
      }
      for (;;)
      {
        if (!paramCollection.hasNext()) {
          return localA;
        }
        localObject = (com.cleanmaster.boost.boostengine.autostart.a.a)paramCollection.next();
        if ((localObject != null) && (!((com.cleanmaster.boost.boostengine.autostart.a.a)localObject).b) && (!d((com.cleanmaster.boost.boostengine.autostart.a.a)localObject)))
        {
          if (((com.cleanmaster.boost.boostengine.autostart.a.a)localObject).l)
          {
            if (((com.cleanmaster.boost.boostengine.autostart.a.a)localObject).m != com.cleanmaster.base.util.system.m.a)
            {
              localA.b += 1;
              if (TextUtils.isEmpty(((com.cleanmaster.boost.boostengine.autostart.a.a)localObject).a)) {
                continue;
              }
              localA.d.add(((com.cleanmaster.boost.boostengine.autostart.a.a)localObject).a);
              continue;
              i1 = ((List)localObject).size();
              break;
            }
            localA.a += 1;
            continue;
          }
          if ((((com.cleanmaster.boost.boostengine.autostart.a.a)localObject).k) && (((com.cleanmaster.boost.boostengine.autostart.a.a)localObject).g == 0))
          {
            localA.b += 1;
            if (!TextUtils.isEmpty(((com.cleanmaster.boost.boostengine.autostart.a.a)localObject).a)) {
              localA.d.add(((com.cleanmaster.boost.boostengine.autostart.a.a)localObject).a);
            }
          }
          else
          {
            localA.a += 1;
          }
        }
      }
    }
    return localA;
  }
  
  private static com.cleanmaster.cleancloud.core.falseproc.b b(SQLiteDatabase paramSQLiteDatabase)
  {
    localObject = null;
    localSQLiteDatabase = null;
    localB = new com.cleanmaster.cleancloud.core.falseproc.b();
    for (;;)
    {
      try
      {
        paramSQLiteDatabase = paramSQLiteDatabase.rawQuery("select name,version from data_versions", null);
        if (paramSQLiteDatabase == null) {
          continue;
        }
        localSQLiteDatabase = paramSQLiteDatabase;
        localObject = paramSQLiteDatabase;
        if (paramSQLiteDatabase.moveToNext())
        {
          localSQLiteDatabase = paramSQLiteDatabase;
          localObject = paramSQLiteDatabase;
          if (paramSQLiteDatabase.getString(0).compareTo("pkgquery") != 0) {
            continue;
          }
          localSQLiteDatabase = paramSQLiteDatabase;
          localObject = paramSQLiteDatabase;
          localB.a = paramSQLiteDatabase.getInt(1);
        }
        if (paramSQLiteDatabase != null) {
          paramSQLiteDatabase.close();
        }
      }
      catch (SQLiteException paramSQLiteDatabase)
      {
        localObject = localSQLiteDatabase;
        paramSQLiteDatabase.printStackTrace();
        localObject = localSQLiteDatabase;
        localB.a = -1;
        if (localSQLiteDatabase == null) {
          continue;
        }
        localSQLiteDatabase.close();
        return localB;
      }
      finally
      {
        if (localObject == null) {
          continue;
        }
        ((Cursor)localObject).close();
      }
      return localB;
      localSQLiteDatabase = paramSQLiteDatabase;
      localObject = paramSQLiteDatabase;
      localB.a = -3;
    }
  }
  
  public static com.cleanmaster.cleancloud.core.falseproc.d b(byte[] paramArrayOfByte1, byte[] paramArrayOfByte2)
  {
    com.cleanmaster.cleancloud.core.falseproc.d localD = new com.cleanmaster.cleancloud.core.falseproc.d();
    localD.b = new com.cleanmaster.cleancloud.core.b.c();
    localD.a = -1;
    if (paramArrayOfByte1 == null) {}
    for (;;)
    {
      return localD;
      if (paramArrayOfByte1.length >= 8) {
        try
        {
          com.cleanmaster.base.util.b.b.a(paramArrayOfByte1, 0, paramArrayOfByte1.length, paramArrayOfByte2);
          int i1 = com.cleanmaster.base.util.b.b.b(paramArrayOfByte1, 0);
          if ((i1 <= paramArrayOfByte1.length) && (i1 > 8))
          {
            int i2 = com.cleanmaster.base.util.b.b.b(paramArrayOfByte1, 4);
            paramArrayOfByte2 = new CRC32();
            paramArrayOfByte2.update(paramArrayOfByte1, 8, i1 - 8);
            if (i2 == (int)paramArrayOfByte2.getValue())
            {
              paramArrayOfByte1 = d(paramArrayOfByte1);
              if (paramArrayOfByte1 != null)
              {
                localD.a = 0;
                localD.b.a = paramArrayOfByte1;
                return localD;
              }
            }
          }
        }
        catch (Exception paramArrayOfByte1)
        {
          paramArrayOfByte1.printStackTrace();
        }
      }
    }
    return localD;
  }
  
  public static com.cleanmaster.cleancloud.core.falseproc.q b(Context paramContext, com.cleanmaster.cleancloud.m paramM)
  {
    Object localObject = null;
    paramM = new CleanCloudReadOnlyHighFreqDB(paramContext, paramM, com.cleanmaster.cleancloud.core.residual.n.a(paramM));
    o.a localA = paramM.a();
    paramContext = localObject;
    if (localA != null)
    {
      paramContext = localObject;
      if (localA.a != null)
      {
        paramContext = c(localA.b);
        paramM.a(localA);
      }
    }
    paramM.g();
    return paramContext;
  }
  
  public static com.cleanmaster.cleancloud.core.residual.k b(MessageDigest paramMessageDigest, String paramString)
  {
    com.cleanmaster.cleancloud.core.residual.k localK = new com.cleanmaster.cleancloud.core.residual.k();
    if ((TextUtils.isEmpty(paramString)) || (paramMessageDigest == null)) {}
    Object localObject2;
    for (Object localObject1 = null;; localObject1 = null)
    {
      localK.a = paramString;
      if (localObject1 != null)
      {
        if (localObject1.length != 1) {
          break label374;
        }
        localK.c = localObject1[0];
        localK.b = localObject1[0];
      }
      return localK;
      if (!TextUtils.isEmpty(paramString)) {
        break;
      }
      localObject2 = null;
      if ((localObject2 != null) && (localObject2.length != 0) && (paramMessageDigest != null)) {
        break label295;
      }
    }
    int i1 = paramString.length() - 1;
    int i2 = paramString.indexOf(File.separatorChar);
    Object localObject3;
    if (-1 == i2)
    {
      localObject1 = null;
      localObject2 = null;
      localObject3 = paramString;
    }
    for (;;)
    {
      label122:
      if (localObject1 != null)
      {
        localObject4 = new String[3];
        localObject4[0] = localObject3;
        localObject4[1] = localObject2;
        localObject4[2] = localObject1;
        localObject1 = localObject4;
      }
      for (;;)
      {
        localObject2 = localObject1;
        break;
        localObject1 = paramString.substring(0, i2);
        if (i2 == i1) {
          break label463;
        }
        i3 = paramString.indexOf(File.separatorChar, i2 + 1);
        if (-1 == i3)
        {
          localObject2 = paramString.substring(i2 + 1);
          localObject4 = null;
          localObject3 = localObject1;
          localObject1 = localObject4;
          break label122;
        }
        localObject2 = paramString.substring(i2 + 1, i3);
        if (i3 == i1) {
          break label453;
        }
        localObject4 = paramString.substring(i3 + 1);
        localObject3 = localObject1;
        localObject1 = localObject4;
        break label122;
        if (localObject2 != null)
        {
          localObject1 = new String[2];
          localObject1[0] = localObject3;
          localObject1[1] = localObject2;
        }
        else
        {
          localObject1 = new String[1];
          localObject1[0] = localObject3;
        }
      }
      label295:
      localObject3 = new String[localObject2.length];
      localObject1 = localObject3;
      if (localObject2.length <= 0) {
        break;
      }
      localObject3[0] = android.support.percent.a.a(paramMessageDigest, localObject2[0]);
      localObject1 = localObject3;
      if (localObject2.length <= 1) {
        break;
      }
      localObject3[1] = android.support.percent.a.a(paramMessageDigest, localObject2[1]);
      localObject1 = localObject3;
      if (localObject2.length <= 2) {
        break;
      }
      localObject3[2] = localObject2[2];
      localObject1 = localObject3;
      break;
      label374:
      localK.c = android.support.percent.a.a(paramMessageDigest, paramString);
      paramMessageDigest = new StringBuilder();
      int i3 = localObject1.length;
      i2 = 1;
      i1 = 0;
      if (i1 < i3)
      {
        paramString = localObject1[i1];
        if (i2 != 0) {
          i2 = 0;
        }
        for (;;)
        {
          paramMessageDigest.append(paramString);
          i1 += 1;
          break;
          paramMessageDigest.append('+');
        }
      }
      localK.b = paramMessageDigest.toString();
      return localK;
      label453:
      localObject3 = localObject1;
      localObject1 = null;
      continue;
      label463:
      localObject2 = null;
      localObject3 = localObject1;
      Object localObject4 = null;
      localObject1 = localObject2;
      localObject2 = localObject4;
    }
  }
  
  public static WeatherData b(JSONObject paramJSONObject)
  {
    WeatherData localWeatherData = new WeatherData();
    if (!paramJSONObject.isNull("date")) {
      localWeatherData.a = paramJSONObject.optString("date");
    }
    if (!paramJSONObject.isNull("d")) {
      localWeatherData.b = paramJSONObject.optString("d");
    }
    Object localObject1;
    Object localObject2;
    int i1;
    if (!paramJSONObject.isNull("wc"))
    {
      localObject1 = paramJSONObject.optJSONArray("wc");
      if (localObject1 != null)
      {
        localObject2 = new int[((JSONArray)localObject1).length()];
        i1 = 0;
        while (i1 < localObject2.length)
        {
          localObject2[i1] = ((JSONArray)localObject1).getInt(i1);
          i1 += 1;
        }
        localWeatherData.c = ((int[])localObject2);
      }
    }
    if (!paramJSONObject.isNull("wctd"))
    {
      localObject1 = paramJSONObject.optJSONArray("wctd");
      if (localObject1 != null)
      {
        localObject2 = new int[((JSONArray)localObject1).length()];
        i1 = 0;
        while (i1 < localObject2.length)
        {
          localObject2[i1] = ((JSONArray)localObject1).getInt(i1);
          i1 += 1;
        }
        localWeatherData.d = ((int[])localObject2);
      }
    }
    if (!paramJSONObject.isNull("tn")) {
      localWeatherData.g = paramJSONObject.optInt("tn");
    }
    if (!paramJSONObject.isNull("tl")) {
      localWeatherData.e = paramJSONObject.optInt("tl");
    }
    if (!paramJSONObject.isNull("th")) {
      localWeatherData.f = paramJSONObject.optInt("th");
    }
    if ((!paramJSONObject.isNull("aqi")) && (!TextUtils.isEmpty(paramJSONObject.getString("aqi")))) {}
    try
    {
      localWeatherData.h = Integer.parseInt(paramJSONObject.getString("aqi"));
      if (!paramJSONObject.isNull("kph"))
      {
        localObject1 = paramJSONObject.optJSONArray("kph");
        if ((localObject1 != null) && (((JSONArray)localObject1).length() > 0)) {
          localWeatherData.j = ((JSONArray)localObject1).optString(0);
        }
      }
      if (!paramJSONObject.isNull("mph"))
      {
        localObject1 = paramJSONObject.optJSONArray("mph");
        if ((localObject1 != null) && (((JSONArray)localObject1).length() > 0)) {
          localWeatherData.k = ((JSONArray)localObject1).optString(0);
        }
      }
      if (!paramJSONObject.isNull("fl")) {}
      try
      {
        localWeatherData.l = Integer.parseInt(paramJSONObject.getString("fl"));
        localObject1 = paramJSONObject.optString("rh");
        if ((!TextUtils.isEmpty((CharSequence)localObject1)) && (TextUtils.isDigitsOnly((CharSequence)localObject1))) {}
        try
        {
          localWeatherData.m = Integer.parseInt((String)localObject1);
          localObject2 = paramJSONObject.optString("v_km");
          if ((TextUtils.isEmpty((CharSequence)localObject1)) || ("".equalsIgnoreCase(""))) {}
        }
        catch (NumberFormatException localNumberFormatException1)
        {
          try
          {
            localWeatherData.n = Float.valueOf((String)localObject2).floatValue();
            if (!paramJSONObject.isNull("wd"))
            {
              localObject1 = paramJSONObject.optJSONArray("wd");
              if ((localObject1 != null) && (((JSONArray)localObject1).length() > 0)) {
                localWeatherData.i = ((JSONArray)localObject1).optInt(0);
              }
            }
            localObject1 = paramJSONObject.optString("p_mb");
            if (TextUtils.isEmpty((CharSequence)localObject1)) {}
          }
          catch (NumberFormatException localNumberFormatException1)
          {
            try
            {
              for (;;)
              {
                localWeatherData.o = Float.valueOf((String)localObject1).floatValue();
                paramJSONObject = paramJSONObject.optString("up");
                if (!TextUtils.isEmpty(paramJSONObject)) {}
                try
                {
                  localWeatherData.q = (Long.valueOf(paramJSONObject).longValue() * 1000L);
                  return localWeatherData;
                }
                catch (NumberFormatException paramJSONObject)
                {
                  return localWeatherData;
                }
                localNumberFormatException3 = localNumberFormatException3;
                localNumberFormatException3.printStackTrace();
              }
              localNumberFormatException1 = localNumberFormatException1;
              localNumberFormatException1.printStackTrace();
            }
            catch (NumberFormatException localNumberFormatException2)
            {
              for (;;)
              {
                localNumberFormatException2.printStackTrace();
              }
            }
          }
        }
      }
      catch (Exception localException1)
      {
        for (;;) {}
      }
    }
    catch (Exception localException2)
    {
      for (;;) {}
    }
  }
  
  public static ONewsScenario b(Uri paramUri)
  {
    paramUri = paramUri.getQueryParameter("table");
    if (!TextUtils.isEmpty(paramUri)) {
      return ONewsScenario.a(paramUri);
    }
    return ONewsScenario.a((byte)-1);
  }
  
  public static Alert b(Context paramContext, boolean paramBoolean)
  {
    Object localObject1 = null;
    t("WeatherAlert", "getAlert isTomorrow:" + paramBoolean + " context:" + paramContext);
    try
    {
      localObject2 = com.lock.sideslip.d.a().d().b();
      if (localObject2 == null)
      {
        t("WeatherAlert", "getAlert fetcher == null");
        return null;
      }
      arrayOfWeatherDailyData = ((com.cmnow.weather.sdk.i)localObject2).a(7);
      if ((arrayOfWeatherDailyData == null) || (arrayOfWeatherDailyData.length <= 0))
      {
        t("WeatherAlert", "getAlert weatherDailyData == null");
        return null;
      }
    }
    catch (Exception paramContext)
    {
      Object localObject2;
      WeatherDailyData[] arrayOfWeatherDailyData;
      t("WeatherAlert", "getAlert Exception = " + Log.getStackTraceString(paramContext));
      for (paramContext = localObject1; paramContext == null; paramContext = com.cmnow.weather.sdk.alert.e.a(paramContext, com.cmnow.weather.sdk.alert.d.a(), arrayOfWeatherDailyData, (WeatherHourlyData[])localObject2, paramBoolean))
      {
        cX();
        return paramContext;
        localObject2 = ((com.cmnow.weather.sdk.i)localObject2).b(24);
        if ((localObject2 == null) || (localObject2.length <= 0))
        {
          t("WeatherAlert", "getAlert hourlyData == null");
          return null;
        }
      }
    }
    return paramContext;
  }
  
  public static com.my.target.core.a.a.b<String> b(String paramString, Context paramContext)
  {
    return new com.my.target.core.a.a.h(paramString, paramContext);
  }
  
  public static com.my.target.core.f.b.g b(com.my.target.core.f.b.f paramF, String paramString, com.my.target.core.parsers.a paramA)
  {
    try
    {
      paramF = (com.my.target.core.f.b.g)paramF;
      return paramF;
    }
    catch (Exception paramF)
    {
      a("Unable to cast to standard section field '" + paramString + "', Operation: " + paramA.d + ", Unit: " + paramA.e, paramA, paramF, "Class cast exception");
    }
    return null;
  }
  
  public static com.my.target.nativeads.b.b b(List<com.my.target.nativeads.b.b> paramList, int paramInt)
  {
    com.my.target.nativeads.b.b localB = null;
    int i1 = 0;
    Iterator localIterator = paramList.iterator();
    paramList = localB;
    if (localIterator.hasNext())
    {
      localB = (com.my.target.nativeads.b.b)localIterator.next();
      int i2 = localB.c;
      if ((paramList != null) && ((i2 > paramInt) || (i1 <= paramInt)) && ((i2 > paramInt) || (i2 <= i1)) && ((i2 <= paramInt) || (i2 >= i1))) {
        break label109;
      }
      paramList = localB;
      i1 = i2;
    }
    label109:
    for (;;)
    {
      break;
      new StringBuilder("Accepted videoData quality = ").append(i1).append("p");
      return paramList;
    }
  }
  
  private static Float b(String paramString, Attributes paramAttributes, Float paramFloat)
  {
    paramAttributes = d(paramString, paramAttributes);
    if (paramAttributes == null) {
      return paramFloat;
    }
    paramString = paramAttributes;
    if (paramAttributes.endsWith("px")) {
      paramString = paramAttributes.substring(0, paramAttributes.length() - 2);
    }
    return Float.valueOf(Float.parseFloat(paramString));
  }
  
  public static Integer b(Node paramNode, String paramString)
  {
    if (paramNode == null) {
      return null;
    }
    try
    {
      int i1 = Integer.parseInt(c(paramNode, paramString));
      return Integer.valueOf(i1);
    }
    catch (NumberFormatException paramNode) {}
    return null;
  }
  
  public static Object b(Object paramObject, String paramString)
  {
    Class localClass = paramObject.getClass();
    try
    {
      paramString = localClass.getDeclaredMethod(paramString, null);
      paramString.setAccessible(true);
      paramObject = paramString.invoke(paramObject, null);
      return paramObject;
    }
    catch (NoSuchMethodException paramObject)
    {
      paramObject.printStackTrace();
      return null;
    }
    catch (Exception paramObject)
    {
      paramObject.printStackTrace();
    }
    return null;
  }
  
  public static String b(int paramInt, JSONArray paramJSONArray, String paramString, com.my.target.core.parsers.a paramA)
  {
    try
    {
      paramJSONArray = paramJSONArray.getString(paramInt);
      return paramJSONArray;
    }
    catch (JSONException paramJSONArray)
    {
      a("Unable to get String from JSONArray " + paramString, paramA, "JSONException");
    }
    return null;
  }
  
  public static String b(long paramLong)
  {
    if (paramLong <= 1L) {
      return com.keniu.security.d.a().getString(2131300891);
    }
    if (paramLong < 30L) {
      return com.keniu.security.d.a().getString(2131300889, new Object[] { Long.valueOf(paramLong) });
    }
    if (paramLong / 30L < 12L) {
      return com.keniu.security.d.a().getString(2131300890, new Object[] { Long.valueOf(paramLong / 30L) });
    }
    return com.keniu.security.d.a().getString(2131300892, new Object[] { Long.valueOf(paramLong / 365L) });
  }
  
  public static String b(Context paramContext, long paramLong)
  {
    java.text.DateFormat localDateFormat = android.text.format.DateFormat.getDateFormat(paramContext);
    paramContext = android.text.format.DateFormat.getTimeFormat(paramContext);
    Date localDate = new Date(paramLong);
    return localDateFormat.format(localDate) + " " + paramContext.format(localDate);
  }
  
  public static String b(com.keniu.security.update.e paramE, String paramString1, String paramString2)
  {
    Object localObject1 = paramE.a(paramString1);
    if (localObject1 == null) {
      return null;
    }
    Object localObject2;
    if (((Collection)localObject1).size() > 1)
    {
      localObject2 = ((Collection)localObject1).iterator();
      while (((Iterator)localObject2).hasNext())
      {
        String str = (String)((Iterator)localObject2).next();
        if ((!str.contains("*")) && (android.support.v4.a.c.a(str, paramString2)))
        {
          com.keniu.security.update.l.a();
          new StringBuilder(" return branch = ").append(paramE.a(paramString1, str));
          return paramE.a(paramString1, str);
        }
      }
    }
    localObject1 = ((Collection)localObject1).iterator();
    while (((Iterator)localObject1).hasNext())
    {
      localObject2 = (String)((Iterator)localObject1).next();
      if (android.support.v4.a.c.a((String)localObject2, paramString2))
      {
        com.keniu.security.update.l.a();
        new StringBuilder("return branch = ").append(paramE.a(paramString1, (String)localObject2));
        return paramE.a(paramString1, (String)localObject2);
      }
    }
    return null;
  }
  
  public static String b(Throwable paramThrowable)
  {
    if (paramThrowable != null)
    {
      String str = "{ " + paramThrowable.getClass().getName() + " } ";
      paramThrowable = paramThrowable.getLocalizedMessage();
      if (paramThrowable != null) {
        return str + paramThrowable;
      }
      return str + "Message Null";
    }
    return "Exception Null";
  }
  
  public static String b(Map<?, ?> paramMap)
  {
    if (paramMap == null) {
      return null;
    }
    localStringBuilder = new StringBuilder();
    try
    {
      Iterator localIterator = paramMap.keySet().iterator();
      while (localIterator.hasNext())
      {
        Object localObject = localIterator.next();
        localStringBuilder.append("{").append(localObject).append(":").append(paramMap.get(localObject)).append("}");
      }
      return localStringBuilder.toString();
    }
    catch (Exception paramMap) {}
  }
  
  private static String b(JSONObject paramJSONObject, String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return "";
    }
    return paramJSONObject.optString(paramString.toLowerCase(Locale.US));
  }
  
  private static String b(boolean paramBoolean1, boolean paramBoolean2)
  {
    Object localObject = com.keniu.security.d.a();
    localObject = com.cleanmaster.configmanager.d.a((Context)localObject).b((Context)localObject).a();
    if (paramBoolean1) {
      localObject = com.cleanmaster.cloudconfig.f.a("abnormal_toast_cpu", (String)localObject);
    }
    while (TextUtils.isEmpty((CharSequence)localObject))
    {
      return null;
      if (paramBoolean2) {
        localObject = com.cleanmaster.cloudconfig.f.a("abnormal_toast_freqstart_one", (String)localObject);
      } else {
        localObject = com.cleanmaster.cloudconfig.f.a("abnormal_toast_freqstart_multi", (String)localObject);
      }
    }
    return d("process_settings", (String)localObject, "");
  }
  
  public static String b(byte[] paramArrayOfByte)
  {
    if (paramArrayOfByte == null) {
      return null;
    }
    return Base64.encodeToString(paramArrayOfByte, 10);
  }
  
  public static List<String> b(int paramInt, String paramString)
  {
    ICloudConfigGetter localICloudConfigGetter = (ICloudConfigGetter)com.cleanmaster.base.ipc.c.a().a(com.cleanmaster.base.ipc.b.e);
    if (localICloudConfigGetter != null) {
      try
      {
        paramString = localICloudConfigGetter.b(paramInt, paramString);
        return paramString;
      }
      catch (RemoteException paramString)
      {
        paramString.printStackTrace();
      }
    }
    return null;
  }
  
  public static List<com.cleanmaster.common.model.AppInfo> b(long paramLong, int paramInt)
  {
    Object localObject;
    if (com.cleanmaster.base.util.system.o.h()) {
      localObject = com.cleanmaster.dao.f.c(com.keniu.security.d.a().getApplicationContext()).a(paramLong, paramInt);
    }
    for (;;)
    {
      return localObject;
      try
      {
        List localList = com.cleanmaster.synipc.b.a().c().a(paramLong, paramInt);
        localObject = localList;
        if (localList != null) {}
      }
      catch (RemoteException localRemoteException)
      {
        for (;;)
        {
          localRemoteException.printStackTrace();
        }
      }
    }
    return null;
  }
  
  private static List<String> b(Context paramContext, Intent paramIntent)
  {
    if (paramContext == null) {}
    do
    {
      return null;
      paramContext = paramContext.getPackageManager();
    } while (paramContext == null);
    paramIntent = paramContext.queryIntentActivities(paramIntent, 0);
    paramContext = new ArrayList();
    if (paramIntent != null)
    {
      paramIntent = paramIntent.iterator();
      while (paramIntent.hasNext())
      {
        ResolveInfo localResolveInfo = (ResolveInfo)paramIntent.next();
        if ((localResolveInfo != null) && (localResolveInfo.activityInfo != null) && (!TextUtils.isEmpty(localResolveInfo.activityInfo.name))) {
          paramContext.add(localResolveInfo.activityInfo.name);
        }
      }
    }
    return paramContext;
  }
  
  private static List<String> b(com.cleanmaster.boost.boostengine.c.c paramC)
  {
    if (paramC == null) {
      return null;
    }
    ArrayList localArrayList = new ArrayList();
    paramC = paramC.c().iterator();
    while (paramC.hasNext())
    {
      com.cleanmaster.boost.process.util.ProcessModel localProcessModel = (com.cleanmaster.boost.process.util.ProcessModel)paramC.next();
      if ((localProcessModel != null) && (!localProcessModel.v) && (localProcessModel.a()) && (!TextUtils.isEmpty(localProcessModel.c))) {
        localArrayList.add(localProcessModel.c);
      }
    }
    return localArrayList;
  }
  
  public static List<Long> b(String paramString1, String paramString2, String paramString3)
  {
    paramString1 = c(paramString1, paramString2, paramString3);
    paramString2 = new ArrayList();
    if (paramString1 != null)
    {
      int i2 = paramString1.length;
      int i1 = 0;
      for (;;)
      {
        if (i1 < i2)
        {
          paramString3 = paramString1[i1];
          if (!TextUtils.isEmpty(paramString3)) {}
          try
          {
            l1 = Long.parseLong(paramString3);
            if (0L != l1) {
              paramString2.add(Long.valueOf(l1));
            }
            i1 += 1;
          }
          catch (Exception paramString3)
          {
            for (;;)
            {
              long l1 = 0L;
            }
          }
        }
      }
    }
    return paramString2;
  }
  
  public static List<com.cmcm.mixad.e> b(String paramString, List<String> paramList, Context paramContext)
  {
    ArrayList localArrayList;
    if ((paramList != null) && (!paramList.isEmpty()))
    {
      localArrayList = new ArrayList();
      try
      {
        paramList = paramList.iterator();
        while (paramList.hasNext())
        {
          JSONObject localJSONObject = new JSONObject((String)paramList.next());
          com.cmcm.mixad.e localE = new com.cmcm.mixad.e();
          localE.a = paramString;
          localE.c = paramContext.getApplicationContext();
          localE.d = localJSONObject.optInt("source");
          localE.e = localJSONObject.optInt("type");
          localE.b = null;
          int i1 = 50;
          if (localE.d == 1) {
            i1 = 0;
          }
          localE.f = Integer.valueOf(localJSONObject.optInt("priority", i1));
          localE.h = localJSONObject.optInt("mt_type");
          localE.p = localJSONObject.optInt("giftimes", 3);
          localE.q = localJSONObject.optInt("localtime", 1);
          localE.r = localJSONObject.optInt("box_reddot", 0);
          localE.s = localJSONObject.optInt("shift");
          localE.w = localJSONObject.optInt("frequency");
          localE.v = localJSONObject.optString("button_txt");
          localE.u = localJSONObject.optString("desc");
          localE.g = localJSONObject.optString("pic_url");
          localE.i = localJSONObject.optString("pkg_url");
          localE.j = localJSONObject.optString("st");
          localE.k = localJSONObject.optString("et");
          localE.l = localJSONObject.optString("title");
          a(localJSONObject.optString("pkg"), localE);
          localE.o = localJSONObject.optString("deeplink");
          localE.t = localJSONObject.optString("background");
          localE.x = localJSONObject.optInt("res_type");
          localE.y = localJSONObject.optString("des");
          localE.z = localJSONObject.optString("third_imp_url");
          localE.A = localJSONObject.optString("click_tracking_url");
          localE.B = localJSONObject.optInt("sug_type");
          localE.C = localJSONObject.optString("toast");
          localE.D = localJSONObject.optString("icon_url");
          localE.E = localJSONObject.optString("dialog_nowifi");
          localE.F = localJSONObject.optInt("show_apk", 0);
          localArrayList.add(localE);
          continue;
          return null;
        }
      }
      catch (Exception paramString)
      {
        paramString.printStackTrace();
      }
    }
    if (!localArrayList.isEmpty()) {
      Collections.sort(localArrayList);
    }
    return localArrayList;
  }
  
  public static List<String> b(Document paramDocument, String paramString)
  {
    return a(paramDocument, paramString, null, null);
  }
  
  public static List<Node> b(Document paramDocument, String paramString1, String paramString2, String paramString3)
  {
    return a(paramDocument, paramString1, paramString2, paramString3, new XmlUtils.3());
  }
  
  public static JSONObject b(Bundle paramBundle)
  {
    try
    {
      JSONObject localJSONObject = new JSONObject();
      return localJSONObject;
    }
    catch (Exception paramBundle)
    {
      try
      {
        com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.y, Integer.valueOf(paramBundle.getInt("adid")));
        com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.z, paramBundle.getString("placement"));
        com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.A, Integer.valueOf(paramBundle.getInt("place")));
        com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.a, Integer.valueOf(paramBundle.getInt("ad_version")));
        com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.b, Integer.valueOf(paramBundle.getInt("creative_id")));
        com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.o, paramBundle.getString("token"));
        com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.B, Integer.valueOf(paramBundle.getInt("is_first")));
        paramBundle = paramBundle.getString("ad_list_ref");
        if (paramBundle != null) {
          com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.N, paramBundle);
        }
        return localJSONObject;
      }
      catch (Exception paramBundle) {}
      paramBundle = paramBundle;
      return null;
    }
  }
  
  private static JSONObject b(ShareOpenGraphContent paramShareOpenGraphContent)
  {
    return a(paramShareOpenGraphContent.a, new com.facebook.share.internal.n());
  }
  
  public static JSONObject b(com.in2wow.sdk.model.c paramC)
  {
    try
    {
      JSONObject localJSONObject = new JSONObject();
      try
      {
        com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.P, Integer.valueOf(paramC.h()));
        com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.O, Integer.valueOf(paramC.i()));
        if (paramC.x() != null)
        {
          paramC = paramC.x();
          com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.Q, paramC.optString("AD_ID"));
          com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.b, paramC.optString("CREATIVE_ID", ""));
          return localJSONObject;
        }
        com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.Q, "UNKNOWN");
        com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.b, "UNKNOWN");
        return localJSONObject;
      }
      catch (Exception paramC)
      {
        return localJSONObject;
      }
      return null;
    }
    catch (Exception paramC) {}
  }
  
  public static void b()
  {
    throw new NullPointerException();
  }
  
  public static void b(int paramInt1, int paramInt2)
  {
    throw new NullPointerException();
  }
  
  public static void b(int paramInt1, int paramInt2, String paramString)
  {
    com.cleanmaster.base.util.concurrent.BackgroundThread.a(new com.cleanmaster.ui.game.v(paramInt1, paramInt2, paramString));
  }
  
  public static void b(int paramInt1, int paramInt2, String paramString, int paramInt3)
  {
    com.cleanmaster.kinfoc.p.a().a("cm_game_guide", "showreason=" + paramInt1 + "&operation=" + paramInt2 + "&pkgname=" + paramString + "&detail=" + paramInt3, true);
  }
  
  public static void b(int paramInt, boolean paramBoolean)
  {
    a(paramInt, paramBoolean, 255, 255, 255);
  }
  
  public static void b(Activity paramActivity)
  {
    if (Build.VERSION.SDK_INT == 15) {}
    try
    {
      paramActivity = paramActivity.getWindow().getWindowManager();
      if (paramActivity.getClass().getName().equals("android.view.Window$LocalWindowManager"))
      {
        Field localField = Class.forName("android.view.Window$LocalWindowManager").getDeclaredField("mHardwareAccelerated");
        localField.setAccessible(true);
        localField.setBoolean(paramActivity, false);
      }
      return;
    }
    catch (Exception paramActivity) {}
  }
  
  public static void b(Context paramContext)
  {
    com.cleanmaster.base.c.l(paramContext);
    com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).b("has_rated_us", true);
  }
  
  public static void b(Context paramContext, int paramInt, com.cleanmaster.base.permission.a paramA)
  {
    if (!android.support.v4.a.d.a(com.keniu.security.c.a()))
    {
      if (paramA != null) {
        paramA.a(true);
      }
      return;
    }
    com.cleanmaster.base.permission.b localB = new com.cleanmaster.base.permission.b();
    localB.a = 3;
    localB.b = paramInt;
    a(paramContext, (byte)7).a(localB, paramA);
  }
  
  public static void b(Context paramContext, com.keniu.security.util.d paramD)
  {
    if (paramD == null) {}
    int i1;
    do
    {
      do
      {
        return;
      } while (com.cleanmaster.base.util.system.b.b(paramContext));
      i1 = com.cleanmaster.base.util.system.d.a(paramContext, 6.0F);
      if (paramD.d(-1) != null)
      {
        paramD.d(-1).setTextColor(-1);
        paramD.d(-1).setBackgroundResource(2130839255);
        localLayoutParams = (LinearLayout.LayoutParams)paramD.d(-1).getLayoutParams();
        localLayoutParams.height = com.cleanmaster.base.util.system.d.a(paramContext, 40.0F);
        localLayoutParams.setMargins(i1 / 2, i1, i1, i1);
        paramD.d(-1).setLayoutParams(localLayoutParams);
      }
      a(paramD);
    } while (paramD.d(-2) == null);
    paramD.d(-2).setTextColor(-16777216);
    paramD.d(-2).setBackgroundResource(2130839261);
    LinearLayout.LayoutParams localLayoutParams = (LinearLayout.LayoutParams)paramD.d(-2).getLayoutParams();
    localLayoutParams.height = com.cleanmaster.base.util.system.d.a(paramContext, 40.0F);
    localLayoutParams.setMargins(i1, i1, i1 / 2, i1);
    paramD.d(-2).setLayoutParams(localLayoutParams);
  }
  
  public static void b(Context paramContext, String... paramVarArgs)
  {
    paramVarArgs = a(paramVarArgs);
    com.keniu.security.update.push.gcm.a.a();
    new StringBuilder("Registering app ").append(paramContext.getPackageName()).append(" of senders ").append(paramVarArgs);
    Intent localIntent = new Intent("com.google.android.c2dm.intent.REGISTER");
    localIntent.setPackage("com.google.android.gsf");
    localIntent.putExtra("app", PendingIntent.getBroadcast(paramContext, 0, new Intent(), 0));
    localIntent.putExtra("sender", paramVarArgs);
    paramContext.startService(localIntent);
  }
  
  public static void b(Intent paramIntent)
  {
    Context localContext = AppLockLib.getContext();
    if (localContext != null) {
      try
      {
        localContext.startService(paramIntent);
        return;
      }
      catch (Exception paramIntent)
      {
        AppLockUtil.debugLog("AppLockLib.ServiceClient", "startService service failed");
        return;
      }
    }
    AppLockUtil.debugLog("AppLockLib.ServiceClient", "startService service failed due to context null");
  }
  
  @SuppressLint({"NewApi"})
  public static void b(SharedPreferences.Editor paramEditor)
  {
    if (Build.VERSION.SDK_INT >= 9)
    {
      paramEditor.apply();
      return;
    }
    paramEditor.commit();
  }
  
  public static void b(Bitmap paramBitmap)
  {
    if ((paramBitmap != null) && (!paramBitmap.isRecycled())) {
      paramBitmap.recycle();
    }
  }
  
  public static void b(Parcel paramParcel, int paramInt)
  {
    paramParcel.setDataPosition(a(paramParcel, paramInt) + paramParcel.dataPosition());
  }
  
  private static void b(Parcel paramParcel, int paramInt1, int paramInt2)
  {
    paramInt1 = a(paramParcel, paramInt1);
    if (paramInt1 != paramInt2) {
      throw new zza.zza("Expected size " + paramInt2 + " got " + paramInt1 + " (0x" + Integer.toHexString(paramInt1) + ")", paramParcel);
    }
  }
  
  public static <T extends Parcelable> void b(Parcel paramParcel, int paramInt, List<T> paramList)
  {
    if (paramList == null) {
      return;
    }
    int i1 = t(paramParcel, paramInt);
    int i2 = paramList.size();
    paramParcel.writeInt(i2);
    paramInt = 0;
    if (paramInt < i2)
    {
      Parcelable localParcelable = (Parcelable)paramList.get(paramInt);
      if (localParcelable == null) {
        paramParcel.writeInt(0);
      }
      for (;;)
      {
        paramInt += 1;
        break;
        a(paramParcel, localParcelable, 0);
      }
    }
    u(paramParcel, i1);
  }
  
  public static void b(View paramView, int paramInt)
  {
    if ((paramView != null) && (paramView.getVisibility() != paramInt)) {
      paramView.setVisibility(paramInt);
    }
  }
  
  public static void b(View paramView, Drawable paramDrawable)
  {
    if (Build.VERSION.SDK_INT >= 16)
    {
      paramView.setBackground(paramDrawable);
      return;
    }
    paramView.setBackgroundDrawable(paramDrawable);
  }
  
  public static void b(com.cleanmaster.boost.boostengine.autostart.a.a paramA)
  {
    if (paramA == null) {
      return;
    }
    com.cleanmaster.base.util.concurrent.BackgroundThread.a(new com.cleanmaster.boost.autostarts.data.c(paramA));
  }
  
  public static void b(com.cleanmaster.recommendapps.i paramI, String paramString1, String paramString2, int paramInt)
  {
    b(paramI, paramString1, paramString2, paramInt, null);
  }
  
  public static void b(com.cleanmaster.recommendapps.i paramI, String paramString1, String paramString2, int paramInt, Map<String, String> paramMap)
  {
    if ((paramI == null) || (TextUtils.isEmpty(paramString1)) || (TextUtils.isEmpty(paramString2))) {
      return;
    }
    com.cleanmaster.ui.app.market.a localA = com.cleanmaster.ui.app.market.a.a(paramString1);
    paramString1 = null;
    String str = paramI.a(2);
    if (!TextUtils.isEmpty(str)) {
      paramString1 = new com.cleanmaster.base.util.a.b().a(str);
    }
    try
    {
      str = URLEncoder.encode(paramString1, "utf-8");
      paramString1 = str;
    }
    catch (UnsupportedEncodingException localUnsupportedEncodingException)
    {
      for (;;) {}
    }
    com.cleanmaster.ui.app.utils.d.b(paramI.c, paramString1, localA, paramString2, paramInt, paramMap);
  }
  
  public static void b(com.cleanmaster.recommendapps.i paramI, String paramString1, String paramString2, Map<String, String> paramMap)
  {
    k("DmcBridge", "reportFacebookAdClick pkgname = " + paramString1 + "; posid = " + paramString2);
    a(paramI, paramString1, paramString2, paramMap, 2, 3000);
  }
  
  public static void b(ONews paramONews, int paramInt, String paramString)
  {
    a(paramInt, paramString, null, paramONews, ONewsScenario.f());
  }
  
  public static void b(NativeAd paramNativeAd, TextView paramTextView)
  {
    if ((paramNativeAd == null) || (paramTextView == null)) {
      return;
    }
    a(paramTextView, paramNativeAd.getAdSocialContext());
  }
  
  public static void b(FlurryAdNative paramFlurryAdNative, String paramString1, String paramString2)
  {
    k("DmcBridge", "reportYahooAdClick pkgname = " + paramString1 + "; posid = " + paramString2);
    a(paramFlurryAdNative, paramString1, paramString2, null, 2, 3008);
  }
  
  private static void b(com.in2wow.sdk.m.c paramC, com.in2wow.sdk.e.c paramC1, String paramString, JSONObject paramJSONObject, com.in2wow.sdk.e.c.a paramA)
  {
    paramC.b = false;
    paramC1.a(paramString, new com.in2wow.sdk.e.c.b(paramJSONObject, paramString, paramC1, paramA, paramC));
  }
  
  private static void b(com.in2wow.sdk.m.c paramC, XmlPullParser paramXmlPullParser)
  {
    paramXmlPullParser.require(2, null, "Creatives");
    for (;;)
    {
      if (paramXmlPullParser.next() == 3) {
        return;
      }
      if (paramXmlPullParser.getEventType() == 2)
      {
        String str1 = paramXmlPullParser.getName();
        if ((str1 != null) && (str1.equals("Creative")))
        {
          paramC.g = paramXmlPullParser.getAttributeValue(null, "id");
          paramXmlPullParser.require(2, null, "Creative");
          while (paramXmlPullParser.next() != 3) {
            if (paramXmlPullParser.getEventType() == 2)
            {
              str1 = paramXmlPullParser.getName();
              if ((str1 != null) && (str1.equals("Linear")))
              {
                paramC.i = true;
                str1 = paramXmlPullParser.getAttributeValue(null, "skipoffset");
                if ((str1 != null) && (str1.indexOf(":") < 0))
                {
                  paramC.j = true;
                  paramC.k = Long.parseLong(str1.substring(0, str1.length() - 1));
                  paramXmlPullParser.require(2, null, "Linear");
                }
                for (;;)
                {
                  if (paramXmlPullParser.next() == 3) {
                    break label797;
                  }
                  str1 = paramXmlPullParser.getName();
                  if (paramXmlPullParser.getEventType() == 2)
                  {
                    if ((str1 != null) && (str1.equals("Duration")))
                    {
                      paramC.h = bA(a(paramXmlPullParser, "Duration"));
                      continue;
                      if ((str1 == null) || (str1.indexOf(":") < 0)) {
                        break;
                      }
                      paramC.j = false;
                      paramC.k = bA(str1);
                      break;
                    }
                    if ((str1 != null) && (str1.equals("TrackingEvents")))
                    {
                      paramXmlPullParser.require(2, null, "TrackingEvents");
                      while (paramXmlPullParser.next() != 3) {
                        if (paramXmlPullParser.getEventType() == 2)
                        {
                          str1 = paramXmlPullParser.getName();
                          if ((str1 != null) && (str1.equals("Tracking"))) {
                            paramC.a(new com.in2wow.sdk.m.b(paramXmlPullParser.getAttributeValue(null, "event"), a(paramXmlPullParser, "Tracking")));
                          } else {
                            b(paramXmlPullParser);
                          }
                        }
                      }
                    }
                    else if ((str1 != null) && (str1.equals("MediaFiles")))
                    {
                      paramXmlPullParser.require(2, null, "MediaFiles");
                      while (paramXmlPullParser.next() != 3) {
                        if (paramXmlPullParser.getEventType() == 2)
                        {
                          str1 = paramXmlPullParser.getName();
                          if ((str1 != null) && (str1.equals("MediaFile")))
                          {
                            paramXmlPullParser.require(2, null, "MediaFile");
                            str1 = paramXmlPullParser.getAttributeValue(null, "type");
                            String str2 = paramXmlPullParser.getAttributeValue(null, "bitrate");
                            String str3 = paramXmlPullParser.getAttributeValue(null, "width");
                            String str4 = paramXmlPullParser.getAttributeValue(null, "height");
                            String str5 = a(paramXmlPullParser).replaceAll("&amp;", "&").replaceAll("&lt;", "<").replaceAll("&gt;", ">");
                            com.in2wow.sdk.m.a localA;
                            if ((str1 != null) && ("video/mp4".equals(str1)))
                            {
                              localA = new com.in2wow.sdk.m.a();
                              localA.b = str5;
                              localA.a = str1;
                              if (str2 == null) {
                                break label645;
                              }
                              i1 = Integer.parseInt(str2);
                              label579:
                              localA.e = i1;
                              if (str3 == null) {
                                break label650;
                              }
                              i1 = Integer.parseInt(str3);
                              label596:
                              localA.c = i1;
                              if (str4 == null) {
                                break label655;
                              }
                            }
                            label645:
                            label650:
                            label655:
                            for (int i1 = Integer.parseInt(str4);; i1 = 0)
                            {
                              localA.d = i1;
                              paramC.l.add(localA);
                              paramXmlPullParser.require(3, null, "MediaFile");
                              break;
                              i1 = 0;
                              break label579;
                              i1 = 0;
                              break label596;
                            }
                          }
                          b(paramXmlPullParser);
                        }
                      }
                    }
                    else if ((str1 != null) && (str1.equals("VideoClicks")))
                    {
                      paramXmlPullParser.require(2, null, "VideoClicks");
                      while (paramXmlPullParser.next() != 3) {
                        if (paramXmlPullParser.getEventType() == 2)
                        {
                          str1 = paramXmlPullParser.getName();
                          if ((str1 != null) && (str1.equals("ClickThrough"))) {
                            paramC.f = a(paramXmlPullParser, "ClickThrough");
                          } else if ((str1 != null) && (str1.equals("ClickTracking"))) {
                            paramC.a(new com.in2wow.sdk.m.b("click", a(paramXmlPullParser, "ClickTracking")));
                          } else {
                            b(paramXmlPullParser);
                          }
                        }
                      }
                    }
                    else
                    {
                      b(paramXmlPullParser);
                    }
                  }
                }
              }
              else
              {
                label797:
                b(paramXmlPullParser);
              }
            }
          }
        }
        else
        {
          b(paramXmlPullParser);
        }
      }
    }
  }
  
  public static void b(Closeable paramCloseable)
  {
    if (paramCloseable != null) {}
    try
    {
      paramCloseable.close();
      return;
    }
    catch (IOException paramCloseable) {}
  }
  
  public static void b(Object paramObject)
  {
    if (paramObject == null) {
      aD("AssureNotNull");
    }
  }
  
  public static void b(Object paramObject, ArrayList<View> paramArrayList)
  {
    int i1 = 0;
    paramObject = (Transition)paramObject;
    int i2;
    if ((paramObject instanceof TransitionSet))
    {
      paramObject = (TransitionSet)paramObject;
      i2 = paramObject.getTransitionCount();
      while (i1 < i2)
      {
        b(paramObject.getTransitionAt(i1), paramArrayList);
        i1 += 1;
      }
    }
    if ((!a(paramObject)) && (r(paramObject.getTargets())))
    {
      i2 = paramArrayList.size();
      i1 = 0;
      while (i1 < i2)
      {
        paramObject.addTarget((View)paramArrayList.get(i1));
        i1 += 1;
      }
    }
  }
  
  public static void b(String paramString)
  {
    M = paramString;
    StringBuilder localStringBuilder = new StringBuilder();
    int i1 = 0;
    if (i1 < paramString.length())
    {
      if ((i1 == 0) || (i1 == 1) || (i1 > paramString.length() - 5)) {
        localStringBuilder.append(paramString.charAt(i1));
      }
      for (;;)
      {
        i1 += 1;
        break;
        localStringBuilder.append("*");
      }
    }
    N = localStringBuilder.toString();
  }
  
  public static void b(String paramString, int paramInt1, int paramInt2)
  {
    com.cleanmaster.kinfoc.p.a().a("cm_game_scan", "pkgname=" + paramString + "&ishavedata=" + paramInt1 + "&insertresult=" + paramInt2, true);
  }
  
  private static void b(String paramString, int paramInt, com.cmcm.onews.report.a.m paramM, ONews paramONews, ONewsScenario paramONewsScenario)
  {
    com.cmcm.onews.report.c localC = new com.cmcm.onews.report.c(com.cmcm.onews.report.d.d());
    localC.a("upack", paramString);
    localC.a("data", new com.cmcm.onews.report.b[] { new com.cmcm.onews.report.a.e(String.valueOf(paramInt), paramM, paramONews, paramONewsScenario) });
    localC.a(com.cmcm.onews.sdk.e.b.A);
  }
  
  public static void b(String paramString1, com.my.target.core.parsers.a paramA, String paramString2)
  {
    a(paramString1 + ", Operation: " + paramA.d + ", Unit: " + paramA.e, paramA.c, 40, "VAST Exception:  " + paramString2, paramA.b, paramA.a);
  }
  
  public static void b(String paramString, Throwable paramThrowable)
  {
    if (Z(6)) {
      Log.e("Ads", paramString, paramThrowable);
    }
  }
  
  /* Error */
  public static void b(String paramString, List<String> paramList)
  {
    // Byte code:
    //   0: aload_0
    //   1: invokestatic 166	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   4: ifne +12 -> 16
    //   7: aload_1
    //   8: invokeinterface 2547 1 0
    //   13: ifeq +4 -> 17
    //   16: return
    //   17: invokestatic 144	com/keniu/security/d:a	()Landroid/content/Context;
    //   20: invokevirtual 147	android/content/Context:getApplicationContext	()Landroid/content/Context;
    //   23: invokestatic 13373	com/cleanmaster/dao/f:o	(Landroid/content/Context;)Lcom/cleanmaster/dao/a;
    //   26: astore_3
    //   27: aload_3
    //   28: ifnull -12 -> 16
    //   31: aload_1
    //   32: invokeinterface 835 1 0
    //   37: astore_1
    //   38: aload_1
    //   39: invokeinterface 840 1 0
    //   44: ifeq -28 -> 16
    //   47: aload_1
    //   48: invokeinterface 844 1 0
    //   53: checkcast 174	java/lang/String
    //   56: invokestatic 13375	android/support/percent/a:C	(Ljava/lang/String;)Ljava/lang/String;
    //   59: astore 4
    //   61: aload_0
    //   62: invokestatic 166	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   65: ifne -27 -> 38
    //   68: aload 4
    //   70: invokestatic 166	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   73: ifne -35 -> 38
    //   76: aload_3
    //   77: invokevirtual 13380	com/cleanmaster/dao/a:f	()Lcom/cleanmaster/dao/r;
    //   80: astore 5
    //   82: aload 5
    //   84: ifnull -46 -> 38
    //   87: aload 5
    //   89: ldc_w 13382
    //   92: iconst_1
    //   93: anewarray 174	java/lang/String
    //   96: dup
    //   97: iconst_0
    //   98: ldc_w 13384
    //   101: aastore
    //   102: ldc_w 13386
    //   105: iconst_2
    //   106: anewarray 174	java/lang/String
    //   109: dup
    //   110: iconst_0
    //   111: aload_0
    //   112: aastore
    //   113: dup
    //   114: iconst_1
    //   115: aload 4
    //   117: aastore
    //   118: aconst_null
    //   119: invokevirtual 13391	com/cleanmaster/dao/r:a	(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
    //   122: astore 6
    //   124: aload 6
    //   126: ifnull +42 -> 168
    //   129: aload 6
    //   131: invokeinterface 13394 1 0
    //   136: istore_2
    //   137: iload_2
    //   138: ifle +23 -> 161
    //   141: aload 6
    //   143: invokeinterface 6298 1 0
    //   148: goto -110 -> 38
    //   151: astore 4
    //   153: aload 4
    //   155: invokevirtual 576	java/lang/Exception:printStackTrace	()V
    //   158: goto -120 -> 38
    //   161: aload 6
    //   163: invokeinterface 6298 1 0
    //   168: new 2504	android/content/ContentValues
    //   171: dup
    //   172: invokespecial 2505	android/content/ContentValues:<init>	()V
    //   175: astore 6
    //   177: aload 6
    //   179: ldc_w 13396
    //   182: invokestatic 433	java/lang/System:currentTimeMillis	()J
    //   185: invokestatic 1793	java/lang/Long:valueOf	(J)Ljava/lang/Long;
    //   188: invokevirtual 2520	android/content/ContentValues:put	(Ljava/lang/String;Ljava/lang/Long;)V
    //   191: aload 6
    //   193: ldc_w 13398
    //   196: aload_0
    //   197: invokevirtual 2513	android/content/ContentValues:put	(Ljava/lang/String;Ljava/lang/String;)V
    //   200: aload 6
    //   202: ldc_w 13400
    //   205: aload 4
    //   207: invokevirtual 2513	android/content/ContentValues:put	(Ljava/lang/String;Ljava/lang/String;)V
    //   210: aload 5
    //   212: ldc_w 13382
    //   215: aload 6
    //   217: invokevirtual 13403	com/cleanmaster/dao/r:a	(Ljava/lang/String;Landroid/content/ContentValues;)J
    //   220: pop2
    //   221: goto -183 -> 38
    //   224: astore 4
    //   226: aload 6
    //   228: invokeinterface 6298 1 0
    //   233: aload 4
    //   235: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	236	0	paramString	String
    //   0	236	1	paramList	List<String>
    //   136	2	2	i1	int
    //   26	51	3	localA	com.cleanmaster.dao.a
    //   59	57	4	str	String
    //   151	55	4	localException	Exception
    //   224	10	4	localObject1	Object
    //   80	131	5	localR	com.cleanmaster.dao.r
    //   122	105	6	localObject2	Object
    // Exception table:
    //   from	to	target	type
    //   87	124	151	java/lang/Exception
    //   141	148	151	java/lang/Exception
    //   161	168	151	java/lang/Exception
    //   168	221	151	java/lang/Exception
    //   226	236	151	java/lang/Exception
    //   129	137	224	finally
  }
  
  public static void b(String paramString, boolean paramBoolean)
  {
    if (TextUtils.isEmpty(paramString)) {}
    Context localContext;
    int i1;
    do
    {
      do
      {
        do
        {
          return;
          localContext = com.keniu.security.d.a().getApplicationContext();
          i1 = com.cleanmaster.configmanager.d.a(localContext).bi();
          if (!paramBoolean) {
            break;
          }
        } while (i1 <= 0);
        paramString = AutoStartRulesStorage.a().a(paramString);
      } while ((paramString == null) || (!paramString.a()) || (paramString.b != 0));
      com.cleanmaster.configmanager.d.a(localContext).z(i1 - 1);
      return;
    } while (i1 < 0);
    com.cleanmaster.configmanager.d.a(localContext).z(i1 + 1);
  }
  
  public static void b(String paramString, Object... paramVarArgs)
  {
    if (TextUtils.isEmpty(paramString)) {
      return;
    }
    Log.i("DMC", String.format(paramString, paramVarArgs));
  }
  
  public static void b(List<LockPatternView.Cell> paramList)
  {
    if (paramList == null) {}
    while (paramList.size() == 0) {
      return;
    }
    paramList = a(paramList);
    String str = bi(paramList);
    if (com.cleanmaster.applocklib.bridge.b.a)
    {
      new StringBuilder("save pattern, ").append(paramList).append(", ").append(str);
      com.cleanmaster.applocklib.bridge.b.a();
    }
    com.cleanmaster.applock.lockpattern.a.a();
    AppLockPref.getIns().setEncodedPatternPassword(str);
  }
  
  private static void b(XmlPullParser paramXmlPullParser)
  {
    if (paramXmlPullParser.getEventType() != 2) {
      throw new IllegalStateException();
    }
    int i1 = 1;
    for (;;)
    {
      if (i1 == 0) {
        return;
      }
      switch (paramXmlPullParser.next())
      {
      default: 
        break;
      case 2: 
        i1 += 1;
        break;
      case 3: 
        i1 -= 1;
      }
    }
  }
  
  public static void b(boolean paramBoolean, int paramInt, String paramString)
  {
    String str = paramString;
    if (TextUtils.isEmpty(paramString)) {
      str = "";
    }
    if (paramBoolean)
    {
      com.cleanmaster.kinfoc.p.a().a("cm_notification_spe_click", "clicktype=" + paramInt + "&pkgname=" + str + "&appname=", true);
      return;
    }
    com.cleanmaster.base.util.concurrent.BackgroundThread.b().postDelayed(new com.cleanmaster.func.b.f(paramInt, str), 2000L);
  }
  
  public static void b(boolean paramBoolean, String paramString1, String paramString2)
  {
    if (paramBoolean) {
      Log.e("KBattery", x(paramString1, paramString2));
    }
  }
  
  public static boolean b(Context paramContext, int paramInt)
  {
    if (paramContext == null) {
      return false;
    }
    return com.cleanmaster.configmanager.h.a(paramContext).a(paramInt);
  }
  
  @SuppressLint({"NewApi"})
  private static boolean b(Context paramContext, int paramInt, String paramString)
  {
    bool2 = false;
    bool1 = bool2;
    if (Build.VERSION.SDK_INT >= 19) {
      paramContext = (AppOpsManager)paramContext.getSystemService("appops");
    }
    for (;;)
    {
      try
      {
        paramInt = ((Integer)paramContext.getClass().getMethod("checkOp", new Class[] { Integer.TYPE, Integer.TYPE, String.class }).invoke(paramContext, new Object[] { Integer.valueOf(24), Integer.valueOf(paramInt), paramString })).intValue();
        if (paramInt != 0) {
          continue;
        }
        bool1 = true;
      }
      catch (Exception paramContext)
      {
        bool1 = bool2;
        if (!com.cleanmaster.i.a.a) {
          continue;
        }
        com.cleanmaster.i.a.a("Utils", "checkOp error: " + paramContext.toString());
        bool1 = bool2;
        continue;
      }
      if (com.cleanmaster.i.a.a) {
        com.cleanmaster.i.a.a("Utils", "checkOp isGranted: " + bool1);
      }
      return bool1;
      bool1 = false;
    }
  }
  
  private static boolean b(Context paramContext, int paramInt1, String paramString, int paramInt2)
  {
    boolean bool;
    for (;;)
    {
      try
      {
        Class localClass = Class.forName("android.content.Context");
        Object localObject = localClass.getDeclaredField("APP_OPS_SERVICE");
        ((Field)localObject).setAccessible(true);
        localObject = ((Field)localObject).get(localClass);
        if (!(localObject instanceof String)) {
          break;
        }
        localObject = (String)localObject;
        paramContext = localClass.getMethod("getSystemService", new Class[] { String.class }).invoke(paramContext, new Object[] { localObject });
        localClass = Class.forName("android.app.AppOpsManager");
        localObject = localClass.getDeclaredField("MODE_ALLOWED");
        ((Field)localObject).setAccessible(true);
        i1 = ((Field)localObject).getInt(localClass);
        paramInt1 = ((Integer)localClass.getMethod("checkOp", new Class[] { Integer.TYPE, Integer.TYPE, String.class }).invoke(paramContext, new Object[] { Integer.valueOf(paramInt2), Integer.valueOf(paramInt1), paramString })).intValue();
        if (paramInt1 != i1) {
          bool = true;
        }
      }
      catch (Exception paramContext)
      {
        int i1;
        return false;
      }
      try
      {
        Log.i("TAG", "isClosedByMiuiV6 = " + bool + " allowMode = " + i1 + " opMode = " + paramInt1);
        return bool;
      }
      catch (Exception paramContext)
      {
        return bool;
      }
      bool = false;
    }
    return false;
  }
  
  private static boolean b(Context paramContext, com.cleanmaster.ui.resultpage.b.a paramA)
  {
    if (paramA == null) {
      return false;
    }
    if (T(paramA.e)) {
      return false;
    }
    if (paramA.y == 1) {}
    for (int i1 = 1; (i1 == 0) && ((com.cleanmaster.ui.resultpage.ctrl.i.a(paramContext).b(paramA.d)) || (com.cleanmaster.ui.resultpage.ctrl.i.a(paramContext).a(paramA.d) > 2)); i1 = 0) {
      return false;
    }
    Object localObject = paramA.i;
    if ((localObject != null) && (!((ArrayList)localObject).isEmpty()))
    {
      localObject = ((ArrayList)localObject).iterator();
      String str;
      do
      {
        if (!((Iterator)localObject).hasNext()) {
          break;
        }
        str = (String)((Iterator)localObject).next();
      } while ((TextUtils.isEmpty(str)) || (com.cleanmaster.base.util.system.m.a(paramContext, str)));
    }
    for (i1 = 0;; i1 = 1)
    {
      if (i1 == 0) {
        return false;
      }
      paramContext = paramA.k;
      if (paramContext != null) {
        paramContext.isEmpty();
      }
      return true;
    }
  }
  
  public static boolean b(Context paramContext, String paramString)
  {
    return (Build.VERSION.SDK_INT < 23) || (paramContext == null) || (TextUtils.isEmpty(paramString)) || (paramContext.checkSelfPermission(paramString) == 0);
  }
  
  /* Error */
  public static boolean b(Context paramContext, String paramString1, String paramString2)
  {
    // Byte code:
    //   0: iconst_1
    //   1: istore 7
    //   3: aconst_null
    //   4: astore 14
    //   6: aconst_null
    //   7: astore 20
    //   9: aconst_null
    //   10: astore 13
    //   12: aconst_null
    //   13: astore 19
    //   15: iconst_0
    //   16: istore 11
    //   18: iconst_0
    //   19: istore 9
    //   21: iconst_0
    //   22: istore 12
    //   24: iconst_0
    //   25: istore 6
    //   27: iconst_0
    //   28: istore 10
    //   30: aload_0
    //   31: invokevirtual 5370	android/content/Context:getAssets	()Landroid/content/res/AssetManager;
    //   34: astore 21
    //   36: aload 21
    //   38: aload_1
    //   39: invokevirtual 5376	android/content/res/AssetManager:open	(Ljava/lang/String;)Ljava/io/InputStream;
    //   42: astore_0
    //   43: new 5382	java/io/FileOutputStream
    //   46: dup
    //   47: new 149	java/lang/StringBuilder
    //   50: dup
    //   51: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   54: aload_2
    //   55: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   58: ldc_w 13477
    //   61: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   64: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   67: invokespecial 7639	java/io/FileOutputStream:<init>	(Ljava/lang/String;)V
    //   70: astore 15
    //   72: iconst_1
    //   73: istore 4
    //   75: aload 15
    //   77: astore 13
    //   79: aload_0
    //   80: astore 16
    //   82: iload 4
    //   84: ifne +913 -> 997
    //   87: aload_0
    //   88: ifnull +11 -> 99
    //   91: aload_0
    //   92: astore 16
    //   94: aload 13
    //   96: ifnonnull +901 -> 997
    //   99: aload_0
    //   100: astore 14
    //   102: aload_0
    //   103: ifnull +19 -> 122
    //   106: aload_0
    //   107: astore 16
    //   109: aload_0
    //   110: astore 15
    //   112: aload_0
    //   113: astore 14
    //   115: aload_0
    //   116: invokevirtual 5380	java/io/InputStream:close	()V
    //   119: aconst_null
    //   120: astore 14
    //   122: aload 14
    //   124: astore 16
    //   126: aload 14
    //   128: astore 15
    //   130: aload 21
    //   132: new 149	java/lang/StringBuilder
    //   135: dup
    //   136: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   139: aload_1
    //   140: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   143: ldc_w 13479
    //   146: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   149: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   152: invokevirtual 5376	android/content/res/AssetManager:open	(Ljava/lang/String;)Ljava/io/InputStream;
    //   155: astore_0
    //   156: aload_0
    //   157: astore 16
    //   159: aload_0
    //   160: astore 15
    //   162: aload_0
    //   163: astore 14
    //   165: new 5382	java/io/FileOutputStream
    //   168: dup
    //   169: new 149	java/lang/StringBuilder
    //   172: dup
    //   173: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   176: aload_2
    //   177: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   180: ldc_w 13481
    //   183: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   186: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   189: invokespecial 7639	java/io/FileOutputStream:<init>	(Ljava/lang/String;)V
    //   192: astore 17
    //   194: iconst_1
    //   195: istore_3
    //   196: aload 17
    //   198: astore 13
    //   200: aload_0
    //   201: astore 16
    //   203: iload_3
    //   204: ifne +802 -> 1006
    //   207: aload_0
    //   208: astore 16
    //   210: iload 4
    //   212: ifne +794 -> 1006
    //   215: aload_0
    //   216: ifnull +11 -> 227
    //   219: aload_0
    //   220: astore 16
    //   222: aload 13
    //   224: ifnonnull +782 -> 1006
    //   227: aload_0
    //   228: astore 14
    //   230: aload_0
    //   231: ifnull +19 -> 250
    //   234: aload_0
    //   235: astore 16
    //   237: aload_0
    //   238: astore 15
    //   240: aload_0
    //   241: astore 14
    //   243: aload_0
    //   244: invokevirtual 5380	java/io/InputStream:close	()V
    //   247: aconst_null
    //   248: astore 14
    //   250: aload 14
    //   252: astore 16
    //   254: aload 14
    //   256: astore 15
    //   258: aload 21
    //   260: new 149	java/lang/StringBuilder
    //   263: dup
    //   264: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   267: aload_1
    //   268: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   271: ldc_w 13483
    //   274: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   277: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   280: invokevirtual 5376	android/content/res/AssetManager:open	(Ljava/lang/String;)Ljava/io/InputStream;
    //   283: astore_0
    //   284: aload_0
    //   285: astore 16
    //   287: aload_0
    //   288: astore 15
    //   290: aload_0
    //   291: astore 14
    //   293: new 5382	java/io/FileOutputStream
    //   296: dup
    //   297: new 149	java/lang/StringBuilder
    //   300: dup
    //   301: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   304: aload_2
    //   305: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   308: ldc_w 13485
    //   311: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   314: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   317: invokespecial 7639	java/io/FileOutputStream:<init>	(Ljava/lang/String;)V
    //   320: astore 17
    //   322: iconst_1
    //   323: istore 5
    //   325: aload 17
    //   327: astore 14
    //   329: iload 4
    //   331: ifne +2127 -> 2458
    //   334: iload_3
    //   335: ifne +2123 -> 2458
    //   338: iload 5
    //   340: ifne +2118 -> 2458
    //   343: aload 14
    //   345: astore 17
    //   347: aload_0
    //   348: astore 15
    //   350: aload 14
    //   352: astore 18
    //   354: aload_0
    //   355: astore 16
    //   357: aload 21
    //   359: aload_1
    //   360: invokestatic 13487	LibcoreWrapper/a:a	(Landroid/content/res/AssetManager;Ljava/lang/String;)Z
    //   363: istore 8
    //   365: iload 8
    //   367: ifeq +654 -> 1021
    //   370: aload 14
    //   372: astore 17
    //   374: aload_0
    //   375: astore 15
    //   377: aload 14
    //   379: astore 18
    //   381: aload_0
    //   382: astore 16
    //   384: new 5382	java/io/FileOutputStream
    //   387: dup
    //   388: new 149	java/lang/StringBuilder
    //   391: dup
    //   392: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   395: aload_2
    //   396: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   399: ldc_w 13481
    //   402: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   405: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   408: invokespecial 7639	java/io/FileOutputStream:<init>	(Ljava/lang/String;)V
    //   411: astore 13
    //   413: aload 13
    //   415: astore 14
    //   417: iload 7
    //   419: istore_3
    //   420: iload 5
    //   422: ifeq +680 -> 1102
    //   425: aload_0
    //   426: astore 13
    //   428: aload_0
    //   429: ifnull +24 -> 453
    //   432: aload 14
    //   434: astore 17
    //   436: aload_0
    //   437: astore 15
    //   439: aload 14
    //   441: astore 18
    //   443: aload_0
    //   444: astore 16
    //   446: aload_0
    //   447: invokevirtual 5380	java/io/InputStream:close	()V
    //   450: aconst_null
    //   451: astore 13
    //   453: aload 14
    //   455: ifnull +1997 -> 2452
    //   458: aload 14
    //   460: astore 17
    //   462: aload 13
    //   464: astore 15
    //   466: aload 14
    //   468: astore 18
    //   470: aload 13
    //   472: astore 16
    //   474: aload 14
    //   476: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   479: aload 19
    //   481: astore_0
    //   482: iload 11
    //   484: istore 9
    //   486: aload_0
    //   487: astore 16
    //   489: aload 13
    //   491: astore 17
    //   493: aload_0
    //   494: astore 15
    //   496: aload 13
    //   498: astore 14
    //   500: new 149	java/lang/StringBuilder
    //   503: dup
    //   504: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   507: aload_1
    //   508: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   511: ldc_w 13483
    //   514: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   517: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   520: astore_1
    //   521: iload 11
    //   523: istore 9
    //   525: aload_0
    //   526: astore 16
    //   528: aload 13
    //   530: astore 17
    //   532: aload_0
    //   533: astore 15
    //   535: aload 13
    //   537: astore 14
    //   539: new 149	java/lang/StringBuilder
    //   542: dup
    //   543: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   546: aload_2
    //   547: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   550: ldc_w 13477
    //   553: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   556: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   559: astore 18
    //   561: aload_0
    //   562: astore 15
    //   564: aload 13
    //   566: astore 14
    //   568: new 13489	com/ndk_lzma/UnLzma
    //   571: dup
    //   572: invokespecial 13490	com/ndk_lzma/UnLzma:<init>	()V
    //   575: pop
    //   576: aload_0
    //   577: astore 15
    //   579: aload 13
    //   581: astore 14
    //   583: aload 21
    //   585: aload_1
    //   586: aload 18
    //   588: invokestatic 13493	com/ndk_lzma/UnLzma:a	(Landroid/content/res/AssetManager;Ljava/lang/String;Ljava/lang/String;)I
    //   591: istore_3
    //   592: iload_3
    //   593: ifeq +159 -> 752
    //   596: iload_3
    //   597: ifle +427 -> 1024
    //   600: aload_0
    //   601: astore 15
    //   603: aload 13
    //   605: astore 14
    //   607: aload_1
    //   608: ldc_w 13483
    //   611: invokevirtual 12028	java/lang/String:lastIndexOf	(Ljava/lang/String;)I
    //   614: istore 5
    //   616: iload 5
    //   618: ifle +37 -> 655
    //   621: iload 5
    //   623: bipush 16
    //   625: isub
    //   626: ifle +404 -> 1030
    //   629: iload 5
    //   631: bipush 16
    //   633: isub
    //   634: istore 4
    //   636: aload_0
    //   637: astore 15
    //   639: aload 13
    //   641: astore 14
    //   643: iload_3
    //   644: aload_1
    //   645: iload 4
    //   647: iload 5
    //   649: invokevirtual 1265	java/lang/String:substring	(II)Ljava/lang/String;
    //   652: invokestatic 13495	LibcoreWrapper/a:f	(ILjava/lang/String;)V
    //   655: aload_0
    //   656: astore 15
    //   658: aload 13
    //   660: astore 14
    //   662: new 13497	com/keniu/security/update/lzma/c
    //   665: dup
    //   666: invokespecial 13498	com/keniu/security/update/lzma/c:<init>	()V
    //   669: pop
    //   670: aload_0
    //   671: astore 15
    //   673: aload 13
    //   675: astore 14
    //   677: aload 21
    //   679: aload_1
    //   680: invokevirtual 5376	android/content/res/AssetManager:open	(Ljava/lang/String;)Ljava/io/InputStream;
    //   683: astore 16
    //   685: aload 16
    //   687: ifnull +1762 -> 2449
    //   690: aload_0
    //   691: astore 15
    //   693: aload 13
    //   695: astore 14
    //   697: aload 16
    //   699: new 464	java/io/File
    //   702: dup
    //   703: aload 18
    //   705: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   708: invokestatic 13501	com/keniu/security/update/lzma/c:a	(Ljava/io/InputStream;Ljava/io/File;)I
    //   711: istore_3
    //   712: goto +1752 -> 2464
    //   715: aload_0
    //   716: astore 15
    //   718: aload 13
    //   720: astore 14
    //   722: iload_3
    //   723: new 149	java/lang/StringBuilder
    //   726: dup
    //   727: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   730: aload_1
    //   731: iload 4
    //   733: iload 5
    //   735: invokevirtual 1265	java/lang/String:substring	(II)Ljava/lang/String;
    //   738: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   741: ldc -5
    //   743: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   746: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   749: invokestatic 13495	LibcoreWrapper/a:f	(ILjava/lang/String;)V
    //   752: iload 11
    //   754: istore 9
    //   756: aload_0
    //   757: astore 16
    //   759: aload 13
    //   761: astore 17
    //   763: aload_0
    //   764: astore 15
    //   766: aload 13
    //   768: astore 14
    //   770: new 464	java/io/File
    //   773: dup
    //   774: new 149	java/lang/StringBuilder
    //   777: dup
    //   778: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   781: aload_2
    //   782: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   785: ldc_w 13483
    //   788: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   791: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   794: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   797: invokevirtual 474	java/io/File:delete	()Z
    //   800: pop
    //   801: iload 11
    //   803: istore 9
    //   805: aload_0
    //   806: astore 16
    //   808: aload 13
    //   810: astore 17
    //   812: aload_0
    //   813: astore 15
    //   815: aload 13
    //   817: astore 14
    //   819: new 464	java/io/File
    //   822: dup
    //   823: new 149	java/lang/StringBuilder
    //   826: dup
    //   827: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   830: aload_2
    //   831: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   834: ldc_w 13485
    //   837: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   840: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   843: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   846: invokevirtual 474	java/io/File:delete	()Z
    //   849: pop
    //   850: iload 11
    //   852: istore 9
    //   854: aload_0
    //   855: astore 16
    //   857: aload 13
    //   859: astore 17
    //   861: aload_0
    //   862: astore 15
    //   864: aload 13
    //   866: astore 14
    //   868: new 464	java/io/File
    //   871: dup
    //   872: aload_2
    //   873: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   876: astore_1
    //   877: iload 11
    //   879: istore 9
    //   881: aload_0
    //   882: astore 16
    //   884: aload 13
    //   886: astore 17
    //   888: aload_0
    //   889: astore 15
    //   891: aload 13
    //   893: astore 14
    //   895: aload_1
    //   896: invokevirtual 474	java/io/File:delete	()Z
    //   899: pop
    //   900: iload 11
    //   902: istore 9
    //   904: aload_0
    //   905: astore 16
    //   907: aload 13
    //   909: astore 17
    //   911: aload_0
    //   912: astore 15
    //   914: aload 13
    //   916: astore 14
    //   918: new 464	java/io/File
    //   921: dup
    //   922: new 149	java/lang/StringBuilder
    //   925: dup
    //   926: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   929: aload_2
    //   930: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   933: ldc_w 13477
    //   936: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   939: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   942: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   945: aload_1
    //   946: invokevirtual 10850	java/io/File:renameTo	(Ljava/io/File;)Z
    //   949: istore 8
    //   951: iload 8
    //   953: istore 9
    //   955: aload 13
    //   957: ifnull +8 -> 965
    //   960: aload 13
    //   962: invokevirtual 5380	java/io/InputStream:close	()V
    //   965: iload 9
    //   967: istore 8
    //   969: aload_0
    //   970: ifnull +11 -> 981
    //   973: aload_0
    //   974: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   977: iload 9
    //   979: istore 8
    //   981: iload 8
    //   983: ireturn
    //   984: astore_0
    //   985: aconst_null
    //   986: astore_0
    //   987: iconst_0
    //   988: istore 4
    //   990: aconst_null
    //   991: astore 13
    //   993: goto -914 -> 79
    //   996: astore_0
    //   997: iconst_0
    //   998: istore_3
    //   999: aload 16
    //   1001: astore_0
    //   1002: goto -802 -> 200
    //   1005: astore_0
    //   1006: iconst_0
    //   1007: istore 5
    //   1009: aload 16
    //   1011: astore_0
    //   1012: aload 13
    //   1014: astore 14
    //   1016: goto -687 -> 329
    //   1019: astore 13
    //   1021: goto -601 -> 420
    //   1024: iload_3
    //   1025: ineg
    //   1026: istore_3
    //   1027: goto -427 -> 600
    //   1030: iconst_0
    //   1031: istore 4
    //   1033: goto -397 -> 636
    //   1036: iconst_0
    //   1037: istore 4
    //   1039: goto -324 -> 715
    //   1042: astore_1
    //   1043: iload 11
    //   1045: istore 9
    //   1047: aload_0
    //   1048: astore 16
    //   1050: aload 13
    //   1052: astore 17
    //   1054: aload_0
    //   1055: astore 15
    //   1057: aload 13
    //   1059: astore 14
    //   1061: aload_1
    //   1062: invokevirtual 576	java/lang/Exception:printStackTrace	()V
    //   1065: goto -313 -> 752
    //   1068: astore_0
    //   1069: aload 17
    //   1071: astore_0
    //   1072: aload 16
    //   1074: astore_1
    //   1075: aload_0
    //   1076: ifnull +7 -> 1083
    //   1079: aload_0
    //   1080: invokevirtual 5380	java/io/InputStream:close	()V
    //   1083: iload 9
    //   1085: istore 8
    //   1087: aload_1
    //   1088: ifnull -107 -> 981
    //   1091: aload_1
    //   1092: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   1095: iload 9
    //   1097: ireturn
    //   1098: astore_0
    //   1099: iload 9
    //   1101: ireturn
    //   1102: aload 14
    //   1104: astore 17
    //   1106: aload_0
    //   1107: astore 15
    //   1109: aload 14
    //   1111: astore 18
    //   1113: aload_0
    //   1114: astore 16
    //   1116: sipush 4096
    //   1119: newarray byte
    //   1121: astore 13
    //   1123: iload 8
    //   1125: ifne +435 -> 1560
    //   1128: aload 14
    //   1130: astore 17
    //   1132: aload_0
    //   1133: astore 15
    //   1135: aload 14
    //   1137: astore 18
    //   1139: aload_0
    //   1140: astore 16
    //   1142: aload_0
    //   1143: aload 13
    //   1145: invokevirtual 5384	java/io/InputStream:read	([B)I
    //   1148: istore 4
    //   1150: iload 4
    //   1152: ifle +30 -> 1182
    //   1155: aload 14
    //   1157: astore 17
    //   1159: aload_0
    //   1160: astore 15
    //   1162: aload 14
    //   1164: astore 18
    //   1166: aload_0
    //   1167: astore 16
    //   1169: aload 14
    //   1171: aload 13
    //   1173: iconst_0
    //   1174: iload 4
    //   1176: invokevirtual 9741	java/io/FileOutputStream:write	([BII)V
    //   1179: goto -51 -> 1128
    //   1182: aload 14
    //   1184: astore 17
    //   1186: aload_0
    //   1187: astore 15
    //   1189: aload 14
    //   1191: astore 18
    //   1193: aload_0
    //   1194: astore 16
    //   1196: aload 14
    //   1198: invokevirtual 10531	java/io/FileOutputStream:flush	()V
    //   1201: aload 14
    //   1203: astore 17
    //   1205: aload_0
    //   1206: astore 15
    //   1208: aload 14
    //   1210: astore 18
    //   1212: aload_0
    //   1213: astore 16
    //   1215: aload 14
    //   1217: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   1220: aload 20
    //   1222: astore_1
    //   1223: iload_3
    //   1224: ifeq +686 -> 1910
    //   1227: iload 11
    //   1229: istore 9
    //   1231: aload_1
    //   1232: astore 16
    //   1234: aload_0
    //   1235: astore 17
    //   1237: aload_1
    //   1238: astore 15
    //   1240: aload_0
    //   1241: astore 14
    //   1243: new 464	java/io/File
    //   1246: dup
    //   1247: new 149	java/lang/StringBuilder
    //   1250: dup
    //   1251: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   1254: aload_2
    //   1255: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1258: ldc_w 13481
    //   1261: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1264: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1267: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   1270: new 464	java/io/File
    //   1273: dup
    //   1274: new 149	java/lang/StringBuilder
    //   1277: dup
    //   1278: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   1281: aload_2
    //   1282: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1285: ldc_w 13479
    //   1288: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1291: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1294: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   1297: invokevirtual 10850	java/io/File:renameTo	(Ljava/io/File;)Z
    //   1300: istore 8
    //   1302: iload 8
    //   1304: istore 9
    //   1306: iload 9
    //   1308: istore 8
    //   1310: aload_1
    //   1311: astore 15
    //   1313: aload_0
    //   1314: astore 14
    //   1316: new 9397	java/util/zip/ZipFile
    //   1319: dup
    //   1320: new 149	java/lang/StringBuilder
    //   1323: dup
    //   1324: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   1327: aload_2
    //   1328: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1331: ldc_w 13479
    //   1334: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1337: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1340: invokespecial 13502	java/util/zip/ZipFile:<init>	(Ljava/lang/String;)V
    //   1343: astore 13
    //   1345: iload 9
    //   1347: istore 8
    //   1349: aload_1
    //   1350: astore 15
    //   1352: aload_0
    //   1353: astore 14
    //   1355: aload 13
    //   1357: invokevirtual 13506	java/util/zip/ZipFile:entries	()Ljava/util/Enumeration;
    //   1360: astore 16
    //   1362: iload 9
    //   1364: istore 8
    //   1366: aload_1
    //   1367: astore 15
    //   1369: aload_0
    //   1370: astore 14
    //   1372: aload 16
    //   1374: invokeinterface 13511 1 0
    //   1379: ifeq +342 -> 1721
    //   1382: iload 9
    //   1384: istore 8
    //   1386: aload_1
    //   1387: astore 15
    //   1389: aload_0
    //   1390: astore 14
    //   1392: new 13513	java/io/BufferedInputStream
    //   1395: dup
    //   1396: aload 13
    //   1398: aload 16
    //   1400: invokeinterface 13516 1 0
    //   1405: checkcast 9737	java/util/zip/ZipEntry
    //   1408: invokevirtual 13519	java/util/zip/ZipFile:getInputStream	(Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;
    //   1411: invokespecial 13520	java/io/BufferedInputStream:<init>	(Ljava/io/InputStream;)V
    //   1414: astore 16
    //   1416: iload 9
    //   1418: istore 8
    //   1420: aload_1
    //   1421: astore 15
    //   1423: aload_0
    //   1424: astore 14
    //   1426: new 5382	java/io/FileOutputStream
    //   1429: dup
    //   1430: new 464	java/io/File
    //   1433: dup
    //   1434: new 149	java/lang/StringBuilder
    //   1437: dup
    //   1438: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   1441: aload_2
    //   1442: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1445: ldc_w 13477
    //   1448: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1451: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1454: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   1457: invokespecial 5383	java/io/FileOutputStream:<init>	(Ljava/io/File;)V
    //   1460: astore 17
    //   1462: iload 9
    //   1464: istore 8
    //   1466: aload_1
    //   1467: astore 15
    //   1469: aload_0
    //   1470: astore 14
    //   1472: new 13522	java/io/BufferedOutputStream
    //   1475: dup
    //   1476: aload 17
    //   1478: sipush 4096
    //   1481: invokespecial 13525	java/io/BufferedOutputStream:<init>	(Ljava/io/OutputStream;I)V
    //   1484: astore 18
    //   1486: iload 9
    //   1488: istore 8
    //   1490: aload_1
    //   1491: astore 15
    //   1493: aload_0
    //   1494: astore 14
    //   1496: sipush 4096
    //   1499: newarray byte
    //   1501: astore 19
    //   1503: iload 9
    //   1505: istore 8
    //   1507: aload_1
    //   1508: astore 15
    //   1510: aload_0
    //   1511: astore 14
    //   1513: aload 16
    //   1515: aload 19
    //   1517: iconst_0
    //   1518: sipush 4096
    //   1521: invokevirtual 13526	java/io/BufferedInputStream:read	([BII)I
    //   1524: istore_3
    //   1525: iload_3
    //   1526: iconst_m1
    //   1527: if_icmpeq +134 -> 1661
    //   1530: iload 9
    //   1532: istore 8
    //   1534: aload_1
    //   1535: astore 15
    //   1537: aload_0
    //   1538: astore 14
    //   1540: aload 18
    //   1542: aload 19
    //   1544: iconst_0
    //   1545: iload_3
    //   1546: invokevirtual 13527	java/io/BufferedOutputStream:write	([BII)V
    //   1549: goto -46 -> 1503
    //   1552: astore_2
    //   1553: iload 8
    //   1555: istore 9
    //   1557: goto -482 -> 1075
    //   1560: iload 8
    //   1562: ifeq +881 -> 2443
    //   1565: iload_3
    //   1566: ifeq +877 -> 2443
    //   1569: aload 14
    //   1571: astore 17
    //   1573: aload_0
    //   1574: astore 15
    //   1576: aload 14
    //   1578: astore 18
    //   1580: aload_0
    //   1581: astore 16
    //   1583: aload 21
    //   1585: aload 14
    //   1587: aload_1
    //   1588: invokestatic 13529	LibcoreWrapper/a:a	(Landroid/content/res/AssetManager;Ljava/io/FileOutputStream;Ljava/lang/String;)Z
    //   1591: pop
    //   1592: aload 14
    //   1594: astore 17
    //   1596: aload_0
    //   1597: astore 15
    //   1599: aload 14
    //   1601: astore 18
    //   1603: aload_0
    //   1604: astore 16
    //   1606: aload 14
    //   1608: invokevirtual 10531	java/io/FileOutputStream:flush	()V
    //   1611: aload 14
    //   1613: astore 17
    //   1615: aload_0
    //   1616: astore 15
    //   1618: aload 14
    //   1620: astore 18
    //   1622: aload_0
    //   1623: astore 16
    //   1625: aload 14
    //   1627: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   1630: aload 20
    //   1632: astore_1
    //   1633: goto -410 -> 1223
    //   1636: astore_0
    //   1637: aload 17
    //   1639: astore_2
    //   1640: aload 15
    //   1642: astore_1
    //   1643: aload_1
    //   1644: ifnull +7 -> 1651
    //   1647: aload_1
    //   1648: invokevirtual 5380	java/io/InputStream:close	()V
    //   1651: aload_2
    //   1652: ifnull +7 -> 1659
    //   1655: aload_2
    //   1656: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   1659: aload_0
    //   1660: athrow
    //   1661: iload 9
    //   1663: istore 8
    //   1665: aload_1
    //   1666: astore 15
    //   1668: aload_0
    //   1669: astore 14
    //   1671: aload 18
    //   1673: invokevirtual 13530	java/io/BufferedOutputStream:flush	()V
    //   1676: iload 9
    //   1678: istore 8
    //   1680: aload_1
    //   1681: astore 15
    //   1683: aload_0
    //   1684: astore 14
    //   1686: aload 18
    //   1688: invokevirtual 13531	java/io/BufferedOutputStream:close	()V
    //   1691: iload 9
    //   1693: istore 8
    //   1695: aload_1
    //   1696: astore 15
    //   1698: aload_0
    //   1699: astore 14
    //   1701: aload 16
    //   1703: invokevirtual 13532	java/io/BufferedInputStream:close	()V
    //   1706: iload 9
    //   1708: istore 8
    //   1710: aload_1
    //   1711: astore 15
    //   1713: aload_0
    //   1714: astore 14
    //   1716: aload 17
    //   1718: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   1721: iload 9
    //   1723: istore 8
    //   1725: aload_1
    //   1726: astore 15
    //   1728: aload_0
    //   1729: astore 14
    //   1731: aload 13
    //   1733: invokevirtual 13533	java/util/zip/ZipFile:close	()V
    //   1736: iload 9
    //   1738: istore 8
    //   1740: aload_1
    //   1741: astore 15
    //   1743: aload_0
    //   1744: astore 14
    //   1746: new 464	java/io/File
    //   1749: dup
    //   1750: new 149	java/lang/StringBuilder
    //   1753: dup
    //   1754: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   1757: aload_2
    //   1758: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1761: ldc_w 13479
    //   1764: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1767: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1770: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   1773: invokevirtual 474	java/io/File:delete	()Z
    //   1776: pop
    //   1777: iload 9
    //   1779: istore 8
    //   1781: iload 8
    //   1783: istore 9
    //   1785: aload_1
    //   1786: astore 16
    //   1788: aload_0
    //   1789: astore 17
    //   1791: aload_1
    //   1792: astore 15
    //   1794: aload_0
    //   1795: astore 14
    //   1797: new 464	java/io/File
    //   1800: dup
    //   1801: aload_2
    //   1802: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   1805: astore 13
    //   1807: iload 8
    //   1809: istore 9
    //   1811: aload_1
    //   1812: astore 16
    //   1814: aload_0
    //   1815: astore 17
    //   1817: aload_1
    //   1818: astore 15
    //   1820: aload_0
    //   1821: astore 14
    //   1823: aload 13
    //   1825: invokevirtual 474	java/io/File:delete	()Z
    //   1828: pop
    //   1829: iload 8
    //   1831: istore 9
    //   1833: aload_1
    //   1834: astore 16
    //   1836: aload_0
    //   1837: astore 17
    //   1839: aload_1
    //   1840: astore 15
    //   1842: aload_0
    //   1843: astore 14
    //   1845: new 464	java/io/File
    //   1848: dup
    //   1849: new 149	java/lang/StringBuilder
    //   1852: dup
    //   1853: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   1856: aload_2
    //   1857: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1860: ldc_w 13477
    //   1863: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1866: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1869: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   1872: aload 13
    //   1874: invokevirtual 10850	java/io/File:renameTo	(Ljava/io/File;)Z
    //   1877: istore 8
    //   1879: iload 8
    //   1881: istore 9
    //   1883: aload_0
    //   1884: ifnull +7 -> 1891
    //   1887: aload_0
    //   1888: invokevirtual 5380	java/io/InputStream:close	()V
    //   1891: iload 9
    //   1893: istore 8
    //   1895: aload_1
    //   1896: ifnull -915 -> 981
    //   1899: aload_1
    //   1900: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   1903: iload 9
    //   1905: ireturn
    //   1906: astore_0
    //   1907: iload 9
    //   1909: ireturn
    //   1910: iload 12
    //   1912: istore 8
    //   1914: iload 5
    //   1916: ifeq -135 -> 1781
    //   1919: iload 11
    //   1921: istore 9
    //   1923: aload_1
    //   1924: astore 16
    //   1926: aload_0
    //   1927: astore 17
    //   1929: aload_1
    //   1930: astore 15
    //   1932: aload_0
    //   1933: astore 14
    //   1935: new 464	java/io/File
    //   1938: dup
    //   1939: new 149	java/lang/StringBuilder
    //   1942: dup
    //   1943: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   1946: aload_2
    //   1947: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1950: ldc_w 13485
    //   1953: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1956: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1959: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   1962: new 464	java/io/File
    //   1965: dup
    //   1966: new 149	java/lang/StringBuilder
    //   1969: dup
    //   1970: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   1973: aload_2
    //   1974: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1977: ldc_w 13483
    //   1980: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1983: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1986: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   1989: invokevirtual 10850	java/io/File:renameTo	(Ljava/io/File;)Z
    //   1992: istore 8
    //   1994: iload 8
    //   1996: istore 9
    //   1998: iload 9
    //   2000: ifeq +287 -> 2287
    //   2003: iload 9
    //   2005: istore 8
    //   2007: aload_1
    //   2008: astore 15
    //   2010: aload_0
    //   2011: astore 14
    //   2013: new 149	java/lang/StringBuilder
    //   2016: dup
    //   2017: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   2020: aload_2
    //   2021: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2024: ldc_w 13483
    //   2027: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2030: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2033: astore 13
    //   2035: iload 9
    //   2037: istore 8
    //   2039: aload_1
    //   2040: astore 15
    //   2042: aload_0
    //   2043: astore 14
    //   2045: new 149	java/lang/StringBuilder
    //   2048: dup
    //   2049: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   2052: aload_2
    //   2053: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2056: ldc_w 13477
    //   2059: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2062: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2065: astore 16
    //   2067: aload_1
    //   2068: astore 15
    //   2070: aload_0
    //   2071: astore 14
    //   2073: new 13489	com/ndk_lzma/UnLzma
    //   2076: dup
    //   2077: invokespecial 13490	com/ndk_lzma/UnLzma:<init>	()V
    //   2080: aload 13
    //   2082: aload 16
    //   2084: invokevirtual 13535	com/ndk_lzma/UnLzma:a	(Ljava/lang/String;Ljava/lang/String;)I
    //   2087: istore_3
    //   2088: iload_3
    //   2089: ifeq +150 -> 2239
    //   2092: iload_3
    //   2093: ifle +219 -> 2312
    //   2096: aload_1
    //   2097: astore 15
    //   2099: aload_0
    //   2100: astore 14
    //   2102: aload 13
    //   2104: ldc_w 13483
    //   2107: invokevirtual 12028	java/lang/String:lastIndexOf	(Ljava/lang/String;)I
    //   2110: istore 5
    //   2112: iload 5
    //   2114: ifle +37 -> 2151
    //   2117: iload 5
    //   2119: bipush 16
    //   2121: isub
    //   2122: ifle +196 -> 2318
    //   2125: iload 5
    //   2127: bipush 16
    //   2129: isub
    //   2130: istore 4
    //   2132: aload_1
    //   2133: astore 15
    //   2135: aload_0
    //   2136: astore 14
    //   2138: iload_3
    //   2139: aload 13
    //   2141: iload 4
    //   2143: iload 5
    //   2145: invokevirtual 1265	java/lang/String:substring	(II)Ljava/lang/String;
    //   2148: invokestatic 13495	LibcoreWrapper/a:f	(ILjava/lang/String;)V
    //   2151: aload_1
    //   2152: astore 15
    //   2154: aload_0
    //   2155: astore 14
    //   2157: new 13497	com/keniu/security/update/lzma/c
    //   2160: dup
    //   2161: invokespecial 13498	com/keniu/security/update/lzma/c:<init>	()V
    //   2164: pop
    //   2165: aload_1
    //   2166: astore 15
    //   2168: aload_0
    //   2169: astore 14
    //   2171: aload 13
    //   2173: aload 16
    //   2175: invokestatic 13536	com/keniu/security/update/lzma/c:a	(Ljava/lang/String;Ljava/lang/String;)I
    //   2178: istore 4
    //   2180: iload 4
    //   2182: ifeq +57 -> 2239
    //   2185: iload 6
    //   2187: istore_3
    //   2188: iload 5
    //   2190: bipush 16
    //   2192: isub
    //   2193: ifle +9 -> 2202
    //   2196: iload 5
    //   2198: bipush 16
    //   2200: isub
    //   2201: istore_3
    //   2202: aload_1
    //   2203: astore 15
    //   2205: aload_0
    //   2206: astore 14
    //   2208: iload 4
    //   2210: new 149	java/lang/StringBuilder
    //   2213: dup
    //   2214: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   2217: aload 13
    //   2219: iload_3
    //   2220: iload 5
    //   2222: invokevirtual 1265	java/lang/String:substring	(II)Ljava/lang/String;
    //   2225: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2228: ldc -5
    //   2230: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2233: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2236: invokestatic 13495	LibcoreWrapper/a:f	(ILjava/lang/String;)V
    //   2239: iload 9
    //   2241: istore 8
    //   2243: aload_1
    //   2244: astore 15
    //   2246: aload_0
    //   2247: astore 14
    //   2249: new 464	java/io/File
    //   2252: dup
    //   2253: new 149	java/lang/StringBuilder
    //   2256: dup
    //   2257: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   2260: aload_2
    //   2261: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2264: ldc_w 13483
    //   2267: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2270: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2273: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   2276: invokevirtual 474	java/io/File:delete	()Z
    //   2279: pop
    //   2280: iload 9
    //   2282: istore 8
    //   2284: goto -503 -> 1781
    //   2287: aload_0
    //   2288: ifnull +7 -> 2295
    //   2291: aload_0
    //   2292: invokevirtual 5380	java/io/InputStream:close	()V
    //   2295: iload 10
    //   2297: istore 8
    //   2299: aload_1
    //   2300: ifnull -1319 -> 981
    //   2303: aload_1
    //   2304: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   2307: iconst_0
    //   2308: ireturn
    //   2309: astore_0
    //   2310: iconst_0
    //   2311: ireturn
    //   2312: iload_3
    //   2313: ineg
    //   2314: istore_3
    //   2315: goto -219 -> 2096
    //   2318: iconst_0
    //   2319: istore 4
    //   2321: goto -189 -> 2132
    //   2324: astore 13
    //   2326: iload 9
    //   2328: istore 8
    //   2330: aload_1
    //   2331: astore 15
    //   2333: aload_0
    //   2334: astore 14
    //   2336: aload 13
    //   2338: invokevirtual 576	java/lang/Exception:printStackTrace	()V
    //   2341: goto -102 -> 2239
    //   2344: astore_0
    //   2345: aload 15
    //   2347: astore_2
    //   2348: aload 14
    //   2350: astore_1
    //   2351: goto -708 -> 1643
    //   2354: astore_1
    //   2355: goto -696 -> 1659
    //   2358: astore_0
    //   2359: aconst_null
    //   2360: astore_1
    //   2361: aload 13
    //   2363: astore_2
    //   2364: goto -721 -> 1643
    //   2367: astore_2
    //   2368: aload_0
    //   2369: astore_1
    //   2370: aload_2
    //   2371: astore_0
    //   2372: aload 13
    //   2374: astore_2
    //   2375: goto -732 -> 1643
    //   2378: astore_0
    //   2379: aload 13
    //   2381: astore_2
    //   2382: aload 15
    //   2384: astore_1
    //   2385: goto -742 -> 1643
    //   2388: astore_0
    //   2389: aload 13
    //   2391: astore_2
    //   2392: aload 15
    //   2394: astore_1
    //   2395: goto -752 -> 1643
    //   2398: astore_0
    //   2399: aconst_null
    //   2400: astore_0
    //   2401: aload 14
    //   2403: astore_1
    //   2404: goto -1329 -> 1075
    //   2407: astore_1
    //   2408: aload 14
    //   2410: astore_1
    //   2411: goto -1336 -> 1075
    //   2414: astore_0
    //   2415: aload 13
    //   2417: astore_1
    //   2418: aload 14
    //   2420: astore_0
    //   2421: goto -1346 -> 1075
    //   2424: astore_0
    //   2425: aload 13
    //   2427: astore_1
    //   2428: aload 14
    //   2430: astore_0
    //   2431: goto -1356 -> 1075
    //   2434: astore_0
    //   2435: iload 9
    //   2437: ireturn
    //   2438: astore 13
    //   2440: goto -1453 -> 987
    //   2443: aload 14
    //   2445: astore_1
    //   2446: goto -1223 -> 1223
    //   2449: goto +15 -> 2464
    //   2452: aload 14
    //   2454: astore_0
    //   2455: goto -1973 -> 482
    //   2458: iconst_0
    //   2459: istore 8
    //   2461: goto -2041 -> 420
    //   2464: iload_3
    //   2465: ifeq -1713 -> 752
    //   2468: iload 5
    //   2470: bipush 16
    //   2472: isub
    //   2473: ifle -1437 -> 1036
    //   2476: iload 5
    //   2478: bipush 16
    //   2480: isub
    //   2481: istore 4
    //   2483: goto -1768 -> 715
    //   2486: astore_0
    //   2487: aload 18
    //   2489: astore_1
    //   2490: aload 16
    //   2492: astore_0
    //   2493: goto -1418 -> 1075
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	2496	0	paramContext	Context
    //   0	2496	1	paramString1	String
    //   0	2496	2	paramString2	String
    //   195	2270	3	i1	int
    //   73	2409	4	i2	int
    //   323	2158	5	i3	int
    //   25	2161	6	i4	int
    //   1	417	7	i5	int
    //   363	2097	8	bool1	boolean
    //   19	2417	9	bool2	boolean
    //   28	2268	10	bool3	boolean
    //   16	1904	11	bool4	boolean
    //   22	1889	12	bool5	boolean
    //   10	1003	13	localObject1	Object
    //   1019	39	13	localIOException1	IOException
    //   1121	1097	13	localObject2	Object
    //   2324	102	13	localException	Exception
    //   2438	1	13	localIOException2	IOException
    //   4	2449	14	localObject3	Object
    //   70	2323	15	localObject4	Object
    //   80	2411	16	localObject5	Object
    //   192	1736	17	localObject6	Object
    //   352	2136	18	localObject7	Object
    //   13	1530	19	arrayOfByte	byte[]
    //   7	1624	20	localObject8	Object
    //   34	1550	21	localAssetManager	AssetManager
    // Exception table:
    //   from	to	target	type
    //   36	43	984	java/io/IOException
    //   115	119	996	java/io/IOException
    //   130	156	996	java/io/IOException
    //   165	194	996	java/io/IOException
    //   243	247	1005	java/io/IOException
    //   258	284	1005	java/io/IOException
    //   293	322	1005	java/io/IOException
    //   384	413	1019	java/io/IOException
    //   568	576	1042	java/lang/Exception
    //   583	592	1042	java/lang/Exception
    //   607	616	1042	java/lang/Exception
    //   643	655	1042	java/lang/Exception
    //   662	670	1042	java/lang/Exception
    //   677	685	1042	java/lang/Exception
    //   697	712	1042	java/lang/Exception
    //   722	752	1042	java/lang/Exception
    //   500	521	1068	java/lang/Exception
    //   539	561	1068	java/lang/Exception
    //   770	801	1068	java/lang/Exception
    //   819	850	1068	java/lang/Exception
    //   868	877	1068	java/lang/Exception
    //   895	900	1068	java/lang/Exception
    //   918	951	1068	java/lang/Exception
    //   1061	1065	1068	java/lang/Exception
    //   1243	1302	1068	java/lang/Exception
    //   1797	1807	1068	java/lang/Exception
    //   1823	1829	1068	java/lang/Exception
    //   1845	1879	1068	java/lang/Exception
    //   1935	1994	1068	java/lang/Exception
    //   1079	1083	1098	java/lang/Exception
    //   1091	1095	1098	java/lang/Exception
    //   1316	1345	1552	java/lang/Exception
    //   1355	1362	1552	java/lang/Exception
    //   1372	1382	1552	java/lang/Exception
    //   1392	1416	1552	java/lang/Exception
    //   1426	1462	1552	java/lang/Exception
    //   1472	1486	1552	java/lang/Exception
    //   1496	1503	1552	java/lang/Exception
    //   1513	1525	1552	java/lang/Exception
    //   1540	1549	1552	java/lang/Exception
    //   1671	1676	1552	java/lang/Exception
    //   1686	1691	1552	java/lang/Exception
    //   1701	1706	1552	java/lang/Exception
    //   1716	1721	1552	java/lang/Exception
    //   1731	1736	1552	java/lang/Exception
    //   1746	1777	1552	java/lang/Exception
    //   2013	2035	1552	java/lang/Exception
    //   2045	2067	1552	java/lang/Exception
    //   2249	2280	1552	java/lang/Exception
    //   2336	2341	1552	java/lang/Exception
    //   357	365	1636	finally
    //   384	413	1636	finally
    //   446	450	1636	finally
    //   474	479	1636	finally
    //   1116	1123	1636	finally
    //   1142	1150	1636	finally
    //   1169	1179	1636	finally
    //   1196	1201	1636	finally
    //   1215	1220	1636	finally
    //   1583	1592	1636	finally
    //   1606	1611	1636	finally
    //   1625	1630	1636	finally
    //   1887	1891	1906	java/lang/Exception
    //   1899	1903	1906	java/lang/Exception
    //   2291	2295	2309	java/lang/Exception
    //   2303	2307	2309	java/lang/Exception
    //   2073	2088	2324	java/lang/Exception
    //   2102	2112	2324	java/lang/Exception
    //   2138	2151	2324	java/lang/Exception
    //   2157	2165	2324	java/lang/Exception
    //   2171	2180	2324	java/lang/Exception
    //   2208	2239	2324	java/lang/Exception
    //   500	521	2344	finally
    //   539	561	2344	finally
    //   568	576	2344	finally
    //   583	592	2344	finally
    //   607	616	2344	finally
    //   643	655	2344	finally
    //   662	670	2344	finally
    //   677	685	2344	finally
    //   697	712	2344	finally
    //   722	752	2344	finally
    //   770	801	2344	finally
    //   819	850	2344	finally
    //   868	877	2344	finally
    //   895	900	2344	finally
    //   918	951	2344	finally
    //   1061	1065	2344	finally
    //   1243	1302	2344	finally
    //   1316	1345	2344	finally
    //   1355	1362	2344	finally
    //   1372	1382	2344	finally
    //   1392	1416	2344	finally
    //   1426	1462	2344	finally
    //   1472	1486	2344	finally
    //   1496	1503	2344	finally
    //   1513	1525	2344	finally
    //   1540	1549	2344	finally
    //   1671	1676	2344	finally
    //   1686	1691	2344	finally
    //   1701	1706	2344	finally
    //   1716	1721	2344	finally
    //   1731	1736	2344	finally
    //   1746	1777	2344	finally
    //   1797	1807	2344	finally
    //   1823	1829	2344	finally
    //   1845	1879	2344	finally
    //   1935	1994	2344	finally
    //   2013	2035	2344	finally
    //   2045	2067	2344	finally
    //   2073	2088	2344	finally
    //   2102	2112	2344	finally
    //   2138	2151	2344	finally
    //   2157	2165	2344	finally
    //   2171	2180	2344	finally
    //   2208	2239	2344	finally
    //   2249	2280	2344	finally
    //   2336	2341	2344	finally
    //   1647	1651	2354	java/lang/Exception
    //   1655	1659	2354	java/lang/Exception
    //   30	36	2358	finally
    //   36	43	2358	finally
    //   43	72	2367	finally
    //   115	119	2378	finally
    //   130	156	2378	finally
    //   165	194	2378	finally
    //   243	247	2388	finally
    //   258	284	2388	finally
    //   293	322	2388	finally
    //   30	36	2398	java/lang/Exception
    //   36	43	2398	java/lang/Exception
    //   43	72	2407	java/lang/Exception
    //   115	119	2414	java/lang/Exception
    //   130	156	2414	java/lang/Exception
    //   165	194	2414	java/lang/Exception
    //   243	247	2424	java/lang/Exception
    //   258	284	2424	java/lang/Exception
    //   293	322	2424	java/lang/Exception
    //   960	965	2434	java/lang/Exception
    //   973	977	2434	java/lang/Exception
    //   43	72	2438	java/io/IOException
    //   357	365	2486	java/lang/Exception
    //   384	413	2486	java/lang/Exception
    //   446	450	2486	java/lang/Exception
    //   474	479	2486	java/lang/Exception
    //   1116	1123	2486	java/lang/Exception
    //   1142	1150	2486	java/lang/Exception
    //   1169	1179	2486	java/lang/Exception
    //   1196	1201	2486	java/lang/Exception
    //   1215	1220	2486	java/lang/Exception
    //   1583	1592	2486	java/lang/Exception
    //   1606	1611	2486	java/lang/Exception
    //   1625	1630	2486	java/lang/Exception
  }
  
  public static boolean b(Context paramContext, String paramString1, String paramString2, String paramString3, String paramString4)
  {
    if ((paramContext == null) || (paramString1 == null)) {
      return false;
    }
    Object localObject1;
    if (TextUtils.isEmpty(paramString4))
    {
      localObject1 = null;
      if (localObject1 == null) {
        break label416;
      }
    }
    label292:
    label311:
    label405:
    label411:
    label416:
    for (int i1 = 1;; i1 = 0) {
      for (;;)
      {
        Object localObject2;
        try
        {
          localObject1 = paramContext.getPackageManager();
          if (((PackageManager)localObject1).getLaunchIntentForPackage(paramString1) == null) {
            break label311;
          }
          localObject2 = new Intent("android.intent.action.SEND");
          if (i1 != 0)
          {
            ((Intent)localObject2).setType("image/*");
            Iterator localIterator = ((PackageManager)localObject1).queryIntentActivities((Intent)localObject2, 65536).iterator();
            if (!localIterator.hasNext()) {
              break label411;
            }
            localObject1 = (ResolveInfo)localIterator.next();
            if (!((ResolveInfo)localObject1).activityInfo.packageName.equalsIgnoreCase(paramString1)) {
              continue;
            }
            paramString1 = (String)localObject1;
            if (paramString1 == null) {
              break label405;
            }
            ((Intent)localObject2).setComponent(new ComponentName(paramString1.activityInfo.packageName, paramString1.activityInfo.name));
            ((Intent)localObject2).putExtra("android.intent.extra.SUBJECT", paramString2);
            ((Intent)localObject2).putExtra("android.intent.extra.TEXT", paramString3);
            if (i1 != 0) {
              ((Intent)localObject2).putExtra("android.intent.extra.STREAM", Uri.parse("file://" + paramString4));
            }
            if (!(paramContext instanceof Activity)) {
              break label292;
            }
            ((Activity)paramContext).startActivityForResult((Intent)localObject2, 5);
            bool = true;
            return bool;
            localObject2 = new File(paramString4);
            if (((File)localObject2).exists())
            {
              localObject1 = localObject2;
              if (((File)localObject2).isFile()) {
                break;
              }
            }
            localObject1 = null;
            break;
          }
          ((Intent)localObject2).setType("text/plain");
          continue;
          ((Intent)localObject2).addFlags(268959744);
        }
        catch (Exception paramContext)
        {
          paramContext.printStackTrace();
          return false;
        }
        com.cmcm.onews.util.a.a(paramContext, (Intent)localObject2);
        continue;
        paramString1 = new Intent("android.intent.action.SEND");
        paramString1.setType("text/plain");
        paramString1.putExtra("android.intent.extra.SUBJECT", paramString2);
        paramString1.putExtra("android.intent.extra.TEXT", paramString3);
        if (Build.VERSION.SDK_INT < 23) {
          paramString1.setFlags(1073741824);
        }
        paramString2 = a(paramContext, 2131301055, new Object[0]);
        try
        {
          paramString1 = Intent.createChooser(paramString1, paramString2);
          paramString1.addFlags(268435456);
          com.cmcm.onews.util.a.a(paramContext, paramString1);
          return false;
        }
        catch (ActivityNotFoundException paramContext)
        {
          paramContext.printStackTrace();
          return false;
        }
        boolean bool = false;
        continue;
        paramString1 = null;
      }
    }
  }
  
  public static boolean b(com.cleanmaster.boost.abnormal.abnormalnotify.s paramS)
  {
    if ((paramS.c == 2) && (!AbnormalScenePhoneListener.a())) {
      return false;
    }
    if (android.support.v4.a.c.a(com.keniu.security.d.a())) {
      return false;
    }
    if (!b("process_settings", "abnormal_toast_show_rate", 100)) {
      return false;
    }
    if (paramS.a == null) {
      return false;
    }
    switch (paramS.b)
    {
    default: 
      return false;
    case 0: 
      if (!com.cleanmaster.boost.cpu.c.a().a(paramS.a, paramS.e, true)) {
        return false;
      }
      if (TextUtils.isEmpty(paramS.e)) {
        return false;
      }
      break;
    case 1: 
      if (TextUtils.isEmpty(paramS.g)) {}
      for (String str = paramS.a.getPackageName(); !com.cleanmaster.boost.cpu.c.a().a(paramS.a, str, false); str = paramS.g) {
        return false;
      }
    }
    return true;
  }
  
  public static boolean b(com.cleanmaster.cleancloud.j.b paramB)
  {
    return 101 == paramB.e;
  }
  
  public static boolean b(com.in2wow.sdk.model.c paramC, int paramInt)
  {
    if (!c(paramC)) {}
    while ((paramC.y() != com.in2wow.sdk.model.c.e.b) || (paramC.t()) || (d(paramC)) || (!e(paramC)) || (f(paramC)) || (!a(paramC, paramInt))) {
      return false;
    }
    return true;
  }
  
  /* Error */
  private static boolean b(InputStream paramInputStream, File paramFile)
  {
    // Byte code:
    //   0: aload_1
    //   1: invokevirtual 468	java/io/File:exists	()Z
    //   4: ifeq +8 -> 12
    //   7: aload_1
    //   8: invokevirtual 474	java/io/File:delete	()Z
    //   11: pop
    //   12: new 5382	java/io/FileOutputStream
    //   15: dup
    //   16: aload_1
    //   17: invokespecial 5383	java/io/FileOutputStream:<init>	(Ljava/io/File;)V
    //   20: astore_1
    //   21: sipush 4096
    //   24: newarray byte
    //   26: astore_3
    //   27: aload_0
    //   28: aload_3
    //   29: invokevirtual 5384	java/io/InputStream:read	([B)I
    //   32: istore_2
    //   33: iload_2
    //   34: ifge +20 -> 54
    //   37: aload_1
    //   38: invokevirtual 10531	java/io/FileOutputStream:flush	()V
    //   41: aload_1
    //   42: invokevirtual 13584	java/io/FileOutputStream:getFD	()Ljava/io/FileDescriptor;
    //   45: invokevirtual 13589	java/io/FileDescriptor:sync	()V
    //   48: aload_1
    //   49: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   52: iconst_1
    //   53: ireturn
    //   54: aload_1
    //   55: aload_3
    //   56: iconst_0
    //   57: iload_2
    //   58: invokevirtual 9741	java/io/FileOutputStream:write	([BII)V
    //   61: goto -34 -> 27
    //   64: astore_0
    //   65: aload_1
    //   66: invokevirtual 10531	java/io/FileOutputStream:flush	()V
    //   69: aload_1
    //   70: invokevirtual 13584	java/io/FileOutputStream:getFD	()Ljava/io/FileDescriptor;
    //   73: invokevirtual 13589	java/io/FileDescriptor:sync	()V
    //   76: aload_1
    //   77: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   80: aload_0
    //   81: athrow
    //   82: astore_0
    //   83: iconst_0
    //   84: ireturn
    //   85: astore_0
    //   86: goto -38 -> 48
    //   89: astore_3
    //   90: goto -14 -> 76
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	93	0	paramInputStream	InputStream
    //   0	93	1	paramFile	File
    //   32	26	2	i1	int
    //   26	30	3	arrayOfByte	byte[]
    //   89	1	3	localIOException	IOException
    // Exception table:
    //   from	to	target	type
    //   21	27	64	finally
    //   27	33	64	finally
    //   54	61	64	finally
    //   0	12	82	java/io/IOException
    //   12	21	82	java/io/IOException
    //   37	41	82	java/io/IOException
    //   48	52	82	java/io/IOException
    //   65	69	82	java/io/IOException
    //   76	82	82	java/io/IOException
    //   41	48	85	java/io/IOException
    //   69	76	89	java/io/IOException
  }
  
  public static boolean b(CharSequence paramCharSequence)
  {
    if (TextUtils.isEmpty(paramCharSequence)) {}
    for (;;)
    {
      return false;
      try
      {
        boolean bool = paramCharSequence.toString().matches("[0-9|a-z|A-Z|@|//.|//_|//-]+");
        if (!bool) {
          return true;
        }
      }
      catch (Exception paramCharSequence) {}
    }
    return false;
  }
  
  public static boolean b(String paramString1, String paramString2, int paramInt)
  {
    int i1 = a(paramString1, paramString2, paramInt);
    if (i1 < 0) {}
    for (;;)
    {
      if (ak(paramInt) == 20)
      {
        return true;
        if (i1 > 100) {
          paramInt = 100;
        }
      }
      else
      {
        return false;
      }
      paramInt = i1;
    }
  }
  
  /* Error */
  public static boolean b(String paramString1, String paramString2, String paramString3, String paramString4)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 11
    //   3: aconst_null
    //   4: astore 12
    //   6: aconst_null
    //   7: astore 13
    //   9: aconst_null
    //   10: astore 10
    //   12: iconst_0
    //   13: istore 6
    //   15: aload 11
    //   17: astore 8
    //   19: aload 13
    //   21: astore 7
    //   23: aload_3
    //   24: invokestatic 1553	android/support/v4/a/c:a	(Ljava/lang/String;)Z
    //   27: ifne +359 -> 386
    //   30: aload 11
    //   32: astore 8
    //   34: aload 13
    //   36: astore 7
    //   38: ldc_w 809
    //   41: invokestatic 814	java/security/MessageDigest:getInstance	(Ljava/lang/String;)Ljava/security/MessageDigest;
    //   44: astore 9
    //   46: aload 11
    //   48: astore 8
    //   50: aload 13
    //   52: astore 7
    //   54: aload_0
    //   55: aload_2
    //   56: aload_1
    //   57: invokestatic 13598	LibcoreWrapper/a:i	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   60: istore 5
    //   62: iload 5
    //   64: ifeq +119 -> 183
    //   67: aload 9
    //   69: ifnull +114 -> 183
    //   72: aload 11
    //   74: astore 8
    //   76: aload 12
    //   78: astore 7
    //   80: new 13600	java/security/DigestInputStream
    //   83: dup
    //   84: new 1167	java/io/FileInputStream
    //   87: dup
    //   88: aload_2
    //   89: invokespecial 2681	java/io/FileInputStream:<init>	(Ljava/lang/String;)V
    //   92: aload 9
    //   94: invokespecial 13603	java/security/DigestInputStream:<init>	(Ljava/io/InputStream;Ljava/security/MessageDigest;)V
    //   97: astore_0
    //   98: sipush 512
    //   101: newarray byte
    //   103: astore_1
    //   104: aload_0
    //   105: aload_1
    //   106: invokevirtual 5384	java/io/InputStream:read	([B)I
    //   109: istore 4
    //   111: iload 4
    //   113: ifgt -9 -> 104
    //   116: aload 9
    //   118: ifnull +229 -> 347
    //   121: aload_0
    //   122: astore 8
    //   124: aload_0
    //   125: astore 7
    //   127: aload 9
    //   129: invokevirtual 5945	java/security/MessageDigest:digest	()[B
    //   132: invokestatic 13604	android/support/v4/a/c:a	([B)Ljava/lang/String;
    //   135: aload_3
    //   136: invokevirtual 11847	java/lang/String:compareToIgnoreCase	(Ljava/lang/String;)I
    //   139: ifne +161 -> 300
    //   142: aload_0
    //   143: astore 8
    //   145: aload_0
    //   146: astore 7
    //   148: invokestatic 13086	com/keniu/security/update/l:a	()Lcom/keniu/security/update/l;
    //   151: pop
    //   152: iconst_1
    //   153: istore 5
    //   155: aload_0
    //   156: ifnull +7 -> 163
    //   159: aload_0
    //   160: invokevirtual 5380	java/io/InputStream:close	()V
    //   163: iload 5
    //   165: ifne +15 -> 180
    //   168: new 464	java/io/File
    //   171: dup
    //   172: aload_2
    //   173: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   176: invokevirtual 474	java/io/File:delete	()Z
    //   179: pop
    //   180: iload 5
    //   182: ireturn
    //   183: aload 11
    //   185: astore 8
    //   187: aload 12
    //   189: astore 7
    //   191: invokestatic 13086	com/keniu/security/update/l:a	()Lcom/keniu/security/update/l;
    //   194: pop
    //   195: aload 11
    //   197: astore 8
    //   199: aload 12
    //   201: astore 7
    //   203: new 149	java/lang/StringBuilder
    //   206: dup
    //   207: ldc_w 13606
    //   210: invokespecial 260	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   213: aload_0
    //   214: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   217: ldc_w 13608
    //   220: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   223: aload_1
    //   224: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   227: pop
    //   228: aload 10
    //   230: astore_0
    //   231: goto -115 -> 116
    //   234: astore_0
    //   235: aload 8
    //   237: astore 7
    //   239: invokestatic 13086	com/keniu/security/update/l:a	()Lcom/keniu/security/update/l;
    //   242: pop
    //   243: aload 8
    //   245: astore 7
    //   247: new 149	java/lang/StringBuilder
    //   250: dup
    //   251: ldc_w 13610
    //   254: invokespecial 260	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   257: aload_0
    //   258: invokevirtual 9619	java/lang/Exception:getMessage	()Ljava/lang/String;
    //   261: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   264: pop
    //   265: aload 8
    //   267: astore 7
    //   269: aload_0
    //   270: invokevirtual 576	java/lang/Exception:printStackTrace	()V
    //   273: aload 8
    //   275: ifnull +8 -> 283
    //   278: aload 8
    //   280: invokevirtual 5380	java/io/InputStream:close	()V
    //   283: new 464	java/io/File
    //   286: dup
    //   287: aload_2
    //   288: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   291: invokevirtual 474	java/io/File:delete	()Z
    //   294: pop
    //   295: iconst_0
    //   296: ireturn
    //   297: astore_0
    //   298: iconst_0
    //   299: ireturn
    //   300: aload_0
    //   301: astore 8
    //   303: aload_0
    //   304: astore 7
    //   306: invokestatic 13086	com/keniu/security/update/l:a	()Lcom/keniu/security/update/l;
    //   309: pop
    //   310: iload 6
    //   312: istore 5
    //   314: goto -159 -> 155
    //   317: astore_0
    //   318: aload 7
    //   320: ifnull +8 -> 328
    //   323: aload 7
    //   325: invokevirtual 5380	java/io/InputStream:close	()V
    //   328: iload 5
    //   330: ifne +15 -> 345
    //   333: new 464	java/io/File
    //   336: dup
    //   337: aload_2
    //   338: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   341: invokevirtual 474	java/io/File:delete	()Z
    //   344: pop
    //   345: aload_0
    //   346: athrow
    //   347: iconst_1
    //   348: istore 5
    //   350: goto -195 -> 155
    //   353: astore_1
    //   354: goto -9 -> 345
    //   357: astore_0
    //   358: iconst_0
    //   359: istore 5
    //   361: goto -43 -> 318
    //   364: astore_1
    //   365: aload_0
    //   366: astore 7
    //   368: aload_1
    //   369: astore_0
    //   370: goto -52 -> 318
    //   373: astore_1
    //   374: aload_0
    //   375: astore 8
    //   377: aload_1
    //   378: astore_0
    //   379: goto -144 -> 235
    //   382: astore_0
    //   383: iload 5
    //   385: ireturn
    //   386: aconst_null
    //   387: astore 9
    //   389: goto -343 -> 46
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	392	0	paramString1	String
    //   0	392	1	paramString2	String
    //   0	392	2	paramString3	String
    //   0	392	3	paramString4	String
    //   109	3	4	i1	int
    //   60	324	5	bool1	boolean
    //   13	298	6	bool2	boolean
    //   21	346	7	localObject1	Object
    //   17	359	8	localObject2	Object
    //   44	344	9	localMessageDigest	MessageDigest
    //   10	219	10	localObject3	Object
    //   1	195	11	localObject4	Object
    //   4	196	12	localObject5	Object
    //   7	44	13	localObject6	Object
    // Exception table:
    //   from	to	target	type
    //   23	30	234	java/lang/Exception
    //   38	46	234	java/lang/Exception
    //   54	62	234	java/lang/Exception
    //   80	98	234	java/lang/Exception
    //   127	142	234	java/lang/Exception
    //   148	152	234	java/lang/Exception
    //   191	195	234	java/lang/Exception
    //   203	228	234	java/lang/Exception
    //   306	310	234	java/lang/Exception
    //   278	283	297	java/lang/Exception
    //   283	295	297	java/lang/Exception
    //   80	98	317	finally
    //   127	142	317	finally
    //   148	152	317	finally
    //   191	195	317	finally
    //   203	228	317	finally
    //   306	310	317	finally
    //   323	328	353	java/lang/Exception
    //   333	345	353	java/lang/Exception
    //   23	30	357	finally
    //   38	46	357	finally
    //   54	62	357	finally
    //   239	243	357	finally
    //   247	265	357	finally
    //   269	273	357	finally
    //   98	104	364	finally
    //   104	111	364	finally
    //   98	104	373	java/lang/Exception
    //   104	111	373	java/lang/Exception
    //   159	163	382	java/lang/Exception
    //   168	180	382	java/lang/Exception
  }
  
  public static boolean b(String paramString1, String paramString2, boolean paramBoolean)
  {
    if (paramBoolean) {}
    for (String str = "1";; str = "0")
    {
      paramString1 = e(paramString1, paramString2, str);
      if ((paramString1 != null) && (paramString1.length() > 0)) {
        break;
      }
      return paramBoolean;
    }
    return !paramString1.equalsIgnoreCase("0");
  }
  
  public static boolean b(WeakReference<Context> paramWeakReference)
  {
    paramWeakReference = (Context)paramWeakReference.get();
    if (paramWeakReference != null)
    {
      paramWeakReference = (PowerManager)paramWeakReference.getSystemService("power");
      if (paramWeakReference == null) {
        return false;
      }
      if (Build.VERSION.SDK_INT < 20) {
        return paramWeakReference.isScreenOn();
      }
      return paramWeakReference.isInteractive();
    }
    return false;
  }
  
  public static boolean b(JSONObject paramJSONObject, String paramString, com.my.target.core.parsers.a paramA, boolean paramBoolean)
  {
    boolean bool = paramBoolean;
    if (paramJSONObject.has(paramString)) {}
    try
    {
      bool = paramJSONObject.getBoolean(paramString);
      return bool;
    }
    catch (JSONException paramJSONObject)
    {
      new StringBuilder("JSON Exception in field '").append(paramString).append("', Operation: ").append(paramA.d).append(", Unit: ").append(paramA.e);
    }
    return paramBoolean;
  }
  
  public static boolean b(short paramShort)
  {
    String str;
    switch (paramShort)
    {
    case 4: 
    default: 
      return true;
    case 1: 
    case 5: 
      str = "abnormal_detection_notify_scene_unlock";
    }
    while (TextUtils.isEmpty(str))
    {
      return false;
      str = "abnormal_detection_notify_scene_phone";
      continue;
      str = "abnormal_detection_notify_scene_foreground";
    }
    return a("abnormal_detection_notify_key", str, true);
  }
  
  public static boolean b(boolean paramBoolean)
  {
    if (paramBoolean)
    {
      if (Build.VERSION.SDK_INT < 21) {}
      do
      {
        do
        {
          return true;
        } while ((al()) || (com.cm.root.d.a().g()));
        com.cm.root.d.a();
      } while ((com.cm.root.d.b()) && (com.cleanmaster.base.util.system.m.j(com.keniu.security.d.a(), "eu.chainfire.supersu")));
    }
    return false;
  }
  
  private static RemoteInput[] b(aj[] paramArrayOfAj)
  {
    if (paramArrayOfAj == null) {
      return null;
    }
    RemoteInput[] arrayOfRemoteInput = new RemoteInput[paramArrayOfAj.length];
    int i1 = 0;
    while (i1 < paramArrayOfAj.length)
    {
      aj localAj = paramArrayOfAj[i1];
      arrayOfRemoteInput[i1] = new RemoteInput.Builder(localAj.a()).setLabel(localAj.b()).setChoices(localAj.c()).setAllowFreeFormInput(localAj.d()).addExtras(localAj.e()).build();
      i1 += 1;
    }
    return arrayOfRemoteInput;
  }
  
  public static <T> T[] b(Parcel paramParcel, int paramInt, Parcelable.Creator<T> paramCreator)
  {
    paramInt = a(paramParcel, paramInt);
    int i1 = paramParcel.dataPosition();
    if (paramInt == 0) {
      return null;
    }
    paramCreator = paramParcel.createTypedArray(paramCreator);
    paramParcel.setDataPosition(paramInt + i1);
    return paramCreator;
  }
  
  private static long bA(String paramString)
  {
    paramString = paramString.split(":");
    try
    {
      long l1 = 3600000L * Long.parseLong(paramString[0]) + 0L + 60000L * Long.parseLong(paramString[1]);
      if (paramString[2].indexOf(".") >= 0)
      {
        paramString = paramString[2].split("\\.");
        l2 = Long.parseLong(paramString[0]);
        return Long.parseLong(paramString[1]) + (l1 + l2 * 1000L);
      }
      long l2 = Long.parseLong(paramString[2]);
      return l2 * 1000L + l1;
    }
    catch (Exception paramString)
    {
      com.in2wow.sdk.l.k.a(paramString);
    }
    return 0L;
  }
  
  public static void bA()
  {
    com.cleanmaster.security.scan.sdcard.n.a().c = 3;
    com.cleanmaster.security.scan.sdcard.n.a().a = true;
  }
  
  /* Error */
  private static String bB(String paramString)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 4
    //   3: aconst_null
    //   4: astore_3
    //   5: new 464	java/io/File
    //   8: dup
    //   9: aload_0
    //   10: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   13: invokevirtual 468	java/io/File:exists	()Z
    //   16: ifne +7 -> 23
    //   19: aload_3
    //   20: astore_1
    //   21: aload_1
    //   22: areturn
    //   23: aload_0
    //   24: invokestatic 13657	LibcoreWrapper/a:av	(Ljava/lang/String;)Landroid/database/sqlite/SQLiteDatabase;
    //   27: astore_0
    //   28: aload_0
    //   29: ldc_w 13659
    //   32: aconst_null
    //   33: invokevirtual 6284	android/database/sqlite/SQLiteDatabase:rawQuery	(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;
    //   36: astore_1
    //   37: aload 4
    //   39: astore_2
    //   40: aload_1
    //   41: ifnull +81 -> 122
    //   44: aload 4
    //   46: astore_2
    //   47: aload_1
    //   48: invokeinterface 6287 1 0
    //   53: ifeq +69 -> 122
    //   56: getstatic 10501	java/util/Locale:US	Ljava/util/Locale;
    //   59: ldc_w 13661
    //   62: iconst_4
    //   63: anewarray 5	java/lang/Object
    //   66: dup
    //   67: iconst_0
    //   68: aload_1
    //   69: iconst_0
    //   70: invokeinterface 12894 2 0
    //   75: invokestatic 1206	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   78: aastore
    //   79: dup
    //   80: iconst_1
    //   81: aload_1
    //   82: iconst_1
    //   83: invokeinterface 12894 2 0
    //   88: invokestatic 1206	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   91: aastore
    //   92: dup
    //   93: iconst_2
    //   94: aload_1
    //   95: iconst_2
    //   96: invokeinterface 12894 2 0
    //   101: invokestatic 1206	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   104: aastore
    //   105: dup
    //   106: iconst_3
    //   107: aload_1
    //   108: iconst_3
    //   109: invokeinterface 12894 2 0
    //   114: invokestatic 1206	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   117: aastore
    //   118: invokestatic 10506	java/lang/String:format	(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   121: astore_2
    //   122: aload_1
    //   123: ifnull +9 -> 132
    //   126: aload_1
    //   127: invokeinterface 6298 1 0
    //   132: aload_2
    //   133: astore_1
    //   134: aload_0
    //   135: ifnull -114 -> 21
    //   138: aload_0
    //   139: invokevirtual 11322	android/database/sqlite/SQLiteDatabase:close	()V
    //   142: aload_2
    //   143: areturn
    //   144: astore_0
    //   145: aload_2
    //   146: areturn
    //   147: astore_0
    //   148: aconst_null
    //   149: astore_0
    //   150: aconst_null
    //   151: astore_1
    //   152: aload_1
    //   153: ifnull +9 -> 162
    //   156: aload_1
    //   157: invokeinterface 6298 1 0
    //   162: aload_3
    //   163: astore_1
    //   164: aload_0
    //   165: ifnull -144 -> 21
    //   168: aload_0
    //   169: invokevirtual 11322	android/database/sqlite/SQLiteDatabase:close	()V
    //   172: aconst_null
    //   173: areturn
    //   174: astore_0
    //   175: aconst_null
    //   176: areturn
    //   177: astore_2
    //   178: aconst_null
    //   179: astore_1
    //   180: aconst_null
    //   181: astore_0
    //   182: aload_1
    //   183: ifnull +9 -> 192
    //   186: aload_1
    //   187: invokeinterface 6298 1 0
    //   192: aload_0
    //   193: ifnull +7 -> 200
    //   196: aload_0
    //   197: invokevirtual 11322	android/database/sqlite/SQLiteDatabase:close	()V
    //   200: aload_2
    //   201: athrow
    //   202: astore_0
    //   203: goto -3 -> 200
    //   206: astore_0
    //   207: goto -7 -> 200
    //   210: astore_2
    //   211: aconst_null
    //   212: astore_1
    //   213: goto -31 -> 182
    //   216: astore_2
    //   217: goto -35 -> 182
    //   220: astore_0
    //   221: aconst_null
    //   222: areturn
    //   223: astore_1
    //   224: aconst_null
    //   225: astore_1
    //   226: goto -74 -> 152
    //   229: astore_2
    //   230: goto -78 -> 152
    //   233: astore_0
    //   234: aload_2
    //   235: areturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	236	0	paramString	String
    //   20	193	1	localObject1	Object
    //   223	1	1	localException1	Exception
    //   225	1	1	localObject2	Object
    //   39	107	2	localObject3	Object
    //   177	24	2	localObject4	Object
    //   210	1	2	localObject5	Object
    //   216	1	2	localObject6	Object
    //   229	6	2	localException2	Exception
    //   4	159	3	localObject7	Object
    //   1	44	4	localObject8	Object
    // Exception table:
    //   from	to	target	type
    //   126	132	144	java/lang/Exception
    //   138	142	144	java/lang/Exception
    //   23	28	147	java/lang/Exception
    //   156	162	174	java/lang/Exception
    //   168	172	174	java/lang/Exception
    //   23	28	177	finally
    //   186	192	202	java/lang/Error
    //   196	200	202	java/lang/Error
    //   186	192	206	java/lang/Exception
    //   196	200	206	java/lang/Exception
    //   28	37	210	finally
    //   47	122	216	finally
    //   156	162	220	java/lang/Error
    //   168	172	220	java/lang/Error
    //   28	37	223	java/lang/Exception
    //   47	122	229	java/lang/Exception
    //   126	132	233	java/lang/Error
    //   138	142	233	java/lang/Error
  }
  
  public static void bB()
  {
    com.cleanmaster.security.scan.sdcard.n localN = com.cleanmaster.security.scan.sdcard.n.a();
    com.antiy.sdk.c localC = com.antiy.sdk.c.a();
    if (localN.b) {
      return;
    }
    localN.b = true;
    new com.cleanmaster.security.scan.sdcard.o("SdcardScanDependence_asyncForceInitAntiyLib", localC, localN).start();
  }
  
  /* Error */
  private static String bC(String paramString)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_2
    //   2: aconst_null
    //   3: astore_3
    //   4: new 1167	java/io/FileInputStream
    //   7: dup
    //   8: aload_0
    //   9: invokespecial 2681	java/io/FileInputStream:<init>	(Ljava/lang/String;)V
    //   12: astore_1
    //   13: iconst_4
    //   14: newarray byte
    //   16: astore 4
    //   18: aload_3
    //   19: astore_0
    //   20: aload_1
    //   21: aload 4
    //   23: invokevirtual 1177	java/io/FileInputStream:read	([B)I
    //   26: iconst_4
    //   27: if_icmplt +57 -> 84
    //   30: getstatic 10501	java/util/Locale:US	Ljava/util/Locale;
    //   33: ldc_w 13661
    //   36: iconst_4
    //   37: anewarray 5	java/lang/Object
    //   40: dup
    //   41: iconst_0
    //   42: aload 4
    //   44: iconst_0
    //   45: baload
    //   46: invokestatic 13672	java/lang/Byte:valueOf	(B)Ljava/lang/Byte;
    //   49: aastore
    //   50: dup
    //   51: iconst_1
    //   52: aload 4
    //   54: iconst_1
    //   55: baload
    //   56: invokestatic 13672	java/lang/Byte:valueOf	(B)Ljava/lang/Byte;
    //   59: aastore
    //   60: dup
    //   61: iconst_2
    //   62: aload 4
    //   64: iconst_2
    //   65: baload
    //   66: invokestatic 13672	java/lang/Byte:valueOf	(B)Ljava/lang/Byte;
    //   69: aastore
    //   70: dup
    //   71: iconst_3
    //   72: aload 4
    //   74: iconst_3
    //   75: baload
    //   76: invokestatic 13672	java/lang/Byte:valueOf	(B)Ljava/lang/Byte;
    //   79: aastore
    //   80: invokestatic 10506	java/lang/String:format	(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   83: astore_0
    //   84: aload_1
    //   85: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   88: aload_0
    //   89: areturn
    //   90: astore_0
    //   91: aconst_null
    //   92: astore_1
    //   93: aload_2
    //   94: astore_0
    //   95: aload_1
    //   96: ifnull -8 -> 88
    //   99: aload_1
    //   100: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   103: aconst_null
    //   104: areturn
    //   105: astore_0
    //   106: aconst_null
    //   107: areturn
    //   108: astore_0
    //   109: aconst_null
    //   110: astore_1
    //   111: aload_1
    //   112: ifnull +7 -> 119
    //   115: aload_1
    //   116: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   119: aload_0
    //   120: athrow
    //   121: astore_1
    //   122: aload_0
    //   123: areturn
    //   124: astore_1
    //   125: goto -6 -> 119
    //   128: astore_0
    //   129: goto -18 -> 111
    //   132: astore_0
    //   133: goto -40 -> 93
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	136	0	paramString	String
    //   12	104	1	localFileInputStream	FileInputStream
    //   121	1	1	localException1	Exception
    //   124	1	1	localException2	Exception
    //   1	93	2	localObject1	Object
    //   3	16	3	localObject2	Object
    //   16	57	4	arrayOfByte	byte[]
    // Exception table:
    //   from	to	target	type
    //   4	13	90	java/lang/Exception
    //   99	103	105	java/lang/Exception
    //   4	13	108	finally
    //   84	88	121	java/lang/Exception
    //   115	119	124	java/lang/Exception
    //   13	18	128	finally
    //   20	84	128	finally
    //   13	18	132	java/lang/Exception
    //   20	84	132	java/lang/Exception
  }
  
  public static HashMap<String, com.cleanmaster.security.timewall.a.f> bC()
  {
    Object localObject1 = com.cleanmaster.security.timewall.db.a.a().d(15);
    if ((localObject1 == null) || (TextUtils.isEmpty(((com.cleanmaster.security.timewall.db.b)localObject1).b))) {
      localObject2 = null;
    }
    String[] arrayOfString1;
    int i1;
    int i2;
    label54:
    do
    {
      return localObject2;
      arrayOfString1 = com.cleanmaster.base.util.g.d.a(((com.cleanmaster.security.timewall.db.b)localObject1).b, ";;;");
      if (arrayOfString1 != null) {
        break;
      }
      i1 = 0;
      if (i1 <= 0) {
        break label263;
      }
      i2 = 0;
      localObject1 = null;
      localObject2 = localObject1;
    } while (i2 >= i1);
    String[] arrayOfString2 = com.cleanmaster.base.util.g.d.a(arrayOfString1[i2], "###");
    Object localObject2 = localObject1;
    com.cleanmaster.security.timewall.a.f localF;
    if (arrayOfString2 != null) {
      if ((2 != arrayOfString2.length) && (3 != arrayOfString2.length))
      {
        localObject2 = localObject1;
        if (4 != arrayOfString2.length) {}
      }
      else
      {
        localObject2 = localObject1;
        if (!TextUtils.isEmpty(arrayOfString2[0]))
        {
          localObject2 = localObject1;
          if (!TextUtils.isEmpty(arrayOfString2[1]))
          {
            localObject2 = localObject1;
            if (localObject1 == null) {
              localObject2 = new HashMap();
            }
            localF = new com.cleanmaster.security.timewall.a.f();
            localF.a = arrayOfString2[1];
            if (arrayOfString2.length < 3) {
              break label253;
            }
            localObject1 = arrayOfString2[2];
            label171:
            localF.b = ((String)localObject1);
            if (arrayOfString2.length < 4) {
              break label258;
            }
          }
        }
      }
    }
    label253:
    label258:
    for (localObject1 = arrayOfString2[3];; localObject1 = null)
    {
      localF.c = ((String)localObject1);
      if ((!TextUtils.isEmpty(localF.b)) && ("error".equals(localF.b))) {
        localF.b = null;
      }
      ((HashMap)localObject2).put(arrayOfString2[0], localF);
      i2 += 1;
      localObject1 = localObject2;
      break label54;
      i1 = arrayOfString1.length;
      break;
      localObject1 = null;
      break label171;
    }
    label263:
    return null;
  }
  
  private static com.larvalabs.svgandroid.d bD(String paramString)
  {
    int i4 = paramString.length();
    ArrayList localArrayList = new ArrayList();
    int i2 = 1;
    int i3 = 0;
    int i1 = 0;
    if (i2 < i4)
    {
      if (i3 != 0) {
        i3 = 0;
      }
      for (;;)
      {
        i2 += 1;
        break;
        int i5 = paramString.charAt(i2);
        switch (i5)
        {
        default: 
          break;
        case 9: 
        case 10: 
        case 32: 
        case 44: 
        case 45: 
          str = paramString.substring(i1, i2);
          if (str.trim().length() > 0)
          {
            localArrayList.add(Float.valueOf(Float.parseFloat(str)));
            if (i5 == 45) {
              i1 = i2;
            }
          }
          break;
        case 41: 
        case 65: 
        case 67: 
        case 72: 
        case 76: 
        case 77: 
        case 81: 
        case 83: 
        case 84: 
        case 86: 
        case 90: 
        case 97: 
        case 99: 
        case 104: 
        case 108: 
        case 109: 
        case 113: 
        case 115: 
        case 116: 
        case 118: 
        case 122: 
          paramString = paramString.substring(i1, i2);
          if (paramString.trim().length() > 0) {
            localArrayList.add(Float.valueOf(Float.parseFloat(paramString)));
          }
          return new com.larvalabs.svgandroid.d(localArrayList);
          i1 = i2 + 1;
          i3 = 1;
          continue;
          i1 += 1;
        }
      }
    }
    String str = paramString.substring(i1);
    if (str.length() > 0) {}
    try
    {
      localArrayList.add(Float.valueOf(Float.parseFloat(str)));
      paramString.length();
      return new com.larvalabs.svgandroid.d(localArrayList);
    }
    catch (NumberFormatException localNumberFormatException)
    {
      for (;;) {}
    }
  }
  
  public static void bD()
  {
    Context localContext = com.keniu.security.d.a().getApplicationContext();
    long l1 = System.currentTimeMillis();
    if (l1 - com.cleanmaster.configmanager.d.a(localContext).a("cms_recommend_porn_deep_scan_lasttime", 0L) > 259200000L)
    {
      com.cleanmaster.security.timewall.a.d localD = new com.cleanmaster.security.timewall.a.d(13);
      Object localObject = new com.cleanmaster.security.timewall.core.f().a(12);
      if (localObject != null)
      {
        localObject = ((List)localObject).iterator();
        while (((Iterator)localObject).hasNext()) {
          H(((TimeWallData)((Iterator)localObject).next()).a);
        }
      }
      a(TimeWallDefine.EVENT_TYPE.EVENT_TYPE_PORN_URL_SCANNED, localD, 500L);
      com.cleanmaster.configmanager.d.a(localContext).j(l1);
    }
  }
  
  public static boolean bE()
  {
    return (Build.VERSION.SDK_INT >= 18) && (!com.cleanmaster.base.util.system.d.p());
  }
  
  public static boolean bF()
  {
    return Build.VERSION.SDK_INT >= 19;
  }
  
  public static boolean bG()
  {
    if ((TextUtils.isEmpty("anr_monitor_switch")) || (TextUtils.isEmpty("anr_monitor_on"))) {
      return false;
    }
    return b("anr_monitor_switch", "anr_monitor_on", false);
  }
  
  public static boolean bH()
  {
    return J(a(12, "5", "cmlocker_promo_prob", 0));
  }
  
  public static boolean bI()
  {
    return android.support.v4.app.e.b.a("security_download_protection_new", "security_download_protection_switch");
  }
  
  public static com.cleanmaster.security.utils.i bJ()
  {
    Object localObject1 = null;
    long l1;
    if (!bn())
    {
      localObject1 = new com.cleanmaster.security.utils.j((byte)0);
      ((com.cleanmaster.security.utils.j)localObject1).b = false;
      ((com.cleanmaster.security.utils.j)localObject1).c = false;
      Object localObject2 = new com.cleanmaster.security.scan.model.g(com.keniu.security.d.a());
      ((com.cleanmaster.security.scan.model.g)localObject2).a = new j.1((com.cleanmaster.security.utils.j)localObject1, (com.cleanmaster.security.scan.model.g)localObject2);
      ((com.cleanmaster.security.scan.model.g)localObject2).b();
      localObject2 = new com.cleanmaster.security.scan.model.h(com.keniu.security.d.a(), (byte)0);
      ((com.cleanmaster.security.scan.model.h)localObject2).b = new j.2((com.cleanmaster.security.utils.j)localObject1);
      ((com.cleanmaster.security.scan.model.h)localObject2).a();
      if (1000L > 0L) {
        l1 = SystemClock.elapsedRealtime();
      }
    }
    for (;;)
    {
      if (SystemClock.elapsedRealtime() - l1 < 1000L) {}
      try
      {
        Thread.sleep(100L);
        if ((!((com.cleanmaster.security.utils.j)localObject1).b) || (!((com.cleanmaster.security.utils.j)localObject1).c)) {}
      }
      catch (InterruptedException localInterruptedException)
      {
        for (;;)
        {
          localInterruptedException.printStackTrace();
        }
      }
    }
    localObject1 = ((com.cleanmaster.security.utils.j)localObject1).a();
    return localObject1;
  }
  
  public static void bK()
  {
    int i1 = 0;
    Context localContext = com.keniu.security.d.a();
    Object localObject3 = com.cleanmaster.configmanager.d.a(localContext).a("security_unknown_files_safe_need_show", "");
    Object localObject1 = new ArrayList();
    Object localObject2 = new ArrayList();
    if (!TextUtils.isEmpty((CharSequence)localObject3))
    {
      localObject3 = ((String)localObject3).split("/");
      switch (Byte.parseByte(localObject3[0]))
      {
      }
    }
    for (;;)
    {
      localObject1 = a(localContext, (List)localObject1, (ArrayList)localObject2);
      localObject2 = new NotificationSetting();
      ((NotificationSetting)localObject2).a = 1288;
      ((NotificationSetting)localObject2).f = 2;
      ((NotificationSetting)localObject2).m = true;
      ((NotificationSetting)localObject2).h = 1;
      localObject3 = new com.cleanmaster.notification.normal.f();
      ((com.cleanmaster.notification.normal.f)localObject3).q = ((Intent)localObject1);
      ((com.cleanmaster.notification.normal.f)localObject3).c = localContext.getString(2131300188);
      ((com.cleanmaster.notification.normal.f)localObject3).b = ((com.cleanmaster.notification.normal.f)localObject3).c;
      ((com.cleanmaster.notification.normal.f)localObject3).d = localContext.getString(2131300187);
      if (com.cleanmaster.notification.e.a().c((NotificationSetting)localObject2, (com.cleanmaster.notification.normal.f)localObject3)) {
        new com.cleanmaster.security.scan.monitor.e().a((byte)21, (byte)1);
      }
      com.cleanmaster.configmanager.d.a(localContext).j("");
      return;
      localObject3 = localObject3[1].split("e@9");
      int i2 = localObject3.length;
      while (i1 < i2)
      {
        ((List)localObject1).add(localObject3[i1]);
        i1 += 1;
      }
      localObject3 = localObject3[1].split("e@9");
      i2 = localObject3.length;
      i1 = 0;
      while (i1 < i2)
      {
        arrayOfString = localObject3[i1].split("j#1");
        ((ArrayList)localObject2).add(new UnknownFilesSafeModel.ElfSafeModel(arrayOfString[0], "/system/bin" + arrayOfString[0], Long.parseLong(arrayOfString[1])));
        i1 += 1;
      }
      String[] arrayOfString = localObject3[1].split("e@9");
      i2 = arrayOfString.length;
      i1 = 0;
      while (i1 < i2)
      {
        ((List)localObject1).add(arrayOfString[i1]);
        i1 += 1;
      }
      localObject3 = localObject3[2].split("e@9");
      i2 = localObject3.length;
      i1 = 0;
      while (i1 < i2)
      {
        arrayOfString = localObject3[i1].split("j#1");
        ((ArrayList)localObject2).add(new UnknownFilesSafeModel.ElfSafeModel(arrayOfString[0], "/system/bin" + arrayOfString[0], Long.parseLong(arrayOfString[1])));
        i1 += 1;
      }
    }
  }
  
  public static boolean bL()
  {
    int i1 = android.support.percent.a.a("notification", "msg_switch_hot_app_show_mcc");
    return (android.support.percent.a.c("notification", "msg_switch_hot_app_show_rate") == 20) && (i1 == 20);
  }
  
  public static String bM()
  {
    int i1 = 1;
    Context localContext = com.keniu.security.d.a();
    com.cleanmaster.base.util.system.h localH = com.cleanmaster.configmanager.d.a(localContext).b(localContext);
    JSONObject localJSONObject = new JSONObject();
    for (;;)
    {
      try
      {
        localJSONObject.put("apiVersion", 1);
        localJSONObject.put("deviceType", 2);
        localJSONObject.put("v", 16);
        localJSONObject.put("mid", 105);
        localJSONObject.put("sdkt", 1);
        localJSONObject.put("lan", String.format(Locale.US, "%s_%s", new Object[] { localH.M, localH.N }));
        localJSONObject.put("brand", com.cleanmaster.kinfocreporter.a.SP2("ro.product.brand", "unknow"));
        localJSONObject.put("model", com.cleanmaster.kinfocreporter.a.SP2("ro.product.model", "unknow"));
        localJSONObject.put("androidid", p(localContext));
        localJSONObject.put("cver", com.cleanmaster.base.util.system.m.x(localContext, localContext.getPackageName()));
        localJSONObject.put("mcc", com.cleanmaster.base.util.net.b.t(localContext));
        localJSONObject.put("ov", Build.VERSION.SDK_INT);
        if (!com.cleanmaster.base.util.net.b.b(localContext)) {
          continue;
        }
        localJSONObject.put("nt", i1);
        localJSONObject.put("ch", com.cleanmaster.base.c.A());
        localJSONObject.put("resolution", com.cleanmaster.base.util.system.d.c(localContext));
        localJSONObject.put("dpi", w(localContext));
        localJSONObject.put("mem_size", com.cleanmaster.kinfocreporter.a.M(com.cleanmaster.boost.process.util.f.b()));
      }
      catch (JSONException localJSONException)
      {
        localJSONException.printStackTrace();
        continue;
      }
      return localJSONObject.toString();
      i1 = 2;
    }
  }
  
  public static String bN()
  {
    Object localObject = com.keniu.security.d.a();
    StringBuilder localStringBuilder = new StringBuilder();
    String str1 = Build.MODEL;
    String str2 = Build.BRAND;
    String str3 = Build.DISPLAY;
    String str4 = Build.PRODUCT;
    String str5 = Build.DEVICE;
    String str6 = Build.MANUFACTURER;
    String str7 = Build.VERSION.RELEASE;
    localObject = p((Context)localObject);
    localStringBuilder.append(str1).append(str2).append(str3).append(str4).append(str5).append(str6).append(str7).append((String)localObject);
    return android.support.percent.a.b(localStringBuilder.toString());
  }
  
  public static String bO()
  {
    try
    {
      Object localObject = new JSONObject();
      ((JSONObject)localObject).put("app_info", h(false));
      ((JSONObject)localObject).put("app_info_encode", h(true));
      localObject = ((JSONObject)localObject).toString();
      return localObject;
    }
    catch (JSONException localJSONException)
    {
      localJSONException.printStackTrace();
    }
    return null;
  }
  
  public static void bP()
  {
    long l1 = 0L;
    int i3 = 0;
    Context localContext = com.keniu.security.d.a();
    Object localObject1 = e("switch", "gamebox_report_install_app_list", "");
    if (TextUtils.isEmpty((CharSequence)localObject1)) {
      return;
    }
    String[] arrayOfString = ((String)localObject1).split("\\|");
    String str = com.cleanmaster.configmanager.d.a(localContext).a("gamebox_install_app_report_last_list", "");
    com.cleanmaster.configmanager.d.a(localContext).b("gamebox_install_app_report_last_list", (String)localObject1);
    localObject1 = str.split("\\|");
    int i4 = arrayOfString.length;
    int i1 = 0;
    label87:
    int i2;
    if (i1 < i4)
    {
      str = arrayOfString[i1];
      if (!TextUtils.isEmpty(str))
      {
        i2 = 0;
        while (i2 < localObject1.length)
        {
          CharSequence localCharSequence = localObject1[i2];
          if ((!TextUtils.isEmpty(localCharSequence)) && (str.equals(localCharSequence))) {
            break;
          }
          i2 += 1;
        }
        if (i2 < localObject1.length) {}
      }
    }
    for (i1 = 1;; i1 = 0)
    {
      long l2;
      if (i1 != 0)
      {
        com.cleanmaster.configmanager.d.a(localContext).b("gamebox_install_game_report_last_time", 0L);
        l2 = System.currentTimeMillis();
        if (l2 - l1 < 43200000L) {
          break;
        }
        i2 = arrayOfString.length;
        i1 = i3;
        label195:
        if (i1 >= i2) {
          break label279;
        }
        str = arrayOfString[i1];
      }
      try
      {
        localObject1 = localContext.getPackageManager().getPackageInfo(str, 0);
        if (localObject1 == null)
        {
          b1 = 2;
          com.cleanmaster.boost.d.t.a(b1, str).report();
          i1 += 1;
          break label195;
          i1 += 1;
          break label87;
          l1 = com.cleanmaster.configmanager.d.a(localContext).a("gamebox_install_game_report_last_time", 0L);
        }
      }
      catch (Exception localException)
      {
        for (;;)
        {
          Object localObject2 = null;
          continue;
          byte b1 = 1;
        }
      }
      label279:
      com.cleanmaster.configmanager.d.a(localContext).b("gamebox_install_game_report_last_time", l2);
      return;
    }
  }
  
  public static boolean bQ()
  {
    IGameDataService localIGameDataService = (IGameDataService)com.cleanmaster.base.ipc.c.a().a(com.cleanmaster.base.ipc.b.c);
    if (localIGameDataService != null) {
      try
      {
        boolean bool = localIGameDataService.a(0);
        return bool;
      }
      catch (RemoteException localRemoteException) {}
    }
    return false;
  }
  
  public static boolean bR()
  {
    String str = com.cleanmaster.base.util.system.j.a().a(false);
    return com.cleanmaster.base.util.system.j.a().a(str, com.cleanmaster.base.util.system.j.d());
  }
  
  public static Set<String> bS()
  {
    HashSet localHashSet = new HashSet();
    localHashSet.add("com.android.providers.telephony");
    localHashSet.add("com.android.server.telecom");
    localHashSet.add("com.android.mms");
    localHashSet.add("com.google.android.dialer");
    localHashSet.add("com.google.android.contacts");
    localHashSet.add("com.google.android.deskclock");
    localHashSet.add("com.sec.android.app.clockpackage");
    localHashSet.add("com.android.deskclock");
    localHashSet.add("com.android.email");
    localHashSet.add("com.google.android.email");
    localHashSet.add("com.google.android.apps.photos");
    localHashSet.add("com.android.calendar");
    localHashSet.add("com.google.android.calendar");
    localHashSet.add("com.android.settings");
    localHashSet.add("com.tencent.mqq");
    localHashSet.add("com.tencent.mobileqq");
    localHashSet.add("com.tencent.mm");
    localHashSet.add("com.sina.weibo");
    localHashSet.add("com.facebook.katana");
    localHashSet.add("com.twitter.android");
    localHashSet.add("com.instagram.android");
    localHashSet.add("com.snapchat.android");
    localHashSet.add("com.whatsapp");
    localHashSet.add("com.tencent.qqlite");
    localHashSet.add("com.tencent.mobileqqi");
    localHashSet.add("com.tencent.qq.kddi");
    localHashSet.add("com.facebook.katana");
    localHashSet.add("com.pinterest");
    localHashSet.add("com.skype.rover");
    localHashSet.add("com.skype.raider");
    localHashSet.add("com.cnn.mobile.android.phone");
    localHashSet.add("com.yahoo.mobile.client.android.yahoo");
    localHashSet.add("com.yahoo.mobile.client.android.mail");
    localHashSet.add("com.google.android.gm");
    localHashSet.add("com.tencent.pb");
    localHashSet.add("com.cleanmaster.mguard_cn");
    localHashSet.add("com.cleanmaster.mguard");
    return localHashSet;
  }
  
  public static List<String> bT()
  {
    ArrayList localArrayList = new ArrayList();
    localArrayList.add("#com.android.phone");
    localArrayList.add("#com.android.server.telecom");
    localArrayList.add("#com.android.incallui");
    localArrayList.add("#android");
    localArrayList.add("#com.android.systemui");
    return localArrayList;
  }
  
  public static String bU()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    List localList = bT();
    int i2 = localList.size();
    int i1 = 0;
    while (i1 < i2)
    {
      localStringBuilder.append((String)localList.get(i1));
      i1 += 1;
    }
    return localStringBuilder.toString();
  }
  
  public static com.cleanmaster.ui.resultpage.item.l bV()
  {
    if (as("R_RESULT_BUSINESS_FACEBOOK")) {
      return new com.cleanmaster.ui.resultpage.item.l();
    }
    return new com.cleanmaster.ui.resultpage.item.m();
  }
  
  public static com.cleanmaster.ui.resultpage.item.v bW()
  {
    if (as("R_RESULT_BUSINESS_MOPUB")) {
      return new com.cleanmaster.ui.resultpage.item.v();
    }
    return new com.cleanmaster.ui.resultpage.item.w();
  }
  
  public static com.cleanmaster.ui.resultpage.item.ap bX()
  {
    if (as("R_RESULT_BUSINESS_YAHOO")) {
      return new com.cleanmaster.ui.resultpage.item.ap();
    }
    return new aq();
  }
  
  public static String bY()
  {
    if (!Environment.getExternalStorageState().equals("mounted")) {}
    String str;
    do
    {
      return null;
      str = com.keniu.security.a.g();
    } while (str == null);
    return android.support.percent.a.B(str) + "_cm_log_";
  }
  
  public static boolean bZ()
  {
    Object localObject = com.keniu.security.d.a().getApplicationContext();
    localObject = com.cleanmaster.configmanager.d.a((Context)localObject).b((Context)localObject);
    return (!TextUtils.isEmpty(((com.cleanmaster.base.util.system.h)localObject).M)) && ((((com.cleanmaster.base.util.system.h)localObject).M.equals(com.cleanmaster.base.util.system.h.n)) || (((com.cleanmaster.base.util.system.h)localObject).M.equals(com.cleanmaster.base.util.system.h.I)));
  }
  
  public static Map<String, com.cleanmaster.common.model.AppInfo> ba()
  {
    Object localObject;
    com.cleanmaster.bitloader.a.a localA;
    if (com.cleanmaster.base.util.system.o.h())
    {
      localObject = ca();
      if (((List)localObject).size() == 0) {
        return null;
      }
      localA = new com.cleanmaster.bitloader.a.a();
      localObject = ((List)localObject).iterator();
      while (((Iterator)localObject).hasNext())
      {
        com.cleanmaster.common.model.AppInfo localAppInfo1 = (com.cleanmaster.common.model.AppInfo)((Iterator)localObject).next();
        try
        {
          localA.put(localAppInfo1.getPackageName(), new com.cleanmaster.common.model.AppInfo(localAppInfo1));
        }
        catch (Exception localException1)
        {
          localException1.printStackTrace();
        }
      }
      return localA;
    }
    try
    {
      localObject = com.cleanmaster.synipc.b.a().c().f();
      if ((localObject != null) && (((List)localObject).size() != 0))
      {
        localA = new com.cleanmaster.bitloader.a.a();
        localObject = ((List)localObject).iterator();
        while (((Iterator)localObject).hasNext())
        {
          com.cleanmaster.common.model.AppInfo localAppInfo2 = (com.cleanmaster.common.model.AppInfo)((Iterator)localObject).next();
          try
          {
            localA.put(localAppInfo2.getPackageName(), new com.cleanmaster.common.model.AppInfo(localAppInfo2));
          }
          catch (Exception localException2)
          {
            localException2.printStackTrace();
          }
        }
        return localRemoteException;
      }
    }
    catch (RemoteException localRemoteException)
    {
      localRemoteException.printStackTrace();
      return null;
    }
    return null;
  }
  
  public static AdTemp bb()
  {
    Object localObject = (ISplashService)com.cleanmaster.base.ipc.c.a().a(com.cleanmaster.base.ipc.b.f);
    if (localObject != null) {
      try
      {
        localObject = ((ISplashService)localObject).c();
        return localObject;
      }
      catch (RemoteException localRemoteException)
      {
        localRemoteException.printStackTrace();
      }
    }
    return null;
  }
  
  public static boolean bb(String paramString)
  {
    boolean bool = false;
    try
    {
      int i1 = Runtime.getRuntime().exec("ping -c 1 -w 5 " + paramString).waitFor();
      if (i1 == 0) {
        bool = true;
      }
      return bool;
    }
    catch (InterruptedException paramString)
    {
      return false;
    }
    catch (IOException paramString) {}
    return false;
  }
  
  public static String bc(String paramString)
  {
    Object localObject2 = null;
    String str = "";
    if (TextUtils.isEmpty(paramString)) {
      paramString = str;
    }
    for (;;)
    {
      return paramString;
      try
      {
        localObject1 = new URL(paramString);
        paramString = str;
        if (localObject1 == null) {
          continue;
        }
        localObject1 = ((URL)localObject1).getHost();
        paramString = str;
        if (TextUtils.isEmpty((CharSequence)localObject1)) {
          continue;
        }
      }
      catch (MalformedURLException paramString)
      {
        try
        {
          localObject1 = InetAddress.getByName((String)localObject1);
          paramString = str;
          if (localObject1 == null) {
            continue;
          }
          localObject1 = ((InetAddress)localObject1).getHostAddress();
          paramString = (String)localObject1;
          if (localObject1 != null) {
            continue;
          }
          return "";
          paramString = paramString;
          localObject1 = null;
        }
        catch (UnknownHostException paramString)
        {
          for (;;)
          {
            Object localObject1 = localObject2;
          }
        }
      }
    }
  }
  
  public static void bc()
  {
    if (AppLockPref.getIns().getIntruderSelfieExperienceState() == 1) {
      AppLockPref.getIns().setIntruderSelfieExperienceState(2);
    }
  }
  
  public static d.a bd(String paramString)
  {
    return new d.a(new File(paramString).getName(), paramString, "file");
  }
  
  public static void bd()
  {
    Object localObject = AppLockPref.getIns().getIntruderAppList();
    if (!TextUtils.isEmpty((CharSequence)localObject))
    {
      localObject = Arrays.asList(((String)localObject).split(","));
      if (localObject != null)
      {
        localObject = ((List)localObject).iterator();
        while (((Iterator)localObject).hasNext())
        {
          String str = (String)((Iterator)localObject).next();
          AppLockPref.getIns().setAppTakePictureErr(str, 0);
        }
      }
    }
    AppLockPref.getIns().setIntruderAppList("");
    AppLockPref.getIns().setWrongPasswordPkgName("");
  }
  
  public static com.cleanmaster.junk.bean.m be()
  {
    com.cleanmaster.junk.bean.m localM = k(Environment.getDataDirectory());
    if ((localM != null) && (0L != localM.a))
    {
      long l1 = SystemProperties.getLong("sys.memory.threshold.low", 0L);
      l1 = Math.min(localM.b, l1);
      localM.b -= l1;
    }
    return localM;
  }
  
  public static IRiskyUrlQueryMgr.UrlScanResult be(String paramString)
  {
    IUrlChecker localIUrlChecker = PbLib.getIns().getUrlChecker();
    if (localIUrlChecker == null) {
      return null;
    }
    return localIUrlChecker.checkUrl(paramString);
  }
  
  public static int bf()
  {
    com.cleanmaster.boost.process.util.d.a();
    if (com.cleanmaster.boost.process.util.d.b())
    {
      com.cleanmaster.boost.process.util.d.a();
      return com.cleanmaster.base.util.system.k.b(0L).d;
    }
    return com.cleanmaster.boost.process.util.f.c();
  }
  
  public static boolean bf(String paramString)
  {
    HashSet localHashSet = new HashSet();
    localHashSet.addAll(db());
    boolean bool = localHashSet.contains(paramString.trim());
    new StringBuilder(" NEW PUSH: ").append(paramString).append(" EXISTED:").append(bool);
    com.cmcm.onews.sdk.d.h();
    return bool;
  }
  
  public static void bg(String paramString)
  {
    if (paramString != null) {}
    for (;;)
    {
      Log.i("[myTarget]", paramString);
      return;
      paramString = "null";
    }
  }
  
  public static boolean bg()
  {
    if (cq()) {
      return android.support.v4.a.c.b("cloud_notification_clean_unit", "notification_bad_notifi_antidisturb_new_switch");
    }
    return false;
  }
  
  public static int bh()
  {
    int i1 = com.cleanmaster.phototrims.b.a.a.a.a().a("cloud_config_is_login_front", -1);
    if (i1 == 1) {
      return 2;
    }
    if (i1 == 2) {
      return 3;
    }
    return 1;
  }
  
  private static long bh(String paramString)
  {
    try
    {
      long l1 = org.apache.http.impl.cookie.DateUtils.parseDate(paramString).getTime();
      return l1;
    }
    catch (DateParseException paramString) {}
    return 0L;
  }
  
  private static String bi(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return "";
    }
    if (paramString == null) {
      return "";
    }
    if (paramString.length() == 0) {
      return "";
    }
    paramString = new BigInteger(paramString.getBytes());
    return new BigInteger("011100100010101001110101110110").xor(paramString).toString(16);
  }
  
  public static boolean bi()
  {
    return bj() == 30;
  }
  
  public static int bj()
  {
    if (!com.cleanmaster.base.util.system.m.a(com.keniu.security.d.a().getApplicationContext())) {
      return 32;
    }
    if (com.cleanmaster.security.scan.b.a.b()) {
      return 33;
    }
    int i1 = Q();
    if ((401 <= i1) && (i1 <= 444)) {
      return 30;
    }
    return 36;
  }
  
  private static String bj(String paramString)
  {
    int i3 = paramString.indexOf("{");
    int i1 = paramString.indexOf("}");
    String str = paramString;
    int i2;
    if (i3 != -1)
    {
      str = paramString;
      if (i1 != -1)
      {
        i2 = i1 + 1;
        i1 = i2;
        if (i2 > paramString.length()) {
          i1 = paramString.length();
        }
        str = paramString.replace(paramString.substring(i3, i1), " -ADDR- ").trim();
      }
    }
    i3 = str.indexOf("@");
    paramString = str;
    if (i3 != -1)
    {
      i2 = i3 + 9;
      i1 = i2;
      if (i2 > str.length()) {
        i1 = str.length();
      }
      paramString = str.replace(str.substring(i3, i1), " -ADDR- ").trim();
    }
    str = paramString;
    if (paramString.indexOf("(") != -1)
    {
      i1 = paramString.lastIndexOf(":");
      str = paramString;
      if (i1 != -1) {
        str = paramString.substring(0, i1).trim();
      }
    }
    return str;
  }
  
  public static boolean bk()
  {
    return cT() == 20;
  }
  
  private static boolean bk(String paramString)
  {
    boolean bool = false;
    try
    {
      if (paramString.contains("@")) {
        bool = paramString.trim().matches("^\\s*\\w+(?:\\.{0,1}[\\w-]+)*@[a-zA-Z0-9]+(?:[-.][a-zA-Z0-9]+)*\\.[a-zA-Z]+\\s*$");
      }
      return bool;
    }
    catch (Exception paramString) {}
    return false;
  }
  
  private static List<Long> bl(String paramString)
  {
    ArrayList localArrayList = new ArrayList();
    if (!TextUtils.isEmpty(paramString))
    {
      int i2 = paramString.length();
      int i1 = 0;
      for (;;)
      {
        if (i1 < i2 / 4 + 1)
        {
          int i3 = Math.min(4, i2 - (i1 << 2));
          Object localObject;
          if (i3 != 0) {
            localObject = paramString.substring(i2 - (i1 << 2) - i3, i2 - (i1 << 2));
          }
          try
          {
            localObject = Long.valueOf(Long.parseLong((String)localObject, 16));
            if (localObject == null)
            {
              localArrayList.clear();
              return localArrayList;
            }
            localArrayList.add(localObject);
            i1 += 1;
          }
          catch (NumberFormatException paramString)
          {
            paramString.printStackTrace();
            localArrayList.clear();
          }
        }
      }
    }
    return localArrayList;
  }
  
  public static boolean bl()
  {
    int i1 = cT();
    com.cleanmaster.kinfoc.p.a().a("cm_pri_hole", "optype=" + i1, true);
    if (i1 != 20) {
      OpLog.d("Security", "check LooperHole faild # Faild Code = " + i1);
    }
    return i1 == 20;
  }
  
  private static String bm(String paramString)
  {
    int i1 = paramString.lastIndexOf('.');
    String str;
    if (i1 == -1) {
      str = "*/*";
    }
    do
    {
      return str;
      str = paramString.substring(i1 + 1, paramString.length()).toLowerCase();
      paramString = com.cleanmaster.base.util.f.c.a(str);
      if (str.equals("mtz")) {
        paramString = "application/miui-mtz";
      }
      str = paramString;
    } while (paramString != null);
    return "*/*";
  }
  
  public static boolean bm()
  {
    if (!com.cleanmaster.base.util.system.m.a(com.keniu.security.d.a().getApplicationContext())) {}
    while ((!com.cleanmaster.security.utils.g.a()) || (bn()) || (com.cleanmaster.configmanager.d.a(com.keniu.security.d.a().getApplicationContext()).a("ignore_promotion_duba", false))) {
      return false;
    }
    return true;
  }
  
  public static boolean bn()
  {
    return (com.cleanmaster.base.util.system.m.a(com.keniu.security.d.a(), "com.cleanmaster.security_cn")) || (com.cleanmaster.base.util.system.m.a(com.keniu.security.d.a(), "com.cleanmaster.security"));
  }
  
  /* Error */
  private static boolean bn(String paramString)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_2
    //   2: aconst_null
    //   3: astore_3
    //   4: aconst_null
    //   5: astore_1
    //   6: iconst_2
    //   7: newarray byte
    //   9: astore 4
    //   11: new 1167	java/io/FileInputStream
    //   14: dup
    //   15: new 464	java/io/File
    //   18: dup
    //   19: aload_0
    //   20: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   23: invokespecial 1170	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   26: astore_0
    //   27: aload_0
    //   28: aload 4
    //   30: invokevirtual 1177	java/io/FileInputStream:read	([B)I
    //   33: pop
    //   34: aload_0
    //   35: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   38: aload_1
    //   39: astore_0
    //   40: aload 4
    //   42: iconst_0
    //   43: baload
    //   44: bipush 80
    //   46: if_icmpne +17 -> 63
    //   49: aload_1
    //   50: astore_0
    //   51: aload 4
    //   53: iconst_1
    //   54: baload
    //   55: bipush 75
    //   57: if_icmpne +6 -> 63
    //   60: iconst_1
    //   61: ireturn
    //   62: astore_1
    //   63: aload_0
    //   64: ifnull +7 -> 71
    //   67: aload_0
    //   68: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   71: iconst_0
    //   72: ireturn
    //   73: astore_0
    //   74: aload_0
    //   75: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   78: goto -7 -> 71
    //   81: astore_0
    //   82: aload_2
    //   83: astore_0
    //   84: aload_0
    //   85: ifnull -14 -> 71
    //   88: aload_0
    //   89: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   92: goto -21 -> 71
    //   95: astore_0
    //   96: aload_0
    //   97: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   100: goto -29 -> 71
    //   103: astore_0
    //   104: aload_3
    //   105: astore_1
    //   106: aload_1
    //   107: ifnull +7 -> 114
    //   110: aload_1
    //   111: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   114: aload_0
    //   115: athrow
    //   116: astore_1
    //   117: aload_1
    //   118: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   121: goto -7 -> 114
    //   124: astore_2
    //   125: aload_0
    //   126: astore_1
    //   127: aload_2
    //   128: astore_0
    //   129: goto -23 -> 106
    //   132: astore_1
    //   133: goto -49 -> 84
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	136	0	paramString	String
    //   5	45	1	localObject1	Object
    //   62	1	1	localException	Exception
    //   105	6	1	localObject2	Object
    //   116	2	1	localIOException	IOException
    //   126	1	1	str	String
    //   132	1	1	localFileNotFoundException	FileNotFoundException
    //   1	82	2	localObject3	Object
    //   124	4	2	localObject4	Object
    //   3	102	3	localObject5	Object
    //   9	43	4	arrayOfByte	byte[]
    // Exception table:
    //   from	to	target	type
    //   27	38	62	java/lang/Exception
    //   67	71	73	java/io/IOException
    //   11	27	81	java/io/FileNotFoundException
    //   88	92	95	java/io/IOException
    //   11	27	103	finally
    //   110	114	116	java/io/IOException
    //   27	38	124	finally
    //   27	38	132	java/io/FileNotFoundException
  }
  
  private static String bo(String paramString)
  {
    try
    {
      paramString = new AntiVirusFunc().a(com.cleanmaster.base.util.system.m.e(com.keniu.security.d.a().getApplicationContext(), paramString).publicSourceDir);
      return paramString;
    }
    catch (Throwable paramString) {}
    return null;
  }
  
  public static boolean bo()
  {
    return com.cleanmaster.base.util.system.m.a(com.keniu.security.d.a(), "com.ksmobile.launcher");
  }
  
  private static String bp(String paramString)
  {
    try
    {
      paramString = URLEncoder.encode(paramString, "UTF-8").replace("+", "%20").replace("*", "%2A");
      return paramString;
    }
    catch (UnsupportedEncodingException paramString)
    {
      throw new OpensnsException(1804, paramString);
    }
  }
  
  public static boolean bp()
  {
    return com.cleanmaster.base.util.system.m.a(com.keniu.security.d.a(), "com.cmcm.locker");
  }
  
  private static String bq(String paramString)
  {
    StringBuilder localStringBuilder;
    try
    {
      paramString = MessageDigest.getInstance("MD5").digest(paramString.getBytes());
      localStringBuilder = new StringBuilder();
      int i2 = paramString.length;
      int i1 = 0;
      while (i1 < i2)
      {
        localStringBuilder.append(String.format("%1$02x", new Object[] { Integer.valueOf(paramString[i1] & 0xFF) }));
        i1 += 1;
      }
    }
    catch (NoSuchAlgorithmException paramString)
    {
      for (;;)
      {
        paramString = new byte[16];
      }
    }
    return localStringBuilder.toString();
  }
  
  public static boolean bq()
  {
    try
    {
      PackageInfo localPackageInfo = com.keniu.security.d.a().getPackageManager().getPackageInfo("com.cleanmaster.security", 0);
      if (localPackageInfo.versionCode >= 10830000) {
        return true;
      }
      OpLog.d("Privacy", "cms version too low!!! " + localPackageInfo.versionCode);
      return false;
    }
    catch (PackageManager.NameNotFoundException localNameNotFoundException) {}
    return false;
  }
  
  private static String br(String paramString)
  {
    StringBuffer localStringBuffer = new StringBuffer();
    if (paramString.length() % 2 == 0)
    {
      int i1 = 0;
      while (i1 < paramString.length() / 2)
      {
        localStringBuffer.append(Integer.parseInt(paramString.substring(i1, i1 + 1), 16));
        i1 += 1;
      }
    }
    return localStringBuffer.toString();
  }
  
  public static boolean br()
  {
    if ((Build.VERSION.SDK_INT >= 8) && (Build.VERSION.SDK_INT <= 22)) {}
    for (int i1 = 30; i1 == 30; i1 = 36) {
      return true;
    }
    return false;
  }
  
  public static int bs()
  {
    String str1 = Build.MODEL;
    String str2 = SystemProperties.get("ro.build.version.incremental", "unkonw");
    String str3 = Build.BRAND;
    if ("MI 1SC".equals(str1)) {
      return 11;
    }
    if ("MI-ONE Plus".equals(str1)) {
      return 10;
    }
    if ((str1 != null) && (str1.startsWith("MI 2"))) {
      return 12;
    }
    if ((str1 != null) && (str1.startsWith("MI 3"))) {
      return 13;
    }
    if ((str2 != null) && ((str2.startsWith("JHACNA")) || (str2.startsWith("HBJ")))) {
      return 14;
    }
    if ("GT-I9300".equals(str1)) {
      return 21;
    }
    if ("GT-I9500".equals(str1)) {
      return 22;
    }
    if ("GT-N7100".equals(str1)) {
      return 23;
    }
    if ("GT-S7562".equals(str1)) {
      return 24;
    }
    if ("GT-S7572".equals(str1)) {
      return 27;
    }
    if ("GT-S7568".equals(str1)) {
      return 26;
    }
    if ("GT-S7562i".equals(str1)) {
      return 25;
    }
    if ("HTC 606w".equals(str1)) {
      return 30;
    }
    if ((str3 != null) && (str3.toLowerCase().equals("xiaomi"))) {
      return 9;
    }
    return 0;
  }
  
  private static String bs(String paramString)
  {
    if (paramString == null) {
      return null;
    }
    StringBuilder localStringBuilder = new StringBuilder();
    paramString = paramString.toCharArray();
    int i1 = 0;
    while (i1 < paramString.length)
    {
      localStringBuilder.append(Integer.toHexString(paramString[i1]));
      i1 += 1;
    }
    return localStringBuilder.toString();
  }
  
  public static boolean bt()
  {
    try
    {
      String str1 = (String)Class.forName("android.os.SystemProperties").getDeclaredMethod("get", new Class[] { String.class, String.class }).invoke(null, new Object[] { "ro.miui.ui.version.name", "unkonw" });
      if (str1.equals("V5")) {
        return true;
      }
    }
    catch (Exception localException)
    {
      for (;;)
      {
        localException.printStackTrace();
        String str2 = "";
      }
    }
    return false;
  }
  
  private static com.cmnow.weather.a.aw[] bt(String paramString)
  {
    if (paramString == null) {
      return null;
    }
    ArrayList localArrayList = new ArrayList();
    int i2 = 1;
    int i1 = 0;
    while (i2 < paramString.length())
    {
      i2 = e(paramString, i2);
      String str = paramString.substring(i1, i2).trim();
      if (str.length() > 0)
      {
        float[] arrayOfFloat = bu(str);
        a(localArrayList, str.charAt(0), arrayOfFloat);
      }
      int i3 = i2 + 1;
      i1 = i2;
      i2 = i3;
    }
    if ((i2 - i1 == 1) && (i1 < paramString.length())) {
      a(localArrayList, paramString.charAt(i1), new float[0]);
    }
    return (com.cmnow.weather.a.aw[])localArrayList.toArray(new com.cmnow.weather.a.aw[localArrayList.size()]);
  }
  
  public static boolean bu()
  {
    try
    {
      String str1 = (String)Class.forName("android.os.SystemProperties").getDeclaredMethod("get", new Class[] { String.class, String.class }).invoke(null, new Object[] { "ro.miui.ui.version.name", "unkonw" });
      if (str1.equals("V6")) {
        return true;
      }
    }
    catch (Exception localException)
    {
      for (;;)
      {
        localException.printStackTrace();
        String str2 = "";
      }
    }
    return false;
  }
  
  private static float[] bu(String paramString)
  {
    int i1;
    if (paramString.charAt(0) == 'z')
    {
      i1 = 1;
      if (paramString.charAt(0) != 'Z') {
        break label39;
      }
    }
    label39:
    for (int i2 = 1;; i2 = 0)
    {
      if ((i1 | i2) == 0) {
        break label44;
      }
      return new float[0];
      i1 = 0;
      break;
    }
    for (;;)
    {
      label44:
      int i6;
      try
      {
        float[] arrayOfFloat = new float[paramString.length()];
        localObject = new com.cmnow.weather.a.av((byte)0);
        int i8 = paramString.length();
        i5 = 1;
        i4 = 0;
        if (i5 < i8)
        {
          ((com.cmnow.weather.a.av)localObject).b = false;
          i3 = 0;
          i1 = 0;
          i2 = 0;
          i6 = i5;
          if (i6 >= paramString.length()) {}
        }
        switch (paramString.charAt(i6))
        {
        case '-': 
          if ((i6 == i5) || (i3 != 0)) {
            break label365;
          }
          ((com.cmnow.weather.a.av)localObject).b = true;
          i2 = i1;
          i3 = 1;
          i1 = 0;
          break label375;
          label198:
          ((com.cmnow.weather.a.av)localObject).b = true;
          i2 = i1;
          i3 = 1;
          i1 = 0;
          break label375;
          ((com.cmnow.weather.a.av)localObject).a = i6;
          i2 = ((com.cmnow.weather.a.av)localObject).a;
          if (i5 >= i2) {
            break label359;
          }
          i1 = i4 + 1;
          arrayOfFloat[i4] = Float.parseFloat(paramString.substring(i5, i2));
          if (!((com.cmnow.weather.a.av)localObject).b) {
            break label433;
          }
          i5 = i2;
          i4 = i1;
          continue;
          if (i4 < 0) {
            throw new IllegalArgumentException();
          }
          break;
        }
      }
      catch (NumberFormatException localNumberFormatException)
      {
        throw new RuntimeException("error in parsing \"" + paramString + "\"", localNumberFormatException);
      }
      i1 = localNumberFormatException.length;
      if (i1 < 0) {
        throw new ArrayIndexOutOfBoundsException();
      }
      i1 = Math.min(i4, i1);
      Object localObject = new float[i4];
      System.arraycopy(localNumberFormatException, 0, localObject, 0, i1);
      return localObject;
      label359:
      i1 = i4;
      continue;
      label365:
      int i7 = 0;
      int i3 = i2;
      i2 = i1;
      i1 = i7;
      for (;;)
      {
        label375:
        if (i3 != 0) {
          break label431;
        }
        i7 = i6 + 1;
        i6 = i1;
        i1 = i2;
        i2 = i3;
        i3 = i6;
        i6 = i7;
        break;
        i2 = i1;
        i3 = 1;
        i1 = 0;
        continue;
        if (i1 != 0) {
          break label198;
        }
        i1 = 0;
        i3 = i2;
        i2 = 1;
        continue;
        i3 = i2;
        i2 = i1;
        i1 = 1;
      }
      label431:
      continue;
      label433:
      int i5 = i2 + 1;
      int i4 = i1;
    }
  }
  
  public static boolean bv()
  {
    boolean bool = true;
    if (Build.VERSION.SDK_INT >= 19)
    {
      if (com.cleanmaster.i.a.a) {
        com.cleanmaster.i.a.a("Utils", "isFloatWindowOpAllowed >= 19");
      }
      bool = cW();
    }
    do
    {
      for (;;)
      {
        return bool;
        if (bt())
        {
          if (com.cleanmaster.i.a.a) {
            com.cleanmaster.i.a.a("Utils", "isFloatWindowOpAllowed isMIUIV5");
          }
          Context localContext = com.keniu.security.d.a();
          String str = localContext.getPackageName();
          try
          {
            int i1 = localContext.getPackageManager().getPackageInfo(str, 0).applicationInfo.flags;
            if ((i1 & 0x8000000) == 0) {
              return false;
            }
          }
          catch (Throwable localThrowable) {}
        }
      }
    } while (!com.cleanmaster.i.a.a);
    com.cleanmaster.i.a.a("Utils", "isFloatWindowOpAllowed others true");
    return true;
  }
  
  private static boolean bv(String paramString)
  {
    return Pattern.compile("-?[0-9]+.?[0-9]*").matcher(paramString).matches();
  }
  
  public static void bw()
  {
    com.cleanmaster.configmanager.d.a(com.keniu.security.d.a().getApplicationContext()).b("memory_used_notification_popup_time", System.currentTimeMillis());
  }
  
  private static void bw(String paramString)
  {
    com.google.android.gms.tagmanager.ah.a(paramString);
    throw new zzqp.zzg(paramString);
  }
  
  private static String bx(String paramString)
  {
    StringBuffer localStringBuffer = new StringBuffer();
    int i1 = 0;
    if (i1 < paramString.length())
    {
      char c1 = paramString.charAt(i1);
      if (i1 == 0) {
        localStringBuffer.append(Character.toLowerCase(c1));
      }
      for (;;)
      {
        i1 += 1;
        break;
        if (Character.isUpperCase(c1)) {
          localStringBuffer.append('_').append(Character.toLowerCase(c1));
        } else {
          localStringBuffer.append(c1);
        }
      }
    }
    return localStringBuffer.toString();
  }
  
  public static boolean bx()
  {
    com.cleanmaster.configmanager.d localD = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a().getApplicationContext());
    Long localLong = Long.valueOf(localD.a("memory_used_notification_popup_time", 0L));
    if (-1L == localLong.longValue()) {}
    long l1;
    long l2;
    do
    {
      return true;
      l1 = System.currentTimeMillis();
      l2 = localD.J();
    } while (l1 - localLong.longValue() >= l2);
    return false;
  }
  
  public static int by()
  {
    Calendar localCalendar = Calendar.getInstance();
    long l1 = TimeUnit.HOURS.toSeconds(localCalendar.get(11));
    return (int)(TimeUnit.MINUTES.toSeconds(localCalendar.get(12)) + l1);
  }
  
  private static String by(String paramString)
  {
    int i2 = paramString.length();
    StringBuilder localStringBuilder = new StringBuilder(i2);
    int i1 = 0;
    if (i1 < i2)
    {
      char c1 = paramString.charAt(i1);
      if ((c1 >= ' ') && (c1 <= '~') && (c1 != '"') && (c1 != '\'')) {
        localStringBuilder.append(c1);
      }
      for (;;)
      {
        i1 += 1;
        break;
        localStringBuilder.append(String.format("\\u%04x", new Object[] { Integer.valueOf(c1) }));
      }
    }
    return localStringBuilder.toString();
  }
  
  private static long bz(String paramString)
  {
    try
    {
      long l1 = org.apache.http.impl.cookie.DateUtils.parseDate(paramString).getTime();
      return l1;
    }
    catch (DateParseException paramString) {}
    return 0L;
  }
  
  public static boolean bz()
  {
    long l1 = com.cleanmaster.configmanager.h.a(com.keniu.security.d.a()).a("sys_cmlocker_guide_ignored_time", 0L);
    int i1 = android.support.v4.app.f.a.a("cmlocker_security_promot", "cmlocker_security_promot_ignore_time", 12);
    return System.currentTimeMillis() - l1 >= i1 * 3600000L;
  }
  
  public static int c(long paramLong)
  {
    Date localDate2 = new Date(System.currentTimeMillis());
    Date localDate1 = new Date(paramLong);
    localDate2 = new Date(localDate2.getYear(), localDate2.getMonth(), localDate2.getDate(), 0, 0, 0);
    localDate1 = new Date(localDate1.getYear(), localDate1.getMonth(), localDate1.getDate(), 0, 0, 0);
    paramLong = localDate2.getTime() - localDate1.getTime();
    if (paramLong < 0L) {
      return -1;
    }
    return (int)(paramLong / 86400000L);
  }
  
  public static int c(Context paramContext, float paramFloat)
  {
    return (int)a(paramContext, 6, paramFloat, paramContext.getResources().getDisplayMetrics());
  }
  
  public static int c(View paramView)
  {
    if (!L) {}
    try
    {
      Field localField = View.class.getDeclaredField("mMinHeight");
      K = localField;
      localField.setAccessible(true);
      L = true;
      if (K != null) {
        try
        {
          int i1 = ((Integer)K.get(paramView)).intValue();
          return i1;
        }
        catch (Exception paramView) {}
      }
      return 0;
    }
    catch (NoSuchFieldException localNoSuchFieldException)
    {
      for (;;) {}
    }
  }
  
  private static int c(com.facebook.internal.d paramD)
  {
    Object localObject = com.facebook.f.j();
    String str = paramD.getAction();
    localObject = com.facebook.internal.w.a((String)localObject, str, paramD.name());
    if (localObject != null) {}
    for (paramD = ((w.a)localObject).d;; paramD = (com.facebook.internal.d)localObject)
    {
      return com.facebook.internal.r.a(str, paramD);
      localObject = new int[1];
      localObject[0] = paramD.getMinVersion();
    }
  }
  
  public static int c(String paramString1, String paramString2, int paramInt)
  {
    paramString1 = e(paramString1, paramString2, Integer.toString(paramInt));
    if ((paramString1 == null) || (paramString1.length() <= 0)) {
      return paramInt;
    }
    try
    {
      int i1 = Integer.parseInt(paramString1);
      return i1;
    }
    catch (NumberFormatException paramString1)
    {
      paramString1.printStackTrace();
      com.cleanmaster.base.crash.c.e().a(paramString1, false);
    }
    return paramInt;
  }
  
  public static int c(Collection<String> paramCollection)
  {
    int i2 = 0;
    int i1 = 0;
    int i3 = i2;
    if (paramCollection != null)
    {
      i3 = i2;
      if (paramCollection.size() > 0)
      {
        String[] arrayOfString = AutostartDefine.c;
        i2 = 0;
        for (;;)
        {
          i3 = i1;
          if (i2 >= 20) {
            break;
          }
          i3 = i1;
          if (paramCollection.contains(AutostartDefine.c[i2])) {
            i3 = i1 | 1 << i2;
          }
          i2 += 1;
          i1 = i3;
        }
      }
    }
    return i3;
  }
  
  private static int c(byte[] paramArrayOfByte)
  {
    if ((paramArrayOfByte == null) || (paramArrayOfByte.length <= 0)) {
      return 0;
    }
    CRC32 localCRC32 = new CRC32();
    localCRC32.update(paramArrayOfByte);
    return (int)localCRC32.getValue();
  }
  
  private static long c(long paramLong, int paramInt)
  {
    long l1;
    if (paramInt == 0) {
      l1 = 1L;
    }
    do
    {
      return l1;
      l1 = paramLong;
    } while (paramInt == 1);
    if (paramInt % 2 == 0) {
      return c(paramLong * paramLong % 1073807359L, paramInt / 2) % 1073807359L;
    }
    return c(paramLong * paramLong % 1073807359L, paramInt / 2) % 1073807359L * paramLong % 1073807359L;
  }
  
  public static Intent c(File paramFile)
  {
    if (!paramFile.exists()) {
      return null;
    }
    Intent localIntent = new Intent("android.intent.action.VIEW");
    localIntent.addFlags(67108864);
    localIntent.putExtra("oneshot", 0);
    localIntent.putExtra("configchange", 0);
    localIntent.setDataAndType(Uri.fromFile(paramFile), "video/*");
    return localIntent;
  }
  
  /* Error */
  private static ActivityInfo c(Context paramContext, Intent paramIntent)
  {
    // Byte code:
    //   0: ldc 2
    //   2: monitorenter
    //   3: aload_0
    //   4: invokevirtual 132	android/content/Context:getPackageManager	()Landroid/content/pm/PackageManager;
    //   7: aload_1
    //   8: ldc_w 1813
    //   11: invokevirtual 11655	android/content/pm/PackageManager:resolveActivity	(Landroid/content/Intent;I)Landroid/content/pm/ResolveInfo;
    //   14: astore_3
    //   15: aload_3
    //   16: ifnull +30 -> 46
    //   19: aload_3
    //   20: getfield 1823	android/content/pm/ResolveInfo:activityInfo	Landroid/content/pm/ActivityInfo;
    //   23: astore_3
    //   24: aload_3
    //   25: getfield 8017	android/content/pm/ActivityInfo:name	Ljava/lang/String;
    //   28: ldc_w 14338
    //   31: invokevirtual 450	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   34: istore_2
    //   35: iload_2
    //   36: ifne +10 -> 46
    //   39: aload_3
    //   40: astore_0
    //   41: ldc 2
    //   43: monitorexit
    //   44: aload_0
    //   45: areturn
    //   46: aload_0
    //   47: invokevirtual 132	android/content/Context:getPackageManager	()Landroid/content/pm/PackageManager;
    //   50: aload_1
    //   51: ldc_w 1813
    //   54: invokevirtual 1817	android/content/pm/PackageManager:queryIntentActivities	(Landroid/content/Intent;I)Ljava/util/List;
    //   57: astore_0
    //   58: aload_0
    //   59: invokeinterface 2547 1 0
    //   64: ifne +25 -> 89
    //   67: aload_0
    //   68: iconst_0
    //   69: invokeinterface 1775 2 0
    //   74: checkcast 1819	android/content/pm/ResolveInfo
    //   77: getfield 1823	android/content/pm/ResolveInfo:activityInfo	Landroid/content/pm/ActivityInfo;
    //   80: astore_0
    //   81: goto -40 -> 41
    //   84: astore_0
    //   85: aload_0
    //   86: invokevirtual 576	java/lang/Exception:printStackTrace	()V
    //   89: aconst_null
    //   90: astore_0
    //   91: goto -50 -> 41
    //   94: astore_0
    //   95: ldc 2
    //   97: monitorexit
    //   98: aload_0
    //   99: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	100	0	paramContext	Context
    //   0	100	1	paramIntent	Intent
    //   34	2	2	bool	boolean
    //   14	26	3	localObject	Object
    // Exception table:
    //   from	to	target	type
    //   46	81	84	java/lang/Exception
    //   3	15	94	finally
    //   19	35	94	finally
    //   46	81	94	finally
    //   85	89	94	finally
  }
  
  public static Bitmap c(String paramString, int paramInt1, int paramInt2)
  {
    if ((paramString == null) || (paramString.length() <= 0)) {}
    for (;;)
    {
      return null;
      BitmapFactory.Options localOptions = new BitmapFactory.Options();
      localOptions.inJustDecodeBounds = true;
      try
      {
        localOptions.inJustDecodeBounds = true;
        localOptions.inPreferredConfig = Bitmap.Config.ARGB_8888;
        BitmapFactory.decodeFile(paramString, localOptions);
        if ((!localOptions.mCancel) && (localOptions.outWidth != -1) && (localOptions.outHeight != -1))
        {
          localOptions.inSampleSize = a(localOptions, paramInt1 * paramInt2);
          localOptions.inJustDecodeBounds = false;
          localOptions.inScaled = false;
          localOptions.inMutable = false;
          Bitmap localBitmap1 = a(paramString, localOptions);
          return localBitmap1;
        }
      }
      catch (OutOfMemoryError localOutOfMemoryError1)
      {
        try
        {
          localOptions.inSampleSize += 1;
          localOptions.inJustDecodeBounds = false;
          Bitmap localBitmap2 = a(paramString, localOptions);
          return localBitmap2;
        }
        catch (OutOfMemoryError localOutOfMemoryError2)
        {
          try
          {
            localOptions.inSampleSize += 1;
            localOptions.inJustDecodeBounds = false;
            paramString = a(paramString, localOptions);
            return paramString;
          }
          catch (OutOfMemoryError paramString)
          {
            System.gc();
          }
        }
      }
    }
    return null;
  }
  
  private static com.cleanmaster.cleancloud.core.falseproc.q c(SQLiteDatabase paramSQLiteDatabase)
  {
    Object localObject = null;
    SQLiteDatabase localSQLiteDatabase = null;
    com.cleanmaster.cleancloud.core.falseproc.q localQ = new com.cleanmaster.cleancloud.core.falseproc.q();
    for (;;)
    {
      try
      {
        paramSQLiteDatabase = paramSQLiteDatabase.rawQuery("select name,version from data_versions", null);
        if (paramSQLiteDatabase == null) {
          break label208;
        }
      }
      catch (SQLiteException paramSQLiteDatabase)
      {
        localObject = localSQLiteDatabase;
        localQ.a = -4;
        localObject = localSQLiteDatabase;
        localQ.b = -4;
        localObject = localSQLiteDatabase;
        localQ.c = -4;
        localObject = localSQLiteDatabase;
        paramSQLiteDatabase.printStackTrace();
        if (localSQLiteDatabase == null) {
          continue;
        }
        localSQLiteDatabase.close();
        return localQ;
        localSQLiteDatabase = paramSQLiteDatabase;
        localObject = paramSQLiteDatabase;
        if (str.compareTo("pkgquery") != 0) {
          break label180;
        }
        localSQLiteDatabase = paramSQLiteDatabase;
        localObject = paramSQLiteDatabase;
        localQ.b = i1;
        continue;
      }
      finally
      {
        if (localObject == null) {
          continue;
        }
        ((Cursor)localObject).close();
      }
      localSQLiteDatabase = paramSQLiteDatabase;
      localObject = paramSQLiteDatabase;
      if (!paramSQLiteDatabase.moveToNext()) {
        break label208;
      }
      localSQLiteDatabase = paramSQLiteDatabase;
      localObject = paramSQLiteDatabase;
      str = paramSQLiteDatabase.getString(0);
      localSQLiteDatabase = paramSQLiteDatabase;
      localObject = paramSQLiteDatabase;
      i1 = paramSQLiteDatabase.getInt(1);
      localSQLiteDatabase = paramSQLiteDatabase;
      localObject = paramSQLiteDatabase;
      if (str.compareTo("dirquery") != 0) {
        continue;
      }
      localSQLiteDatabase = paramSQLiteDatabase;
      localObject = paramSQLiteDatabase;
      localQ.a = i1;
    }
    label180:
    label208:
    while (paramSQLiteDatabase == null)
    {
      String str;
      int i1;
      localSQLiteDatabase = paramSQLiteDatabase;
      localObject = paramSQLiteDatabase;
      if (str.compareTo("repkgquery") != 0) {
        break;
      }
      localSQLiteDatabase = paramSQLiteDatabase;
      localObject = paramSQLiteDatabase;
      localQ.c = i1;
      break;
    }
    paramSQLiteDatabase.close();
    return localQ;
  }
  
  public static com.cleanmaster.junk.bean.m c(ArrayList<String> paramArrayList)
  {
    if (paramArrayList == null) {
      return null;
    }
    Iterator localIterator = paramArrayList.iterator();
    paramArrayList = null;
    while (localIterator.hasNext())
    {
      com.cleanmaster.junk.bean.m localM = k(new File((String)localIterator.next()));
      if (localM != null) {
        if (paramArrayList != null)
        {
          paramArrayList.a += localM.a;
          paramArrayList.b += localM.b;
        }
        else
        {
          paramArrayList = localM;
        }
      }
    }
    return paramArrayList;
  }
  
  /* Error */
  public static com.cleanmaster.security.scan.ApkResultImpl c(String paramString, boolean paramBoolean)
  {
    // Byte code:
    //   0: aload_0
    //   1: invokestatic 166	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   4: ifeq +5 -> 9
    //   7: aconst_null
    //   8: areturn
    //   9: getstatic 336	android/os/Build$VERSION:SDK_INT	I
    //   12: bipush 21
    //   14: if_icmplt +347 -> 361
    //   17: aload_0
    //   18: invokestatic 12207	LibcoreWrapper/a:bn	(Ljava/lang/String;)Z
    //   21: ifeq +442 -> 463
    //   24: new 14365	com/cleanmaster/security/scan/a/a
    //   27: dup
    //   28: new 464	java/io/File
    //   31: dup
    //   32: aload_0
    //   33: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   36: invokespecial 14366	com/cleanmaster/security/scan/a/a:<init>	(Ljava/io/File;)V
    //   39: astore 4
    //   41: iconst_0
    //   42: istore_2
    //   43: aload 4
    //   45: ifnonnull +211 -> 256
    //   48: iconst_1
    //   49: istore_3
    //   50: iload_1
    //   51: ifeq +210 -> 261
    //   54: iload_3
    //   55: ifeq +206 -> 261
    //   58: aconst_null
    //   59: astore 4
    //   61: aload 4
    //   63: ifnonnull +397 -> 460
    //   66: iload_2
    //   67: ifeq +393 -> 460
    //   70: invokestatic 144	com/keniu/security/d:a	()Landroid/content/Context;
    //   73: invokevirtual 147	android/content/Context:getApplicationContext	()Landroid/content/Context;
    //   76: astore 4
    //   78: aload 4
    //   80: ifnull +371 -> 451
    //   83: aload 4
    //   85: invokevirtual 132	android/content/Context:getPackageManager	()Landroid/content/pm/PackageManager;
    //   88: astore 4
    //   90: aload 4
    //   92: ifnull +279 -> 371
    //   95: aload 4
    //   97: aload_0
    //   98: sipush 128
    //   101: invokevirtual 14369	android/content/pm/PackageManager:getPackageArchiveInfo	(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;
    //   104: astore 6
    //   106: aload 4
    //   108: astore 5
    //   110: aload 6
    //   112: astore 4
    //   114: aload 5
    //   116: ifnull +30 -> 146
    //   119: aload 4
    //   121: ifnull +25 -> 146
    //   124: aload 4
    //   126: getfield 1439	android/content/pm/PackageInfo:applicationInfo	Landroid/content/pm/ApplicationInfo;
    //   129: ifnull +17 -> 146
    //   132: aload 4
    //   134: getfield 1439	android/content/pm/PackageInfo:applicationInfo	Landroid/content/pm/ApplicationInfo;
    //   137: getfield 872	android/content/pm/ApplicationInfo:packageName	Ljava/lang/String;
    //   140: invokestatic 166	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   143: ifeq +238 -> 381
    //   146: iconst_1
    //   147: istore_2
    //   148: iload_1
    //   149: ifeq +7 -> 156
    //   152: iload_2
    //   153: ifne -146 -> 7
    //   156: new 14371	com/cleanmaster/security/scan/ApkResultImpl
    //   159: dup
    //   160: invokespecial 14372	com/cleanmaster/security/scan/ApkResultImpl:<init>	()V
    //   163: astore 6
    //   165: aload 6
    //   167: aload_0
    //   168: putfield 14373	com/cleanmaster/security/scan/ApkResultImpl:c	Ljava/lang/String;
    //   171: iload_2
    //   172: ifeq +217 -> 389
    //   175: aload 6
    //   177: iconst_0
    //   178: putfield 14374	com/cleanmaster/security/scan/ApkResultImpl:a	Z
    //   181: aload 6
    //   183: aload_0
    //   184: putfield 14375	com/cleanmaster/security/scan/ApkResultImpl:b	Ljava/lang/String;
    //   187: aload_0
    //   188: ldc_w 756
    //   191: invokevirtual 12028	java/lang/String:lastIndexOf	(Ljava/lang/String;)I
    //   194: istore_2
    //   195: iload_2
    //   196: iflt +190 -> 386
    //   199: iload_2
    //   200: iconst_1
    //   201: iadd
    //   202: aload_0
    //   203: invokevirtual 355	java/lang/String:length	()I
    //   206: if_icmpge +180 -> 386
    //   209: aload_0
    //   210: iload_2
    //   211: iconst_1
    //   212: iadd
    //   213: invokevirtual 3349	java/lang/String:substring	(I)Ljava/lang/String;
    //   216: astore_0
    //   217: aload 6
    //   219: aload_0
    //   220: putfield 14376	com/cleanmaster/security/scan/ApkResultImpl:d	Ljava/lang/String;
    //   223: aload 6
    //   225: areturn
    //   226: astore 4
    //   228: iconst_0
    //   229: istore_2
    //   230: aconst_null
    //   231: astore 4
    //   233: goto -190 -> 43
    //   236: astore 4
    //   238: iconst_0
    //   239: istore_2
    //   240: aconst_null
    //   241: astore 4
    //   243: goto -200 -> 43
    //   246: astore 4
    //   248: iconst_1
    //   249: istore_2
    //   250: aconst_null
    //   251: astore 4
    //   253: goto -210 -> 43
    //   256: iconst_0
    //   257: istore_3
    //   258: goto -208 -> 50
    //   261: new 14371	com/cleanmaster/security/scan/ApkResultImpl
    //   264: dup
    //   265: invokespecial 14372	com/cleanmaster/security/scan/ApkResultImpl:<init>	()V
    //   268: astore 5
    //   270: aload 5
    //   272: aload_0
    //   273: putfield 14373	com/cleanmaster/security/scan/ApkResultImpl:c	Ljava/lang/String;
    //   276: iload_3
    //   277: ifeq +56 -> 333
    //   280: aload 5
    //   282: iconst_0
    //   283: putfield 14374	com/cleanmaster/security/scan/ApkResultImpl:a	Z
    //   286: aload 5
    //   288: aload_0
    //   289: putfield 14375	com/cleanmaster/security/scan/ApkResultImpl:b	Ljava/lang/String;
    //   292: aload_0
    //   293: ldc_w 756
    //   296: invokevirtual 12028	java/lang/String:lastIndexOf	(Ljava/lang/String;)I
    //   299: istore_3
    //   300: iload_3
    //   301: iflt +51 -> 352
    //   304: iload_3
    //   305: iconst_1
    //   306: iadd
    //   307: aload_0
    //   308: invokevirtual 355	java/lang/String:length	()I
    //   311: if_icmpge +41 -> 352
    //   314: aload 5
    //   316: aload_0
    //   317: iload_3
    //   318: iconst_1
    //   319: iadd
    //   320: invokevirtual 3349	java/lang/String:substring	(I)Ljava/lang/String;
    //   323: putfield 14376	com/cleanmaster/security/scan/ApkResultImpl:d	Ljava/lang/String;
    //   326: aload 5
    //   328: astore 4
    //   330: goto -269 -> 61
    //   333: aload 5
    //   335: iconst_1
    //   336: putfield 14374	com/cleanmaster/security/scan/ApkResultImpl:a	Z
    //   339: aload 5
    //   341: aload 4
    //   343: getfield 14377	com/cleanmaster/security/scan/a/a:b	Ljava/lang/String;
    //   346: putfield 14375	com/cleanmaster/security/scan/ApkResultImpl:b	Ljava/lang/String;
    //   349: goto -57 -> 292
    //   352: aload 5
    //   354: aload_0
    //   355: putfield 14376	com/cleanmaster/security/scan/ApkResultImpl:d	Ljava/lang/String;
    //   358: goto -32 -> 326
    //   361: iconst_1
    //   362: istore_2
    //   363: aconst_null
    //   364: astore 4
    //   366: goto -305 -> 61
    //   369: astore 5
    //   371: aload 4
    //   373: astore 5
    //   375: aconst_null
    //   376: astore 4
    //   378: goto -264 -> 114
    //   381: iconst_0
    //   382: istore_2
    //   383: goto -235 -> 148
    //   386: goto -169 -> 217
    //   389: aload 6
    //   391: iconst_1
    //   392: putfield 14374	com/cleanmaster/security/scan/ApkResultImpl:a	Z
    //   395: aload 6
    //   397: aload 4
    //   399: getfield 1439	android/content/pm/PackageInfo:applicationInfo	Landroid/content/pm/ApplicationInfo;
    //   402: getfield 872	android/content/pm/ApplicationInfo:packageName	Ljava/lang/String;
    //   405: putfield 14375	com/cleanmaster/security/scan/ApkResultImpl:b	Ljava/lang/String;
    //   408: aload 4
    //   410: getfield 1439	android/content/pm/PackageInfo:applicationInfo	Landroid/content/pm/ApplicationInfo;
    //   413: aload_0
    //   414: putfield 14174	android/content/pm/ApplicationInfo:publicSourceDir	Ljava/lang/String;
    //   417: aload 4
    //   419: getfield 1439	android/content/pm/PackageInfo:applicationInfo	Landroid/content/pm/ApplicationInfo;
    //   422: aload 5
    //   424: invokevirtual 4953	android/content/pm/ApplicationInfo:loadLabel	(Landroid/content/pm/PackageManager;)Ljava/lang/CharSequence;
    //   427: astore_0
    //   428: aload_0
    //   429: ifnull +13 -> 442
    //   432: aload_0
    //   433: invokeinterface 4956 1 0
    //   438: astore_0
    //   439: goto -222 -> 217
    //   442: aload 6
    //   444: getfield 14375	com/cleanmaster/security/scan/ApkResultImpl:b	Ljava/lang/String;
    //   447: astore_0
    //   448: goto -231 -> 217
    //   451: aconst_null
    //   452: astore 4
    //   454: aconst_null
    //   455: astore 5
    //   457: goto -343 -> 114
    //   460: aload 4
    //   462: areturn
    //   463: iconst_0
    //   464: istore_2
    //   465: aconst_null
    //   466: astore 4
    //   468: goto -425 -> 43
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	471	0	paramString	String
    //   0	471	1	paramBoolean	boolean
    //   42	423	2	i1	int
    //   49	271	3	i2	int
    //   39	94	4	localObject1	Object
    //   226	1	4	localZipException	java.util.zip.ZipException
    //   231	1	4	localObject2	Object
    //   236	1	4	localIOException	IOException
    //   241	1	4	localObject3	Object
    //   246	1	4	localArrayIndexOutOfBoundsException	ArrayIndexOutOfBoundsException
    //   251	216	4	localObject4	Object
    //   108	245	5	localObject5	Object
    //   369	1	5	localThrowable	Throwable
    //   373	83	5	localObject6	Object
    //   104	339	6	localObject7	Object
    // Exception table:
    //   from	to	target	type
    //   24	41	226	java/util/zip/ZipException
    //   24	41	236	java/io/IOException
    //   24	41	246	java/lang/ArrayIndexOutOfBoundsException
    //   95	106	369	java/lang/Throwable
  }
  
  public static HourlyForecastData c(JSONObject paramJSONObject)
  {
    int i2 = 0;
    if (paramJSONObject == JSONObject.NULL) {
      return null;
    }
    HourlyForecastData localHourlyForecastData = new HourlyForecastData();
    Object localObject1 = paramJSONObject.optString("h");
    try
    {
      if ((!TextUtils.isEmpty((CharSequence)localObject1)) && (TextUtils.isDigitsOnly((CharSequence)localObject1))) {
        localHourlyForecastData.a = Integer.parseInt((String)localObject1);
      }
      localObject1 = paramJSONObject.optJSONArray("wc");
      if (localObject1 != null)
      {
        localObject2 = new int[((JSONArray)localObject1).length()];
        i1 = 0;
        while (i1 < localObject2.length)
        {
          localObject2[i1] = ((JSONArray)localObject1).optInt(i1);
          i1 += 1;
        }
      }
    }
    catch (NumberFormatException localNumberFormatException)
    {
      Object localObject2;
      int i1;
      for (;;)
      {
        localNumberFormatException.printStackTrace();
      }
      localHourlyForecastData.b = ((int[])localObject2);
      localHourlyForecastData.c = paramJSONObject.optInt("tm");
      localHourlyForecastData.d = paramJSONObject.optInt("tm_f");
      localHourlyForecastData.e = paramJSONObject.optInt("uvi");
      JSONArray localJSONArray = paramJSONObject.optJSONArray("wd");
      if (localJSONArray != null)
      {
        localObject2 = new int[localJSONArray.length()];
        i1 = 0;
        while (i1 < localObject2.length)
        {
          localObject2[i1] = localJSONArray.optInt(i1);
          i1 += 1;
        }
        localHourlyForecastData.f = ((int[])localObject2);
      }
      localJSONArray = paramJSONObject.optJSONArray("ws");
      if (localJSONArray != null)
      {
        localObject2 = new int[localJSONArray.length()];
        i1 = 0;
        while (i1 < localObject2.length)
        {
          localObject2[i1] = localJSONArray.optInt(i1);
          i1 += 1;
        }
        localHourlyForecastData.g = ((int[])localObject2);
      }
      localJSONArray = paramJSONObject.optJSONArray("mph");
      if (localJSONArray != null)
      {
        localObject2 = new String[localJSONArray.length()];
        i1 = 0;
        while (i1 < localObject2.length)
        {
          localObject2[i1] = localJSONArray.optString(i1);
          i1 += 1;
        }
        localHourlyForecastData.h = ((String[])localObject2);
      }
      localJSONArray = paramJSONObject.optJSONArray("kph");
      if (localJSONArray != null)
      {
        localObject2 = new String[localJSONArray.length()];
        i1 = i2;
        while (i1 < localObject2.length)
        {
          localObject2[i1] = localJSONArray.optString(i1);
          i1 += 1;
        }
        localHourlyForecastData.i = ((String[])localObject2);
      }
      localHourlyForecastData.j = paramJSONObject.optString("pop");
    }
    return localHourlyForecastData;
  }
  
  public static ONewsScenario c(Uri paramUri)
  {
    paramUri = paramUri.getQueryParameter("table");
    if (!TextUtils.isEmpty(paramUri)) {
      return ONewsScenario.a(paramUri);
    }
    return ONewsScenario.a((byte)-1);
  }
  
  public static com.google.android.gms.ads.d c(int paramInt1, int paramInt2, String paramString)
  {
    return new com.google.android.gms.ads.d(paramInt1, paramInt2, paramString);
  }
  
  public static com.ksmobile.business.sdk.ui.c c(Bitmap paramBitmap)
  {
    paramBitmap = new com.ksmobile.business.sdk.ui.b(paramBitmap);
    com.ksmobile.business.sdk.ui.c localC = new com.ksmobile.business.sdk.ui.c(paramBitmap);
    paramBitmap.setFilterBitmap(true);
    com.ksmobile.business.sdk.utils.b.a();
    int i1 = (int)com.ksmobile.business.sdk.utils.b.c().getResources().getDimension(2131165282);
    localC.setBounds(0, 0, i1, i1);
    return localC;
  }
  
  public static com.my.target.core.f.b.h c(com.my.target.core.f.b.f paramF, String paramString, com.my.target.core.parsers.a paramA)
  {
    try
    {
      paramF = (com.my.target.core.f.b.h)paramF;
      return paramF;
    }
    catch (Exception paramF)
    {
      a("Unable to cast to standard section field '" + paramString + "', Operation: " + paramA.d + ", Unit: " + paramA.e, paramA, paramF, "Class cast exception");
    }
    return null;
  }
  
  public static com.my.target.nativeads.b.a c(JSONObject paramJSONObject, String paramString, com.my.target.core.parsers.a paramA)
  {
    Object localObject = null;
    paramString = a(paramJSONObject, paramString, paramA, "", false);
    paramJSONObject = localObject;
    if (!TextUtils.isEmpty(paramString)) {
      paramJSONObject = new com.my.target.nativeads.b.a(paramString);
    }
    return paramJSONObject;
  }
  
  private static File c(Context paramContext, com.in2wow.sdk.model.a.a paramA)
  {
    File localFile = null;
    switch (cY()[paramA.b.ordinal()])
    {
    default: 
      paramA = null;
    }
    for (;;)
    {
      if (paramA != null) {
        localFile = new File(com.in2wow.sdk.l.g.a(paramContext).c + paramA);
      }
      return localFile;
      paramA = ((com.in2wow.sdk.model.a.d)paramA).i;
      continue;
      paramA = ((com.in2wow.sdk.model.a.f)paramA).j;
    }
  }
  
  public static CharSequence c(int paramInt1, int paramInt2)
  {
    Context localContext = com.keniu.security.d.a();
    if (localContext == null) {}
    while (paramInt1 <= 0) {
      return null;
    }
    String str = com.cleanmaster.configmanager.d.a(localContext).b(localContext).a();
    int i1 = com.cleanmaster.boost.abnormal.abnormalnotify.r.a(localContext);
    Object localObject1;
    if (i1 > 11) {
      localObject1 = d("process_settings", com.cleanmaster.cloudconfig.f.a("abnormal_notify_normal_freqstart_title_23", str), null);
    }
    for (;;)
    {
      Object localObject3 = localObject1;
      if (TextUtils.isEmpty((CharSequence)localObject1)) {
        localObject3 = d("process_settings", com.cleanmaster.cloudconfig.f.a("abnormal_notify_normal_freqstart_title_" + (paramInt2 + 1), str), null);
      }
      localObject1 = localObject3;
      if (!TextUtils.isEmpty((CharSequence)localObject3)) {}
      try
      {
        localObject1 = String.format((String)localObject3, new Object[] { Integer.valueOf(paramInt1) });
        localObject3 = localObject1;
        if (TextUtils.isEmpty((CharSequence)localObject1))
        {
          if (paramInt1 == 1) {
            localObject3 = localContext.getString(2131296813);
          }
        }
        else
        {
          if (TextUtils.isEmpty((CharSequence)localObject3)) {
            break;
          }
          return Html.fromHtml((String)localObject3);
          if (i1 > 7)
          {
            localObject1 = d("process_settings", com.cleanmaster.cloudconfig.f.a("abnormal_notify_normal_freqstart_title_22", str), null);
            continue;
          }
          if (i1 <= 3) {
            break label252;
          }
          localObject1 = d("process_settings", com.cleanmaster.cloudconfig.f.a("abnormal_notify_normal_freqstart_title_21", str), null);
        }
      }
      catch (Exception localException)
      {
        for (;;)
        {
          localException.printStackTrace();
          localObject2 = null;
          continue;
          localObject3 = localContext.getString(2131296812, new Object[] { String.valueOf(paramInt1) });
        }
        label252:
        Object localObject2 = null;
      }
    }
  }
  
  public static String c(Context paramContext)
  {
    paramContext = com.cleanmaster.configmanager.d.a(paramContext).b(paramContext);
    String str1 = paramContext.M;
    if (!TextUtils.isEmpty(str1))
    {
      String str2 = paramContext.N;
      paramContext = str1;
      if (!TextUtils.isEmpty(str2)) {
        paramContext = str1 + "_" + str2;
      }
      return paramContext.replace(" ", "");
    }
    return null;
  }
  
  public static String c(Context paramContext, long paramLong)
  {
    Object localObject = null;
    float f2;
    StringBuilder localStringBuilder;
    if (paramLong >= 1024L)
    {
      localObject = "KB";
      f2 = (float)(paramLong / 1024.0D);
      float f1 = f2;
      if (f2 >= 1024.0F)
      {
        localObject = "MB";
        f1 = f2 / 1024.0F;
      }
      f2 = f1;
      if (f1 >= 1024.0F)
      {
        localObject = "GB";
        f2 = f1 / 1024.0F;
      }
      localStringBuilder = new StringBuilder(new DecimalFormat("#0.0").format(f2));
      if (localObject == null) {
        break label125;
      }
      localStringBuilder.append((String)localObject);
    }
    for (paramContext = localStringBuilder;; paramContext = (Context)localObject)
    {
      return paramContext.toString();
      f2 = (float)paramLong;
      break;
      label125:
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append(paramContext.getString(2131300249, new Object[] { "1KB" }));
    }
  }
  
  public static String c(Context paramContext, String paramString)
  {
    paramContext = paramContext.getApplicationContext().getPackageManager();
    try
    {
      paramContext = paramContext.getPermissionInfo(paramString, 128).group;
      return paramContext;
    }
    catch (PackageManager.NameNotFoundException paramContext) {}
    return "";
  }
  
  /* Error */
  public static String c(Context paramContext, String paramString1, String paramString2)
  {
    // Byte code:
    //   0: aload_0
    //   1: invokevirtual 5370	android/content/Context:getAssets	()Landroid/content/res/AssetManager;
    //   4: new 149	java/lang/StringBuilder
    //   7: dup
    //   8: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   11: aload_1
    //   12: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15: ldc_w 756
    //   18: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21: aload_2
    //   22: invokevirtual 156	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   28: invokevirtual 5376	android/content/res/AssetManager:open	(Ljava/lang/String;)Ljava/io/InputStream;
    //   31: astore_0
    //   32: new 14474	java/io/ByteArrayOutputStream
    //   35: dup
    //   36: invokespecial 14475	java/io/ByteArrayOutputStream:<init>	()V
    //   39: astore_2
    //   40: sipush 2048
    //   43: newarray byte
    //   45: astore_1
    //   46: aload_0
    //   47: aload_1
    //   48: iconst_0
    //   49: sipush 2048
    //   52: invokevirtual 2426	java/io/InputStream:read	([BII)I
    //   55: istore_3
    //   56: iload_3
    //   57: iconst_m1
    //   58: if_icmpeq +34 -> 92
    //   61: aload_2
    //   62: aload_1
    //   63: iconst_0
    //   64: iload_3
    //   65: invokevirtual 14476	java/io/ByteArrayOutputStream:write	([BII)V
    //   68: goto -22 -> 46
    //   71: astore_1
    //   72: aload_2
    //   73: astore_1
    //   74: aload_0
    //   75: ifnull +7 -> 82
    //   78: aload_0
    //   79: invokevirtual 5380	java/io/InputStream:close	()V
    //   82: aload_1
    //   83: ifnull +7 -> 90
    //   86: aload_1
    //   87: invokevirtual 14477	java/io/ByteArrayOutputStream:close	()V
    //   90: aconst_null
    //   91: areturn
    //   92: aload_2
    //   93: ldc_w 6050
    //   96: invokevirtual 14479	java/io/ByteArrayOutputStream:toString	(Ljava/lang/String;)Ljava/lang/String;
    //   99: astore_1
    //   100: aload_0
    //   101: ifnull +7 -> 108
    //   104: aload_0
    //   105: invokevirtual 5380	java/io/InputStream:close	()V
    //   108: aload_2
    //   109: invokevirtual 14477	java/io/ByteArrayOutputStream:close	()V
    //   112: aload_1
    //   113: areturn
    //   114: astore_0
    //   115: aload_1
    //   116: areturn
    //   117: astore_1
    //   118: aconst_null
    //   119: astore_0
    //   120: aconst_null
    //   121: astore_2
    //   122: aload_0
    //   123: ifnull +7 -> 130
    //   126: aload_0
    //   127: invokevirtual 5380	java/io/InputStream:close	()V
    //   130: aload_2
    //   131: ifnull +7 -> 138
    //   134: aload_2
    //   135: invokevirtual 14477	java/io/ByteArrayOutputStream:close	()V
    //   138: aload_1
    //   139: athrow
    //   140: astore_0
    //   141: goto -33 -> 108
    //   144: astore_0
    //   145: goto -63 -> 82
    //   148: astore_0
    //   149: aconst_null
    //   150: areturn
    //   151: astore_0
    //   152: goto -22 -> 130
    //   155: astore_0
    //   156: goto -18 -> 138
    //   159: astore_1
    //   160: aconst_null
    //   161: astore_2
    //   162: goto -40 -> 122
    //   165: astore_1
    //   166: goto -44 -> 122
    //   169: astore_0
    //   170: aconst_null
    //   171: astore_1
    //   172: aconst_null
    //   173: astore_0
    //   174: goto -100 -> 74
    //   177: astore_1
    //   178: aconst_null
    //   179: astore_1
    //   180: goto -106 -> 74
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	183	0	paramContext	Context
    //   0	183	1	paramString1	String
    //   0	183	2	paramString2	String
    //   55	10	3	i1	int
    // Exception table:
    //   from	to	target	type
    //   40	46	71	java/lang/Exception
    //   46	56	71	java/lang/Exception
    //   61	68	71	java/lang/Exception
    //   92	100	71	java/lang/Exception
    //   108	112	114	java/lang/Exception
    //   0	32	117	finally
    //   104	108	140	java/lang/Exception
    //   78	82	144	java/lang/Exception
    //   86	90	148	java/lang/Exception
    //   126	130	151	java/lang/Exception
    //   134	138	155	java/lang/Exception
    //   32	40	159	finally
    //   40	46	165	finally
    //   46	56	165	finally
    //   61	68	165	finally
    //   92	100	165	finally
    //   0	32	169	java/lang/Exception
    //   32	40	177	java/lang/Exception
  }
  
  public static String c(Object paramObject)
  {
    if (paramObject == null) {
      return "";
    }
    if ((paramObject instanceof String)) {
      return (String)paramObject;
    }
    return paramObject.toString();
  }
  
  public static String c(String paramString, int paramInt)
  {
    if (paramInt <= 0)
    {
      com.google.android.gms.analytics.internal.e.a("index out of range for prefix", paramString);
      return "";
    }
    return paramString + paramInt;
  }
  
  public static String c(String paramString1, String paramString2)
  {
    if ((TextUtils.isEmpty(paramString1)) || (TextUtils.isEmpty(paramString2))) {
      return null;
    }
    return "<font color=" + paramString1 + '>' + paramString2 + "</font>";
  }
  
  public static String c(Map<String, String> paramMap)
  {
    paramMap = (String)paramMap.get("limit");
    if (TextUtils.isEmpty(paramMap)) {
      return "";
    }
    try
    {
      int i1 = Integer.parseInt(paramMap);
      return String.valueOf(i1);
    }
    catch (Exception paramMap) {}
    return "";
  }
  
  public static String c(Node paramNode, String paramString)
  {
    if ((paramNode == null) || (paramString == null)) {}
    do
    {
      return null;
      paramNode = paramNode.getAttributes().getNamedItem(paramString);
    } while (paramNode == null);
    return paramNode.getNodeValue();
  }
  
  private static Field c(Object paramObject, String paramString)
  {
    Class localClass = paramObject.getClass();
    while (localClass != null) {
      try
      {
        Field localField = localClass.getDeclaredField(paramString);
        if (!localField.isAccessible()) {
          localField.setAccessible(true);
        }
        return localField;
      }
      catch (NoSuchFieldException localNoSuchFieldException)
      {
        localClass = localClass.getSuperclass();
      }
    }
    throw new NoSuchFieldException("Field " + paramString + " not found in " + paramObject.getClass());
  }
  
  public static <T> ArrayList<T> c(Parcel paramParcel, int paramInt, Parcelable.Creator<T> paramCreator)
  {
    paramInt = a(paramParcel, paramInt);
    int i1 = paramParcel.dataPosition();
    if (paramInt == 0) {
      return null;
    }
    paramCreator = paramParcel.createTypedArrayList(paramCreator);
    paramParcel.setDataPosition(paramInt + i1);
    return paramCreator;
  }
  
  public static List<com.cleanmaster.ui.resultpage.item.wizard.d> c(Context paramContext, List<com.cleanmaster.ui.resultpage.b.a> paramList)
  {
    if ((paramList == null) || (paramList.isEmpty()) || (paramContext == null)) {
      return null;
    }
    ArrayList localArrayList = new ArrayList();
    int i1 = 0;
    while (i1 < paramList.size())
    {
      localArrayList.add(new com.cleanmaster.ui.resultpage.item.wizard.d((com.cleanmaster.ui.resultpage.b.a)paramList.get(i1), paramContext));
      i1 += 1;
    }
    return localArrayList;
  }
  
  public static List<String> c(com.cleanmaster.boost.boostengine.autostart.a.a paramA)
  {
    if ((paramA == null) || (paramA.f.size() <= 0)) {
      return null;
    }
    ArrayList localArrayList = new ArrayList();
    Iterator localIterator1 = paramA.f.values().iterator();
    while (localIterator1.hasNext())
    {
      Iterator localIterator2 = ((com.cleanmaster.boost.boostengine.autostart.a.a.b)localIterator1.next()).d.iterator();
      while (localIterator2.hasNext())
      {
        String str = (String)localIterator2.next();
        if ((!TextUtils.isEmpty(str)) && ((paramA.i.d == null) || (!paramA.i.d.contains(str)))) {
          localArrayList.add(str);
        }
      }
    }
    return localArrayList;
  }
  
  public static void c(int paramInt)
  {
    if (com.cleanmaster.applocklib.bridge.b.b)
    {
      new StringBuilder("updateRetryTimesForTakePic, times:").append(paramInt);
      com.cleanmaster.applocklib.bridge.b.a();
    }
    Intent localIntent = b(20);
    localIntent.putExtra("retry_times_for_take_pic", paramInt);
    b(localIntent);
  }
  
  public static void c(int paramInt, String paramString)
  {
    int i2 = 1;
    Object localObject = com.keniu.security.d.a();
    int i1;
    if (com.cleanmaster.base.util.system.m.a((Context)localObject, paramString))
    {
      i1 = 2;
      if (!com.cleanmaster.base.util.system.m.a((Context)localObject)) {
        break label110;
      }
    }
    for (;;)
    {
      byte b1 = (byte)aL((Context)localObject);
      com.cleanmaster.ui.game.picks.s localS = new com.cleanmaster.ui.game.picks.s().a(200).c(Integer.valueOf("105106").intValue());
      localObject = paramString;
      if (TextUtils.isEmpty(paramString)) {
        localObject = "n";
      }
      localS.b((String)localObject).f((byte)paramInt).d(i1).b(b1).e(i2).report();
      return;
      i1 = 1;
      break;
      label110:
      i2 = 2;
    }
  }
  
  public static void c(Context paramContext, int paramInt)
  {
    Bundle localBundle = new Bundle();
    localBundle.putBoolean("open_game_center", true);
    a(paramContext, paramInt, localBundle);
  }
  
  public static void c(Context paramContext, int paramInt, com.cleanmaster.base.permission.a paramA)
  {
    if (S(com.keniu.security.c.a()))
    {
      if (paramA != null) {
        paramA.a(true);
      }
      return;
    }
    com.cleanmaster.base.permission.b localB = new com.cleanmaster.base.permission.b();
    localB.a = 3;
    localB.b = paramInt;
    a(paramContext, (byte)9).a(localB, paramA);
  }
  
  public static void c(Context paramContext, com.keniu.security.util.d paramD)
  {
    if (paramD == null) {}
    int i1;
    do
    {
      do
      {
        return;
      } while (com.cleanmaster.base.util.system.b.b(paramContext));
      i1 = com.cleanmaster.base.util.system.d.a(paramContext, 6.0F);
      if (paramD.d(-1) != null)
      {
        paramD.d(-1).setTextColor(-1);
        paramD.d(-1).setBackgroundResource(2130839255);
        localLayoutParams = (LinearLayout.LayoutParams)paramD.d(-1).getLayoutParams();
        localLayoutParams.height = com.cleanmaster.base.util.system.d.a(paramContext, 40.0F);
        localLayoutParams.setMargins(i1 / 2, i1, i1, i1);
        paramD.d(-1).setLayoutParams(localLayoutParams);
      }
      a(paramD);
    } while (paramD.d(-2) == null);
    paramD.d(-2).setTextColor(-16777216);
    paramD.d(-2).setBackgroundResource(2130839261);
    LinearLayout.LayoutParams localLayoutParams = (LinearLayout.LayoutParams)paramD.d(-2).getLayoutParams();
    localLayoutParams.height = com.cleanmaster.base.util.system.d.a(paramContext, 40.0F);
    localLayoutParams.setMargins(i1, i1, i1 / 2, i1);
    paramD.d(-2).setLayoutParams(localLayoutParams);
  }
  
  public static void c(Intent paramIntent)
  {
    if ((paramIntent == null) || (!paramIntent.hasExtra("_source"))) {}
    for (;;)
    {
      return;
      try
      {
        int i1 = paramIntent.getIntExtra("_source", -1);
        if (i1 == 1032)
        {
          paramIntent = (Alert)paramIntent.getParcelableExtra("weather_alert_notification_manager_extra_alert");
          t("WeatherAlert", "reportAlertClick    alert=" + paramIntent);
          if (paramIntent == null) {
            continue;
          }
          try
          {
            paramIntent = new com.lock.f.a("cm_weathernotbar_infopush_click").a("click_type", "1").a("warningtype", String.valueOf(a(paramIntent))).a("info", paramIntent.e).a("click_message", String.valueOf(paramIntent.d)).a("click_time", String.valueOf(by()));
            t("WeatherAlert", "reportAlertClick    alert=" + b(paramIntent.b));
            paramIntent.a(false);
            return;
          }
          catch (Throwable paramIntent)
          {
            paramIntent.printStackTrace();
            t("WeatherAlert", "reportAlertClick " + Log.getStackTraceString(paramIntent));
            return;
          }
        }
        if (i1 != 1031) {}
      }
      catch (Exception paramIntent)
      {
        paramIntent.printStackTrace();
        return;
      }
    }
    a(true, paramIntent.getIntExtra("type", 1));
  }
  
  private static void c(Parcel paramParcel, int paramInt1, int paramInt2)
  {
    if (paramInt2 >= 65535)
    {
      paramParcel.writeInt(0xFFFF0000 | paramInt1);
      paramParcel.writeInt(paramInt2);
      return;
    }
    paramParcel.writeInt(paramInt2 << 16 | paramInt1);
  }
  
  public static void c(String paramString)
  {
    if (paramString.contains(M)) {
      Log.i("AppsFlyer_", paramString.replace(M, N));
    }
  }
  
  public static void c(String paramString, Throwable paramThrowable)
  {
    if (Z(5)) {
      Log.w("Ads", paramString, paramThrowable);
    }
  }
  
  public static void c(String paramString, List<String> paramList)
  {
    if ((TextUtils.isEmpty(paramString)) || (paramList.isEmpty())) {}
    for (;;)
    {
      return;
      com.cleanmaster.dao.a localA = com.cleanmaster.dao.f.o(com.keniu.security.d.a().getApplicationContext());
      if (localA != null)
      {
        paramList = paramList.iterator();
        while (paramList.hasNext())
        {
          String str = android.support.percent.a.C((String)paramList.next());
          if ((!TextUtils.isEmpty(paramString)) && (!TextUtils.isEmpty(str)))
          {
            com.cleanmaster.dao.r localR = localA.f();
            if (localR != null) {
              try
              {
                localR.a("adv2stdsigns", "pkg_name=? AND _path=?", new String[] { paramString, str });
              }
              catch (Exception localException)
              {
                localException.printStackTrace();
              }
            }
          }
        }
      }
    }
  }
  
  public static void c(boolean paramBoolean)
  {
    com.cleanmaster.configmanager.d localD = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a());
    if (paramBoolean) {}
    for (long l1 = 0L;; l1 = System.currentTimeMillis())
    {
      localD.b("ats_last_scan_time", l1);
      return;
    }
  }
  
  public static void c(boolean paramBoolean, String paramString1, String paramString2)
  {
    if (paramBoolean) {
      Log.i("KBattery", x(paramString1, paramString2));
    }
  }
  
  public static boolean c()
  {
    boolean bool = false;
    if ((!AppLockPref.getIns().getUsePasscode()) || (TextUtils.isEmpty(AppLockPref.getIns().getPasscode())))
    {
      com.cleanmaster.applock.lockpattern.a.a();
      if (TextUtils.isEmpty(AppLockPref.getIns().getEncodedPatternPassword())) {
        break label49;
      }
    }
    label49:
    for (int i1 = 1;; i1 = 0)
    {
      if (i1 != 0) {
        bool = true;
      }
      return bool;
    }
  }
  
  public static boolean c(Activity paramActivity)
  {
    String str = com.keniu.security.d.b().j();
    return (str != null) && (str.equalsIgnoreCase(paramActivity.getClass().getName()));
  }
  
  private static boolean c(Context paramContext, com.cleanmaster.ui.resultpage.b.a paramA)
  {
    if (paramA == null) {}
    int i1;
    do
    {
      return false;
      i1 = paramA.j;
      if (7 == i1) {
        return true;
      }
      if (1 != i1) {
        break;
      }
    } while (Integer.valueOf(a(paramA, "functionID")).intValue() == 0);
    label72:
    label86:
    do
    {
      do
      {
        do
        {
          return true;
          if (3 != i1) {
            break label72;
          }
          paramA = a(paramA, "pkgName");
          if (TextUtils.isEmpty(paramA)) {
            break;
          }
        } while (com.cleanmaster.base.util.system.m.a(paramContext, paramA));
        return false;
        if (4 != i1) {
          break label86;
        }
      } while (com.cleanmaster.base.util.net.b.j(paramContext));
      return false;
    } while ((8 != i1) || (!com.cleanmaster.base.util.system.m.a(paramContext, a(paramA, "pkgName"))));
    return false;
  }
  
  public static boolean c(Context paramContext, boolean paramBoolean)
  {
    if (paramContext == null) {}
    do
    {
      String str;
      do
      {
        do
        {
          return false;
          str = com.cleanmaster.base.util.system.j.a().a(false);
        } while (TextUtils.isEmpty(str));
        if (!com.cleanmaster.base.util.system.j.a(str)) {
          break;
        }
      } while (TextUtils.isEmpty(paramContext.getResources().getString(2131298246)));
      return com.cleanmaster.base.c.a(com.cleanmaster.base.util.system.j.d());
      if (com.cleanmaster.base.util.system.j.b(str)) {
        return com.cleanmaster.base.util.system.j.a().a(str, com.cleanmaster.base.util.system.j.d());
      }
    } while (!paramBoolean);
    return com.cleanmaster.configmanager.d.a(paramContext).a("gamebox_shortcut_added", false);
  }
  
  public static boolean c(Bundle paramBundle)
  {
    return paramBundle.getInt("unit_id") != -1;
  }
  
  public static boolean c(Parcel paramParcel, int paramInt)
  {
    b(paramParcel, paramInt, 4);
    return paramParcel.readInt() != 0;
  }
  
  private static boolean c(com.in2wow.sdk.model.c paramC)
  {
    return (paramC != null) && (paramC.e);
  }
  
  public static boolean c(CharSequence paramCharSequence)
  {
    return (paramCharSequence == null) || (paramCharSequence.length() == 0);
  }
  
  public static boolean c(List<LockPatternView.Cell> paramList)
  {
    Object localObject;
    boolean bool;
    if (com.cleanmaster.applocklib.bridge.b.a)
    {
      localObject = new StringBuilder("check pattern, has pattern: ");
      if (paramList != null)
      {
        bool = true;
        ((StringBuilder)localObject).append(bool);
        com.cleanmaster.applocklib.bridge.b.a();
      }
    }
    else
    {
      if (paramList != null) {
        break label43;
      }
    }
    label43:
    do
    {
      do
      {
        return false;
        bool = false;
        break;
      } while (paramList.size() == 0);
      com.cleanmaster.applock.lockpattern.a.a();
      localObject = AppLockPref.getIns().getEncodedPatternPassword();
    } while (TextUtils.isEmpty((CharSequence)localObject));
    if (com.cleanmaster.applocklib.bridge.b.a)
    {
      new StringBuilder("check pattern, savedEncodedPatternPassword: ").append((String)localObject);
      com.cleanmaster.applocklib.bridge.b.a();
    }
    paramList = a(paramList);
    String str = bi(paramList);
    if (com.cleanmaster.applocklib.bridge.b.a)
    {
      new StringBuilder("check pattern, ").append(paramList).append(", ").append(str);
      com.cleanmaster.applocklib.bridge.b.a();
    }
    return ((String)localObject).equals(str);
  }
  
  public static boolean c(short paramShort)
  {
    return (paramShort >= -64) && (paramShort <= -49) && (paramShort != -60) && (paramShort != -56) && (paramShort != -52);
  }
  
  public static String[] c(String paramString1, String paramString2, String paramString3)
  {
    if ((TextUtils.isEmpty(paramString1)) || (TextUtils.isEmpty(paramString2)) || (TextUtils.isEmpty(paramString3))) {
      paramString2 = null;
    }
    do
    {
      for (;;)
      {
        return paramString2;
        String str = d(paramString1, paramString2, null);
        if (TextUtils.isEmpty(str)) {
          break label94;
        }
        try
        {
          paramString1 = str.split(paramString3);
          if (paramString1 != null) {
            paramString2 = paramString1;
          }
        }
        catch (Exception paramString2)
        {
          try
          {
            if (paramString1.length > 0) {
              continue;
            }
            return new String[] { str };
          }
          catch (Exception paramString2)
          {
            for (;;) {}
          }
          paramString2 = paramString2;
          paramString1 = null;
        }
      }
      paramString2.printStackTrace();
      paramString2 = paramString1;
    } while (TextUtils.isEmpty(null));
    return new String[] { null };
    label94:
    return null;
  }
  
  public static CityInfo cA()
  {
    Object localObject = com.lock.sideslip.d.a().c;
    if (localObject != null)
    {
      localObject = ((com.lock.sideslip.b.e)localObject).b();
      if (!TextUtils.isEmpty((CharSequence)localObject)) {
        return CityInfo.b((String)localObject);
      }
    }
    return null;
  }
  
  public static boolean cB()
  {
    com.lock.sideslip.setting.h.a();
    return com.lock.sideslip.setting.h.b("content_feed_loaded", false);
  }
  
  public static int cC()
  {
    return Math.abs((int)(System.currentTimeMillis() % 10000L));
  }
  
  public static boolean cD()
  {
    com.lock.sideslip.d.a();
    Object localObject1 = com.lock.sideslip.d.b();
    String str = ((Context)localObject1).getString(2131300914);
    Object localObject2 = aS((Context)localObject1);
    if (localObject2 == null) {
      return false;
    }
    localObject2 = "content://" + (String)localObject2 + "/favorites?notify=true";
    try
    {
      localObject2 = Uri.parse((String)localObject2);
      localObject1 = ((Context)localObject1).getContentResolver().query((Uri)localObject2, null, " title= ? ", new String[] { str }, null);
      if (localObject1 != null)
      {
        boolean bool = ((Cursor)localObject1).moveToNext();
        if (bool) {
          return true;
        }
      }
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
    return false;
  }
  
  public static Animation cE()
  {
    TranslateAnimation localTranslateAnimation = new TranslateAnimation(2, 0.0F, 2, 0.0F, 2, 1.0F, 2, 0.0F);
    localTranslateAnimation.setDuration(400L);
    localTranslateAnimation.setInterpolator(new AccelerateDecelerateInterpolator());
    return localTranslateAnimation;
  }
  
  public static Animation cF()
  {
    TranslateAnimation localTranslateAnimation = new TranslateAnimation(2, 0.0F, 2, 0.0F, 2, 0.0F, 2, -1.0F);
    localTranslateAnimation.setDuration(400L);
    localTranslateAnimation.setInterpolator(new AccelerateDecelerateInterpolator());
    return localTranslateAnimation;
  }
  
  public static String cG()
  {
    return B("/iconcache/", ".nomedia");
  }
  
  public static boolean cJ()
  {
    int i1 = android.support.percent.a.c("privacy_sensitive", "cloud_security_resultpage_applock_range");
    return (i1 == 20) || (i1 == 26);
  }
  
  public static float[] cL()
  {
    float[] arrayOfFloat = com.cleanmaster.boost.cpu.e.a(true);
    List localList = a(arrayOfFloat);
    if (localList.size() > 0)
    {
      localList.clear();
      return arrayOfFloat;
    }
    return null;
  }
  
  public static com.cleanmaster.bitloader.a.a<String, com.cleanmaster.cloudconfig.h.a> cM()
  {
    com.cleanmaster.cloudconfig.h localH = com.cleanmaster.cloudconfig.h.a();
    if (localH.a == null) {
      localH.a = new com.cleanmaster.bitloader.a.a();
    }
    return localH.a;
  }
  
  public static String cN()
  {
    StackTraceElement[] arrayOfStackTraceElement = new Throwable().getStackTrace();
    if (arrayOfStackTraceElement.length <= 3) {
      return "";
    }
    return "at " + arrayOfStackTraceElement[3].getClassName() + "." + arrayOfStackTraceElement[3].getMethodName() + "(" + arrayOfStackTraceElement[3].getFileName() + ":" + arrayOfStackTraceElement[3].getLineNumber() + ")\n";
  }
  
  private static String cO()
  {
    String str2 = SystemProperties.get("ro.miui.ui.version.name", "UNKNOWN");
    String str1 = str2;
    if (str2 == null) {
      str1 = "";
    }
    return str1;
  }
  
  private static boolean cP()
  {
    boolean bool = true;
    if (h())
    {
      Object localObject = com.keniu.security.d.a();
      String str = ((Context)localObject).getPackageName();
      try
      {
        localObject = ((Context)localObject).getPackageManager().getPackageInfo(str, 0).applicationInfo;
        if (Build.VERSION.SDK_INT >= 19)
        {
          if ((((ApplicationInfo)localObject).flags & 0x2000000) != 0) {
            break label71;
          }
          return true;
        }
        int i1 = ((ApplicationInfo)localObject).flags;
        if ((i1 & 0x8000000) == 0) {
          break label69;
        }
        return false;
      }
      catch (PackageManager.NameNotFoundException localNameNotFoundException) {}
    }
    bool = false;
    label69:
    return bool;
    label71:
    return false;
  }
  
  /* Error */
  private static int cQ()
  {
    // Byte code:
    //   0: getstatic 336	android/os/Build$VERSION:SDK_INT	I
    //   3: bipush 9
    //   5: if_icmplt +187 -> 192
    //   8: invokestatic 14668	android/os/StrictMode:allowThreadDiskReads	()Landroid/os/StrictMode$ThreadPolicy;
    //   11: astore_1
    //   12: ldc_w 14670
    //   15: invokestatic 1348	java/util/regex/Pattern:compile	(Ljava/lang/String;)Ljava/util/regex/Pattern;
    //   18: astore 4
    //   20: new 14672	java/io/FileReader
    //   23: dup
    //   24: ldc_w 14674
    //   27: invokespecial 14675	java/io/FileReader:<init>	(Ljava/lang/String;)V
    //   30: astore_2
    //   31: new 5688	java/io/BufferedReader
    //   34: dup
    //   35: aload_2
    //   36: invokespecial 5694	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   39: astore_3
    //   40: aload_3
    //   41: invokevirtual 12727	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   44: astore 5
    //   46: aload 5
    //   48: ifnull +63 -> 111
    //   51: aload 4
    //   53: aload 5
    //   55: invokevirtual 1352	java/util/regex/Pattern:matcher	(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
    //   58: astore 5
    //   60: aload 5
    //   62: invokevirtual 14678	java/util/regex/Matcher:find	()Z
    //   65: ifeq -25 -> 40
    //   68: aload 5
    //   70: iconst_1
    //   71: invokevirtual 14680	java/util/regex/Matcher:group	(I)Ljava/lang/String;
    //   74: invokestatic 957	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   77: istore_0
    //   78: iload_0
    //   79: sipush 1024
    //   82: if_icmple +29 -> 111
    //   85: aload_3
    //   86: invokevirtual 5704	java/io/BufferedReader:close	()V
    //   89: aload_2
    //   90: invokevirtual 14681	java/io/FileReader:close	()V
    //   93: getstatic 336	android/os/Build$VERSION:SDK_INT	I
    //   96: bipush 9
    //   98: if_icmplt +11 -> 109
    //   101: aload_1
    //   102: ifnull +7 -> 109
    //   105: aload_1
    //   106: invokestatic 14685	android/os/StrictMode:setThreadPolicy	(Landroid/os/StrictMode$ThreadPolicy;)V
    //   109: iload_0
    //   110: ireturn
    //   111: aload_3
    //   112: invokevirtual 5704	java/io/BufferedReader:close	()V
    //   115: aload_2
    //   116: invokevirtual 14681	java/io/FileReader:close	()V
    //   119: getstatic 336	android/os/Build$VERSION:SDK_INT	I
    //   122: bipush 9
    //   124: if_icmplt +11 -> 135
    //   127: aload_1
    //   128: ifnull +7 -> 135
    //   131: aload_1
    //   132: invokestatic 14685	android/os/StrictMode:setThreadPolicy	(Landroid/os/StrictMode$ThreadPolicy;)V
    //   135: iconst_0
    //   136: ireturn
    //   137: astore 4
    //   139: aload_3
    //   140: invokevirtual 5704	java/io/BufferedReader:close	()V
    //   143: aload 4
    //   145: athrow
    //   146: astore_3
    //   147: aload_2
    //   148: invokevirtual 14681	java/io/FileReader:close	()V
    //   151: aload_3
    //   152: athrow
    //   153: astore_2
    //   154: getstatic 336	android/os/Build$VERSION:SDK_INT	I
    //   157: bipush 9
    //   159: if_icmplt -24 -> 135
    //   162: aload_1
    //   163: ifnull -28 -> 135
    //   166: aload_1
    //   167: invokestatic 14685	android/os/StrictMode:setThreadPolicy	(Landroid/os/StrictMode$ThreadPolicy;)V
    //   170: goto -35 -> 135
    //   173: astore_2
    //   174: getstatic 336	android/os/Build$VERSION:SDK_INT	I
    //   177: bipush 9
    //   179: if_icmplt +11 -> 190
    //   182: aload_1
    //   183: ifnull +7 -> 190
    //   186: aload_1
    //   187: invokestatic 14685	android/os/StrictMode:setThreadPolicy	(Landroid/os/StrictMode$ThreadPolicy;)V
    //   190: aload_2
    //   191: athrow
    //   192: aconst_null
    //   193: astore_1
    //   194: goto -182 -> 12
    // Local variable table:
    //   start	length	slot	name	signature
    //   77	33	0	i1	int
    //   11	183	1	localThreadPolicy	android.os.StrictMode.ThreadPolicy
    //   30	118	2	localFileReader	FileReader
    //   153	1	2	localException	Exception
    //   173	18	2	localObject1	Object
    //   39	101	3	localBufferedReader	BufferedReader
    //   146	6	3	localObject2	Object
    //   18	34	4	localPattern	Pattern
    //   137	7	4	localObject3	Object
    //   44	25	5	localObject4	Object
    // Exception table:
    //   from	to	target	type
    //   40	46	137	finally
    //   51	78	137	finally
    //   31	40	146	finally
    //   85	89	146	finally
    //   111	115	146	finally
    //   139	146	146	finally
    //   12	31	153	java/lang/Exception
    //   89	93	153	java/lang/Exception
    //   115	119	153	java/lang/Exception
    //   147	153	153	java/lang/Exception
    //   12	31	173	finally
    //   89	93	173	finally
    //   115	119	173	finally
    //   147	153	173	finally
  }
  
  private static int cR()
  {
    String str = p(com.keniu.security.d.a());
    if (TextUtils.isEmpty(str)) {}
    for (char c1 = '\000'; TextUtils.isEmpty(String.valueOf(c1)); c1 = str.charAt(str.length() - 1)) {
      return 0;
    }
    return Integer.valueOf(String.valueOf(c1), 16).intValue();
  }
  
  private static int cS()
  {
    return a("process_settings", "cpu_show_text_standard", 50);
  }
  
  private static int cT()
  {
    if (!com.cleanmaster.base.util.system.m.a(com.keniu.security.d.a().getApplicationContext())) {
      return 12;
    }
    if (com.cleanmaster.security.scan.b.a.b()) {
      return 13;
    }
    if (Build.VERSION.SDK_INT <= 17)
    {
      if (cU())
      {
        if (!cV()) {
          return com.cleanmaster.security.utils.g.b();
        }
        return 16;
      }
      return 15;
    }
    return 14;
  }
  
  private static boolean cU()
  {
    TelephonyManager localTelephonyManager = (TelephonyManager)com.keniu.security.d.a().getSystemService("phone");
    try
    {
      int i1 = localTelephonyManager.getPhoneType();
      return i1 != 0;
    }
    catch (Exception localException) {}
    return false;
  }
  
  private static boolean cV()
  {
    if (!com.cleanmaster.base.util.system.d.g()) {}
    for (;;)
    {
      return false;
      switch (bs())
      {
      default: 
        try
        {
          Object localObject = SystemProperties.get("ro.build.version.incremental", "unkonw");
          if (((String)localObject).startsWith("JLB"))
          {
            if (Float.valueOf(((String)localObject).substring(3, ((String)localObject).length())).floatValue() < 13.0F) {
              continue;
            }
            return true;
          }
          if (((String)localObject).startsWith("ICS"))
          {
            if (Float.valueOf(((String)localObject).substring(3, ((String)localObject).length())).floatValue() < 23.0F) {
              continue;
            }
            return true;
          }
          if (((String)localObject).equals("3.1.11")) {
            return true;
          }
          localObject = ((String)localObject).split("\\.");
          String[] arrayOfString = "3.1.11".split("\\.");
          if (localObject.length > arrayOfString.length) {
            return true;
          }
          if (arrayOfString.length > localObject.length) {
            continue;
          }
          int i1 = 0;
          while (i1 < localObject.length)
          {
            int i2 = Integer.valueOf(localObject[i1]).intValue();
            int i3 = Integer.valueOf(arrayOfString[i1]).intValue();
            if (i2 > i3) {
              return true;
            }
            if (i2 < i3) {
              break;
            }
            i1 += 1;
          }
          return true;
        }
        catch (Exception localException)
        {
          return false;
        }
      }
    }
  }
  
  private static boolean cW()
  {
    boolean bool1 = false;
    Context localContext = com.keniu.security.d.a();
    String str = localContext.getPackageName();
    try
    {
      boolean bool2 = b(localContext, localContext.getPackageManager().getPackageInfo(str, 0).applicationInfo.uid, str);
      bool1 = bool2;
    }
    catch (Throwable localThrowable)
    {
      while (!com.cleanmaster.i.a.a) {}
      com.cleanmaster.i.a.a("Utils", "isOverlapPermissionGranted other false");
    }
    return bool1;
    return false;
  }
  
  private static boolean cX()
  {
    try
    {
      com.lock.sideslip.d.a();
      return false;
    }
    catch (Exception localException)
    {
      for (;;)
      {
        localException.printStackTrace();
      }
    }
  }
  
  private static String cZ()
  {
    Object localObject3 = null;
    label95:
    label105:
    for (;;)
    {
      try
      {
        localObject2 = da();
        localObject1 = localObject3;
        if (localObject2 != null)
        {
          localObject1 = localObject3;
          if (((File)localObject2).exists()) {
            localObject1 = ((File)localObject2).getAbsolutePath();
          }
        }
        if (localObject1 != null) {}
      }
      catch (NullPointerException localNullPointerException)
      {
        try
        {
          if (Environment.getExternalStorageDirectory() == null) {
            break label105;
          }
          localObject2 = new File(Environment.getExternalStorageDirectory(), ac).getAbsolutePath();
          localObject1 = localObject2;
        }
        catch (Exception localException1)
        {
          Object localObject2;
          Object localObject1;
          localException1.printStackTrace();
          return localNullPointerException;
        }
        try
        {
          new File((String)localObject1 + "/").mkdirs();
          return localObject1;
        }
        catch (Exception localException2)
        {
          break label95;
        }
        localNullPointerException = localNullPointerException;
        localObject2 = null;
      }
    }
  }
  
  public static List<com.cleanmaster.common.model.AppInfo> ca()
  {
    ArrayList localArrayList = new ArrayList();
    Object localObject2 = com.cleanmaster.watcher.c.a().b();
    Object localObject1 = com.cleanmaster.dao.f.c(com.keniu.security.d.a().getApplicationContext()).a();
    if (localObject1 == null) {
      return localArrayList;
    }
    Iterator localIterator = ((Map)localObject1).values().iterator();
    while (localIterator.hasNext())
    {
      com.cleanmaster.common.model.AppInfo localAppInfo = (com.cleanmaster.common.model.AppInfo)localIterator.next();
      if ((localAppInfo != null) && (!TextUtils.isEmpty(localAppInfo.getPackageName())))
      {
        if (localObject2 == null)
        {
          localObject1 = null;
          label88:
          if (localObject1 == null) {
            break label158;
          }
          if (localAppInfo.getLastOpenTime() <= ((com.cleanmaster.common.model.AppInfo)localObject1).getLastOpenTime()) {
            break label147;
          }
          localArrayList.add(localAppInfo);
        }
        for (;;)
        {
          ((Map)localObject2).remove(localAppInfo.getPackageName());
          break;
          localObject1 = (com.cleanmaster.common.model.AppInfo)((Map)localObject2).get(localAppInfo.getPackageName());
          break label88;
          label147:
          localArrayList.add(localObject1);
        }
        label158:
        localArrayList.add(localAppInfo);
      }
    }
    localObject1 = ((Map)localObject2).values().iterator();
    while (((Iterator)localObject1).hasNext())
    {
      localObject2 = (com.cleanmaster.common.model.AppInfo)((Iterator)localObject1).next();
      if ((localObject2 != null) && (!TextUtils.isEmpty(((com.cleanmaster.common.model.AppInfo)localObject2).getPackageName()))) {
        localArrayList.add(localObject2);
      }
    }
    return localArrayList;
  }
  
  public static boolean cb()
  {
    return new Random().nextInt(100) < 5;
  }
  
  public static String cc()
  {
    return a(15, "screensaver_news_sdk", "B_SCREENSAVER_NEWS_WEB_APP_ICONURL", "");
  }
  
  public static int cd()
  {
    int i2 = 5;
    int i1 = 1;
    int i3 = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).a("rtmtda", 0);
    int i4 = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).a("rtmtdp", 0);
    if (com.cm.root.d.a().g())
    {
      if (1 == i3) {
        i1 = 2;
      }
    }
    else {
      if ((i3 != 0) || (i4 != 0) || (com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).a("rmrst", 5) != 5)) {
        break label103;
      }
    }
    for (;;)
    {
      com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).b("rmrst", i1);
      return i2;
      if (1 == i4)
      {
        i1 = 3;
        break;
      }
      i1 = 4;
      break;
      label103:
      i2 = i1;
    }
  }
  
  public static String ce()
  {
    try
    {
      String str1 = Locale.getDefault().getLanguage();
      String str2 = Locale.getDefault().getCountry();
      str1 = str1 + "_" + str2;
      return str1;
    }
    catch (Exception localException)
    {
      new StringBuilder("Get Language and Country is error...").append(localException.getMessage());
    }
    return "";
  }
  
  public static com.cmcm.dmc.sdk.report.e cf()
  {
    return com.cmcm.dmc.sdk.report.e.a;
  }
  
  public static com.cmcm.locker.sdk.notificationhelper.impl.inter.c cg()
  {
    return com.cmcm.locker.sdk.notificationhelper.impl.a.c.c();
  }
  
  public static int ch()
  {
    int[] arrayOfInt = new int[1];
    GLES20.glGenTextures(1, arrayOfInt, 0);
    return arrayOfInt[0];
  }
  
  public static boolean ci()
  {
    return Build.VERSION.SDK_INT >= 14;
  }
  
  public static Intent cj()
  {
    if (Build.VERSION.SDK_INT >= 18) {}
    for (Intent localIntent = new Intent("android.settings.ACTION_NOTIFICATION_LISTENER_SETTINGS");; localIntent = new Intent("android.settings.ACCESSIBILITY_SETTINGS"))
    {
      localIntent.addFlags(335544320);
      return localIntent;
    }
  }
  
  public static List ck()
  {
    int i2 = 0;
    ArrayList localArrayList = new ArrayList();
    for (;;)
    {
      try
      {
        String str = bc.a().a("notification_alert_saved_info", null);
        if (TextUtils.isEmpty(str)) {
          break label159;
        }
        JSONArray localJSONArray = new JSONArray(str);
        if (localJSONArray == null) {
          break label164;
        }
        i1 = localJSONArray.length();
        if (i2 < i1)
        {
          com.cmnow.weather.sdk.alert.c localC = com.cmnow.weather.sdk.alert.c.a(localJSONArray.getString(i2));
          if (localC != null) {
            localArrayList.add(localC);
          }
        }
        else
        {
          Collections.sort(localArrayList);
          Log.d("WeatherAlertHelper", "listSaveInfo jsonStr" + str + "   " + localArrayList);
          return localArrayList;
        }
      }
      catch (Exception localException)
      {
        Log.d("WeatherAlertHelper", "listSaveInfo " + Log.getStackTraceString(localException));
        return localArrayList;
      }
      i2 += 1;
      continue;
      label159:
      Object localObject = null;
      continue;
      label164:
      int i1 = 0;
    }
  }
  
  public static com.facebook.share.internal.f cl()
  {
    if (W == null) {
      W = new com.facebook.share.internal.f((byte)0);
    }
    return W;
  }
  
  public static int cm()
  {
    try
    {
      int i1 = Integer.parseInt(Build.VERSION.SDK);
      return i1;
    }
    catch (NumberFormatException localNumberFormatException)
    {
      com.google.android.gms.analytics.internal.e.a("Invalid version number", Build.VERSION.SDK);
    }
    return 0;
  }
  
  public static com.ijinshan.screensavernew.a.a cn()
  {
    if (X == null) {
      X = new com.ijinshan.screensavernew.a.a();
    }
    return X;
  }
  
  public static boolean co()
  {
    int i1 = com.ijinshan.screensavershared.a.a.b("tag_use_external_guide_by_mutual", 0);
    android.support.v4.a.c.g("MLOG", "queryguide.u");
    return i1 == 1;
  }
  
  public static boolean cp()
  {
    return com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).a("AppVerCode_insted_lower_42", false);
  }
  
  public static boolean cq()
  {
    return com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).ac() == 0;
  }
  
  public static long cr()
  {
    String str = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).a("first_install_version_and_start_time", null);
    if (TextUtils.isEmpty(str)) {
      return System.currentTimeMillis();
    }
    try
    {
      long l1 = Long.parseLong(str.split("-")[1]);
      return l1;
    }
    catch (Exception localException) {}
    return System.currentTimeMillis();
  }
  
  public static void cs()
  {
    int i1 = 64;
    for (;;)
    {
      if (!com.keniu.security.update.a.a().a) {}
      try
      {
        Thread.sleep(500L);
        int i2 = i1 - 1;
        i1 = i2;
        if (i2 > 0) {
          continue;
        }
        com.cleanmaster.kinfoc.p.a().a("cm_wait_dbctrl_timeout", "", true);
        return;
      }
      catch (InterruptedException localInterruptedException)
      {
        for (;;)
        {
          localInterruptedException.printStackTrace();
        }
      }
    }
  }
  
  public static String ct()
  {
    cs();
    return com.keniu.security.update.m.a().b("process_tips2.db");
  }
  
  public static String cu()
  {
    cs();
    return com.keniu.security.update.m.a().b("clearprocess_en_5.10.1.filter");
  }
  
  public static String cv()
  {
    cs();
    return com.keniu.security.update.m.a().b("ats2_wl_en.dat");
  }
  
  public static String cw()
  {
    cs();
    return com.keniu.security.update.m.a().b("clearpath_other_5.9.6.db");
  }
  
  public static String cx()
  {
    if (!android.support.percent.a.Y()) {
      return null;
    }
    return android.support.percent.a.B(com.keniu.security.a.g());
  }
  
  public static boolean cy()
  {
    if (!new File(com.keniu.security.update.c.b()).exists()) {}
    Date localDate;
    Object localObject1;
    do
    {
      do
      {
        return true;
        if (com.keniu.security.update.push.f.a() == null) {
          return false;
        }
        localObject2 = com.keniu.security.update.push.pushapi.b.a(String.valueOf(PushConstants.MessageChannel.CHANNEL_NOTIFY_UPDATE_APK.value()), PushConstants.MessageAction.ACTION_PUSH_UPDATE.value());
      } while (localObject2 == null);
      localDate = new Date(System.currentTimeMillis());
      localObject1 = a((PushMessage)localObject2);
    } while (localObject1 == null);
    if (localDate.getTime() <= ((Date)localObject1).getTime()) {
      return false;
    }
    Object localObject2 = ((PushMessage)localObject2).b(com.keniu.security.update.c.a.a.b.z);
    if (!TextUtils.isEmpty((CharSequence)localObject2)) {}
    for (;;)
    {
      try
      {
        i1 = Integer.valueOf((String)localObject2).intValue();
        localObject2 = Calendar.getInstance();
        ((Calendar)localObject2).setTime((Date)localObject1);
        localObject1 = Calendar.getInstance();
        ((Calendar)localObject1).setTime(localDate);
        int i2 = (int)((((Calendar)localObject1).getTime().getTime() - ((Calendar)localObject2).getTime().getTime()) / 86400000L);
        if ((i2 < 0) || (i2 > i1)) {
          break;
        }
        return false;
      }
      catch (Exception localException) {}
      int i1 = 1;
    }
  }
  
  public static String cz()
  {
    Context localContext = com.ksmobile.business.sdk.a.a().d;
    if (localContext == null) {
      return "";
    }
    com.ksmobile.business.sdk.search.model.b.a();
    return localContext.getResources().getString(2131299867);
  }
  
  public static int d(Activity paramActivity)
  {
    Display localDisplay = paramActivity.getWindowManager().getDefaultDisplay();
    Point localPoint = new Point();
    if (Build.VERSION.SDK_INT >= 17)
    {
      localDisplay.getRealSize(localPoint);
      if (paramActivity.getResources().getConfiguration().orientation != 1) {
        break label66;
      }
    }
    label66:
    for (int i1 = localPoint.x;; i1 = localPoint.y)
    {
      return (int)(i1 / com.cleanmaster.security.util.b.b());
      localDisplay.getSize(localPoint);
      break;
    }
  }
  
  public static int d(Context paramContext, float paramFloat)
  {
    return (int)a(paramContext, 7, paramFloat, paramContext.getResources().getDisplayMetrics());
  }
  
  public static int d(Parcel paramParcel, int paramInt)
  {
    b(paramParcel, paramInt, 4);
    return paramParcel.readInt();
  }
  
  public static com.cleanmaster.base.util.e.g d(File paramFile)
  {
    com.cleanmaster.base.util.e.g localG = null;
    if (paramFile == null) {
      paramFile = localG;
    }
    for (;;)
    {
      return paramFile;
      try
      {
        paramFile = new StatFs(paramFile.getPath());
        long l1 = com.cleanmaster.base.util.e.b.a(paramFile);
        long l2 = com.cleanmaster.base.util.e.b.b(paramFile);
        long l3 = com.cleanmaster.base.util.e.b.c(paramFile);
        localG = new com.cleanmaster.base.util.e.g();
        localG.a = (l2 * l3);
        localG.b = (l1 * l3);
        paramFile = localG;
        if (localG.a < localG.b)
        {
          localG.b = localG.a;
          return localG;
        }
      }
      catch (Exception paramFile) {}
    }
    return null;
  }
  
  private static com.cleanmaster.cleancloud.core.b.e d(byte[] paramArrayOfByte)
  {
    Object localObject = null;
    int i1 = paramArrayOfByte.length - 8;
    if (i1 < 12) {}
    int i2;
    int i3;
    int i4;
    int i5;
    do
    {
      do
      {
        return null;
        i2 = com.cleanmaster.base.util.b.b.b(paramArrayOfByte, 8);
        i3 = com.cleanmaster.base.util.b.b.b(paramArrayOfByte, 12);
        i4 = com.cleanmaster.base.util.b.b.b(paramArrayOfByte, 16);
        i5 = i4 << 2;
      } while (i5 < 0);
      i5 += 12;
    } while ((i5 < 0) || (i1 < i5));
    if (i4 > 0) {
      try
      {
        int[] arrayOfInt = new int[i4];
        i1 = 0;
        for (;;)
        {
          localObject = arrayOfInt;
          if (i1 >= i4) {
            break;
          }
          arrayOfInt[i1] = com.cleanmaster.base.util.b.b.b(paramArrayOfByte, (i1 << 2) + 20);
          i1 += 1;
        }
        paramArrayOfByte = new com.cleanmaster.cleancloud.core.b.e();
      }
      catch (OutOfMemoryError paramArrayOfByte)
      {
        paramArrayOfByte.printStackTrace();
        return null;
      }
    }
    paramArrayOfByte.a = i2;
    paramArrayOfByte.b = i3;
    paramArrayOfByte.c = localObject;
    return paramArrayOfByte;
  }
  
  public static com.cleanmaster.security.timewall.core.c d(boolean paramBoolean)
  {
    return new com.cleanmaster.security.timewall.core.k(true);
  }
  
  public static AlertWeatherData d(JSONObject paramJSONObject)
  {
    if (paramJSONObject == null) {
      return null;
    }
    AlertWeatherData localAlertWeatherData = new AlertWeatherData();
    int i1 = paramJSONObject.optInt("at");
    int i2 = paramJSONObject.optInt("al");
    Object localObject = paramJSONObject.optString("pt");
    paramJSONObject.optString("et");
    String str1 = paramJSONObject.optString("tt");
    String str2 = paramJSONObject.optString("desc");
    int i3 = paramJSONObject.optInt("source");
    try
    {
      if ((!TextUtils.isEmpty((CharSequence)localObject)) && (TextUtils.isDigitsOnly((CharSequence)localObject)))
      {
        long l1 = Long.parseLong((String)localObject);
        localAlertWeatherData.f = l1;
        paramJSONObject = Calendar.getInstance();
        localObject = new SimpleDateFormat("yyyyMMdd HH:mm", Locale.US);
        paramJSONObject.setTimeInMillis(l1 * 1000L);
        paramJSONObject.set(paramJSONObject.get(1), paramJSONObject.get(2), paramJSONObject.get(5), 23, 59);
        ((SimpleDateFormat)localObject).format(paramJSONObject.getTime());
        localAlertWeatherData.b = (paramJSONObject.getTimeInMillis() / 1000L);
      }
      if (str1 != null) {
        localAlertWeatherData.e = str1.trim();
      }
      if (str2 != null) {
        localAlertWeatherData.c = str2.trim().replaceAll("\\n", "\t");
      }
      localAlertWeatherData.a = i1;
      localAlertWeatherData.d = i2;
      localAlertWeatherData.g = i3;
      return localAlertWeatherData;
    }
    catch (Exception paramJSONObject)
    {
      for (;;)
      {
        paramJSONObject.printStackTrace();
      }
    }
  }
  
  public static com.my.target.core.f.b.c d(com.my.target.core.f.b.f paramF, String paramString, com.my.target.core.parsers.a paramA)
  {
    try
    {
      paramF = (com.my.target.core.f.b.c)paramF;
      return paramF;
    }
    catch (Exception paramF)
    {
      a("Unable to cast to standard section field '" + paramString + "', Operation: " + paramA.d + ", Unit: " + paramA.e, paramA, paramF, "Class cast exception");
    }
    return null;
  }
  
  public static com.my.target.core.f.b.f d(String paramString, int paramInt)
  {
    String str = com.my.target.core.enums.a.a(paramString);
    if (str != null)
    {
      if (str.equals(com.my.target.core.enums.a.a)) {
        return new com.my.target.core.f.b.g(paramString, paramInt);
      }
      if ((str.equals(com.my.target.core.enums.a.b)) || (str.equals(com.my.target.core.enums.a.c))) {
        return new com.my.target.core.f.b.b(paramString, paramInt);
      }
      if (str.equals(com.my.target.core.enums.a.d)) {
        return new com.my.target.core.f.b.c(paramString, paramInt);
      }
      if (str.equals(com.my.target.core.enums.a.e)) {
        return new com.my.target.core.f.b.e(paramString, paramInt);
      }
      if (str.equals(com.my.target.core.enums.a.f)) {
        return new com.my.target.core.f.b.d(paramString, paramInt);
      }
    }
    return null;
  }
  
  public static String d(int paramInt1, int paramInt2, String paramString)
  {
    StringBuilder localStringBuilder = new StringBuilder();
    String str = paramString;
    if (TextUtils.isEmpty(paramString)) {
      str = "-";
    }
    localStringBuilder.append(paramInt1 + str + paramInt2 + "°C");
    return localStringBuilder.toString();
  }
  
  public static String d(long paramLong)
  {
    if (paramLong < 0L) {
      return String.valueOf(paramLong);
    }
    if (paramLong >= 1099511627776L) {
      return String.format(Locale.US, "%d.%dTB", new Object[] { Long.valueOf(paramLong / 1099511627776L), Long.valueOf(paramLong % 1099511627776L * 10L / 1099511627776L) });
    }
    if (paramLong >= 1073741824L) {
      return String.format(Locale.US, "%d.%dGB", new Object[] { Long.valueOf(paramLong / 1073741824L), Long.valueOf(paramLong % 1073741824L * 10L / 1073741824L) });
    }
    if (paramLong >= 1048576L) {
      return String.format(Locale.US, "%d.%dMB", new Object[] { Long.valueOf(paramLong / 1048576L), Long.valueOf(paramLong % 1048576L * 10L / 1048576L) });
    }
    if (paramLong >= 1024L) {
      return String.format(Locale.US, "%d.%dKB", new Object[] { Long.valueOf(paramLong / 1024L), Long.valueOf(paramLong % 1024L * 10L / 1024L) });
    }
    if (paramLong != 0L) {
      return "< 1KB";
    }
    return "0KB";
  }
  
  public static String d(Context paramContext)
  {
    return com.cleanmaster.configmanager.d.a(paramContext).b(paramContext).N;
  }
  
  public static String d(String paramString)
  {
    return j(new File(paramString));
  }
  
  public static String d(String paramString1, String paramString2, String paramString3)
  {
    ICloudConfigGetter localICloudConfigGetter = (ICloudConfigGetter)com.cleanmaster.base.ipc.c.a().a(com.cleanmaster.base.ipc.b.e);
    String str = paramString3;
    if (localICloudConfigGetter != null) {}
    try
    {
      str = localICloudConfigGetter.a(11, paramString1, paramString2, paramString3);
      return str;
    }
    catch (RemoteException paramString1)
    {
      paramString1.printStackTrace();
    }
    return paramString3;
  }
  
  private static String d(String paramString, Attributes paramAttributes)
  {
    int i2 = paramAttributes.getLength();
    int i1 = 0;
    while (i1 < i2)
    {
      if (paramAttributes.getLocalName(i1).equals(paramString)) {
        return paramAttributes.getValue(i1);
      }
      i1 += 1;
    }
    return null;
  }
  
  public static String d(Collection<String> paramCollection)
  {
    String str = "";
    Object localObject = str;
    if (paramCollection != null)
    {
      Iterator localIterator = paramCollection.iterator();
      paramCollection = str;
      for (;;)
      {
        localObject = paramCollection;
        if (!localIterator.hasNext()) {
          break;
        }
        str = (String)localIterator.next();
        if (!TextUtils.isEmpty(str))
        {
          localObject = paramCollection;
          if (!TextUtils.isEmpty(paramCollection)) {
            localObject = paramCollection + ",";
          }
          paramCollection = (String)localObject + AutostartDefine.a(str);
        }
      }
    }
    return localObject;
  }
  
  public static String d(Map<String, String> paramMap)
  {
    paramMap = (String)paramMap.get("count");
    if (TextUtils.isEmpty(paramMap)) {
      return "";
    }
    try
    {
      int i1 = Integer.parseInt(paramMap);
      return String.valueOf(i1);
    }
    catch (Exception paramMap) {}
    return "";
  }
  
  public static ArrayList<com.cleanmaster.ui.app.market.a> d(ArrayList<com.cleanmaster.ui.app.market.a> paramArrayList)
  {
    boolean bool2 = true;
    int i3 = 0;
    Object localObject3 = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a());
    ArrayList localArrayList1 = new ArrayList();
    ArrayList localArrayList2 = new ArrayList();
    Object localObject1 = null;
    ArrayList localArrayList3 = new ArrayList();
    HashMap localHashMap = new HashMap();
    int i1 = 0;
    Object localObject2;
    if (i1 < paramArrayList.size())
    {
      localObject2 = (com.cleanmaster.ui.app.market.a)paramArrayList.get(i1);
      if (localObject2 != null) {
        ((com.cleanmaster.ui.app.market.a)localObject2).X = -1;
      }
      if ((localObject2 != null) && (((com.cleanmaster.ui.app.market.a)localObject2).p == 1047))
      {
        if ((!((com.cleanmaster.ui.app.market.a)localObject2).B.trim().equals("")) && (com.cleanmaster.ui.game.ad.a(((com.cleanmaster.ui.app.market.a)localObject2).B.trim(), "[0-9]+")) && (!((com.cleanmaster.ui.app.market.a)localObject2).B.trim().equals("0"))) {
          break label384;
        }
        if (((com.cleanmaster.configmanager.d)localObject3).ac(((com.cleanmaster.ui.app.market.a)localObject2).I) > 0) {
          if ((i1 < paramArrayList.size() - 1) && (((com.cleanmaster.ui.app.market.a)paramArrayList.get(i1 + 1)).z.equals(((com.cleanmaster.ui.app.market.a)localObject2).z)))
          {
            localObject2 = (com.cleanmaster.ui.app.market.a)paramArrayList.get(i1 + 1);
            if (((com.cleanmaster.ui.app.market.a)paramArrayList.get(i1 + 1)).s().s == 1)
            {
              bool1 = true;
              label231:
              ((com.cleanmaster.ui.app.market.a)localObject2).F = bool1;
            }
          }
          else
          {
            paramArrayList.remove(i1);
            i1 -= 1;
          }
        }
      }
      for (;;)
      {
        i1 += 1;
        break;
        bool1 = false;
        break label231;
        ((com.cleanmaster.configmanager.d)localObject3).ad(((com.cleanmaster.ui.app.market.a)localObject2).I);
        label384:
        label411:
        do
        {
          for (;;)
          {
            String str = ((com.cleanmaster.ui.app.market.a)localObject2).z;
            if ((localObject2 != null) && (!TextUtils.isEmpty(((com.cleanmaster.ui.app.market.a)localObject2).z)) && ((!localHashMap.containsKey(str)) || (((Integer)localHashMap.get(str)).intValue() == 0))) {
              localHashMap.put(str, Integer.valueOf(((com.cleanmaster.ui.app.market.a)localObject2).s().g));
            }
            if ((localObject2 != null) && (((com.cleanmaster.ui.app.market.a)localObject2).p == 1049)) {
              a((com.cleanmaster.ui.app.market.a)localObject2);
            }
            if (localObject2 != null) {
              break label530;
            }
            paramArrayList.remove(i1);
            i1 -= 1;
            break;
            if (-1 != ((com.cleanmaster.configmanager.d)localObject3).ac(((com.cleanmaster.ui.app.market.a)localObject2).I)) {
              break label411;
            }
            ((com.cleanmaster.configmanager.d)localObject3).ad(((com.cleanmaster.ui.app.market.a)localObject2).I);
          }
        } while (((com.cleanmaster.configmanager.d)localObject3).ac(((com.cleanmaster.ui.app.market.a)localObject2).I) < Integer.parseInt(((com.cleanmaster.ui.app.market.a)localObject2).B.trim()));
        if ((i1 < paramArrayList.size() - 1) && (((com.cleanmaster.ui.app.market.a)paramArrayList.get(i1 + 1)).z.equals(((com.cleanmaster.ui.app.market.a)localObject2).z)))
        {
          localObject2 = (com.cleanmaster.ui.app.market.a)paramArrayList.get(i1 + 1);
          if (((com.cleanmaster.ui.app.market.a)paramArrayList.get(i1 + 1)).s().s != 1) {
            break label524;
          }
        }
        label524:
        for (bool1 = true;; bool1 = false)
        {
          ((com.cleanmaster.ui.app.market.a)localObject2).F = bool1;
          paramArrayList.remove(i1);
          i1 -= 1;
          break;
        }
        label530:
        if (TextUtils.isEmpty(((com.cleanmaster.ui.app.market.a)localObject2).z))
        {
          if (1048 == ((com.cleanmaster.ui.app.market.a)localObject2).p) {
            localObject1 = localObject2;
          }
          for (;;)
          {
            localArrayList2.add(localObject2);
            paramArrayList.remove(i1);
            i1 -= 1;
            break;
            if ((a(com.keniu.security.d.a(), (com.cleanmaster.ui.app.market.a)localObject2)) && (((com.cleanmaster.ui.app.market.a)localObject2).s().t != 0)) {
              localArrayList3.add(localObject2);
            }
          }
        }
        if (!TextUtils.isEmpty(((com.cleanmaster.ui.app.market.a)localObject2).z)) {
          if (1048 == ((com.cleanmaster.ui.app.market.a)localObject2).p) {
            localObject1 = localObject2;
          } else if ((a(com.keniu.security.d.a(), (com.cleanmaster.ui.app.market.a)localObject2)) && (((com.cleanmaster.ui.app.market.a)localObject2).s().t != 0)) {
            localArrayList3.add(localObject2);
          }
        }
      }
    }
    if ((localObject1 != null) && (localArrayList3.size() > 0))
    {
      localObject2 = localArrayList3.iterator();
      while (((Iterator)localObject2).hasNext())
      {
        localObject3 = (com.cleanmaster.ui.app.market.a)((Iterator)localObject2).next();
        paramArrayList.remove(localObject3);
        localArrayList2.remove(localObject3);
      }
    }
    int i2;
    if (paramArrayList.size() > 0)
    {
      localObject2 = (com.cleanmaster.ui.app.market.a)paramArrayList.remove(0);
      if (((com.cleanmaster.ui.app.market.a)localObject2).s().s == 1) {}
      for (bool1 = true;; bool1 = false)
      {
        ((com.cleanmaster.ui.app.market.a)localObject2).F = bool1;
        localArrayList1.add(localObject2);
        for (i1 = 0; i1 < paramArrayList.size(); i1 = i2 + 1)
        {
          localObject3 = (com.cleanmaster.ui.app.market.a)paramArrayList.get(i1);
          i2 = i1;
          if (((com.cleanmaster.ui.app.market.a)localObject3).z.equalsIgnoreCase(((com.cleanmaster.ui.app.market.a)localObject2).z))
          {
            ((com.cleanmaster.ui.app.market.a)localObject3).F = false;
            localArrayList1.add(localObject3);
            paramArrayList.remove(i1);
            i2 = i1 - 1;
          }
        }
        break;
      }
    }
    localArrayList1.addAll(localArrayList2);
    if (localObject1 != null)
    {
      i2 = localArrayList1.indexOf(localObject1);
      ((com.cleanmaster.ui.app.market.a)localObject1).X = 1048;
      if ((localArrayList3.size() > 0) && (i2 >= 0))
      {
        if (((com.cleanmaster.ui.app.market.a)localObject1).s().s == 1) {}
        for (bool1 = true;; bool1 = false)
        {
          ((com.cleanmaster.ui.app.market.a)localObject1).F = bool1;
          paramArrayList = com.cleanmaster.ui.game.ad.c(localArrayList3);
          int i4 = paramArrayList.size();
          i1 = 0;
          while (i1 < i4)
          {
            localObject1 = (com.cleanmaster.ui.app.market.a)paramArrayList.get(i1);
            ((com.cleanmaster.ui.app.market.a)localObject1).F = false;
            ((com.cleanmaster.ui.app.market.a)localObject1).X = 1048;
            i1 += 1;
          }
        }
        localArrayList1.addAll(i2 + 1, paramArrayList);
      }
    }
    else
    {
      i1 = i3;
      if (localArrayList2.size() > 0)
      {
        i1 = i3;
        if (localArrayList2.get(0) != null)
        {
          paramArrayList = (com.cleanmaster.ui.app.market.a)localArrayList2.get(0);
          if (((com.cleanmaster.ui.app.market.a)localArrayList2.get(0)).s().s != 1) {
            break label1131;
          }
        }
      }
    }
    label1131:
    for (boolean bool1 = bool2;; bool1 = false)
    {
      paramArrayList.F = bool1;
      i1 = i3;
      while (i1 < localArrayList1.size())
      {
        paramArrayList = (com.cleanmaster.ui.app.market.a)localArrayList1.get(i1);
        if ((!TextUtils.isEmpty(paramArrayList.z)) && (localHashMap.containsKey(paramArrayList.z))) {
          paramArrayList.s().g = ((Integer)localHashMap.get(paramArrayList.z)).intValue();
        }
        i1 += 1;
      }
      localArrayList1.remove(localObject1);
      break;
    }
    return localArrayList1;
  }
  
  public static ArrayList<ProcessDataTransferManager.BatteryProcessModel> d(List<com.cleanmaster.boost.process.util.ProcessModel> paramList)
  {
    ArrayList localArrayList = new ArrayList();
    if ((paramList != null) && (!paramList.isEmpty()))
    {
      paramList = paramList.iterator();
      while (paramList.hasNext())
      {
        com.cleanmaster.boost.process.util.ProcessModel localProcessModel = (com.cleanmaster.boost.process.util.ProcessModel)paramList.next();
        ProcessDataTransferManager.BatteryProcessModel localBatteryProcessModel = new ProcessDataTransferManager.BatteryProcessModel();
        localBatteryProcessModel.b = localProcessModel.b();
        localBatteryProcessModel.a = localProcessModel.c;
        localBatteryProcessModel.c = localProcessModel.a();
        localBatteryProcessModel.d = localProcessModel.D;
        localBatteryProcessModel.e = localProcessModel.C;
        localBatteryProcessModel.f = localProcessModel.r;
        localBatteryProcessModel.g = localProcessModel.t;
        localBatteryProcessModel.h = localProcessModel.c();
        localBatteryProcessModel.i = localProcessModel.A;
        localBatteryProcessModel.j = localProcessModel.e();
        localBatteryProcessModel.k = localProcessModel.f;
        localArrayList.add(localBatteryProcessModel);
      }
    }
    return localArrayList;
  }
  
  public static List<CloudMsgInfo> d(int paramInt1, int paramInt2)
  {
    return com.cleanmaster.cloudconfig.cloudmsg.a.a().a(paramInt1, paramInt2);
  }
  
  public static List<com.cleanmaster.ui.resultpage.item.wizard.d> d(Context paramContext, int paramInt)
  {
    return a(paramContext, paramInt, 3);
  }
  
  /* Error */
  public static JSONObject d(Bundle paramBundle)
  {
    // Byte code:
    //   0: new 655	org/json/JSONObject
    //   3: dup
    //   4: invokespecial 714	org/json/JSONObject:<init>	()V
    //   7: astore_2
    //   8: aload_2
    //   9: getstatic 13208	com/in2wow/sdk/k/e:P	Lcom/in2wow/sdk/k/e;
    //   12: aload_0
    //   13: ldc_w 2975
    //   16: invokevirtual 13193	android/os/Bundle:getInt	(Ljava/lang/String;)I
    //   19: invokestatic 1206	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   22: invokestatic 6612	com/in2wow/sdk/k/a:a	(Lorg/json/JSONObject;Lcom/in2wow/sdk/k/e;Ljava/lang/Object;)V
    //   25: aload_2
    //   26: getstatic 13210	com/in2wow/sdk/k/e:O	Lcom/in2wow/sdk/k/e;
    //   29: aload_0
    //   30: ldc_w 2969
    //   33: invokevirtual 13193	android/os/Bundle:getInt	(Ljava/lang/String;)I
    //   36: invokestatic 1206	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   39: invokestatic 6612	com/in2wow/sdk/k/a:a	(Lorg/json/JSONObject;Lcom/in2wow/sdk/k/e;Ljava/lang/Object;)V
    //   42: aload_0
    //   43: invokestatic 15054	LibcoreWrapper/a:c	(Landroid/os/Bundle;)Z
    //   46: ifeq +170 -> 216
    //   49: aload_2
    //   50: getstatic 13212	com/in2wow/sdk/k/e:Q	Lcom/in2wow/sdk/k/e;
    //   53: aload_0
    //   54: ldc_w 3029
    //   57: invokevirtual 2804	android/os/Bundle:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   60: invokestatic 6612	com/in2wow/sdk/k/a:a	(Lorg/json/JSONObject;Lcom/in2wow/sdk/k/e;Ljava/lang/Object;)V
    //   63: aload_2
    //   64: getstatic 6616	com/in2wow/sdk/k/e:b	Lcom/in2wow/sdk/k/e;
    //   67: aload_0
    //   68: ldc_w 2990
    //   71: invokevirtual 2804	android/os/Bundle:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   74: invokestatic 6612	com/in2wow/sdk/k/a:a	(Lorg/json/JSONObject;Lcom/in2wow/sdk/k/e;Ljava/lang/Object;)V
    //   77: aload_0
    //   78: ldc_w 3010
    //   81: invokevirtual 4774	android/os/Bundle:containsKey	(Ljava/lang/String;)Z
    //   84: ifeq +17 -> 101
    //   87: aload_2
    //   88: getstatic 13195	com/in2wow/sdk/k/e:z	Lcom/in2wow/sdk/k/e;
    //   91: aload_0
    //   92: ldc_w 3010
    //   95: invokevirtual 2804	android/os/Bundle:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   98: invokestatic 6612	com/in2wow/sdk/k/a:a	(Lorg/json/JSONObject;Lcom/in2wow/sdk/k/e;Ljava/lang/Object;)V
    //   101: aload_0
    //   102: ldc_w 3008
    //   105: invokevirtual 4774	android/os/Bundle:containsKey	(Ljava/lang/String;)Z
    //   108: ifeq +20 -> 128
    //   111: aload_2
    //   112: getstatic 13197	com/in2wow/sdk/k/e:A	Lcom/in2wow/sdk/k/e;
    //   115: aload_0
    //   116: ldc_w 3008
    //   119: invokevirtual 13193	android/os/Bundle:getInt	(Ljava/lang/String;)I
    //   122: invokestatic 1206	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   125: invokestatic 6612	com/in2wow/sdk/k/a:a	(Lorg/json/JSONObject;Lcom/in2wow/sdk/k/e;Ljava/lang/Object;)V
    //   128: aload_0
    //   129: ldc_w 3012
    //   132: invokevirtual 4774	android/os/Bundle:containsKey	(Ljava/lang/String;)Z
    //   135: ifeq +20 -> 155
    //   138: aload_2
    //   139: getstatic 13201	com/in2wow/sdk/k/e:B	Lcom/in2wow/sdk/k/e;
    //   142: aload_0
    //   143: ldc_w 3012
    //   146: invokevirtual 13193	android/os/Bundle:getInt	(Ljava/lang/String;)I
    //   149: invokestatic 1206	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   152: invokestatic 6612	com/in2wow/sdk/k/a:a	(Lorg/json/JSONObject;Lcom/in2wow/sdk/k/e;Ljava/lang/Object;)V
    //   155: aload_0
    //   156: ldc_w 2980
    //   159: invokevirtual 4774	android/os/Bundle:containsKey	(Ljava/lang/String;)Z
    //   162: ifeq +17 -> 179
    //   165: aload_2
    //   166: getstatic 15056	com/in2wow/sdk/k/e:R	Lcom/in2wow/sdk/k/e;
    //   169: aload_0
    //   170: ldc_w 2980
    //   173: invokevirtual 2804	android/os/Bundle:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   176: invokestatic 6612	com/in2wow/sdk/k/a:a	(Lorg/json/JSONObject;Lcom/in2wow/sdk/k/e;Ljava/lang/Object;)V
    //   179: aload_0
    //   180: ldc_w 15058
    //   183: invokevirtual 4774	android/os/Bundle:containsKey	(Ljava/lang/String;)Z
    //   186: istore_1
    //   187: iload_1
    //   188: ifeq +26 -> 214
    //   191: new 655	org/json/JSONObject
    //   194: dup
    //   195: aload_0
    //   196: ldc_w 15058
    //   199: invokevirtual 2804	android/os/Bundle:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   202: invokespecial 656	org/json/JSONObject:<init>	(Ljava/lang/String;)V
    //   205: astore_0
    //   206: aload_2
    //   207: getstatic 15060	com/in2wow/sdk/k/e:S	Lcom/in2wow/sdk/k/e;
    //   210: aload_0
    //   211: invokestatic 6612	com/in2wow/sdk/k/a:a	(Lorg/json/JSONObject;Lcom/in2wow/sdk/k/e;Ljava/lang/Object;)V
    //   214: aload_2
    //   215: areturn
    //   216: aload_2
    //   217: getstatic 13212	com/in2wow/sdk/k/e:Q	Lcom/in2wow/sdk/k/e;
    //   220: aload_0
    //   221: ldc_w 2982
    //   224: invokevirtual 13193	android/os/Bundle:getInt	(Ljava/lang/String;)I
    //   227: invokestatic 400	java/lang/String:valueOf	(I)Ljava/lang/String;
    //   230: invokestatic 6612	com/in2wow/sdk/k/a:a	(Lorg/json/JSONObject;Lcom/in2wow/sdk/k/e;Ljava/lang/Object;)V
    //   233: aload_2
    //   234: getstatic 6616	com/in2wow/sdk/k/e:b	Lcom/in2wow/sdk/k/e;
    //   237: aload_0
    //   238: ldc_w 2990
    //   241: invokevirtual 13193	android/os/Bundle:getInt	(Ljava/lang/String;)I
    //   244: invokestatic 400	java/lang/String:valueOf	(I)Ljava/lang/String;
    //   247: invokestatic 6612	com/in2wow/sdk/k/a:a	(Lorg/json/JSONObject;Lcom/in2wow/sdk/k/e;Ljava/lang/Object;)V
    //   250: goto -173 -> 77
    //   253: astore_0
    //   254: aload_0
    //   255: invokestatic 3043	com/in2wow/sdk/l/k:a	(Ljava/lang/Throwable;)V
    //   258: aload_2
    //   259: areturn
    //   260: astore_0
    //   261: aconst_null
    //   262: areturn
    //   263: astore_0
    //   264: aload_2
    //   265: areturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	266	0	paramBundle	Bundle
    //   186	2	1	bool	boolean
    //   7	258	2	localJSONObject	JSONObject
    // Exception table:
    //   from	to	target	type
    //   191	214	253	java/lang/Exception
    //   0	8	260	java/lang/Exception
    //   8	77	263	java/lang/Exception
    //   77	101	263	java/lang/Exception
    //   101	128	263	java/lang/Exception
    //   128	155	263	java/lang/Exception
    //   155	179	263	java/lang/Exception
    //   179	187	263	java/lang/Exception
    //   216	250	263	java/lang/Exception
    //   254	258	263	java/lang/Exception
  }
  
  public static void d(int paramInt, String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return;
    }
    com.cleanmaster.base.util.concurrent.BackgroundThread.a(new com.cleanmaster.ui.game.d.b(paramString, paramInt));
  }
  
  public static void d(Context paramContext, int paramInt, com.cleanmaster.base.permission.a paramA)
  {
    if (!com.cleanmaster.base.permission.b.g.a(paramContext)) {
      if (paramA != null) {
        paramA.a(true);
      }
    }
    do
    {
      return;
      if (!com.cleanmaster.configmanager.a.a().a.aK()) {
        break;
      }
    } while (paramA == null);
    paramA.a(true);
    return;
    com.cleanmaster.configmanager.a.a().a.aJ();
    com.cleanmaster.base.permission.b localB = new com.cleanmaster.base.permission.b();
    localB.a = 3;
    localB.b = paramInt;
    a(paramContext, (byte)10).a(localB, paramA);
  }
  
  public static void d(Context paramContext, com.keniu.security.util.d paramD)
  {
    if (paramD == null) {}
    int i1;
    int i2;
    do
    {
      do
      {
        return;
      } while (com.cleanmaster.base.util.system.b.b(paramContext));
      i1 = com.cleanmaster.base.util.system.d.a(paramContext, 8.0F);
      i2 = com.cleanmaster.base.util.system.d.a(paramContext, 2.0F);
      if (paramD.d(-1) != null)
      {
        paramD.d(-1).setTextColor(-1);
        paramD.d(-1).setBackgroundResource(2130839255);
        localLayoutParams = (LinearLayout.LayoutParams)paramD.d(-1).getLayoutParams();
        localLayoutParams.height = com.cleanmaster.base.util.system.d.a(paramContext, 40.0F);
        localLayoutParams.leftMargin = i1;
        localLayoutParams.rightMargin = com.cleanmaster.base.util.system.d.a(paramContext, 4.0F);
        localLayoutParams.bottomMargin = i2;
        localLayoutParams.topMargin = i2;
        paramD.d(-1).setLayoutParams(localLayoutParams);
      }
      a(paramD);
    } while (paramD.d(-2) == null);
    paramD.d(-2).setTextColor(-16777216);
    paramD.d(-2).setBackgroundResource(2130839261);
    LinearLayout.LayoutParams localLayoutParams = (LinearLayout.LayoutParams)paramD.d(-2).getLayoutParams();
    localLayoutParams.height = com.cleanmaster.base.util.system.d.a(paramContext, 40.0F);
    localLayoutParams.rightMargin = i1;
    localLayoutParams.bottomMargin = i2;
    localLayoutParams.topMargin = i2;
    localLayoutParams.leftMargin = com.cleanmaster.base.util.system.d.a(paramContext, 4.0F);
    paramD.d(-2).setLayoutParams(localLayoutParams);
  }
  
  public static void d(Context paramContext, List<String> paramList)
  {
    try
    {
      paramContext = com.in2wow.sdk.b.d.a(paramContext);
      if ((!paramContext.k) || (paramContext.d == null)) {
        return;
      }
      paramContext.d.a(paramList);
      if ((paramList == null) || (paramList.size() == 0))
      {
        com.in2wow.sdk.l.k.a(com.in2wow.sdk.a.b.c, "Audience targeting is empty", new Object[0]);
        return;
      }
      paramContext = new StringBuilder();
      paramList = paramList.iterator();
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        com.in2wow.sdk.l.k.a(paramContext);
        return;
        paramContext.append((String)paramList.next()).append(",");
      }
    }
    catch (Error paramContext)
    {
      com.in2wow.sdk.l.k.a(paramContext);
    }
    if (!paramList.hasNext())
    {
      paramContext.setLength(paramContext.length() - 1);
      paramContext = String.format("AudienceTargeting : set [%s]", new Object[] { paramContext.toString() });
      com.in2wow.sdk.l.k.a(com.in2wow.sdk.a.b.c, paramContext, new Object[0]);
      return;
    }
  }
  
  public static void d(Context paramContext, boolean paramBoolean)
  {
    long l1 = 604800000L;
    com.keniu.security.update.push.c localC = com.keniu.security.update.push.c.a(paramContext);
    if (localC != null)
    {
      if (!TextUtils.isEmpty("push_reg_id_on_server"))
      {
        SharedPreferences.Editor localEditor = localC.a.edit();
        localEditor.putBoolean("push_reg_id_on_server", paramBoolean);
        b(localEditor);
      }
      paramContext = com.keniu.security.update.push.c.a(paramContext);
      if (paramContext != null) {
        l1 = paramContext.b("push_reg_id_life_span", 604800000L);
      }
      l1 += System.currentTimeMillis();
      com.keniu.security.update.push.gcm.a.a();
      new StringBuilder("Setting registeredOnServer status as ").append(paramBoolean).append(" until ").append(new Timestamp(l1));
      localC.a("push_reg_id_expired_time", l1);
    }
  }
  
  /* Error */
  public static void d(View paramView)
  {
    // Byte code:
    //   0: getstatic 336	android/os/Build$VERSION:SDK_INT	I
    //   3: bipush 11
    //   5: if_icmplt +80 -> 85
    //   8: ldc_w 2006
    //   11: ldc_w 15102
    //   14: iconst_0
    //   15: anewarray 936	java/lang/Class
    //   18: invokevirtual 2830	java/lang/Class:getMethod	(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
    //   21: aload_0
    //   22: iconst_0
    //   23: anewarray 5	java/lang/Object
    //   26: invokevirtual 2840	java/lang/reflect/Method:invoke	(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
    //   29: checkcast 1869	java/lang/Boolean
    //   32: invokevirtual 1872	java/lang/Boolean:booleanValue	()Z
    //   35: istore_1
    //   36: iload_1
    //   37: ifeq +48 -> 85
    //   40: ldc_w 2006
    //   43: ldc_w 15104
    //   46: iconst_2
    //   47: anewarray 936	java/lang/Class
    //   50: dup
    //   51: iconst_0
    //   52: getstatic 2668	java/lang/Integer:TYPE	Ljava/lang/Class;
    //   55: aastore
    //   56: dup
    //   57: iconst_1
    //   58: ldc_w 1985
    //   61: aastore
    //   62: invokevirtual 2830	java/lang/Class:getMethod	(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
    //   65: aload_0
    //   66: iconst_2
    //   67: anewarray 5	java/lang/Object
    //   70: dup
    //   71: iconst_0
    //   72: iconst_1
    //   73: invokestatic 1206	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   76: aastore
    //   77: dup
    //   78: iconst_1
    //   79: aconst_null
    //   80: aastore
    //   81: invokevirtual 2840	java/lang/reflect/Method:invoke	(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
    //   84: pop
    //   85: return
    //   86: astore_0
    //   87: return
    //   88: astore_0
    //   89: return
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	90	0	paramView	View
    //   35	2	1	bool	boolean
    // Exception table:
    //   from	to	target	type
    //   8	36	86	java/lang/Exception
    //   40	85	88	java/lang/Exception
  }
  
  public static void d(Object paramObject)
  {
    if (paramObject == null) {
      throw new IllegalArgumentException("null reference");
    }
  }
  
  public static void d(String paramString1, String paramString2, int paramInt)
  {
    if ((TextUtils.isEmpty(paramString1)) || (TextUtils.isEmpty(paramString2))) {
      return;
    }
    com.cleanmaster.ui.app.utils.d.a(com.cleanmaster.ui.app.market.a.a(paramString1), paramString2, paramInt);
  }
  
  public static void d(String paramString, List<com.cmcm.mixad.e> paramList)
  {
    if ((paramList == null) || (paramList.isEmpty()) || (TextUtils.isEmpty(paramString))) {
      return;
    }
    label20:
    label166:
    label176:
    for (;;)
    {
      Object localObject = com.cmcm.mixad.i.a();
      if (localObject == null) {}
      for (localObject = null;; localObject = ((Map)localObject).keySet())
      {
        if (localObject == null) {
          break label176;
        }
        localObject = ((Set)localObject).iterator();
        for (;;)
        {
          if (!((Iterator)localObject).hasNext()) {
            break label20;
          }
          String str1 = (String)((Iterator)localObject).next();
          int i1 = 0;
          for (;;)
          {
            if (i1 >= paramList.size()) {
              break label166;
            }
            String str2 = String.valueOf(paramString + ((com.cmcm.mixad.e)paramList.get(i1)).m + ((com.cmcm.mixad.e)paramList.get(i1)).b());
            if ((!TextUtils.isEmpty(str1)) && (str1.equals(str2))) {
              break;
            }
            if (i1 == paramList.size() - 1) {
              com.cmcm.mixad.i.c(paramString, str1);
            }
            i1 += 1;
          }
        }
      }
    }
  }
  
  public static boolean d()
  {
    int i1 = 3;
    if (e())
    {
      com.cleanmaster.configmanager.d localD = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a());
      long l1 = localD.a("applock_full_ad_last_show_time", 0L);
      if (!android.text.format.DateUtils.isToday(l1))
      {
        localD.ar(0);
        localD.as(0);
        i1 = 0;
      }
      while (i1 == 0)
      {
        return true;
        int i3 = a(1, "app_lock_full_ad", "show_num", 3);
        int i2 = localD.ek();
        if ((i3 != -1) && (i2 >= i3))
        {
          i1 = 1;
        }
        else
        {
          i3 = a(1, "app_lock_full_ad", "show_interval", 1);
          if (localD.el() >= i3)
          {
            new StringBuilder("isRightTimeShowAd: OK; lastFullAdTime = ").append(l1).append("; adShowTimesToday = ").append(i2);
            i1 = 0;
          }
        }
      }
    }
    return false;
  }
  
  public static boolean d(Context paramContext, long paramLong)
  {
    if ((paramContext != null) && (0L != paramLong)) {
      return c(paramLong) == 1;
    }
    return false;
  }
  
  public static boolean d(Context paramContext, String paramString)
  {
    boolean bool1 = false;
    boolean bool2;
    if (paramString != null) {
      bool2 = true;
    }
    try
    {
      paramContext = paramContext.getPackageManager();
      bool1 = bool2;
      if (paramContext != null)
      {
        paramContext = paramContext.getPackageInfo(paramString, 0);
        bool1 = bool2;
        if (paramContext != null)
        {
          paramContext = paramContext.applicationInfo;
          bool1 = bool2;
          if (paramContext != null) {
            bool1 = paramContext.enabled;
          }
        }
      }
      return bool1;
    }
    catch (Exception paramContext) {}
    return true;
  }
  
  private static boolean d(Context paramContext, String paramString1, String paramString2)
  {
    if ((TextUtils.isEmpty(paramString1)) || (TextUtils.isEmpty(paramString2))) {}
    try
    {
      com.cleanmaster.base.util.ui.g.a(com.keniu.security.d.a(), "launch data error");
      Intent localIntent = new Intent("android.intent.action.VIEW", Uri.parse("https://play.google.com/store/apps/details?id=" + paramString1 + "&referrer=utm_source%3D" + paramString2));
      localIntent.setFlags(268435456);
      localIntent.setClassName("com.android.vending", "com.google.android.finsky.activities.MainActivity");
      localIntent.setData(Uri.parse("market://details?id=" + paramString1 + "&referrer=utm_source%3D" + paramString2));
      if (com.cleanmaster.applocklib.bridge.a.a(paramContext, localIntent)) {}
      do
      {
        return true;
        paramString2 = new Intent("android.intent.action.VIEW", Uri.parse("market://details?id=" + paramString1));
        paramString2.setFlags(268435456);
      } while (com.cleanmaster.applocklib.bridge.a.a(paramContext, paramString2));
      paramString1 = new Intent("android.intent.action.VIEW", Uri.parse("https://play.google.com/store/apps/details?id=" + paramString1));
      paramString1.setFlags(268435456);
      return com.cleanmaster.applocklib.bridge.a.a(paramContext, paramString1);
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
  }
  
  public static boolean d(com.cleanmaster.boost.boostengine.autostart.a.a paramA)
  {
    boolean bool2 = true;
    if ((paramA != null) && (!paramA.b))
    {
      boolean bool1;
      if (paramA.l) {
        bool1 = paramA.i.a;
      }
      do
      {
        do
        {
          return bool1;
          if (!paramA.i.a) {
            break;
          }
          bool1 = bool2;
        } while (paramA.i.c);
        if ((!paramA.i.b) || (paramA.i.c)) {
          break;
        }
        bool1 = bool2;
      } while (paramA.k);
    }
    return false;
  }
  
  private static boolean d(com.in2wow.sdk.model.c paramC)
  {
    if (!paramC.e) {}
    for (int i1 = -1; (i1 != -1) && (paramC.z() >= i1); i1 = paramC.f.a) {
      return true;
    }
    return false;
  }
  
  public static boolean d(String paramString1, String paramString2)
  {
    if (TextUtils.isEmpty(paramString1)) {}
    for (;;)
    {
      if (TextUtils.isEmpty(paramString2))
      {
        return false;
        if ("ALL".equalsIgnoreCase(paramString1)) {
          return true;
        }
      }
      else
      {
        paramString1 = com.cleanmaster.base.util.net.b.t(com.keniu.security.d.a());
        if (!TextUtils.isEmpty(paramString1)) {
          paramString1 = paramString1.trim();
        }
        for (;;)
        {
          if (TextUtils.isEmpty(paramString1)) {
            return false;
          }
          StringTokenizer localStringTokenizer = new StringTokenizer(paramString2, ",");
          HashSet localHashSet = new HashSet();
          for (;;)
          {
            if (localStringTokenizer.hasMoreElements()) {}
            try
            {
              String str = (String)localStringTokenizer.nextElement();
              paramString2 = str;
              if (!TextUtils.isEmpty(str)) {
                paramString2 = str.trim();
              }
              if (TextUtils.isEmpty(paramString2)) {
                continue;
              }
              try
              {
                localHashSet.add(paramString2);
              }
              catch (Exception paramString2) {}
            }
            catch (Exception paramString2) {}
            return localHashSet.contains(paramString1);
          }
        }
      }
      paramString2 = paramString1;
    }
  }
  
  public static boolean d(String paramString, boolean paramBoolean)
  {
    paramString = p(paramString, "");
    if (TextUtils.isEmpty(paramString)) {}
    do
    {
      return paramBoolean;
      if (paramString.equalsIgnoreCase("false")) {
        return false;
      }
    } while (!paramString.equalsIgnoreCase("true"));
    return true;
  }
  
  private static File da()
  {
    try
    {
      File localFile = ab.getExternalFilesDir(null);
      return localFile;
    }
    catch (ArrayIndexOutOfBoundsException localArrayIndexOutOfBoundsException)
    {
      return null;
    }
    catch (SecurityException localSecurityException)
    {
      return null;
    }
    catch (NullPointerException localNullPointerException) {}
    return null;
  }
  
  private static ArrayList<String> db()
  {
    Object localObject = com.cmcm.onews.ui.push.f.a(com.cmcm.onews.sdk.e.b.A).a.getString("news_gcm_push_id", "");
    ArrayList localArrayList = new ArrayList();
    localObject = ((String)localObject).split(",");
    int i2 = localObject.length;
    int i1 = 0;
    while (i1 < i2)
    {
      localArrayList.add(localObject[i1]);
      i1 += 1;
    }
    return localArrayList;
  }
  
  public static int e(int paramInt1, int paramInt2)
  {
    if (com.cleanmaster.security.timewall.db.a.a().d(paramInt1) == null)
    {
      com.cleanmaster.security.timewall.db.b localB = new com.cleanmaster.security.timewall.db.b();
      localB.a = paramInt1;
      localB.b = String.valueOf(System.currentTimeMillis());
      localB.c = "";
      com.cleanmaster.security.timewall.db.a.a().a(localB);
      return paramInt2;
    }
    return -1;
  }
  
  public static int e(Context paramContext, float paramFloat)
  {
    return (int)a(paramContext, 10, paramFloat, paramContext.getResources().getDisplayMetrics());
  }
  
  public static int e(String paramString)
  {
    paramString = d(paramString + "oom_adj");
    try
    {
      int i1 = Integer.parseInt(paramString);
      return i1;
    }
    catch (NumberFormatException paramString) {}
    return -32;
  }
  
  private static int e(String paramString, int paramInt)
  {
    for (;;)
    {
      if (paramInt < paramString.length())
      {
        int i1 = paramString.charAt(paramInt);
        if ((((i1 - 65) * (i1 - 90) > 0) && ((i1 - 97) * (i1 - 122) > 0)) || (i1 == 101) || (i1 == 69)) {}
      }
      else
      {
        return paramInt;
      }
      paramInt += 1;
    }
  }
  
  private static int e(ArrayList<com.cleanmaster.ui.resultpage.ctrl.d> paramArrayList)
  {
    paramArrayList = paramArrayList.iterator();
    while (paramArrayList.hasNext()) {
      if (((com.cleanmaster.ui.resultpage.ctrl.d)paramArrayList.next()).d < 0) {
        return 1;
      }
    }
    return 2;
  }
  
  public static long e(Parcel paramParcel, int paramInt)
  {
    b(paramParcel, paramInt, 8);
    return paramParcel.readLong();
  }
  
  private static com.cleanmaster.cleancloud.core.falseproc.p e(byte[] paramArrayOfByte)
  {
    if (paramArrayOfByte.length == 0) {}
    int i2;
    int i1;
    int i3;
    Object localObject;
    com.cleanmaster.cleancloud.core.b.e localE;
    do
    {
      do
      {
        do
        {
          do
          {
            return null;
          } while ((paramArrayOfByte.length < 16) || (paramArrayOfByte[0] != 1));
          i2 = com.cleanmaster.base.util.b.b.b(paramArrayOfByte, 4);
          i1 = com.cleanmaster.base.util.b.b.b(paramArrayOfByte, 8);
        } while ((i1 <= 0) || (i1 > paramArrayOfByte.length - 16) || (i1 < 12));
        i3 = com.cleanmaster.base.util.b.b.b(paramArrayOfByte, 12);
        localObject = new CRC32();
        ((CRC32)localObject).update(paramArrayOfByte, 16, i1);
      } while ((int)((CRC32)localObject).getValue() != i3);
      localObject = new com.cleanmaster.cleancloud.core.falseproc.p();
      localE = new com.cleanmaster.cleancloud.core.b.e();
      ((com.cleanmaster.cleancloud.core.falseproc.p)localObject).a = i2;
      ((com.cleanmaster.cleancloud.core.falseproc.p)localObject).b = localE;
      localE.a = com.cleanmaster.base.util.b.b.b(paramArrayOfByte, 16);
      localE.b = com.cleanmaster.base.util.b.b.b(paramArrayOfByte, 20);
      i3 = com.cleanmaster.base.util.b.b.b(paramArrayOfByte, 24);
    } while (i3 > (i1 - 12) / 4);
    if (i3 > 0)
    {
      localE.c = new int[i3];
      i2 = 28;
      i1 = 0;
      while (i1 < i3)
      {
        localE.c[i1] = com.cleanmaster.base.util.b.b.b(paramArrayOfByte, i2);
        i2 += 4;
        i1 += 1;
      }
    }
    return localObject;
  }
  
  public static TriggerResponse e(JSONObject paramJSONObject)
  {
    Object localObject;
    for (;;)
    {
      try
      {
        localObject = paramJSONObject.optString("action", "").toUpperCase();
        if (((String)localObject).equals("REDIRECT"))
        {
          localObject = new RedirectHandler();
          if (((TriggerResponse)localObject).a(paramJSONObject)) {
            break;
          }
          return null;
        }
        if (((String)localObject).equals("INSTALL"))
        {
          localObject = new InstallHandler();
          continue;
        }
        if (!((String)localObject).equals("TRACKING")) {
          break label90;
        }
      }
      catch (Exception paramJSONObject)
      {
        com.in2wow.sdk.l.k.a(paramJSONObject);
        return null;
      }
      localObject = new ThirdPartyTrackingHanlder();
      continue;
      label90:
      if (((String)localObject).equals("CUSTOM")) {
        localObject = new CustomHandler();
      } else {
        localObject = new CommonHandler();
      }
    }
    return localObject;
  }
  
  public static com.lock.push.a.a e(String paramString, boolean paramBoolean)
  {
    if (paramString == null)
    {
      A("wpush", "WeatherMsgParser parse err,empty json string");
      label13:
      return null;
    }
    for (;;)
    {
      try
      {
        JSONObject localJSONObject = new JSONObject(paramString);
        String str = localJSONObject.optString("section");
        int i1 = localJSONObject.optInt("channel");
        int i2 = localJSONObject.optInt("action");
        if ((!"inside".equals(str)) || (40 != i1)) {
          break;
        }
        switch (i2)
        {
        default: 
          paramString = null;
          if (paramString == null) {
            break label13;
          }
          paramString.c = i2;
          paramString.d = i1;
          paramString.b = str;
          paramString.a = localJSONObject.optString("pushid");
          paramString.h = localJSONObject.optString("citycode");
          paramString.i = localJSONObject.optString("cityinfo");
          paramString.e = localJSONObject.optInt("report_ratio");
          if (!paramBoolean)
          {
            paramString.f = localJSONObject.optLong("starttime");
            paramString.g = localJSONObject.optLong("endtime");
            paramString.a(localJSONObject);
          }
          return paramString;
        }
      }
      catch (JSONException paramString)
      {
        A("wpush", "WeatherMsgParser parse json err");
        return null;
      }
      paramString = new com.lock.push.a.b();
    }
  }
  
  public static com.my.target.core.f.b.b e(com.my.target.core.f.b.f paramF, String paramString, com.my.target.core.parsers.a paramA)
  {
    try
    {
      paramF = (com.my.target.core.f.b.b)paramF;
      return paramF;
    }
    catch (Exception paramF)
    {
      a("Unable to cast to standard section field '" + paramString + "', Operation: " + paramA.d + ", Unit: " + paramA.e, paramA, paramF, "Class cast exception");
    }
    return null;
  }
  
  public static File e(File paramFile)
  {
    try
    {
      File localFile = paramFile.getCanonicalFile();
      return localFile;
    }
    catch (NoSuchElementException localNoSuchElementException)
    {
      if (Build.VERSION.SDK_INT >= 8) {}
    }
    try
    {
      Class.forName("org.apache.harmony.luni.internal.io.FileCanonPathCache").getMethod("clear", new Class[0]).invoke(null, new Object[0]);
      return paramFile.getCanonicalFile();
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
  }
  
  public static String e(int paramInt, String paramString)
  {
    Object localObject2 = null;
    Object localObject1;
    if (paramInt == 2) {
      localObject1 = bC(paramString);
    }
    do
    {
      do
      {
        return localObject1;
        if (paramInt == 3) {
          return bB(paramString);
        }
        if (paramInt == 4) {
          throw new RuntimeException("Deprecated function been called.");
        }
        localObject1 = localObject2;
      } while (paramString == null);
      localObject1 = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a());
      com.keniu.security.update.f.a();
      paramString = ((com.cleanmaster.configmanager.d)localObject1).a("fv_" + paramString, "");
      if (paramString == null) {
        break;
      }
      localObject1 = localObject2;
    } while (paramString.compareTo("") == 0);
    return paramString;
  }
  
  public static String e(long paramLong)
  {
    float f1;
    String str;
    Object localObject;
    if (paramLong >= 1048576000L)
    {
      f1 = (float)(paramLong / 1.073741824E9D);
      str = "GB";
      if (f1 <= 100.0F) {
        break label141;
      }
      localObject = "#0";
    }
    for (;;)
    {
      localObject = new DecimalFormat((String)localObject);
      DecimalFormatSymbols localDecimalFormatSymbols = ((DecimalFormat)localObject).getDecimalFormatSymbols();
      localDecimalFormatSymbols.setDecimalSeparator('.');
      ((DecimalFormat)localObject).setDecimalFormatSymbols(localDecimalFormatSymbols);
      localObject = ((DecimalFormat)localObject).format(f1);
      return ((String)localObject).replaceAll("-", ".") + str;
      if (paramLong >= 1024000L)
      {
        f1 = (float)(paramLong / 1048576.0D);
        str = "MB";
        break;
      }
      f1 = (float)(paramLong / 1024.0D);
      str = "KB";
      break;
      label141:
      if (f1 > 10.0F) {
        localObject = "#0.0";
      } else {
        localObject = "#0.00";
      }
    }
  }
  
  public static String e(String paramString1, String paramString2, String paramString3)
  {
    if (com.cleanmaster.base.util.system.o.h()) {
      return com.cleanmaster.cloudconfig.b.a().a(paramString1, paramString2, paramString3);
    }
    try
    {
      paramString1 = com.cleanmaster.synipc.b.a().c().a(paramString1, paramString2, paramString3);
      return paramString1;
    }
    catch (RemoteException paramString1)
    {
      paramString1.printStackTrace();
    }
    return paramString3;
  }
  
  public static String e(Collection<String> paramCollection)
  {
    String str = "";
    try
    {
      if (paramCollection.size() > 0) {
        str = Arrays.toString(paramCollection.toArray(new String[paramCollection.size()]));
      }
      return str;
    }
    catch (Exception paramCollection) {}
    return "";
  }
  
  public static String e(Map<String, String> paramMap)
  {
    paramMap = (String)paramMap.get("Content-Type");
    if (paramMap != null)
    {
      paramMap = paramMap.split(";");
      int i1 = 1;
      while (i1 < paramMap.length)
      {
        String[] arrayOfString = paramMap[i1].trim().split("=");
        if ((arrayOfString.length == 2) && (arrayOfString[0].equals("charset"))) {
          return arrayOfString[1];
        }
        i1 += 1;
      }
    }
    return "ISO-8859-1";
  }
  
  public static ArrayList<com.cleanmaster.boost.process.util.ProcessModel> e(List<ProcessDataTransferManager.BatteryProcessModel> paramList)
  {
    ArrayList localArrayList = new ArrayList();
    if ((paramList != null) && (!paramList.isEmpty()))
    {
      paramList = paramList.iterator();
      while (paramList.hasNext())
      {
        ProcessDataTransferManager.BatteryProcessModel localBatteryProcessModel = (ProcessDataTransferManager.BatteryProcessModel)paramList.next();
        com.cleanmaster.boost.process.util.ProcessModel localProcessModel = new com.cleanmaster.boost.process.util.ProcessModel();
        localProcessModel.b = localBatteryProcessModel.b;
        localProcessModel.c = localBatteryProcessModel.a;
        localProcessModel.w = localBatteryProcessModel.c;
        localProcessModel.D = localBatteryProcessModel.d;
        localProcessModel.b(localBatteryProcessModel.e);
        localProcessModel.r = localBatteryProcessModel.f;
        localProcessModel.t = localBatteryProcessModel.g;
        localProcessModel.a(localBatteryProcessModel.h);
        localProcessModel.A = localBatteryProcessModel.i;
        if (localBatteryProcessModel.j != null)
        {
          Iterator localIterator = localBatteryProcessModel.j.iterator();
          while (localIterator.hasNext()) {
            localProcessModel.b(((Integer)localIterator.next()).intValue());
          }
        }
        localProcessModel.f = localBatteryProcessModel.k;
        localArrayList.add(localProcessModel);
      }
    }
    return localArrayList;
  }
  
  public static List<com.cleanmaster.ui.resultpage.item.wizard.d> e(Context paramContext, int paramInt)
  {
    return a(paramContext, paramInt, 1);
  }
  
  public static JSONObject e(Bundle paramBundle)
  {
    try
    {
      JSONObject localJSONObject = new JSONObject();
      return localJSONObject;
    }
    catch (Exception paramBundle)
    {
      try
      {
        com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.y, Integer.valueOf(paramBundle.getInt("adid")));
        com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.v, Integer.valueOf(paramBundle.getInt("duration")));
        com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.w, Integer.valueOf(paramBundle.getInt("percentage")));
        if (paramBundle.containsKey("placement")) {
          com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.z, paramBundle.getString("placement"));
        }
        com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.A, Integer.valueOf(paramBundle.getInt("place")));
        com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.x, Boolean.valueOf(paramBundle.getBoolean("engaged")));
        com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.a, Integer.valueOf(paramBundle.getInt("ad_version")));
        com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.b, Integer.valueOf(paramBundle.getInt("creative_id")));
        com.in2wow.sdk.k.a.a(localJSONObject, com.in2wow.sdk.k.e.o, paramBundle.getString("token"));
        return localJSONObject;
      }
      catch (Exception paramBundle) {}
      paramBundle = paramBundle;
      return null;
    }
  }
  
  public static void e(Context paramContext, int paramInt, com.cleanmaster.base.permission.a paramA)
  {
    int i1 = 0;
    int i5 = 1;
    WeakReference localWeakReference = new WeakReference(paramContext);
    int i4;
    int i3;
    label47:
    int i2;
    label68:
    am localAm1;
    label100:
    am localAm2;
    if (Build.VERSION.SDK_INT >= 21)
    {
      i4 = 1;
      boolean bool1 = android.support.v4.a.d.a(paramContext);
      if ((!g()) && (!android.support.v4.a.d.b())) {
        break label250;
      }
      i3 = 1;
      boolean bool2 = com.cleanmaster.base.permission.b.g.a(paramContext);
      boolean bool3 = com.cleanmaster.base.util.system.q.a();
      if (android.support.v4.a.d.a(paramContext)) {
        break label256;
      }
      i2 = 1;
      boolean bool4 = N(paramContext);
      if (!com.cleanmaster.base.permission.b.g.a(paramContext)) {
        i1 = 1;
      }
      localAm1 = new am();
      if (i4 == 0) {
        break label262;
      }
      i4 = 2;
      localAm2 = localAm1.a(i4);
      if (!bool1) {
        break label268;
      }
      i4 = 2;
      label117:
      localAm2 = localAm2.b(i4);
      if (i3 == 0) {
        break label274;
      }
      i3 = 2;
      label134:
      localAm2 = localAm2.c(i3);
      if (!bool2) {
        break label280;
      }
      i3 = 2;
      label151:
      localAm2 = localAm2.d(i3);
      if (!bool3) {
        break label286;
      }
      i3 = 1;
      label168:
      localAm2 = localAm2.e(i3);
      if (i2 == 0) {
        break label292;
      }
      i2 = 1;
      label185:
      localAm2 = localAm2.f(i2);
      if (!bool4) {
        break label298;
      }
      i2 = 1;
      label202:
      localAm2 = localAm2.g(i2);
      if (i1 == 0) {
        break label304;
      }
    }
    label250:
    label256:
    label262:
    label268:
    label274:
    label280:
    label286:
    label292:
    label298:
    label304:
    for (i1 = i5;; i1 = 2)
    {
      localAm2.h(i1);
      b(paramContext, paramInt, new com.cleanmaster.settings.ui.e(localWeakReference, localAm1, paramA, paramInt));
      return;
      i4 = 0;
      break;
      i3 = 0;
      break label47;
      i2 = 0;
      break label68;
      i4 = 1;
      break label100;
      i4 = 1;
      break label117;
      i3 = 1;
      break label134;
      i3 = 1;
      break label151;
      i3 = 2;
      break label168;
      i2 = 2;
      break label185;
      i2 = 2;
      break label202;
    }
  }
  
  public static void e(Context paramContext, com.keniu.security.util.d paramD)
  {
    if (paramD == null) {}
    int i1;
    do
    {
      do
      {
        return;
      } while (com.cleanmaster.base.util.system.b.b(paramContext));
      i1 = com.cleanmaster.base.util.system.d.a(paramContext, 6.0F);
      if (paramD.d(-2) != null)
      {
        paramD.d(-2).setTextColor(-1);
        paramD.d(-2).setBackgroundResource(2130839215);
        localLayoutParams = (LinearLayout.LayoutParams)paramD.d(-2).getLayoutParams();
        localLayoutParams.height = com.cleanmaster.base.util.system.d.a(paramContext, 40.0F);
        localLayoutParams.setMargins(i1 / 2, i1, i1, i1);
        paramD.d(-2).setLayoutParams(localLayoutParams);
      }
      a(paramD);
    } while (paramD.d(-1) == null);
    paramD.d(-1).setTextColor(-16777216);
    paramD.d(-1).setBackgroundResource(2130839261);
    LinearLayout.LayoutParams localLayoutParams = (LinearLayout.LayoutParams)paramD.d(-1).getLayoutParams();
    localLayoutParams.height = com.cleanmaster.base.util.system.d.a(paramContext, 40.0F);
    localLayoutParams.setMargins(i1, i1, i1 / 2, i1);
    paramD.d(-1).setLayoutParams(localLayoutParams);
  }
  
  /* Error */
  private static void e(Context paramContext, boolean paramBoolean)
  {
    // Byte code:
    //   0: ldc 2
    //   2: monitorenter
    //   3: aload_0
    //   4: invokestatic 7390	com/in2wow/sdk/b/d:a	(Landroid/content/Context;)Lcom/in2wow/sdk/b/d;
    //   7: astore_2
    //   8: aload_2
    //   9: iload_1
    //   10: putfield 15389	com/in2wow/sdk/b/d:m	Z
    //   13: aload_2
    //   14: getfield 15390	com/in2wow/sdk/b/d:l	Z
    //   17: ifne +183 -> 200
    //   20: iload_1
    //   21: ifeq +36 -> 57
    //   24: aload_2
    //   25: getfield 15391	com/in2wow/sdk/b/d:a	Landroid/content/Context;
    //   28: ifnull +29 -> 57
    //   31: new 7019	android/os/Handler
    //   34: dup
    //   35: aload_2
    //   36: getfield 15391	com/in2wow/sdk/b/d:a	Landroid/content/Context;
    //   39: invokevirtual 15395	android/content/Context:getMainLooper	()Landroid/os/Looper;
    //   42: invokespecial 15398	android/os/Handler:<init>	(Landroid/os/Looper;)V
    //   45: new 15400	com/in2wow/sdk/b/d$2
    //   48: dup
    //   49: aload_2
    //   50: invokespecial 15403	com/in2wow/sdk/b/d$2:<init>	(Lcom/in2wow/sdk/b/d;)V
    //   53: invokevirtual 8682	android/os/Handler:post	(Ljava/lang/Runnable;)Z
    //   56: pop
    //   57: aload_0
    //   58: instanceof 2070
    //   61: ifeq +135 -> 196
    //   64: aload_0
    //   65: invokestatic 7390	com/in2wow/sdk/b/d:a	(Landroid/content/Context;)Lcom/in2wow/sdk/b/d;
    //   68: astore_2
    //   69: aload_0
    //   70: checkcast 2070	android/app/Activity
    //   73: astore_0
    //   74: aload_2
    //   75: getfield 7713	com/in2wow/sdk/b/d:k	Z
    //   78: ifeq +118 -> 196
    //   81: aload_0
    //   82: ifnull +114 -> 196
    //   85: aload_2
    //   86: getfield 15406	com/in2wow/sdk/b/d:i	Lcom/in2wow/sdk/b/a/a;
    //   89: astore_3
    //   90: aload_2
    //   91: getfield 8028	com/in2wow/sdk/b/d:d	Lcom/in2wow/sdk/h/c;
    //   94: astore 4
    //   96: aload_2
    //   97: getfield 12037	com/in2wow/sdk/b/d:e	Lcom/in2wow/sdk/b/g;
    //   100: astore 5
    //   102: aload_0
    //   103: ifnull +129 -> 232
    //   106: aload_0
    //   107: invokevirtual 15409	android/app/Activity:getIntent	()Landroid/content/Intent;
    //   110: astore 6
    //   112: aload 6
    //   114: ifnull +118 -> 232
    //   117: aload 6
    //   119: invokevirtual 2855	android/content/Intent:getData	()Landroid/net/Uri;
    //   122: ifnull +110 -> 232
    //   125: aload 6
    //   127: invokevirtual 2855	android/content/Intent:getData	()Landroid/net/Uri;
    //   130: invokevirtual 15410	android/net/Uri:getHost	()Ljava/lang/String;
    //   133: astore 7
    //   135: aload 7
    //   137: ifnull +95 -> 232
    //   140: aload 7
    //   142: ldc_w 15412
    //   145: invokevirtual 450	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   148: ifne +14 -> 162
    //   151: aload 7
    //   153: ldc_w 15414
    //   156: invokevirtual 450	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   159: ifeq +73 -> 232
    //   162: aload_3
    //   163: aload 6
    //   165: invokevirtual 2855	android/content/Intent:getData	()Landroid/net/Uri;
    //   168: aload_0
    //   169: aload 4
    //   171: aload 5
    //   173: invokevirtual 15419	com/in2wow/sdk/b/a/a:a	(Landroid/net/Uri;Landroid/content/Context;Lcom/in2wow/sdk/h/c;Lcom/in2wow/sdk/b/g;)Ljava/lang/String;
    //   176: astore_0
    //   177: aload_0
    //   178: aload_2
    //   179: invokevirtual 15422	com/in2wow/sdk/b/d:h	()Lcom/in2wow/sdk/a/e;
    //   182: aload_2
    //   183: getfield 8028	com/in2wow/sdk/b/d:d	Lcom/in2wow/sdk/h/c;
    //   186: invokestatic 15425	com/in2wow/sdk/b/a/a:a	(Ljava/lang/String;Lcom/in2wow/sdk/a/e;Lcom/in2wow/sdk/h/c;)Z
    //   189: ifeq +7 -> 196
    //   192: aload_2
    //   193: invokevirtual 15426	com/in2wow/sdk/b/d:b	()V
    //   196: ldc 2
    //   198: monitorexit
    //   199: return
    //   200: aload_2
    //   201: getfield 7713	com/in2wow/sdk/b/d:k	Z
    //   204: ifeq -147 -> 57
    //   207: aload_2
    //   208: getfield 8028	com/in2wow/sdk/b/d:d	Lcom/in2wow/sdk/h/c;
    //   211: iload_1
    //   212: invokevirtual 15427	com/in2wow/sdk/h/c:a	(Z)V
    //   215: goto -158 -> 57
    //   218: astore_0
    //   219: aload_0
    //   220: invokestatic 3043	com/in2wow/sdk/l/k:a	(Ljava/lang/Throwable;)V
    //   223: goto -27 -> 196
    //   226: astore_0
    //   227: ldc 2
    //   229: monitorexit
    //   230: aload_0
    //   231: athrow
    //   232: aconst_null
    //   233: astore_0
    //   234: goto -57 -> 177
    //   237: astore_0
    //   238: aload_0
    //   239: invokestatic 3043	com/in2wow/sdk/l/k:a	(Ljava/lang/Throwable;)V
    //   242: goto -46 -> 196
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	245	0	paramContext	Context
    //   0	245	1	paramBoolean	boolean
    //   7	201	2	localD	com.in2wow.sdk.b.d
    //   89	74	3	localA	com.in2wow.sdk.b.a.a
    //   94	76	4	localC	com.in2wow.sdk.h.c
    //   100	72	5	localG	com.in2wow.sdk.b.g
    //   110	54	6	localIntent	Intent
    //   133	19	7	str	String
    // Exception table:
    //   from	to	target	type
    //   3	20	218	java/lang/Exception
    //   24	57	218	java/lang/Exception
    //   57	81	218	java/lang/Exception
    //   85	102	218	java/lang/Exception
    //   106	112	218	java/lang/Exception
    //   117	135	218	java/lang/Exception
    //   140	162	218	java/lang/Exception
    //   162	177	218	java/lang/Exception
    //   177	196	218	java/lang/Exception
    //   200	215	218	java/lang/Exception
    //   3	20	226	finally
    //   24	57	226	finally
    //   57	81	226	finally
    //   85	102	226	finally
    //   106	112	226	finally
    //   117	135	226	finally
    //   140	162	226	finally
    //   162	177	226	finally
    //   177	196	226	finally
    //   200	215	226	finally
    //   219	223	226	finally
    //   238	242	226	finally
    //   3	20	237	java/lang/Error
    //   24	57	237	java/lang/Error
    //   57	81	237	java/lang/Error
    //   85	102	237	java/lang/Error
    //   106	112	237	java/lang/Error
    //   117	135	237	java/lang/Error
    //   140	162	237	java/lang/Error
    //   162	177	237	java/lang/Error
    //   177	196	237	java/lang/Error
    //   200	215	237	java/lang/Error
  }
  
  public static void e(String paramString1, String paramString2, int paramInt)
  {
    if ((TextUtils.isEmpty(paramString1)) || (TextUtils.isEmpty(paramString2))) {
      return;
    }
    com.cleanmaster.ui.app.utils.d.b(com.cleanmaster.ui.app.market.a.a(paramString1), paramString2, paramInt);
  }
  
  public static boolean e()
  {
    return a(1, "app_lock_full_ad", "full_ad_enabled", true);
  }
  
  public static boolean e(Context paramContext)
  {
    Object localObject = null;
    Context localContext = null;
    if (new File("/data/data/" + paramContext.getPackageName() + "/databases/webviewCache.db").exists()) {
      return false;
    }
    try
    {
      paramContext = paramContext.openOrCreateDatabase("webviewCache.db", 0, null);
      if (paramContext != null)
      {
        localContext = paramContext;
        localObject = paramContext;
        paramContext.close();
        return false;
      }
    }
    catch (Exception paramContext)
    {
      localObject = localContext;
      paramContext.printStackTrace();
      if (localContext != null) {
        localContext.close();
      }
      for (;;)
      {
        return true;
        if (paramContext != null) {
          paramContext.close();
        }
      }
    }
    finally
    {
      if (localObject != null) {
        ((SQLiteDatabase)localObject).close();
      }
    }
  }
  
  public static boolean e(Context paramContext, String paramString)
  {
    Object localObject = null;
    try
    {
      com.cleanmaster.activitymanagerhelper.a localA = new com.cleanmaster.activitymanagerhelper.a();
      localA.a = com.cmcm.rtstub.a.a();
      paramContext = localA.a(paramContext);
      if (paramContext == null) {
        return false;
      }
      paramContext = paramContext.iterator();
      while (paramContext.hasNext()) {
        if (((RunningAppProcessInfo)paramContext.next()).processName.equals(paramString)) {
          return true;
        }
      }
      return false;
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext = localObject;
      }
    }
  }
  
  public static boolean e(View paramView)
  {
    if (Build.VERSION.SDK_INT >= 11) {
      try
      {
        boolean bool = ((Boolean)View.class.getMethod("isHardwareAccelerated", new Class[0]).invoke(paramView, new Object[0])).booleanValue();
        return bool;
      }
      catch (Exception paramView) {}
    }
    return false;
  }
  
  public static boolean e(com.cleanmaster.boost.boostengine.autostart.a.a paramA)
  {
    if (paramA == null) {}
    do
    {
      do
      {
        return false;
        if (!paramA.l) {
          break;
        }
      } while ((paramA.b) || (d(paramA)) || (paramA.m == com.cleanmaster.base.util.system.m.a));
      return true;
    } while ((paramA.b) || (!paramA.k) || (paramA.g != 0) || (d(paramA)));
    return true;
  }
  
  private static boolean e(com.in2wow.sdk.model.c paramC)
  {
    int i1 = paramC.r();
    return (i1 == -1) || (i1 > 0);
  }
  
  /* Error */
  public static boolean e(String paramString1, String paramString2)
  {
    // Byte code:
    //   0: aload_0
    //   1: invokestatic 166	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   4: ifne +10 -> 14
    //   7: aload_1
    //   8: invokestatic 166	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   11: ifeq +5 -> 16
    //   14: iconst_0
    //   15: ireturn
    //   16: new 1599	android/content/ComponentName
    //   19: dup
    //   20: aload_0
    //   21: aload_1
    //   22: invokespecial 10456	android/content/ComponentName:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   25: astore_1
    //   26: invokestatic 10637	LibcoreWrapper/a:al	()Z
    //   29: ifeq +79 -> 108
    //   32: invokestatic 10642	com/cmcm/rtstub/a:a	()Lcom/cmcm/rtstub/a;
    //   35: aload_1
    //   36: iconst_0
    //   37: invokevirtual 10645	com/cmcm/rtstub/a:a	(Landroid/content/ComponentName;Z)V
    //   40: aload_0
    //   41: invokestatic 15455	com/cleanmaster/boost/process/util/m:b	(Ljava/lang/String;)Z
    //   44: pop
    //   45: new 10661	com/cleanmaster/boost/boostengine/autostart/a/b
    //   48: dup
    //   49: invokespecial 15456	com/cleanmaster/boost/boostengine/autostart/a/b:<init>	()V
    //   52: astore_2
    //   53: aload_2
    //   54: aload_0
    //   55: invokevirtual 10674	com/cleanmaster/boost/boostengine/autostart/a/b:a	(Ljava/lang/String;)Lcom/cleanmaster/boost/autostarts/core/FreqStartApp;
    //   58: astore_3
    //   59: aload_2
    //   60: getfield 15458	com/cleanmaster/boost/boostengine/autostart/a/b:c	Ljava/lang/Object;
    //   63: astore_1
    //   64: aload_1
    //   65: monitorenter
    //   66: aload_3
    //   67: ifnull +21 -> 88
    //   70: aload_2
    //   71: getfield 15459	com/cleanmaster/boost/boostengine/autostart/a/b:a	Ljava/util/List;
    //   74: ifnull +14 -> 88
    //   77: aload_2
    //   78: getfield 15459	com/cleanmaster/boost/boostengine/autostart/a/b:a	Ljava/util/List;
    //   81: aload_3
    //   82: invokeinterface 10049 2 0
    //   87: pop
    //   88: aload_1
    //   89: monitorexit
    //   90: aload_2
    //   91: invokevirtual 15462	com/cleanmaster/boost/boostengine/autostart/a/b:a	()Lcom/cleanmaster/synipc/IAutostartService;
    //   94: astore_1
    //   95: aload_1
    //   96: ifnull +10 -> 106
    //   99: aload_1
    //   100: aload_0
    //   101: invokeinterface 15465 2 0
    //   106: iconst_1
    //   107: ireturn
    //   108: invokestatic 7549	com/cm/root/d:a	()Lcom/cm/root/d;
    //   111: aload_1
    //   112: iconst_0
    //   113: invokevirtual 10646	com/cm/root/d:a	(Landroid/content/ComponentName;Z)V
    //   116: goto -76 -> 40
    //   119: astore_0
    //   120: aload_1
    //   121: monitorexit
    //   122: aload_0
    //   123: athrow
    //   124: astore_0
    //   125: aload_0
    //   126: invokevirtual 1408	android/os/RemoteException:printStackTrace	()V
    //   129: goto -23 -> 106
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	132	0	paramString1	String
    //   0	132	1	paramString2	String
    //   52	39	2	localB	com.cleanmaster.boost.boostengine.autostart.a.b
    //   58	24	3	localFreqStartApp	FreqStartApp
    // Exception table:
    //   from	to	target	type
    //   70	88	119	finally
    //   88	90	119	finally
    //   120	122	119	finally
    //   99	106	124	android/os/RemoteException
  }
  
  public static boolean e(boolean paramBoolean)
  {
    if (paramBoolean) {}
    for (String str = "rtmtda"; 1 == com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).a(str, 2); str = "rtmtdp") {
      return true;
    }
    return false;
  }
  
  public static long[] e(int paramInt)
  {
    localObject1 = new File("/proc/uid_stat/").list();
    if (localObject1 == null) {
      return null;
    }
    if (!Arrays.asList((Object[])localObject1).contains(String.valueOf(paramInt))) {
      return null;
    }
    localObject1 = new File("/proc/uid_stat/" + String.valueOf(paramInt));
    Object localObject2 = new File((File)localObject1, "tcp_rcv");
    Object localObject3 = new File((File)localObject1, "tcp_snd");
    localObject1 = "0";
    for (;;)
    {
      try
      {
        localObject2 = new BufferedReader(new FileReader((File)localObject2));
        localObject3 = new BufferedReader(new FileReader((File)localObject3));
        localObject2 = ((BufferedReader)localObject2).readLine();
        localObject1 = localObject2;
        if (localObject1 == null) {
          continue;
        }
      }
      catch (IOException localIOException1)
      {
        String str2 = "0";
        continue;
        localObject1 = ((String)localObject1).trim();
        str2 = str2.trim();
        try
        {
          long l1 = Long.valueOf((String)localObject1).longValue();
          long l2 = Long.valueOf(str2).longValue();
          return new long[] { l1, l2 };
        }
        catch (NumberFormatException localNumberFormatException)
        {
          return null;
        }
        String str3;
        String str1 = "0";
        continue;
      }
      try
      {
        localObject2 = ((BufferedReader)localObject3).readLine();
        if (localObject2 == null) {
          continue;
        }
      }
      catch (IOException localIOException2)
      {
        continue;
        str3 = "0";
      }
    }
    if ((TextUtils.isEmpty((CharSequence)localObject1)) || (TextUtils.isEmpty((CharSequence)localObject2))) {
      return null;
    }
  }
  
  public static int f(Context paramContext, float paramFloat)
  {
    return (int)a(paramContext, 8, paramFloat, paramContext.getResources().getDisplayMetrics());
  }
  
  public static int f(String paramString)
  {
    int i3 = 1;
    paramString = d(paramString + "status").split(System.getProperty("line.separator"));
    int i4 = paramString.length;
    int i1 = 0;
    for (;;)
    {
      int i2 = i3;
      String[] arrayOfString;
      if (i1 < i4)
      {
        arrayOfString = paramString[i1];
        if (!arrayOfString.contains("PPid:")) {
          break label95;
        }
        arrayOfString = arrayOfString.split(":");
        if (arrayOfString.length != 2) {
          break label95;
        }
      }
      label95:
      try
      {
        i2 = Integer.parseInt(arrayOfString[1].trim());
        return i2;
      }
      catch (NumberFormatException paramString) {}
      i1 += 1;
    }
    return 1;
  }
  
  private static com.cleanmaster.ui.resultpage.ctrl.d f(ArrayList<com.cleanmaster.ui.resultpage.ctrl.d> paramArrayList)
  {
    int i3 = paramArrayList.size();
    int[] arrayOfInt = new int[i3];
    int i2 = 0;
    int i1 = 0;
    while (i2 < i3)
    {
      i1 += ((com.cleanmaster.ui.resultpage.ctrl.d)paramArrayList.get(i2)).d;
      arrayOfInt[i2] = i1;
      i2 += 1;
    }
    if (i1 < 100) {
      i1 = 100;
    }
    for (;;)
    {
      double d1 = Math.random();
      i1 = a(arrayOfInt, (int)Math.floor(i1 * d1));
      if ((i1 >= i3) || (i1 < 0)) {
        return null;
      }
      return (com.cleanmaster.ui.resultpage.ctrl.d)paramArrayList.get(i1);
    }
  }
  
  public static String f(long paramLong)
  {
    if (paramLong > 1073741824L) {
      return a(paramLong, "#0.00");
    }
    return a(paramLong, "#0");
  }
  
  public static String f(Context paramContext)
  {
    Object localObject1 = aH(paramContext);
    int i1;
    if (localObject1 != null)
    {
      paramContext = new String[localObject1.length];
      i1 = 0;
      for (;;)
      {
        localContext = paramContext;
        if (i1 >= localObject1.length) {
          break;
        }
        paramContext[i1] = localObject1[i1].name;
        i1 += 1;
      }
    }
    Context localContext = null;
    Object localObject4;
    Object localObject2;
    Object localObject7;
    Object localObject6;
    Object localObject5;
    Object localObject3;
    if (localContext != null)
    {
      int i2 = localContext.length;
      localObject4 = "";
      localObject1 = "";
      localObject2 = "";
      paramContext = "";
      i1 = 0;
      localObject7 = localObject4;
      localObject6 = localObject1;
      localObject5 = localObject2;
      localObject3 = paramContext;
      if (i1 >= i2) {
        break label269;
      }
      localObject3 = localContext[i1];
      if ((TextUtils.isEmpty((CharSequence)localObject3)) || (!bk((String)localObject3))) {
        break label316;
      }
      localObject3 = ((String)localObject3).toLowerCase();
      if ((TextUtils.isEmpty(paramContext)) && (-1 != ((String)localObject3).lastIndexOf("@gmail.com")))
      {
        paramContext = (Context)localObject2;
        localObject2 = localObject3;
        localObject3 = localObject1;
        localObject1 = paramContext;
        paramContext = (Context)localObject3;
      }
    }
    for (;;)
    {
      i1 += 1;
      localObject3 = localObject2;
      localObject2 = localObject1;
      localObject1 = paramContext;
      paramContext = (Context)localObject3;
      break;
      if ((TextUtils.isEmpty((CharSequence)localObject2)) && (-1 != ((String)localObject3).lastIndexOf("@hotmail.com")))
      {
        localObject2 = paramContext;
        paramContext = (Context)localObject1;
        localObject1 = localObject3;
      }
      else if ((TextUtils.isEmpty((CharSequence)localObject2)) && (-1 != ((String)localObject3).lastIndexOf("@yahoo.com")))
      {
        localObject1 = localObject2;
        localObject2 = paramContext;
        paramContext = (Context)localObject3;
      }
      else
      {
        localObject5 = paramContext;
        localObject4 = localObject3;
        paramContext = (Context)localObject1;
        localObject1 = localObject2;
        localObject2 = localObject5;
        continue;
        localObject7 = "";
        localObject6 = "";
        localObject5 = "";
        localObject3 = "";
        label269:
        if (!TextUtils.isEmpty((CharSequence)localObject3)) {
          return localObject3;
        }
        if (!TextUtils.isEmpty((CharSequence)localObject5)) {
          return localObject5;
        }
        if (!TextUtils.isEmpty((CharSequence)localObject6)) {
          return localObject6;
        }
        if (!TextUtils.isEmpty((CharSequence)localObject7)) {
          return localObject7;
        }
        return "";
        label316:
        localObject3 = paramContext;
        paramContext = (Context)localObject1;
        localObject1 = localObject2;
        localObject2 = localObject3;
      }
    }
  }
  
  public static String f(String paramString1, String paramString2, String paramString3)
  {
    com.cleanmaster.base.util.system.h localH = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a().getApplicationContext()).b(com.keniu.security.d.a().getApplicationContext());
    String str = paramString2 + "_" + localH.M;
    paramString2 = str;
    if (!TextUtils.isEmpty(localH.N)) {
      paramString2 = str + "_" + localH.N;
    }
    Log.i("JunkCloudInfoWrapper", "section:" + paramString1 + ", subkey:" + paramString2);
    return android.support.v4.app.b.a(paramString1, paramString2, paramString3);
  }
  
  public static String f(Collection<String> paramCollection)
  {
    if (paramCollection.isEmpty()) {
      return null;
    }
    JSONArray localJSONArray = new JSONArray();
    paramCollection = paramCollection.iterator();
    while (paramCollection.hasNext()) {
      localJSONArray.put((String)paramCollection.next());
    }
    return localJSONArray.toString();
  }
  
  public static BigInteger f(Parcel paramParcel, int paramInt)
  {
    paramInt = a(paramParcel, paramInt);
    int i1 = paramParcel.dataPosition();
    if (paramInt == 0) {
      return null;
    }
    byte[] arrayOfByte = paramParcel.createByteArray();
    paramParcel.setDataPosition(paramInt + i1);
    return new BigInteger(arrayOfByte);
  }
  
  public static List<com.cleanmaster.ui.resultpage.item.wizard.d> f(Context paramContext, int paramInt)
  {
    return a(paramContext, paramInt, 4);
  }
  
  /* Error */
  public static JSONObject f(Bundle paramBundle)
  {
    // Byte code:
    //   0: new 655	org/json/JSONObject
    //   3: dup
    //   4: invokespecial 714	org/json/JSONObject:<init>	()V
    //   7: astore_2
    //   8: aload_2
    //   9: getstatic 15352	com/in2wow/sdk/k/e:v	Lcom/in2wow/sdk/k/e;
    //   12: aload_0
    //   13: ldc_w 3050
    //   16: invokevirtual 13193	android/os/Bundle:getInt	(Ljava/lang/String;)I
    //   19: invokestatic 1206	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   22: invokestatic 6612	com/in2wow/sdk/k/a:a	(Lorg/json/JSONObject;Lcom/in2wow/sdk/k/e;Ljava/lang/Object;)V
    //   25: aload_2
    //   26: getstatic 15354	com/in2wow/sdk/k/e:w	Lcom/in2wow/sdk/k/e;
    //   29: aload_0
    //   30: ldc_w 3052
    //   33: invokevirtual 13193	android/os/Bundle:getInt	(Ljava/lang/String;)I
    //   36: invokestatic 1206	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   39: invokestatic 6612	com/in2wow/sdk/k/a:a	(Lorg/json/JSONObject;Lcom/in2wow/sdk/k/e;Ljava/lang/Object;)V
    //   42: aload_2
    //   43: getstatic 15356	com/in2wow/sdk/k/e:x	Lcom/in2wow/sdk/k/e;
    //   46: aload_0
    //   47: ldc_w 3048
    //   50: invokevirtual 15357	android/os/Bundle:getBoolean	(Ljava/lang/String;)Z
    //   53: invokestatic 10013	java/lang/Boolean:valueOf	(Z)Ljava/lang/Boolean;
    //   56: invokestatic 6612	com/in2wow/sdk/k/a:a	(Lorg/json/JSONObject;Lcom/in2wow/sdk/k/e;Ljava/lang/Object;)V
    //   59: aload_2
    //   60: getstatic 13208	com/in2wow/sdk/k/e:P	Lcom/in2wow/sdk/k/e;
    //   63: aload_0
    //   64: ldc_w 2975
    //   67: invokevirtual 13193	android/os/Bundle:getInt	(Ljava/lang/String;)I
    //   70: invokestatic 1206	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   73: invokestatic 6612	com/in2wow/sdk/k/a:a	(Lorg/json/JSONObject;Lcom/in2wow/sdk/k/e;Ljava/lang/Object;)V
    //   76: aload_2
    //   77: getstatic 13210	com/in2wow/sdk/k/e:O	Lcom/in2wow/sdk/k/e;
    //   80: aload_0
    //   81: ldc_w 2969
    //   84: invokevirtual 13193	android/os/Bundle:getInt	(Ljava/lang/String;)I
    //   87: invokestatic 1206	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   90: invokestatic 6612	com/in2wow/sdk/k/a:a	(Lorg/json/JSONObject;Lcom/in2wow/sdk/k/e;Ljava/lang/Object;)V
    //   93: aload_0
    //   94: invokestatic 15054	LibcoreWrapper/a:c	(Landroid/os/Bundle;)Z
    //   97: ifeq +110 -> 207
    //   100: aload_2
    //   101: getstatic 13212	com/in2wow/sdk/k/e:Q	Lcom/in2wow/sdk/k/e;
    //   104: aload_0
    //   105: ldc_w 3029
    //   108: invokevirtual 2804	android/os/Bundle:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   111: invokestatic 6612	com/in2wow/sdk/k/a:a	(Lorg/json/JSONObject;Lcom/in2wow/sdk/k/e;Ljava/lang/Object;)V
    //   114: aload_2
    //   115: getstatic 6616	com/in2wow/sdk/k/e:b	Lcom/in2wow/sdk/k/e;
    //   118: aload_0
    //   119: ldc_w 2990
    //   122: invokevirtual 2804	android/os/Bundle:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   125: invokestatic 6612	com/in2wow/sdk/k/a:a	(Lorg/json/JSONObject;Lcom/in2wow/sdk/k/e;Ljava/lang/Object;)V
    //   128: aload_0
    //   129: ldc_w 3010
    //   132: invokevirtual 4774	android/os/Bundle:containsKey	(Ljava/lang/String;)Z
    //   135: ifeq +17 -> 152
    //   138: aload_2
    //   139: getstatic 13195	com/in2wow/sdk/k/e:z	Lcom/in2wow/sdk/k/e;
    //   142: aload_0
    //   143: ldc_w 3010
    //   146: invokevirtual 2804	android/os/Bundle:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   149: invokestatic 6612	com/in2wow/sdk/k/a:a	(Lorg/json/JSONObject;Lcom/in2wow/sdk/k/e;Ljava/lang/Object;)V
    //   152: aload_0
    //   153: ldc_w 3008
    //   156: invokevirtual 4774	android/os/Bundle:containsKey	(Ljava/lang/String;)Z
    //   159: ifeq +20 -> 179
    //   162: aload_2
    //   163: getstatic 13197	com/in2wow/sdk/k/e:A	Lcom/in2wow/sdk/k/e;
    //   166: aload_0
    //   167: ldc_w 3008
    //   170: invokevirtual 13193	android/os/Bundle:getInt	(Ljava/lang/String;)I
    //   173: invokestatic 1206	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   176: invokestatic 6612	com/in2wow/sdk/k/a:a	(Lorg/json/JSONObject;Lcom/in2wow/sdk/k/e;Ljava/lang/Object;)V
    //   179: aload_2
    //   180: astore_1
    //   181: aload_0
    //   182: ldc_w 2980
    //   185: invokevirtual 4774	android/os/Bundle:containsKey	(Ljava/lang/String;)Z
    //   188: ifeq +62 -> 250
    //   191: aload_2
    //   192: getstatic 15056	com/in2wow/sdk/k/e:R	Lcom/in2wow/sdk/k/e;
    //   195: aload_0
    //   196: ldc_w 2980
    //   199: invokevirtual 2804	android/os/Bundle:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   202: invokestatic 6612	com/in2wow/sdk/k/a:a	(Lorg/json/JSONObject;Lcom/in2wow/sdk/k/e;Ljava/lang/Object;)V
    //   205: aload_2
    //   206: areturn
    //   207: aload_2
    //   208: getstatic 6616	com/in2wow/sdk/k/e:b	Lcom/in2wow/sdk/k/e;
    //   211: aload_0
    //   212: ldc_w 2990
    //   215: invokevirtual 13193	android/os/Bundle:getInt	(Ljava/lang/String;)I
    //   218: invokestatic 400	java/lang/String:valueOf	(I)Ljava/lang/String;
    //   221: invokestatic 6612	com/in2wow/sdk/k/a:a	(Lorg/json/JSONObject;Lcom/in2wow/sdk/k/e;Ljava/lang/Object;)V
    //   224: aload_2
    //   225: getstatic 13212	com/in2wow/sdk/k/e:Q	Lcom/in2wow/sdk/k/e;
    //   228: aload_0
    //   229: ldc_w 2982
    //   232: invokevirtual 13193	android/os/Bundle:getInt	(Ljava/lang/String;)I
    //   235: invokestatic 400	java/lang/String:valueOf	(I)Ljava/lang/String;
    //   238: invokestatic 6612	com/in2wow/sdk/k/a:a	(Lorg/json/JSONObject;Lcom/in2wow/sdk/k/e;Ljava/lang/Object;)V
    //   241: goto -113 -> 128
    //   244: astore_0
    //   245: aload_2
    //   246: areturn
    //   247: astore_0
    //   248: aconst_null
    //   249: astore_1
    //   250: aload_1
    //   251: areturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	252	0	paramBundle	Bundle
    //   180	71	1	localJSONObject1	JSONObject
    //   7	239	2	localJSONObject2	JSONObject
    // Exception table:
    //   from	to	target	type
    //   8	128	244	java/lang/Exception
    //   128	152	244	java/lang/Exception
    //   152	179	244	java/lang/Exception
    //   181	205	244	java/lang/Exception
    //   207	241	244	java/lang/Exception
    //   0	8	247	java/lang/Exception
  }
  
  public static void f(int paramInt1, int paramInt2)
  {
    b(paramInt1, paramInt2, "", 0);
  }
  
  private static void f(int paramInt, String paramString)
  {
    paramString = "errtype=" + paramInt + "&dbname=" + paramString;
    com.cleanmaster.kinfoc.p.a().a("cm_lzma_failure", paramString, true);
  }
  
  @SuppressLint({"NewApi"})
  public static void f(View paramView)
  {
    if ((Build.VERSION.SDK_INT >= 11) && (paramView != null)) {
      paramView.setLayerType(1, null);
    }
  }
  
  public static void f(File paramFile)
  {
    Context localContext = AppLockLib.getContext();
    if (localContext == null) {
      return;
    }
    try
    {
      Object localObject = new ContentValues(2);
      ((ContentValues)localObject).put("mime_type", "image/jpeg");
      ((ContentValues)localObject).put("_data", paramFile.getAbsolutePath());
      ((ContentValues)localObject).put("datetaken", Long.valueOf(paramFile.lastModified()));
      localContext.getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, (ContentValues)localObject);
      localObject = new Intent("android.intent.action.MEDIA_SCANNER_SCAN_FILE");
      ((Intent)localObject).setData(Uri.fromFile(paramFile));
      localContext.sendBroadcast((Intent)localObject);
      return;
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
  }
  
  public static void f(boolean paramBoolean)
  {
    com.lock.sideslip.setting.h.a();
    com.lock.sideslip.setting.h.a("content_feed_loaded", paramBoolean);
  }
  
  public static boolean f()
  {
    Object localObject;
    if ((g()) && ((i()) || (j())))
    {
      localObject = com.keniu.security.d.a();
      return b((Context)localObject, ((Context)localObject).getApplicationInfo().uid, ((Context)localObject).getPackageName(), 50);
    }
    if ((!g()) || (!h())) {
      return false;
    }
    if (Build.VERSION.SDK_INT > 18) {}
    for (int i1 = 67108864;; i1 = 1073741824)
    {
      localObject = com.keniu.security.d.a().getApplicationContext();
      String str = ((Context)localObject).getPackageName();
      int i2;
      label125:
      do
      {
        try
        {
          localObject = ((Context)localObject).getPackageManager().getPackageInfo(str, 0).applicationInfo;
          if ((((ApplicationInfo)localObject).flags & 0x1) == 0) {
            break label125;
          }
          i2 = 1;
        }
        catch (PackageManager.NameNotFoundException localNameNotFoundException)
        {
          localNameNotFoundException.printStackTrace();
        }
        i2 = ((ApplicationInfo)localObject).flags;
        return (i1 & i2) != 0;
        i2 = 0;
      } while (i2 == 0);
      return false;
    }
  }
  
  public static boolean f(int paramInt)
  {
    return (paramInt & 0x80) != 0;
  }
  
  public static boolean f(Context paramContext, String paramString)
  {
    try
    {
      paramContext = ((ActivityManager)paramContext.getSystemService("activity")).getRunningServices(Integer.MAX_VALUE);
      if (paramContext == null) {
        return false;
      }
      paramContext = paramContext.iterator();
      while (paramContext.hasNext())
      {
        boolean bool = ((ActivityManager.RunningServiceInfo)paramContext.next()).service.getClassName().equals(paramString);
        if (bool) {
          return true;
        }
      }
    }
    catch (Exception paramContext) {}
    return false;
  }
  
  private static boolean f(com.in2wow.sdk.model.c paramC)
  {
    int i1 = paramC.c;
    double d1 = paramC.f.b;
    return (i1 + 1) / (paramC.z() + 1) < d1;
  }
  
  public static boolean f(List<String> paramList)
  {
    if ((paramList == null) || (paramList.isEmpty())) {
      return false;
    }
    List localList = AutostartDefine.a();
    if (localList.isEmpty()) {
      return false;
    }
    String str;
    Iterator localIterator;
    do
    {
      paramList = paramList.iterator();
      while (!localIterator.hasNext())
      {
        if (!paramList.hasNext()) {
          break;
        }
        str = (String)paramList.next();
        localIterator = localList.iterator();
      }
    } while (!((String)localIterator.next()).equalsIgnoreCase(str));
    return true;
    return false;
  }
  
  private static byte[] f(byte[] paramArrayOfByte)
  {
    byte[] arrayOfByte2 = null;
    byte[] arrayOfByte1 = arrayOfByte2;
    if (paramArrayOfByte != null)
    {
      arrayOfByte1 = arrayOfByte2;
      if (paramArrayOfByte.length > 0)
      {
        int i3 = paramArrayOfByte.length;
        int i2 = i3 - 16;
        int i1 = i2;
        if (i2 < 0) {
          i1 = 0;
        }
        arrayOfByte1 = arrayOfByte2;
        if (i3 - i1 <= 1024)
        {
          arrayOfByte2 = new byte[i3 - i1];
          i2 = i1;
          for (;;)
          {
            arrayOfByte1 = arrayOfByte2;
            if (i2 >= i3) {
              break;
            }
            arrayOfByte2[(i2 - i1)] = ((byte)(paramArrayOfByte[i2] ^ 0xFFFFFF8C));
            i2 += 1;
          }
        }
      }
    }
    return arrayOfByte1;
  }
  
  private static com.google.android.gms.internal.e[] f(JSONObject paramJSONObject)
  {
    paramJSONObject = paramJSONObject.opt("values");
    com.google.android.gms.internal.e[] arrayOfE;
    if ((paramJSONObject instanceof JSONArray))
    {
      paramJSONObject = (JSONArray)paramJSONObject;
      arrayOfE = new com.google.android.gms.internal.e[paramJSONObject.length()];
      int i1 = 0;
      while (i1 < arrayOfE.length)
      {
        a(i1, paramJSONObject, arrayOfE, new HashSet(0));
        i1 += 1;
      }
    }
    throw new zzqp.zzg("Missing Values list");
    return arrayOfE;
  }
  
  public static String[] f(String paramString1, String paramString2)
  {
    if ((TextUtils.isEmpty(paramString1)) || (TextUtils.isEmpty(paramString2))) {
      paramString2 = null;
    }
    for (;;)
    {
      return paramString2;
      try
      {
        String[] arrayOfString = paramString1.split(paramString2);
        if (arrayOfString != null)
        {
          paramString2 = arrayOfString;
          if (arrayOfString.length > 0) {}
        }
        else
        {
          return new String[] { paramString1 };
        }
      }
      catch (Exception paramString1)
      {
        paramString1.printStackTrace();
      }
    }
    return null;
  }
  
  public static float g(Context paramContext)
  {
    if (S == null) {
      S = Float.valueOf(i(paramContext) * 2.0F / (aI(paramContext) * 1280.0F));
    }
    return S.floatValue();
  }
  
  public static float g(Parcel paramParcel, int paramInt)
  {
    b(paramParcel, paramInt, 4);
    return paramParcel.readFloat();
  }
  
  public static int g(Context paramContext, float paramFloat)
  {
    return (int)a(paramContext, 9, paramFloat, paramContext.getResources().getDisplayMetrics());
  }
  
  public static int g(String paramString)
  {
    String[] arrayOfString = d(paramString + "status").split(System.getProperty("line.separator"));
    paramString = null;
    int i2 = arrayOfString.length;
    int i1 = 0;
    for (;;)
    {
      if (i1 >= i2) {
        break label116;
      }
      String str = arrayOfString[i1];
      Object localObject = paramString;
      if (str.contains("Uid:")) {}
      try
      {
        localObject = str.split("\\s+");
        paramString = (String)localObject;
      }
      catch (StringIndexOutOfBoundsException localStringIndexOutOfBoundsException)
      {
        for (;;) {}
      }
      localObject = paramString;
      if (paramString != null)
      {
        localObject = paramString;
        if (paramString.length >= 2) {
          try
          {
            i1 = Integer.parseInt(paramString[1]);
            return i1;
          }
          catch (NumberFormatException paramString)
          {
            return 0;
          }
        }
      }
      i1 += 1;
      paramString = (String)localObject;
    }
    label116:
    return 0;
  }
  
  public static int g(String paramString1, String paramString2)
  {
    int i3 = 20;
    int i1;
    if ((TextUtils.isEmpty(paramString1)) || (TextUtils.isEmpty(paramString2))) {
      i1 = 21;
    }
    do
    {
      return i1;
      paramString1 = d(paramString1, paramString2, null);
      if (paramString1 == null) {
        return 24;
      }
      i1 = i3;
    } while ("all".equalsIgnoreCase(paramString1.trim()));
    paramString1 = paramString1.split(",");
    if ((paramString1 != null) && (paramString1.length > 0))
    {
      paramString2 = com.cleanmaster.base.util.net.b.t(com.keniu.security.d.a().getApplicationContext());
      int i4 = paramString1.length;
      int i2 = 0;
      for (;;)
      {
        if (i2 >= i4) {
          break label131;
        }
        Object localObject = paramString1[i2];
        if ((localObject != null) && (paramString2 != null))
        {
          i1 = i3;
          if (localObject.trim().equalsIgnoreCase(paramString2.trim())) {
            break;
          }
        }
        i2 += 1;
      }
    }
    label131:
    return 25;
  }
  
  /* Error */
  public static int g(String paramString1, String paramString2, String paramString3)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 9
    //   3: aconst_null
    //   4: astore 8
    //   6: new 9397	java/util/zip/ZipFile
    //   9: dup
    //   10: aload_0
    //   11: invokespecial 13502	java/util/zip/ZipFile:<init>	(Ljava/lang/String;)V
    //   14: astore 5
    //   16: aload 5
    //   18: invokevirtual 13506	java/util/zip/ZipFile:entries	()Ljava/util/Enumeration;
    //   21: astore_0
    //   22: aload_0
    //   23: invokeinterface 13511 1 0
    //   28: istore 4
    //   30: iload 4
    //   32: ifne +23 -> 55
    //   35: aload 5
    //   37: invokevirtual 13533	java/util/zip/ZipFile:close	()V
    //   40: new 464	java/io/File
    //   43: dup
    //   44: aload_1
    //   45: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   48: invokevirtual 474	java/io/File:delete	()Z
    //   51: pop
    //   52: bipush 13
    //   54: ireturn
    //   55: aload 5
    //   57: aload_0
    //   58: invokeinterface 13516 1 0
    //   63: checkcast 9737	java/util/zip/ZipEntry
    //   66: invokevirtual 13519	java/util/zip/ZipFile:getInputStream	(Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;
    //   69: astore_0
    //   70: aload_2
    //   71: invokestatic 1553	android/support/v4/a/c:a	(Ljava/lang/String;)Z
    //   74: ifne +424 -> 498
    //   77: ldc_w 809
    //   80: invokestatic 814	java/security/MessageDigest:getInstance	(Ljava/lang/String;)Ljava/security/MessageDigest;
    //   83: astore 7
    //   85: new 13600	java/security/DigestInputStream
    //   88: dup
    //   89: aload_0
    //   90: aload 7
    //   92: invokespecial 13603	java/security/DigestInputStream:<init>	(Ljava/io/InputStream;Ljava/security/MessageDigest;)V
    //   95: astore 6
    //   97: sipush 4096
    //   100: newarray byte
    //   102: astore 10
    //   104: new 5382	java/io/FileOutputStream
    //   107: dup
    //   108: aload_1
    //   109: invokespecial 7639	java/io/FileOutputStream:<init>	(Ljava/lang/String;)V
    //   112: astore_0
    //   113: aload 6
    //   115: aload 10
    //   117: invokevirtual 5384	java/io/InputStream:read	([B)I
    //   120: istore_3
    //   121: iload_3
    //   122: ifle +83 -> 205
    //   125: aload_0
    //   126: aload 10
    //   128: iconst_0
    //   129: iload_3
    //   130: invokevirtual 9741	java/io/FileOutputStream:write	([BII)V
    //   133: goto -20 -> 113
    //   136: astore 7
    //   138: aload_0
    //   139: astore 8
    //   141: aload 6
    //   143: astore_0
    //   144: aload 5
    //   146: astore_2
    //   147: aload 8
    //   149: astore 6
    //   151: aload 7
    //   153: astore 5
    //   155: aload 5
    //   157: invokevirtual 576	java/lang/Exception:printStackTrace	()V
    //   160: aload 6
    //   162: ifnull +8 -> 170
    //   165: aload 6
    //   167: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   170: aload_0
    //   171: ifnull +7 -> 178
    //   174: aload_0
    //   175: invokevirtual 5380	java/io/InputStream:close	()V
    //   178: aload_2
    //   179: ifnull +7 -> 186
    //   182: aload_2
    //   183: invokevirtual 13533	java/util/zip/ZipFile:close	()V
    //   186: new 464	java/io/File
    //   189: dup
    //   190: aload_1
    //   191: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   194: invokevirtual 474	java/io/File:delete	()Z
    //   197: pop
    //   198: bipush 15
    //   200: ireturn
    //   201: astore_0
    //   202: bipush 15
    //   204: ireturn
    //   205: aload_0
    //   206: invokevirtual 10531	java/io/FileOutputStream:flush	()V
    //   209: aload 7
    //   211: ifnull +54 -> 265
    //   214: aload 7
    //   216: invokevirtual 5945	java/security/MessageDigest:digest	()[B
    //   219: invokestatic 13604	android/support/v4/a/c:a	([B)Ljava/lang/String;
    //   222: aload_2
    //   223: invokevirtual 11847	java/lang/String:compareToIgnoreCase	(Ljava/lang/String;)I
    //   226: istore_3
    //   227: iload_3
    //   228: ifeq +37 -> 265
    //   231: aload_0
    //   232: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   235: aload 6
    //   237: ifnull +8 -> 245
    //   240: aload 6
    //   242: invokevirtual 5380	java/io/InputStream:close	()V
    //   245: aload 5
    //   247: invokevirtual 13533	java/util/zip/ZipFile:close	()V
    //   250: new 464	java/io/File
    //   253: dup
    //   254: aload_1
    //   255: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   258: invokevirtual 474	java/io/File:delete	()Z
    //   261: pop
    //   262: bipush 14
    //   264: ireturn
    //   265: aload_0
    //   266: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   269: aload 6
    //   271: ifnull +8 -> 279
    //   274: aload 6
    //   276: invokevirtual 5380	java/io/InputStream:close	()V
    //   279: aload 5
    //   281: invokevirtual 13533	java/util/zip/ZipFile:close	()V
    //   284: iconst_0
    //   285: ireturn
    //   286: astore_0
    //   287: iconst_0
    //   288: ireturn
    //   289: astore_0
    //   290: aconst_null
    //   291: astore 6
    //   293: aconst_null
    //   294: astore 5
    //   296: iconst_4
    //   297: istore_3
    //   298: aload 9
    //   300: astore_2
    //   301: aload_2
    //   302: ifnull +7 -> 309
    //   305: aload_2
    //   306: invokevirtual 9742	java/io/FileOutputStream:close	()V
    //   309: aload 6
    //   311: ifnull +8 -> 319
    //   314: aload 6
    //   316: invokevirtual 5380	java/io/InputStream:close	()V
    //   319: aload 5
    //   321: ifnull +8 -> 329
    //   324: aload 5
    //   326: invokevirtual 13533	java/util/zip/ZipFile:close	()V
    //   329: iload_3
    //   330: ifeq +15 -> 345
    //   333: new 464	java/io/File
    //   336: dup
    //   337: aload_1
    //   338: invokespecial 465	java/io/File:<init>	(Ljava/lang/String;)V
    //   341: invokevirtual 474	java/io/File:delete	()Z
    //   344: pop
    //   345: aload_0
    //   346: athrow
    //   347: astore_1
    //   348: goto -3 -> 345
    //   351: astore_0
    //   352: aconst_null
    //   353: astore 6
    //   355: iconst_4
    //   356: istore_3
    //   357: aload 9
    //   359: astore_2
    //   360: goto -59 -> 301
    //   363: astore_2
    //   364: aload_0
    //   365: astore 6
    //   367: iconst_4
    //   368: istore_3
    //   369: aload_2
    //   370: astore_0
    //   371: aload 9
    //   373: astore_2
    //   374: goto -73 -> 301
    //   377: astore_0
    //   378: iconst_4
    //   379: istore_3
    //   380: aload 9
    //   382: astore_2
    //   383: goto -82 -> 301
    //   386: astore 7
    //   388: aload_0
    //   389: astore_2
    //   390: iconst_4
    //   391: istore_3
    //   392: aload 7
    //   394: astore_0
    //   395: goto -94 -> 301
    //   398: astore 8
    //   400: aload_2
    //   401: astore 5
    //   403: aload_0
    //   404: astore 7
    //   406: bipush 15
    //   408: istore_3
    //   409: aload 8
    //   411: astore_0
    //   412: aload 6
    //   414: astore_2
    //   415: aload 7
    //   417: astore 6
    //   419: goto -118 -> 301
    //   422: astore 5
    //   424: aconst_null
    //   425: astore_0
    //   426: aconst_null
    //   427: astore_2
    //   428: aload 8
    //   430: astore 6
    //   432: goto -277 -> 155
    //   435: astore_0
    //   436: aconst_null
    //   437: astore 7
    //   439: aload 5
    //   441: astore_2
    //   442: aload_0
    //   443: astore 5
    //   445: aload 8
    //   447: astore 6
    //   449: aload 7
    //   451: astore_0
    //   452: goto -297 -> 155
    //   455: astore 6
    //   457: aload 5
    //   459: astore_2
    //   460: aload 6
    //   462: astore 5
    //   464: aload 8
    //   466: astore 6
    //   468: goto -313 -> 155
    //   471: astore 7
    //   473: aload 6
    //   475: astore_0
    //   476: aload 5
    //   478: astore_2
    //   479: aload 7
    //   481: astore 5
    //   483: aload 8
    //   485: astore 6
    //   487: goto -332 -> 155
    //   490: astore_0
    //   491: goto -229 -> 262
    //   494: astore_0
    //   495: goto -443 -> 52
    //   498: aconst_null
    //   499: astore 7
    //   501: aload_0
    //   502: astore 6
    //   504: goto -407 -> 97
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	507	0	paramString1	String
    //   0	507	1	paramString2	String
    //   0	507	2	paramString3	String
    //   120	289	3	i1	int
    //   28	3	4	bool	boolean
    //   14	388	5	localObject1	Object
    //   422	18	5	localException1	Exception
    //   443	39	5	localObject2	Object
    //   95	353	6	localObject3	Object
    //   455	6	6	localException2	Exception
    //   466	37	6	localObject4	Object
    //   83	8	7	localMessageDigest	MessageDigest
    //   136	79	7	localException3	Exception
    //   386	7	7	localObject5	Object
    //   404	46	7	str1	String
    //   471	9	7	localException4	Exception
    //   499	1	7	localObject6	Object
    //   4	144	8	str2	String
    //   398	86	8	localObject7	Object
    //   1	380	9	localObject8	Object
    //   102	25	10	arrayOfByte	byte[]
    // Exception table:
    //   from	to	target	type
    //   113	121	136	java/lang/Exception
    //   125	133	136	java/lang/Exception
    //   205	209	136	java/lang/Exception
    //   214	227	136	java/lang/Exception
    //   165	170	201	java/lang/Exception
    //   174	178	201	java/lang/Exception
    //   182	186	201	java/lang/Exception
    //   186	198	201	java/lang/Exception
    //   265	269	286	java/lang/Exception
    //   274	279	286	java/lang/Exception
    //   279	284	286	java/lang/Exception
    //   6	16	289	finally
    //   305	309	347	java/lang/Exception
    //   314	319	347	java/lang/Exception
    //   324	329	347	java/lang/Exception
    //   333	345	347	java/lang/Exception
    //   16	30	351	finally
    //   55	70	351	finally
    //   70	97	363	finally
    //   97	113	377	finally
    //   113	121	386	finally
    //   125	133	386	finally
    //   205	209	386	finally
    //   214	227	386	finally
    //   155	160	398	finally
    //   6	16	422	java/lang/Exception
    //   16	30	435	java/lang/Exception
    //   55	70	435	java/lang/Exception
    //   70	97	455	java/lang/Exception
    //   97	113	471	java/lang/Exception
    //   231	235	490	java/lang/Exception
    //   240	245	490	java/lang/Exception
    //   245	262	490	java/lang/Exception
    //   35	52	494	java/lang/Exception
  }
  
  public static com.cleanmaster.photomanager.MediaFile g(File paramFile)
  {
    com.cleanmaster.photomanager.MediaFile localMediaFile = new com.cleanmaster.photomanager.MediaFile();
    localMediaFile.h = paramFile.getAbsolutePath();
    localMediaFile.setSize(paramFile.length());
    localMediaFile.l = 1;
    return localMediaFile;
  }
  
  private static com.my.target.core.b.a.b.e g(JSONObject paramJSONObject)
  {
    int i1 = 0;
    Object localObject2 = null;
    String str = paramJSONObject.getString("event");
    if (paramJSONObject.has("data")) {}
    for (Object localObject1 = paramJSONObject.getJSONObject("data");; localObject1 = null)
    {
      if (str.equals("onError")) {
        if (localObject1 != null)
        {
          paramJSONObject = "jsError";
          if (((JSONObject)localObject1).has("error")) {
            paramJSONObject = "jsError" + " error: " + ((JSONObject)localObject1).getString("error");
          }
          localObject2 = paramJSONObject;
          if (((JSONObject)localObject1).has("message")) {
            localObject2 = paramJSONObject + " message: " + ((JSONObject)localObject1).getString("message");
          }
          paramJSONObject = new com.my.target.core.b.a.b.d((String)localObject2);
        }
      }
      do
      {
        do
        {
          do
          {
            do
            {
              do
              {
                do
                {
                  do
                  {
                    do
                    {
                      do
                      {
                        do
                        {
                          do
                          {
                            return paramJSONObject;
                            return new com.my.target.core.b.a.b.d();
                            if (str.equals("onExpand"))
                            {
                              if ((localObject1 != null) && (((JSONObject)localObject1).has("width")) && (((JSONObject)localObject1).has("height")))
                              {
                                ((JSONObject)localObject1).getInt("width");
                                ((JSONObject)localObject1).getInt("height");
                                return new com.my.target.core.b.a.b.a((byte)0);
                              }
                              return new com.my.target.core.b.a.b.a();
                            }
                            if (!str.equals("onAdStart")) {
                              break;
                            }
                            paramJSONObject = (JSONObject)localObject2;
                          } while (localObject1 == null);
                          paramJSONObject = (JSONObject)localObject2;
                        } while (!((JSONObject)localObject1).has("format"));
                        paramJSONObject = (JSONObject)localObject2;
                      } while (!((JSONObject)localObject1).has("banners"));
                      ((JSONObject)localObject1).getString("format");
                      paramJSONObject = ((JSONObject)localObject1).getJSONArray("banners");
                      i2 = paramJSONObject.length();
                      localObject1 = new String[i2];
                      while (i1 < i2)
                      {
                        localObject1[i1] = paramJSONObject.getString(i1);
                        i1 += 1;
                      }
                      return new com.my.target.core.b.a.b.c((String[])localObject1);
                      if (!str.equals("onSizeChange")) {
                        break;
                      }
                      paramJSONObject = (JSONObject)localObject2;
                    } while (localObject1 == null);
                    paramJSONObject = (JSONObject)localObject2;
                  } while (!((JSONObject)localObject1).has("width"));
                  paramJSONObject = (JSONObject)localObject2;
                } while (!((JSONObject)localObject1).has("height"));
                ((JSONObject)localObject1).getInt("width");
                ((JSONObject)localObject1).getInt("height");
                return new com.my.target.core.b.a.b.f();
                if (!str.equals("onStat")) {
                  break;
                }
                paramJSONObject = (JSONObject)localObject2;
              } while (localObject1 == null);
              paramJSONObject = (JSONObject)localObject2;
            } while (!((JSONObject)localObject1).has("stats"));
            paramJSONObject = ((JSONObject)localObject1).getJSONArray("stats");
            int i2 = paramJSONObject.length();
            localObject2 = new ArrayList();
            i1 = 0;
            while (i1 < i2)
            {
              ((ArrayList)localObject2).add(paramJSONObject.getString(i1));
              i1 += 1;
            }
            if (((JSONObject)localObject1).has("type")) {
              ((JSONObject)localObject1).getString("type");
            }
            return new com.my.target.core.b.a.b.g((List)localObject2);
            if (!str.equals("onAdClick")) {
              break;
            }
            paramJSONObject = (JSONObject)localObject2;
          } while (localObject1 == null);
          paramJSONObject = (JSONObject)localObject2;
        } while (!((JSONObject)localObject1).has("format"));
        paramJSONObject = (JSONObject)localObject2;
      } while (!((JSONObject)localObject1).has("bannerId"));
      ((JSONObject)localObject1).getString("format");
      return new com.my.target.core.b.a.b.b(((JSONObject)localObject1).getString("bannerId"));
      return new com.my.target.core.b.a.b.a(str);
    }
  }
  
  public static String g(int paramInt)
  {
    return String.format(Locale.US, "%d.%d.%d.%d", new Object[] { Integer.valueOf(paramInt / 10000000), Integer.valueOf(paramInt / 100000 % 100), Integer.valueOf(paramInt / 10000 % 10), Integer.valueOf(paramInt % 10000) });
  }
  
  public static String g(long paramLong)
  {
    String str;
    float f1;
    if (paramLong >= 1000L)
    {
      str = "KB";
      float f2 = (float)(paramLong / 1024.0D);
      f1 = f2;
      if (f2 >= 1000.0F)
      {
        str = "MB";
        f1 = f2 / 1024.0F;
      }
      if (f1 < 1000.0F) {
        break label185;
      }
      f1 /= 1024.0F;
      str = "GB";
    }
    label185:
    for (;;)
    {
      Object localObject;
      if (f1 > 100.0F) {
        localObject = "#0";
      }
      for (;;)
      {
        localObject = new DecimalFormat((String)localObject);
        DecimalFormatSymbols localDecimalFormatSymbols = ((DecimalFormat)localObject).getDecimalFormatSymbols();
        localDecimalFormatSymbols.setDecimalSeparator('.');
        ((DecimalFormat)localObject).setDecimalFormatSymbols(localDecimalFormatSymbols);
        localObject = new StringBuilder(((DecimalFormat)localObject).format(f1));
        ((StringBuilder)localObject).append(str);
        return ((StringBuilder)localObject).toString().replaceAll("-", ".");
        f1 = (float)(paramLong / 1024.0D);
        str = "KB";
        break;
        if (f1 > 10.0F) {
          localObject = "#0.0";
        } else {
          localObject = "#0.00";
        }
      }
    }
  }
  
  public static String g(Context paramContext, String paramString)
  {
    File localFile = paramContext.getFilesDir();
    if (localFile == null)
    {
      paramContext = paramContext.getDatabasePath("dummyfile");
      if (paramContext == null) {
        break label142;
      }
      paramContext = new File(paramContext.getParent()).getParent();
      if (TextUtils.isEmpty(paramContext)) {
        break label142;
      }
      paramContext = paramContext + File.separator;
      paramContext = paramContext + "files";
    }
    for (;;)
    {
      if (TextUtils.isEmpty(paramContext))
      {
        return null;
        paramContext = localFile.getAbsolutePath();
      }
      else
      {
        paramContext = paramContext + File.separator;
        return paramContext + paramString;
        label142:
        paramContext = null;
      }
    }
  }
  
  public static String g(Collection<Long> paramCollection)
  {
    if ((paramCollection == null) || (paramCollection.isEmpty())) {
      return null;
    }
    StringBuffer localStringBuffer = new StringBuffer(paramCollection.size() * 21 + 2);
    localStringBuffer.append("[");
    paramCollection = paramCollection.iterator();
    int i1 = 1;
    if (paramCollection.hasNext())
    {
      Long localLong = (Long)paramCollection.next();
      if (i1 != 0) {
        i1 = 0;
      }
      for (;;)
      {
        localStringBuffer.append(localLong);
        break;
        localStringBuffer.append(",");
      }
    }
    localStringBuffer.append("]");
    return localStringBuffer.toString();
  }
  
  private static String g(byte[] paramArrayOfByte)
  {
    int i2 = 0;
    StringBuilder localStringBuilder = new StringBuilder();
    int i1;
    label20:
    String str;
    if (paramArrayOfByte == null)
    {
      i1 = 0;
      if (i1 <= 0) {
        break label103;
      }
      if (i2 >= i1) {
        break label103;
      }
      str = Integer.toHexString(paramArrayOfByte[i2] & 0xFF);
      if (!TextUtils.isEmpty(str)) {
        break label66;
      }
      localStringBuilder.append("00");
    }
    for (;;)
    {
      i2 += 1;
      break label20;
      i1 = paramArrayOfByte.length;
      break;
      label66:
      if (str.length() < 2)
      {
        localStringBuilder.append("0");
        localStringBuilder.append(str);
      }
      else
      {
        localStringBuilder.append(str);
      }
    }
    label103:
    return localStringBuilder.toString();
  }
  
  public static List<com.cleanmaster.ui.resultpage.item.wizard.d> g(Context paramContext, int paramInt)
  {
    return a(paramContext, paramInt, 2);
  }
  
  public static List<com.ijinshan.cleaner.bean.JunkInfoBase> g(List<com.cleanmaster.junk.bean.JunkInfoBase> paramList)
  {
    if (paramList == null) {
      return null;
    }
    Object localObject = new ArrayList();
    ((List)localObject).addAll(paramList);
    paramList = new ArrayList();
    localObject = ((List)localObject).iterator();
    while (((Iterator)localObject).hasNext())
    {
      com.ijinshan.cleaner.bean.JunkInfoBase localJunkInfoBase = a((com.cleanmaster.junk.bean.JunkInfoBase)((Iterator)localObject).next());
      if (localJunkInfoBase != null) {
        paramList.add(localJunkInfoBase);
      }
    }
    return paramList;
  }
  
  public static void g(int paramInt1, int paramInt2)
  {
    b(9, paramInt1, "", paramInt2);
  }
  
  private static void g(ArrayList<com.cleanmaster.ui.resultpage.item.wizard.d> paramArrayList)
  {
    if (com.cleanmaster.base.util.net.b.j(com.keniu.security.d.a()))
    {
      int i1 = 0;
      while ((i1 < paramArrayList.size()) && (i1 <= 0))
      {
        Object localObject = (com.cleanmaster.ui.resultpage.item.wizard.d)paramArrayList.get(0);
        if ((localObject != null) && (((com.cleanmaster.ui.resultpage.item.wizard.d)localObject).c != null))
        {
          localObject = ((com.cleanmaster.ui.resultpage.item.wizard.d)localObject).c.h;
          if ((localObject != null) && (((ArrayList)localObject).size() != 0))
          {
            localObject = ((ArrayList)localObject).iterator();
            while (((Iterator)localObject).hasNext())
            {
              String str = (String)((Iterator)localObject).next();
              if (!TextUtils.isEmpty(str)) {
                com.cleanmaster.bitmapcache.e.a().c(str);
              }
            }
          }
        }
        i1 += 1;
      }
    }
  }
  
  public static void g(boolean paramBoolean)
  {
    if ((paramBoolean) && (com.cleanmaster.base.util.system.o.g())) {
      return;
    }
    com.cleanmaster.configmanager.d.a(com.keniu.security.d.a().getApplicationContext()).b("APPMANAGER_HAS_REDDOT", paramBoolean);
  }
  
  public static boolean g()
  {
    String str = Build.DISPLAY;
    if ((str != null) && (str.toUpperCase().contains("MIUI"))) {}
    do
    {
      do
      {
        do
        {
          do
          {
            return true;
            str = Build.MODEL;
          } while ((str != null) && (str.contains("MI-ONE")));
          str = Build.DEVICE;
        } while ((str != null) && (str.contains("mione")));
        str = Build.MANUFACTURER;
      } while ((str != null) && (str.equalsIgnoreCase("Xiaomi")));
      str = Build.PRODUCT;
    } while ((str != null) && (str.contains("mione")));
    return false;
  }
  
  @SuppressLint({"NewApi"})
  public static boolean g(View paramView)
  {
    boolean bool2 = false;
    boolean bool1 = bool2;
    if (Build.VERSION.SDK_INT >= 11)
    {
      bool1 = bool2;
      if (paramView != null)
      {
        bool1 = bool2;
        if (paramView.getLayerType() == 2) {
          bool1 = true;
        }
      }
    }
    return bool1;
  }
  
  public static double h(Parcel paramParcel, int paramInt)
  {
    b(paramParcel, paramInt, 8);
    return paramParcel.readDouble();
  }
  
  public static int h(Context paramContext)
  {
    return paramContext.getResources().getDisplayMetrics().widthPixels;
  }
  
  public static int h(Context paramContext, int paramInt)
  {
    int[] arrayOfInt = new int[1];
    GLES20.glGenTextures(1, arrayOfInt, 0);
    if (arrayOfInt[0] != 0)
    {
      BitmapFactory.Options localOptions = new BitmapFactory.Options();
      localOptions.inScaled = false;
      paramContext = BitmapFactory.decodeResource(paramContext.getResources(), 2130840486, localOptions);
      GLES20.glBindTexture(3553, arrayOfInt[0]);
      GLES20.glTexParameteri(3553, 10241, 9729);
      GLES20.glTexParameteri(3553, 10240, 9729);
      GLES20.glTexParameterf(3553, 10242, 10497.0F);
      GLES20.glTexParameterf(3553, 10243, 10497.0F);
      GLUtils.texImage2D(3553, 0, paramContext, 0);
      paramContext.recycle();
    }
    if (arrayOfInt[0] == 0) {
      throw new RuntimeException("Error loading texture.");
    }
    return arrayOfInt[0];
  }
  
  public static int h(String paramString1, String paramString2)
  {
    if ((TextUtils.isEmpty(paramString1)) || (TextUtils.isEmpty(paramString2))) {
      return 21;
    }
    paramString1 = d(paramString1, paramString2, null);
    if (paramString1 == null) {
      return 22;
    }
    paramString1 = paramString1.split(",");
    if ((paramString1 != null) && (paramString1.length > 0))
    {
      paramString2 = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).b(com.keniu.security.d.a()).b();
      int i2 = paramString1.length;
      int i1 = 0;
      while (i1 < i2)
      {
        Object localObject = paramString1[i1];
        if ((localObject != null) && (localObject.equalsIgnoreCase(paramString2))) {
          return 23;
        }
        i1 += 1;
      }
    }
    return 20;
  }
  
  public static PackageInfo h(Context paramContext, String paramString)
  {
    if (paramContext == null) {
      return null;
    }
    try
    {
      paramContext = paramContext.getPackageManager().getPackageInfo(paramString, 0);
      return paramContext;
    }
    catch (Exception paramContext) {}
    return null;
  }
  
  public static Drawable h(Context paramContext, float paramFloat)
  {
    paramFloat /= 100.0F;
    int i1 = a(paramContext, 40.0F);
    int i2 = a(paramContext, 40.0F);
    int i3 = a(paramContext, 3.0F);
    int i4 = i1 / 2;
    int i5 = i2 / 2;
    int i6 = i1 / 2;
    Path localPath = new Path();
    localPath.addCircle(i4, i5, i6 - i3, Path.Direction.CW);
    Rect localRect1 = new Rect(0, 0, i1, i2);
    Rect localRect2 = new Rect(0, (int)((i2 - (i3 << 1)) * (1.0F - paramFloat)) + (i3 + 2), i1, i2);
    Paint localPaint = new Paint();
    localPaint.setTextSize(b(paramContext, 11.0F));
    String str = (int)(100.0F * paramFloat) + "%";
    float f1 = localPaint.measureText(str);
    f1 = (i1 - f1) / 2.0F;
    Object localObject = localPaint.getFontMetrics();
    float f3 = ((Paint.FontMetrics)localObject).bottom;
    float f4 = ((Paint.FontMetrics)localObject).top;
    float f2 = i2;
    f3 = (i2 - (f3 - f4)) / 2.0F;
    f4 = ((Paint.FontMetrics)localObject).bottom;
    localObject = paramContext.getResources().getDrawable(2130837805);
    ((Drawable)localObject).setBounds(0, 0, i1, i2);
    PaintFlagsDrawFilter localPaintFlagsDrawFilter = new PaintFlagsDrawFilter(0, 3);
    Bitmap localBitmap = Bitmap.createBitmap(i1, i2, Bitmap.Config.ARGB_8888);
    Canvas localCanvas = new Canvas(localBitmap);
    localCanvas.setDrawFilter(localPaintFlagsDrawFilter);
    localCanvas.save();
    localCanvas.clipPath(localPath);
    localPaint.setColor(-13288122);
    localCanvas.drawRect(localRect1, localPaint);
    if (paramFloat <= 0.5F) {
      localPaint.setColor(-33280);
    }
    for (;;)
    {
      localCanvas.drawRect(localRect2, localPaint);
      localCanvas.restore();
      localPaint.setColor(-1);
      localCanvas.drawText(str, f1, f2 - f3 - f4 - 8.0F, localPaint);
      ((Drawable)localObject).draw(localCanvas);
      return new BitmapDrawable(paramContext.getResources(), localBitmap);
      localPaint.setColor(-9119683);
    }
  }
  
  public static com.my.target.core.f.a.c h(String paramString1, String paramString2, String paramString3)
  {
    if (com.my.target.core.enums.a.e.equals(paramString3))
    {
      if (("promo".equals(paramString2)) || ("banner".equals(paramString2)) || ("teaser".equals(paramString2))) {
        return new com.my.target.core.f.a.f(paramString1, paramString2);
      }
    }
    else if (com.my.target.core.enums.a.d.equals(paramString3))
    {
      if (("fullscreen".equals(paramString2)) || ("banner".equals(paramString2))) {
        return new com.my.target.core.f.a.d(paramString1, "banner");
      }
      if ("promo".equals(paramString2)) {
        return new com.my.target.core.f.a.e(paramString1, paramString2);
      }
    }
    else if (com.my.target.core.enums.a.a.equals(paramString3))
    {
      if (("banner".equals(paramString2)) || ("teaser".equals(paramString2))) {
        return new com.my.target.core.f.a.g(paramString1, paramString2);
      }
    }
    else if ((com.my.target.core.enums.a.b.equals(paramString3)) || (com.my.target.core.enums.a.c.equals(paramString3)))
    {
      if (("showcase".equals(paramString2)) || ("teaser".equals(paramString2))) {
        return new com.my.target.core.f.a.b(paramString1, paramString2);
      }
    }
    else if (com.my.target.core.enums.a.g.equals(paramString3))
    {
      if ("video".equals(paramString2)) {
        return new com.my.target.core.f.a.i(paramString1, paramString2);
      }
      if ("statistics".equals(paramString2)) {
        return new com.my.target.core.f.a.h(paramString1, paramString2);
      }
    }
    return null;
  }
  
  /* Error */
  public static Object h(File paramFile)
  {
    // Byte code:
    //   0: aload_0
    //   1: invokevirtual 468	java/io/File:exists	()Z
    //   4: ifne +5 -> 9
    //   7: aconst_null
    //   8: areturn
    //   9: new 1167	java/io/FileInputStream
    //   12: dup
    //   13: aload_0
    //   14: invokespecial 1170	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   17: astore_1
    //   18: aload_1
    //   19: invokevirtual 15772	java/io/FileInputStream:getChannel	()Ljava/nio/channels/FileChannel;
    //   22: lconst_0
    //   23: ldc2_w 15773
    //   26: iconst_1
    //   27: invokevirtual 15777	java/nio/channels/FileChannel:lock	(JJZ)Ljava/nio/channels/FileLock;
    //   30: astore_2
    //   31: new 15779	java/io/ObjectInputStream
    //   34: dup
    //   35: aload_1
    //   36: invokespecial 15780	java/io/ObjectInputStream:<init>	(Ljava/io/InputStream;)V
    //   39: astore_3
    //   40: aload_2
    //   41: astore 6
    //   43: aload_3
    //   44: astore 5
    //   46: aload_1
    //   47: astore 4
    //   49: aload_3
    //   50: invokevirtual 15783	java/io/ObjectInputStream:readUnshared	()Ljava/lang/Object;
    //   53: astore 7
    //   55: aload_2
    //   56: ifnull +7 -> 63
    //   59: aload_2
    //   60: invokevirtual 10874	java/nio/channels/FileLock:release	()V
    //   63: aload_3
    //   64: invokevirtual 15784	java/io/ObjectInputStream:close	()V
    //   67: aload_1
    //   68: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   71: aload 7
    //   73: areturn
    //   74: astore_0
    //   75: aload 7
    //   77: areturn
    //   78: astore_0
    //   79: aconst_null
    //   80: astore_2
    //   81: aconst_null
    //   82: astore_3
    //   83: aconst_null
    //   84: astore_0
    //   85: aload_2
    //   86: ifnull +7 -> 93
    //   89: aload_2
    //   90: invokevirtual 10874	java/nio/channels/FileLock:release	()V
    //   93: aload_3
    //   94: ifnull +7 -> 101
    //   97: aload_3
    //   98: invokevirtual 15784	java/io/ObjectInputStream:close	()V
    //   101: aload_0
    //   102: ifnull -95 -> 7
    //   105: aload_0
    //   106: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   109: aconst_null
    //   110: areturn
    //   111: astore_0
    //   112: aconst_null
    //   113: areturn
    //   114: astore_0
    //   115: aconst_null
    //   116: astore_2
    //   117: aconst_null
    //   118: astore_3
    //   119: aconst_null
    //   120: astore_1
    //   121: aload_2
    //   122: ifnull +7 -> 129
    //   125: aload_2
    //   126: invokevirtual 10874	java/nio/channels/FileLock:release	()V
    //   129: aload_3
    //   130: ifnull +7 -> 137
    //   133: aload_3
    //   134: invokevirtual 15784	java/io/ObjectInputStream:close	()V
    //   137: aload_1
    //   138: ifnull -131 -> 7
    //   141: aload_1
    //   142: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   145: aconst_null
    //   146: areturn
    //   147: astore_0
    //   148: aconst_null
    //   149: areturn
    //   150: astore_3
    //   151: aconst_null
    //   152: astore_0
    //   153: aconst_null
    //   154: astore_2
    //   155: aconst_null
    //   156: astore_1
    //   157: aload_3
    //   158: invokevirtual 15785	java/io/EOFException:printStackTrace	()V
    //   161: aload_0
    //   162: ifnull +7 -> 169
    //   165: aload_0
    //   166: invokevirtual 10874	java/nio/channels/FileLock:release	()V
    //   169: aload_2
    //   170: ifnull +7 -> 177
    //   173: aload_2
    //   174: invokevirtual 15784	java/io/ObjectInputStream:close	()V
    //   177: aload_1
    //   178: ifnull -171 -> 7
    //   181: aload_1
    //   182: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   185: aconst_null
    //   186: areturn
    //   187: astore_0
    //   188: aconst_null
    //   189: areturn
    //   190: astore_0
    //   191: aconst_null
    //   192: astore_2
    //   193: aconst_null
    //   194: astore_3
    //   195: aconst_null
    //   196: astore_1
    //   197: aload_2
    //   198: ifnull +7 -> 205
    //   201: aload_2
    //   202: invokevirtual 10874	java/nio/channels/FileLock:release	()V
    //   205: aload_3
    //   206: ifnull +7 -> 213
    //   209: aload_3
    //   210: invokevirtual 15784	java/io/ObjectInputStream:close	()V
    //   213: aload_1
    //   214: ifnull -207 -> 7
    //   217: aload_1
    //   218: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   221: aconst_null
    //   222: areturn
    //   223: astore_0
    //   224: aconst_null
    //   225: areturn
    //   226: astore_1
    //   227: aconst_null
    //   228: astore_2
    //   229: aconst_null
    //   230: astore_3
    //   231: aconst_null
    //   232: astore_1
    //   233: aload_2
    //   234: astore 6
    //   236: aload_3
    //   237: astore 5
    //   239: aload_1
    //   240: astore 4
    //   242: aload_0
    //   243: invokevirtual 474	java/io/File:delete	()Z
    //   246: pop
    //   247: aload_2
    //   248: ifnull +7 -> 255
    //   251: aload_2
    //   252: invokevirtual 10874	java/nio/channels/FileLock:release	()V
    //   255: aload_3
    //   256: ifnull +7 -> 263
    //   259: aload_3
    //   260: invokevirtual 15784	java/io/ObjectInputStream:close	()V
    //   263: aload_1
    //   264: ifnull -257 -> 7
    //   267: aload_1
    //   268: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   271: aconst_null
    //   272: areturn
    //   273: astore_0
    //   274: aconst_null
    //   275: areturn
    //   276: astore_0
    //   277: aconst_null
    //   278: astore_2
    //   279: aconst_null
    //   280: astore_3
    //   281: aconst_null
    //   282: astore_1
    //   283: aload_2
    //   284: ifnull +7 -> 291
    //   287: aload_2
    //   288: invokevirtual 10874	java/nio/channels/FileLock:release	()V
    //   291: aload_3
    //   292: ifnull +7 -> 299
    //   295: aload_3
    //   296: invokevirtual 15784	java/io/ObjectInputStream:close	()V
    //   299: aload_1
    //   300: ifnull -293 -> 7
    //   303: aload_1
    //   304: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   307: aconst_null
    //   308: areturn
    //   309: astore_0
    //   310: aconst_null
    //   311: areturn
    //   312: astore_0
    //   313: aconst_null
    //   314: astore_3
    //   315: aconst_null
    //   316: astore_1
    //   317: aconst_null
    //   318: astore_2
    //   319: aload_2
    //   320: ifnull +7 -> 327
    //   323: aload_2
    //   324: invokevirtual 10874	java/nio/channels/FileLock:release	()V
    //   327: aload_3
    //   328: ifnull +7 -> 335
    //   331: aload_3
    //   332: invokevirtual 15784	java/io/ObjectInputStream:close	()V
    //   335: aload_1
    //   336: ifnull +7 -> 343
    //   339: aload_1
    //   340: invokevirtual 1183	java/io/FileInputStream:close	()V
    //   343: aload_0
    //   344: athrow
    //   345: astore_0
    //   346: goto -283 -> 63
    //   349: astore_0
    //   350: goto -283 -> 67
    //   353: astore_1
    //   354: goto -261 -> 93
    //   357: astore_1
    //   358: goto -257 -> 101
    //   361: astore_0
    //   362: goto -233 -> 129
    //   365: astore_0
    //   366: goto -229 -> 137
    //   369: astore_0
    //   370: goto -201 -> 169
    //   373: astore_0
    //   374: goto -197 -> 177
    //   377: astore_0
    //   378: goto -173 -> 205
    //   381: astore_0
    //   382: goto -169 -> 213
    //   385: astore_0
    //   386: goto -131 -> 255
    //   389: astore_0
    //   390: goto -127 -> 263
    //   393: astore_0
    //   394: goto -103 -> 291
    //   397: astore_0
    //   398: goto -99 -> 299
    //   401: astore_2
    //   402: goto -75 -> 327
    //   405: astore_2
    //   406: goto -71 -> 335
    //   409: astore_1
    //   410: goto -67 -> 343
    //   413: astore_0
    //   414: aconst_null
    //   415: astore_3
    //   416: aconst_null
    //   417: astore_2
    //   418: goto -99 -> 319
    //   421: astore_0
    //   422: aconst_null
    //   423: astore_3
    //   424: goto -105 -> 319
    //   427: astore_0
    //   428: aload 6
    //   430: astore_2
    //   431: aload 5
    //   433: astore_3
    //   434: aload 4
    //   436: astore_1
    //   437: goto -118 -> 319
    //   440: astore 5
    //   442: aload_0
    //   443: astore_3
    //   444: aload_2
    //   445: astore 4
    //   447: aload 5
    //   449: astore_0
    //   450: aload_3
    //   451: astore_2
    //   452: aload 4
    //   454: astore_3
    //   455: goto -136 -> 319
    //   458: astore_0
    //   459: aconst_null
    //   460: astore_2
    //   461: aconst_null
    //   462: astore_3
    //   463: goto -180 -> 283
    //   466: astore_0
    //   467: aconst_null
    //   468: astore_3
    //   469: goto -186 -> 283
    //   472: astore_0
    //   473: goto -190 -> 283
    //   476: astore_2
    //   477: aconst_null
    //   478: astore_2
    //   479: aconst_null
    //   480: astore_3
    //   481: goto -248 -> 233
    //   484: astore_3
    //   485: aconst_null
    //   486: astore_3
    //   487: goto -254 -> 233
    //   490: astore 4
    //   492: goto -259 -> 233
    //   495: astore_0
    //   496: aconst_null
    //   497: astore_2
    //   498: aconst_null
    //   499: astore_3
    //   500: goto -303 -> 197
    //   503: astore_0
    //   504: aconst_null
    //   505: astore_3
    //   506: goto -309 -> 197
    //   509: astore_0
    //   510: goto -313 -> 197
    //   513: astore_3
    //   514: aconst_null
    //   515: astore_0
    //   516: aconst_null
    //   517: astore_2
    //   518: goto -361 -> 157
    //   521: astore_3
    //   522: aconst_null
    //   523: astore 4
    //   525: aload_2
    //   526: astore_0
    //   527: aload 4
    //   529: astore_2
    //   530: goto -373 -> 157
    //   533: astore 5
    //   535: aload_3
    //   536: astore 4
    //   538: aload_2
    //   539: astore_0
    //   540: aload 5
    //   542: astore_3
    //   543: aload 4
    //   545: astore_2
    //   546: goto -389 -> 157
    //   549: astore_0
    //   550: aconst_null
    //   551: astore_2
    //   552: aconst_null
    //   553: astore_3
    //   554: goto -433 -> 121
    //   557: astore_0
    //   558: aconst_null
    //   559: astore_3
    //   560: goto -439 -> 121
    //   563: astore_0
    //   564: goto -443 -> 121
    //   567: astore_0
    //   568: aconst_null
    //   569: astore_2
    //   570: aconst_null
    //   571: astore_3
    //   572: aload_1
    //   573: astore_0
    //   574: goto -489 -> 85
    //   577: astore_0
    //   578: aconst_null
    //   579: astore_3
    //   580: aload_1
    //   581: astore_0
    //   582: goto -497 -> 85
    //   585: astore_0
    //   586: aload_1
    //   587: astore_0
    //   588: goto -503 -> 85
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	591	0	paramFile	File
    //   17	201	1	localFileInputStream	FileInputStream
    //   226	1	1	localException1	Exception
    //   232	108	1	localObject1	Object
    //   353	1	1	localIOException1	IOException
    //   357	1	1	localIOException2	IOException
    //   409	1	1	localIOException3	IOException
    //   436	151	1	localObject2	Object
    //   30	294	2	localFileLock1	java.nio.channels.FileLock
    //   401	1	2	localIOException4	IOException
    //   405	1	2	localIOException5	IOException
    //   417	44	2	localObject3	Object
    //   476	1	2	localException2	Exception
    //   478	92	2	localObject4	Object
    //   39	95	3	localObjectInputStream	java.io.ObjectInputStream
    //   150	8	3	localEOFException1	java.io.EOFException
    //   194	287	3	localObject5	Object
    //   484	1	3	localException3	Exception
    //   486	20	3	localObject6	Object
    //   513	1	3	localEOFException2	java.io.EOFException
    //   521	15	3	localEOFException3	java.io.EOFException
    //   542	38	3	localObject7	Object
    //   47	406	4	localObject8	Object
    //   490	1	4	localException4	Exception
    //   523	21	4	localEOFException4	java.io.EOFException
    //   44	388	5	localObject9	Object
    //   440	8	5	localObject10	Object
    //   533	8	5	localEOFException5	java.io.EOFException
    //   41	388	6	localFileLock2	java.nio.channels.FileLock
    //   53	23	7	localObject11	Object
    // Exception table:
    //   from	to	target	type
    //   67	71	74	java/io/IOException
    //   9	18	78	java/lang/NoSuchMethodError
    //   105	109	111	java/io/IOException
    //   9	18	114	java/io/FileNotFoundException
    //   141	145	147	java/io/IOException
    //   9	18	150	java/io/EOFException
    //   181	185	187	java/io/IOException
    //   9	18	190	java/io/IOException
    //   217	221	223	java/io/IOException
    //   9	18	226	java/lang/Exception
    //   267	271	273	java/io/IOException
    //   9	18	276	java/lang/OutOfMemoryError
    //   303	307	309	java/io/IOException
    //   9	18	312	finally
    //   59	63	345	java/io/IOException
    //   63	67	349	java/io/IOException
    //   89	93	353	java/io/IOException
    //   97	101	357	java/io/IOException
    //   125	129	361	java/io/IOException
    //   133	137	365	java/io/IOException
    //   165	169	369	java/io/IOException
    //   173	177	373	java/io/IOException
    //   201	205	377	java/io/IOException
    //   209	213	381	java/io/IOException
    //   251	255	385	java/io/IOException
    //   259	263	389	java/io/IOException
    //   287	291	393	java/io/IOException
    //   295	299	397	java/io/IOException
    //   323	327	401	java/io/IOException
    //   331	335	405	java/io/IOException
    //   339	343	409	java/io/IOException
    //   18	31	413	finally
    //   31	40	421	finally
    //   49	55	427	finally
    //   242	247	427	finally
    //   157	161	440	finally
    //   18	31	458	java/lang/OutOfMemoryError
    //   31	40	466	java/lang/OutOfMemoryError
    //   49	55	472	java/lang/OutOfMemoryError
    //   18	31	476	java/lang/Exception
    //   31	40	484	java/lang/Exception
    //   49	55	490	java/lang/Exception
    //   18	31	495	java/io/IOException
    //   31	40	503	java/io/IOException
    //   49	55	509	java/io/IOException
    //   18	31	513	java/io/EOFException
    //   31	40	521	java/io/EOFException
    //   49	55	533	java/io/EOFException
    //   18	31	549	java/io/FileNotFoundException
    //   31	40	557	java/io/FileNotFoundException
    //   49	55	563	java/io/FileNotFoundException
    //   18	31	567	java/lang/NoSuchMethodError
    //   31	40	577	java/lang/NoSuchMethodError
    //   49	55	585	java/lang/NoSuchMethodError
  }
  
  public static String h(long paramLong)
  {
    float f1 = (float)(paramLong / 1048576.0D);
    if (f1 >= 1000.0F) {
      f1 /= 1024.0F;
    }
    for (String str = "GB";; str = "MB")
    {
      Object localObject;
      if (f1 > 100.0F) {
        localObject = "#0";
      }
      for (;;)
      {
        localObject = new DecimalFormat((String)localObject);
        DecimalFormatSymbols localDecimalFormatSymbols = ((DecimalFormat)localObject).getDecimalFormatSymbols();
        localDecimalFormatSymbols.setDecimalSeparator('.');
        ((DecimalFormat)localObject).setDecimalFormatSymbols(localDecimalFormatSymbols);
        localObject = new StringBuilder(((DecimalFormat)localObject).format(f1));
        ((StringBuilder)localObject).append(str);
        return ((StringBuilder)localObject).toString().replaceAll("-", ".");
        if (f1 > 10.0F) {
          localObject = "#0.0";
        } else {
          localObject = "#0.00";
        }
      }
    }
  }
  
  public static String h(String paramString)
  {
    String str2 = aG(AppLockLib.getContext());
    if (TextUtils.isEmpty(str2)) {
      str1 = null;
    }
    do
    {
      return str1;
      str1 = str2;
    } while (TextUtils.isEmpty(paramString));
    String str1 = str2;
    try
    {
      paramString = str2 + "/" + paramString + "/";
      str1 = paramString;
      new File(paramString).mkdirs();
      return paramString;
    }
    catch (Exception paramString) {}
    return str1;
  }
  
  /* Error */
  private static String h(byte[] paramArrayOfByte)
  {
    // Byte code:
    //   0: ldc_w 809
    //   3: invokestatic 814	java/security/MessageDigest:getInstance	(Ljava/lang/String;)Ljava/security/MessageDigest;
    //   6: astore_2
    //   7: aload_2
    //   8: invokevirtual 5950	java/security/MessageDigest:reset	()V
    //   11: aload_2
    //   12: aload_0
    //   13: invokevirtual 5942	java/security/MessageDigest:update	([B)V
    //   16: aload_2
    //   17: invokevirtual 5945	java/security/MessageDigest:digest	()[B
    //   20: astore_0
    //   21: new 1281	java/lang/StringBuffer
    //   24: dup
    //   25: invokespecial 1282	java/lang/StringBuffer:<init>	()V
    //   28: astore_2
    //   29: iconst_0
    //   30: istore_1
    //   31: iload_1
    //   32: aload_0
    //   33: arraylength
    //   34: if_icmpge +82 -> 116
    //   37: aload_0
    //   38: iload_1
    //   39: baload
    //   40: sipush 255
    //   43: iand
    //   44: invokestatic 1634	java/lang/Integer:toHexString	(I)Ljava/lang/String;
    //   47: invokevirtual 355	java/lang/String:length	()I
    //   50: iconst_1
    //   51: if_icmpne +44 -> 95
    //   54: aload_2
    //   55: ldc_w 1419
    //   58: invokevirtual 1287	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   61: aload_0
    //   62: iload_1
    //   63: baload
    //   64: sipush 255
    //   67: iand
    //   68: invokestatic 1634	java/lang/Integer:toHexString	(I)Ljava/lang/String;
    //   71: invokevirtual 5753	java/lang/String:toUpperCase	()Ljava/lang/String;
    //   74: invokevirtual 1287	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   77: pop
    //   78: iload_1
    //   79: iconst_1
    //   80: iadd
    //   81: istore_1
    //   82: goto -51 -> 31
    //   85: astore_0
    //   86: aconst_null
    //   87: astore_2
    //   88: aload_0
    //   89: invokevirtual 15788	java/security/NoSuchAlgorithmException:printStackTrace	()V
    //   92: goto -76 -> 16
    //   95: aload_2
    //   96: aload_0
    //   97: iload_1
    //   98: baload
    //   99: sipush 255
    //   102: iand
    //   103: invokestatic 1634	java/lang/Integer:toHexString	(I)Ljava/lang/String;
    //   106: invokevirtual 5753	java/lang/String:toUpperCase	()Ljava/lang/String;
    //   109: invokevirtual 1287	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   112: pop
    //   113: goto -35 -> 78
    //   116: aload_2
    //   117: invokevirtual 1338	java/lang/StringBuffer:toString	()Ljava/lang/String;
    //   120: areturn
    //   121: astore_0
    //   122: goto -34 -> 88
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	125	0	paramArrayOfByte	byte[]
    //   30	68	1	i1	int
    //   6	111	2	localObject	Object
    // Exception table:
    //   from	to	target	type
    //   0	7	85	java/security/NoSuchAlgorithmException
    //   7	16	121	java/security/NoSuchAlgorithmException
  }
  
  public static List<com.cleanmaster.junk.bean.b> h(List<com.ijinshan.cleaner.bean.a> paramList)
  {
    if (paramList == null) {
      return null;
    }
    ArrayList localArrayList = new ArrayList();
    paramList = paramList.iterator();
    while (paramList.hasNext()) {
      localArrayList.add(a((com.ijinshan.cleaner.bean.a)paramList.next()));
    }
    return localArrayList;
  }
  
  private static JSONObject h(boolean paramBoolean)
  {
    Object localObject1 = com.keniu.security.d.a();
    Object localObject2 = ((Context)localObject1).getResources().getDisplayMetrics();
    Object localObject3 = com.cleanmaster.configmanager.d.a((Context)localObject1).b((Context)localObject1);
    String str6 = bN();
    String str5 = Locale.getDefault().getCountry().toLowerCase();
    String str4 = ((com.cleanmaster.base.util.system.h)localObject3).M;
    String str3 = ((DisplayMetrics)localObject2).heightPixels + "x" + ((DisplayMetrics)localObject2).widthPixels;
    String str2 = String.valueOf(Build.VERSION.SDK_INT);
    String str1 = Build.MODEL;
    localObject3 = TimeZone.getDefault().getID();
    localObject2 = aM((Context)localObject1);
    try
    {
      JSONObject localJSONObject = new JSONObject();
      localObject1 = str6;
      if (paramBoolean) {
        localObject1 = ap(str6);
      }
      localJSONObject.put("did", localObject1);
      localJSONObject.put("imei", "");
      localObject1 = str5;
      if (paramBoolean) {
        localObject1 = ap(str5);
      }
      localJSONObject.put("co", localObject1);
      localObject1 = str4;
      if (paramBoolean) {
        localObject1 = ap(str4);
      }
      localJSONObject.put("lang", localObject1);
      localObject1 = str3;
      if (paramBoolean) {
        localObject1 = ap(str3);
      }
      localJSONObject.put("sc", localObject1);
      localObject1 = str2;
      if (paramBoolean) {
        localObject1 = ap(str2);
      }
      localJSONObject.put("ver", localObject1);
      localObject1 = str1;
      if (paramBoolean) {
        localObject1 = ap(str1);
      }
      localJSONObject.put("mo", localObject1);
      localObject1 = localObject3;
      if (paramBoolean) {
        localObject1 = ap((String)localObject3);
      }
      localJSONObject.put("loc", localObject1);
      localObject1 = localObject2;
      if (paramBoolean) {
        localObject1 = ap((String)localObject2);
      }
      localJSONObject.put("app_ver", localObject1);
      return localJSONObject;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
    return null;
  }
  
  public static void h(int paramInt1, int paramInt2)
  {
    Context localContext = com.keniu.security.d.a();
    com.cleanmaster.configmanager.d.a(localContext).b("gamebox_shortcut_create_source", paramInt1);
    com.cleanmaster.kinfoc.p.a().a("cm_game_boost", "source=" + paramInt1 + "&haslite=" + s(localContext) + "&scene0=255&appstyle=" + paramInt2 + "&guidestyle=255", true);
  }
  
  public static void h(View paramView)
  {
    paramView = paramView.getBackground();
    if ((paramView != null) && ((paramView instanceof BitmapDrawable)))
    {
      paramView = (BitmapDrawable)paramView;
      paramView.mutate();
      paramView.setTileModeXY(Shader.TileMode.REPEAT, Shader.TileMode.REPEAT);
    }
  }
  
  public static boolean h()
  {
    return cO().equals("V5");
  }
  
  public static boolean h(int paramInt)
  {
    return (2 == paramInt) || (3 == paramInt);
  }
  
  public static int i(Context paramContext)
  {
    return paramContext.getResources().getDisplayMetrics().heightPixels;
  }
  
  public static int i(String paramString1, String paramString2)
  {
    if ((TextUtils.isEmpty(paramString1)) || (TextUtils.isEmpty(paramString2))) {
      return 21;
    }
    int i1 = a(paramString1, paramString2, -1);
    if (i1 == -1) {
      return 26;
    }
    if (i1 == 0) {
      return 29;
    }
    return ak(i1);
  }
  
  public static String i(int paramInt)
  {
    int i1 = 0;
    if (paramInt >= 60) {
      i1 = paramInt / 60;
    }
    paramInt -= i1 * 60;
    Context localContext = com.keniu.security.d.a();
    if (i1 > 0) {}
    for (String str1 = "" + i1 + " " + localContext.getString(2131296900) + ' ';; str1 = "")
    {
      String str2;
      if (paramInt > 1) {
        str2 = str1 + paramInt + " " + localContext.getString(2131296901);
      }
      do
      {
        return str2;
        str2 = str1;
      } while (paramInt != 1);
      return str1 + paramInt + " " + localContext.getString(2131296902);
    }
  }
  
  public static String i(long paramLong)
  {
    Object localObject = "0MB";
    if (paramLong > 0L)
    {
      float f1 = (float)paramLong / 1048576.0F;
      localObject = new DecimalFormat("#0.##");
      localObject = ((DecimalFormat)localObject).format(f1) + "MB";
    }
    return localObject;
  }
  
  /* Error */
  public static String i(File paramFile)
  {
    // Byte code:
    //   0: new 9730	java/util/zip/ZipInputStream
    //   3: dup
    //   4: invokestatic 6711	com/cleanmaster/security/pbsdk/PbLib:getIns	()Lcom/cleanmaster/security/pbsdk/interfaces/IPbLib;
    //   7: invokeinterface 6714 1 0
    //   12: invokevirtual 5370	android/content/Context:getAssets	()Landroid/content/res/AssetManager;
    //   15: ldc_w 15846
    //   18: invokevirtual 5376	android/content/res/AssetManager:open	(Ljava/lang/String;)Ljava/io/InputStream;
    //   21: invokespecial 9731	java/util/zip/ZipInputStream:<init>	(Ljava/io/InputStream;)V
    //   24: astore_2
    //   25: aload_2
    //   26: astore_1
    //   27: aload_2
    //   28: aload_0
    //   29: invokestatic 15849	android/support/v4/a/d:a	(Ljava/util/zip/ZipInputStream;Ljava/io/File;)Ljava/lang/String;
    //   32: astore_0
    //   33: aconst_null
    //   34: invokestatic 15851	android/support/v4/a/d:a	(Ljava/io/Closeable;)V
    //   37: aload_2
    //   38: invokestatic 15851	android/support/v4/a/d:a	(Ljava/io/Closeable;)V
    //   41: aload_0
    //   42: areturn
    //   43: astore_3
    //   44: aconst_null
    //   45: astore_0
    //   46: aload_0
    //   47: astore_1
    //   48: aload_3
    //   49: invokevirtual 1184	java/io/IOException:printStackTrace	()V
    //   52: aconst_null
    //   53: invokestatic 15851	android/support/v4/a/d:a	(Ljava/io/Closeable;)V
    //   56: aload_0
    //   57: invokestatic 15851	android/support/v4/a/d:a	(Ljava/io/Closeable;)V
    //   60: aconst_null
    //   61: areturn
    //   62: astore_0
    //   63: aconst_null
    //   64: astore_1
    //   65: aconst_null
    //   66: invokestatic 15851	android/support/v4/a/d:a	(Ljava/io/Closeable;)V
    //   69: aload_1
    //   70: invokestatic 15851	android/support/v4/a/d:a	(Ljava/io/Closeable;)V
    //   73: aload_0
    //   74: athrow
    //   75: astore_0
    //   76: goto -11 -> 65
    //   79: astore_3
    //   80: aload_2
    //   81: astore_0
    //   82: goto -36 -> 46
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	85	0	paramFile	File
    //   26	44	1	localObject	Object
    //   24	57	2	localZipInputStream	ZipInputStream
    //   43	6	3	localIOException1	IOException
    //   79	1	3	localIOException2	IOException
    // Exception table:
    //   from	to	target	type
    //   0	25	43	java/io/IOException
    //   0	25	62	finally
    //   27	33	75	finally
    //   48	52	75	finally
    //   27	33	79	java/io/IOException
  }
  
  public static BigDecimal i(Parcel paramParcel, int paramInt)
  {
    paramInt = a(paramParcel, paramInt);
    int i1 = paramParcel.dataPosition();
    if (paramInt == 0) {
      return null;
    }
    byte[] arrayOfByte = paramParcel.createByteArray();
    int i2 = paramParcel.readInt();
    paramParcel.setDataPosition(paramInt + i1);
    return new BigDecimal(new BigInteger(arrayOfByte), i2);
  }
  
  public static List<com.cleanmaster.junk.bean.n> i(List<com.cleanmaster.settings.a> paramList)
  {
    if (paramList == null) {
      return null;
    }
    ArrayList localArrayList = new ArrayList();
    paramList = paramList.iterator();
    while (paramList.hasNext())
    {
      com.cleanmaster.settings.a localA = (com.cleanmaster.settings.a)paramList.next();
      com.cleanmaster.junk.bean.n localN = new com.cleanmaster.junk.bean.n();
      localN.a = localA.c;
      localArrayList.add(localN);
    }
    return localArrayList;
  }
  
  public static void i(int paramInt1, int paramInt2)
  {
    com.cleanmaster.ui.game.d.e.a((byte)paramInt1, (byte)paramInt2).report();
  }
  
  /* Error */
  public static void i(Context paramContext, int paramInt)
  {
    // Byte code:
    //   0: ldc 2
    //   2: monitorenter
    //   3: aload_0
    //   4: invokestatic 7390	com/in2wow/sdk/b/d:a	(Landroid/content/Context;)Lcom/in2wow/sdk/b/d;
    //   7: astore_0
    //   8: aload_0
    //   9: getfield 7713	com/in2wow/sdk/b/d:k	Z
    //   12: ifeq +52 -> 64
    //   15: aload_0
    //   16: getfield 15872	com/in2wow/sdk/b/d:b	Lcom/in2wow/sdk/ui/a;
    //   19: invokevirtual 15873	com/in2wow/sdk/ui/a:b	()J
    //   22: iload_1
    //   23: i2l
    //   24: lcmp
    //   25: ifeq +39 -> 64
    //   28: aload_0
    //   29: getfield 8028	com/in2wow/sdk/b/d:d	Lcom/in2wow/sdk/h/c;
    //   32: iload_1
    //   33: invokevirtual 15874	com/in2wow/sdk/h/c:b	(I)V
    //   36: aload_0
    //   37: getfield 15872	com/in2wow/sdk/b/d:b	Lcom/in2wow/sdk/ui/a;
    //   40: iload_1
    //   41: invokevirtual 15875	com/in2wow/sdk/ui/a:a	(I)V
    //   44: getstatic 15082	com/in2wow/sdk/a/b:c	Ljava/lang/String;
    //   47: ldc_w 15877
    //   50: iconst_1
    //   51: anewarray 5	java/lang/Object
    //   54: dup
    //   55: iconst_0
    //   56: iload_1
    //   57: invokestatic 400	java/lang/String:valueOf	(I)Ljava/lang/String;
    //   60: aastore
    //   61: invokestatic 11960	com/in2wow/sdk/l/k:a	(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V
    //   64: ldc 2
    //   66: monitorexit
    //   67: return
    //   68: astore_0
    //   69: aload_0
    //   70: invokestatic 3043	com/in2wow/sdk/l/k:a	(Ljava/lang/Throwable;)V
    //   73: goto -9 -> 64
    //   76: astore_0
    //   77: ldc 2
    //   79: monitorexit
    //   80: aload_0
    //   81: athrow
    //   82: astore_0
    //   83: aload_0
    //   84: invokestatic 3043	com/in2wow/sdk/l/k:a	(Ljava/lang/Throwable;)V
    //   87: goto -23 -> 64
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	90	0	paramContext	Context
    //   0	90	1	paramInt	int
    // Exception table:
    //   from	to	target	type
    //   3	64	68	java/lang/Exception
    //   3	64	76	finally
    //   69	73	76	finally
    //   83	87	76	finally
    //   3	64	82	java/lang/Error
  }
  
  public static void i(Context paramContext, String paramString)
  {
    paramString = z(paramContext, paramString);
    if (paramString != null)
    {
      if (!(paramContext instanceof Activity)) {
        paramString.setFlags(268435456);
      }
      com.cleanmaster.curlfloat.util.a.a.a(paramContext, paramString);
    }
  }
  
  @TargetApi(9)
  public static void i(View paramView)
  {
    if (Build.VERSION.SDK_INT >= 9) {
      paramView.setOverScrollMode(2);
    }
  }
  
  public static void i(String paramString)
  {
    if (com.cleanmaster.applocklib.bridge.b.b) {
      com.cleanmaster.applocklib.bridge.b.a();
    }
    Intent localIntent = b(3);
    if (com.cleanmaster.applocklib.bridge.b.b)
    {
      new StringBuilder("app = ").append(paramString);
      com.cleanmaster.applocklib.bridge.b.a();
    }
    localIntent.putExtra("apps", paramString);
    b(localIntent);
  }
  
  public static boolean i()
  {
    return cO().equalsIgnoreCase("V6");
  }
  
  private static boolean i(String paramString1, String paramString2, String paramString3)
  {
    com.keniu.security.update.m.a();
    String str = com.keniu.security.update.m.b();
    if ((str == null) || (str.length() == 0)) {
      return false;
    }
    try
    {
      Runtime.getRuntime().exec("chmod 500 " + str).waitFor();
      Runtime.getRuntime().exec(str + " " + paramString1 + " " + paramString2 + " " + paramString3).waitFor();
      return true;
    }
    catch (IOException paramString1)
    {
      paramString1.printStackTrace();
      return false;
    }
    catch (InterruptedException paramString1)
    {
      paramString1.printStackTrace();
      return false;
    }
    catch (Exception paramString1)
    {
      for (;;)
      {
        paramString1.printStackTrace();
      }
    }
  }
  
  public static float j(long paramLong)
  {
    float f1 = 0.0F;
    if (paramLong > 0L) {
      f1 = new BigDecimal((float)paramLong / 1048576.0F).setScale(2, 4).floatValue();
    }
    return f1;
  }
  
  public static int j(View paramView)
  {
    paramView.measure(View.MeasureSpec.makeMeasureSpec(0, 0), View.MeasureSpec.makeMeasureSpec(0, 0));
    return new Point(paramView.getMeasuredWidth(), paramView.getMeasuredHeight()).y;
  }
  
  public static String j(Parcel paramParcel, int paramInt)
  {
    paramInt = a(paramParcel, paramInt);
    int i1 = paramParcel.dataPosition();
    if (paramInt == 0) {
      return null;
    }
    String str = paramParcel.readString();
    paramParcel.setDataPosition(paramInt + i1);
    return str;
  }
  
  /* Error */
  private static String j(File paramFile)
  {
    // Byte code:
    //   0: new 14672	java/io/FileReader
    //   3: dup
    //   4: aload_0
    //   5: invokespecial 15475	java/io/FileReader:<init>	(Ljava/io/File;)V
    //   8: astore_0
    //   9: sipush 128
    //   12: newarray char
    //   14: astore_2
    //   15: aload_2
    //   16: bipush 32
    //   18: invokestatic 15909	java/util/Arrays:fill	([CC)V
    //   21: new 149	java/lang/StringBuilder
    //   24: dup
    //   25: invokespecial 150	java/lang/StringBuilder:<init>	()V
    //   28: astore_3
    //   29: aload_0
    //   30: aload_2
    //   31: iconst_0
    //   32: sipush 128
    //   35: invokevirtual 15912	java/io/FileReader:read	([CII)I
    //   38: istore_1
    //   39: iload_1
    //   40: ifle +26 -> 66
    //   43: aload_3
    //   44: aload_2
    //   45: iconst_0
    //   46: iload_1
    //   47: invokevirtual 5700	java/lang/StringBuilder:append	([CII)Ljava/lang/StringBuilder;
    //   50: pop
    //   51: goto -22 -> 29
    //   54: astore_2
    //   55: aload_0
    //   56: ifnull +7 -> 63
    //   59: aload_0
    //   60: invokevirtual 14681	java/io/FileReader:close	()V
    //   63: ldc -84
    //   65: areturn
    //   66: aload_3
    //   67: invokevirtual 253	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   70: invokevirtual 1417	java/lang/String:trim	()Ljava/lang/String;
    //   73: astore_2
    //   74: aload_0
    //   75: invokevirtual 14681	java/io/FileReader:close	()V
    //   78: aload_2
    //   79: areturn
    //   80: astore_0
    //   81: aconst_null
    //   82: astore_0
    //   83: aload_0
    //   84: ifnull -21 -> 63
    //   87: aload_0
    //   88: invokevirtual 14681	java/io/FileReader:close	()V
    //   91: ldc -84
    //   93: areturn
    //   94: astore_0
    //   95: aconst_null
    //   96: astore_3
    //   97: aload_0
    //   98: astore_2
    //   99: aload_3
    //   100: ifnull +7 -> 107
    //   103: aload_3
    //   104: invokevirtual 14681	java/io/FileReader:close	()V
    //   107: aload_2
    //   108: athrow
    //   109: astore_2
    //   110: aload_0
    //   111: astore_3
    //   112: goto -13 -> 99
    //   115: astore_2
    //   116: goto -33 -> 83
    //   119: astore_0
    //   120: aconst_null
    //   121: astore_0
    //   122: goto -67 -> 55
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	125	0	paramFile	File
    //   38	9	1	i1	int
    //   14	31	2	arrayOfChar	char[]
    //   54	1	2	localIOException	IOException
    //   73	35	2	localObject1	Object
    //   109	1	2	localObject2	Object
    //   115	1	2	localIllegalArgumentException	IllegalArgumentException
    //   28	84	3	localObject3	Object
    // Exception table:
    //   from	to	target	type
    //   9	29	54	java/io/IOException
    //   29	39	54	java/io/IOException
    //   43	51	54	java/io/IOException
    //   66	74	54	java/io/IOException
    //   0	9	80	java/lang/IllegalArgumentException
    //   0	9	94	finally
    //   9	29	109	finally
    //   29	39	109	finally
    //   43	51	109	finally
    //   66	74	109	finally
    //   9	29	115	java/lang/IllegalArgumentException
    //   29	39	115	java/lang/IllegalArgumentException
    //   43	51	115	java/lang/IllegalArgumentException
    //   66	74	115	java/lang/IllegalArgumentException
    //   0	9	119	java/io/IOException
  }
  
  public static ArrayList<com.cleanmaster.photomanager.MediaFile> j(List<com.cleanmaster.junk.bean.MediaFile> paramList)
  {
    if (paramList == null) {
      return null;
    }
    ArrayList localArrayList = new ArrayList();
    paramList = paramList.iterator();
    while (paramList.hasNext()) {
      localArrayList.add(a((com.cleanmaster.junk.bean.MediaFile)paramList.next()));
    }
    return localArrayList;
  }
  
  public static void j(int paramInt)
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("popup=").append(paramInt);
    com.cleanmaster.kinfoc.p.a().a("cm_battery_issue_speech", localStringBuilder.toString(), true);
  }
  
  public static void j(int paramInt1, int paramInt2)
  {
    ai.a((byte)paramInt1, paramInt2).report();
  }
  
  public static void j(Context paramContext, int paramInt)
  {
    paramContext = com.keniu.security.update.push.c.a(paramContext);
    if (paramContext != null) {
      paramContext.a("push_retry_backoff_ms", paramInt);
    }
  }
  
  public static void j(String paramString)
  {
    if (com.cleanmaster.applocklib.bridge.b.b) {
      com.cleanmaster.applocklib.bridge.b.a();
    }
    Intent localIntent = b(4);
    localIntent.putExtra("apps", paramString);
    b(localIntent);
  }
  
  public static boolean j()
  {
    return cO().equalsIgnoreCase("V7");
  }
  
  public static boolean j(Context paramContext)
  {
    float f1 = paramContext.getResources().getDisplayMetrics().densityDpi;
    return (f1 == 120.0F) || (f1 == 160.0F);
  }
  
  public static boolean j(Context paramContext, String paramString)
  {
    if ((paramContext == null) || (TextUtils.isEmpty(paramString))) {}
    for (;;)
    {
      return false;
      try
      {
        paramContext = paramContext.getPackageManager().getApplicationInfo(paramString, 8192);
        if (paramContext != null)
        {
          boolean bool = paramContext.enabled;
          return bool;
        }
      }
      catch (Exception paramContext) {}
    }
    return false;
  }
  
  public static boolean j(String paramString1, String paramString2)
  {
    if ((TextUtils.isEmpty(paramString1)) || (TextUtils.isEmpty(paramString2))) {
      return true;
    }
    return a(paramString1, paramString2, true);
  }
  
  public static double k(Context paramContext)
  {
    int i1 = paramContext.getResources().getDisplayMetrics().widthPixels;
    int i2 = paramContext.getResources().getDisplayMetrics().heightPixels;
    int i3 = paramContext.getResources().getDisplayMetrics().densityDpi;
    double d1 = Math.pow(i1, 2.0D);
    return Math.sqrt(Math.pow(i2, 2.0D) + d1) / i3;
  }
  
  public static PendingIntent k(Context paramContext, int paramInt)
  {
    Intent localIntent = new Intent(paramContext, NotifyAchiveReceiver.class);
    localIntent.putExtra("exe_type", paramInt);
    return PendingIntent.getBroadcast(paramContext, 1, localIntent, 134217728);
  }
  
  public static IBinder k(Parcel paramParcel, int paramInt)
  {
    paramInt = a(paramParcel, paramInt);
    int i1 = paramParcel.dataPosition();
    if (paramInt == 0) {
      return null;
    }
    IBinder localIBinder = paramParcel.readStrongBinder();
    paramParcel.setDataPosition(paramInt + i1);
    return localIBinder;
  }
  
  private static com.cleanmaster.junk.bean.m k(File paramFile)
  {
    com.cleanmaster.junk.bean.m localM = null;
    if (paramFile == null) {
      paramFile = localM;
    }
    for (;;)
    {
      return paramFile;
      try
      {
        paramFile = new StatFs(paramFile.getPath());
        long l1 = com.cleanmaster.junk.d.a.a(paramFile);
        long l2 = com.cleanmaster.junk.d.a.b(paramFile);
        long l3 = com.cleanmaster.junk.d.a.c(paramFile);
        localM = new com.cleanmaster.junk.bean.m();
        localM.a = (l2 * l3);
        localM.b = (l1 * l3);
        paramFile = localM;
        if (localM.a < localM.b)
        {
          localM.b = localM.a;
          return localM;
        }
      }
      catch (Exception paramFile) {}
    }
    return null;
  }
  
  public static String k(long paramLong)
  {
    for (;;)
    {
      try
      {
        Class.forName("miui.text.util.MiuiFormatter");
        String str = null;
        if (paramLong >= 1000L)
        {
          str = "KB";
          f2 = (float)(paramLong / 1000.0D);
          float f1 = f2;
          if (f2 >= 1000.0F)
          {
            str = "MB";
            f1 = f2 / 1000.0F;
          }
          f2 = f1;
          if (f1 >= 1000.0F)
          {
            str = "GB";
            f2 = f1 / 1000.0F;
          }
          StringBuilder localStringBuilder = new StringBuilder(new DecimalFormat("#0.0").format(f2));
          if (str != null)
          {
            localStringBuilder.append(str);
            return localStringBuilder.toString();
          }
          localStringBuilder.append("B");
          continue;
        }
        float f2 = (float)paramLong;
      }
      catch (ClassNotFoundException localClassNotFoundException)
      {
        return a(paramLong, "#0.0");
      }
    }
  }
  
  public static String k(String paramString)
  {
    try
    {
      Object localObject = MessageDigest.getInstance("MD5");
      ((MessageDigest)localObject).update(paramString.getBytes());
      paramString = ((MessageDigest)localObject).digest();
      if (paramString == null) {
        return null;
      }
      int i2 = paramString.length;
      localObject = new StringBuilder(i2 << 1);
      int i1 = 0;
      while (i1 < i2)
      {
        ((StringBuilder)localObject).append("0123456789abcdef".charAt((paramString[i1] & 0xF0) >>> 4));
        ((StringBuilder)localObject).append("0123456789abcdef".charAt(paramString[i1] & 0xF));
        i1 += 1;
      }
      return ((StringBuilder)localObject).toString();
    }
    catch (Exception paramString) {}
    return null;
  }
  
  public static List<com.cleanmaster.junk.bean.MediaFile> k(List<com.cleanmaster.photomanager.MediaFile> paramList)
  {
    if (paramList == null) {
      return null;
    }
    ArrayList localArrayList = new ArrayList();
    paramList = paramList.iterator();
    while (paramList.hasNext()) {
      localArrayList.add(a((com.cleanmaster.photomanager.MediaFile)paramList.next()));
    }
    return localArrayList;
  }
  
  public static void k(int paramInt)
  {
    com.cleanmaster.base.util.concurrent.BackgroundThread.b().post(new com.cleanmaster.boost.acc.utils.e(paramInt));
  }
  
  public static void k(int paramInt1, int paramInt2)
  {
    com.cleanmaster.boost.d.ah.a((byte)paramInt1, (byte)paramInt2).report();
  }
  
  public static void k(String paramString1, String paramString2)
  {
    new StringBuilder().append(paramString1).append(" - ").append(paramString2);
  }
  
  public static boolean k()
  {
    try
    {
      boolean bool = cP();
      return bool;
    }
    catch (Exception localException) {}
    return false;
  }
  
  public static boolean k(Context paramContext, String paramString)
  {
    if ((paramContext == null) || (paramString == null)) {
      return false;
    }
    try
    {
      paramContext.getPackageManager().getPackageInfo(paramString, 256);
      return true;
    }
    catch (Exception paramContext) {}
    return false;
  }
  
  public static boolean k(View paramView)
  {
    return paramView.getOverScrollMode() != 2;
  }
  
  public static int l(Context paramContext)
  {
    return paramContext.getResources().getDisplayMetrics().widthPixels;
  }
  
  public static Bundle l(Parcel paramParcel, int paramInt)
  {
    paramInt = a(paramParcel, paramInt);
    int i1 = paramParcel.dataPosition();
    if (paramInt == 0) {
      return null;
    }
    Bundle localBundle = paramParcel.readBundle();
    paramParcel.setDataPosition(paramInt + i1);
    return localBundle;
  }
  
  public static com.cleanmaster.base.util.g.b l(long paramLong)
  {
    float f1;
    String str;
    Object localObject;
    if (paramLong >= 1048576000L)
    {
      f1 = (float)(paramLong / 1.073741824E9D);
      str = "GB";
      if (f1 < 100.0F) {
        break label128;
      }
      localObject = "#0";
    }
    for (;;)
    {
      localObject = new DecimalFormat((String)localObject);
      DecimalFormatSymbols localDecimalFormatSymbols = ((DecimalFormat)localObject).getDecimalFormatSymbols();
      localDecimalFormatSymbols.setDecimalSeparator('.');
      ((DecimalFormat)localObject).setDecimalFormatSymbols(localDecimalFormatSymbols);
      return new com.cleanmaster.base.util.g.b(((DecimalFormat)localObject).format(f1).replaceAll("-", "."), str);
      if (paramLong >= 1024000L)
      {
        f1 = (float)(paramLong / 1048576.0D);
        str = "MB";
        break;
      }
      f1 = (float)(paramLong / 1024.0D);
      str = "KB";
      break;
      label128:
      if (f1 >= 10.0F) {
        localObject = "#0.0";
      } else {
        localObject = "#0.00";
      }
    }
  }
  
  public static List<String> l(int paramInt)
  {
    Object localObject = null;
    if (paramInt != 0)
    {
      ArrayList localArrayList = new ArrayList();
      localObject = AutostartDefine.c;
      int i1 = 0;
      for (;;)
      {
        localObject = localArrayList;
        if (i1 >= 20) {
          break;
        }
        if ((1 << i1 & paramInt) == 1 << i1) {
          localArrayList.add(AutostartDefine.c[i1]);
        }
        i1 += 1;
      }
    }
    return localObject;
  }
  
  /* Error */
  private static JSONObject l(File paramFile)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_3
    //   2: aconst_null
    //   3: astore 4
    //   5: new 1281	java/lang/StringBuffer
    //   8: dup
    //   9: invokespecial 1282	java/lang/StringBuffer:<init>	()V
    //   12: astore 5
    //   14: new 14672	java/io/FileReader
    //   17: dup
    //   18: aload_0
    //   19: invokespecial 15475	java/io/FileReader:<init>	(Ljava/io/File;)V
    //   22: astore_2
    //   23: new 5688	java/io/BufferedReader
    //   26: dup
    //   27: aload_2
    //   28: invokespecial 5694	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   31: astore_1
    //   32: aload_1
    //   33: invokevirtual 12727	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   36: astore_0
    //   37: aload_0
    //   38: ifnonnull +39 -> 77
    //   41: aload 4
    //   43: astore_0
    //   44: aload 5
    //   46: invokevirtual 9630	java/lang/StringBuffer:length	()I
    //   49: ifle +16 -> 65
    //   52: new 655	org/json/JSONObject
    //   55: dup
    //   56: aload 5
    //   58: invokevirtual 1338	java/lang/StringBuffer:toString	()Ljava/lang/String;
    //   61: invokespecial 656	org/json/JSONObject:<init>	(Ljava/lang/String;)V
    //   64: astore_0
    //   65: aload_2
    //   66: invokevirtual 14681	java/io/FileReader:close	()V
    //   69: aload_1
    //   70: invokevirtual 5704	java/io/BufferedReader:close	()V
    //   73: aload_0
    //   74: astore_1
    //   75: aload_1
    //   76: areturn
    //   77: aload 5
    //   79: aload_0
    //   80: invokevirtual 1287	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   83: pop
    //   84: goto -52 -> 32
    //   87: astore_0
    //   88: aload_1
    //   89: astore_0
    //   90: aload_2
    //   91: ifnull +7 -> 98
    //   94: aload_2
    //   95: invokevirtual 14681	java/io/FileReader:close	()V
    //   98: aload_3
    //   99: astore_1
    //   100: aload_0
    //   101: ifnull -26 -> 75
    //   104: aload_0
    //   105: invokevirtual 5704	java/io/BufferedReader:close	()V
    //   108: aconst_null
    //   109: areturn
    //   110: astore_0
    //   111: aconst_null
    //   112: areturn
    //   113: astore_0
    //   114: aconst_null
    //   115: astore_2
    //   116: aconst_null
    //   117: astore_1
    //   118: aload_2
    //   119: ifnull +7 -> 126
    //   122: aload_2
    //   123: invokevirtual 14681	java/io/FileReader:close	()V
    //   126: aload_1
    //   127: ifnull +7 -> 134
    //   130: aload_1
    //   131: invokevirtual 5704	java/io/BufferedReader:close	()V
    //   134: aload_0
    //   135: athrow
    //   136: astore_1
    //   137: goto -39 -> 98
    //   140: astore_2
    //   141: goto -15 -> 126
    //   144: astore_1
    //   145: goto -11 -> 134
    //   148: astore_2
    //   149: goto -80 -> 69
    //   152: astore_1
    //   153: aload_0
    //   154: areturn
    //   155: astore_0
    //   156: aconst_null
    //   157: astore_1
    //   158: goto -40 -> 118
    //   161: astore_0
    //   162: goto -44 -> 118
    //   165: astore_0
    //   166: aconst_null
    //   167: astore_0
    //   168: aconst_null
    //   169: astore_2
    //   170: goto -80 -> 90
    //   173: astore_0
    //   174: aconst_null
    //   175: astore_0
    //   176: goto -86 -> 90
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	179	0	paramFile	File
    //   31	100	1	localObject1	Object
    //   136	1	1	localIOException1	IOException
    //   144	1	1	localIOException2	IOException
    //   152	1	1	localIOException3	IOException
    //   157	1	1	localObject2	Object
    //   22	101	2	localFileReader	FileReader
    //   140	1	2	localIOException4	IOException
    //   148	1	2	localIOException5	IOException
    //   169	1	2	localObject3	Object
    //   1	98	3	localObject4	Object
    //   3	39	4	localObject5	Object
    //   12	66	5	localStringBuffer	StringBuffer
    // Exception table:
    //   from	to	target	type
    //   32	37	87	java/lang/Exception
    //   44	65	87	java/lang/Exception
    //   77	84	87	java/lang/Exception
    //   104	108	110	java/io/IOException
    //   5	23	113	finally
    //   94	98	136	java/io/IOException
    //   122	126	140	java/io/IOException
    //   130	134	144	java/io/IOException
    //   65	69	148	java/io/IOException
    //   69	73	152	java/io/IOException
    //   23	32	155	finally
    //   32	37	161	finally
    //   44	65	161	finally
    //   77	84	161	finally
    //   5	23	165	java/lang/Exception
    //   23	32	173	java/lang/Exception
  }
  
  public static void l(int paramInt1, int paramInt2)
  {
    com.cleanmaster.base.util.concurrent.BackgroundThread.a(new com.cleanmaster.ui.game.w(paramInt1, paramInt2));
  }
  
  public static void l(Context paramContext, String paramString)
  {
    Object localObject = bm(paramString);
    if ((!TextUtils.isEmpty((CharSequence)localObject)) && (!TextUtils.equals((CharSequence)localObject, "*/*")))
    {
      Intent localIntent = new Intent();
      localIntent.addFlags(268435456);
      localIntent.setAction("android.intent.action.VIEW");
      localIntent.setDataAndType(Uri.fromFile(new File(paramString)), (String)localObject);
      com.cleanmaster.base.util.system.b.a(paramContext, localIntent);
      return;
    }
    localObject = new ListView(paramContext);
    ((ListView)localObject).setAdapter(new TypeChooserAdapter(paramContext, new TypeChooserAdapter.b(paramString, paramContext)));
    paramContext = ((com.keniu.security.util.d.a)((com.keniu.security.util.d.a)new com.keniu.security.util.d.a(paramContext).a(2131297896)).b((View)localObject)).g();
    paramContext.setCanceledOnTouchOutside(true);
    paramContext.show();
  }
  
  public static void l(View paramView)
  {
    if (com.in2wow.b.b.a.a.a)
    {
      com.in2wow.b.b.a.a.a(paramView).b(0.0F);
      return;
    }
    paramView.setTranslationX(0.0F);
  }
  
  public static void l(String paramString)
  {
    if ((TextUtils.isEmpty(paramString)) || (!com.cleanmaster.base.util.net.b.v(com.keniu.security.d.a()))) {
      return;
    }
    com.cleanmaster.kinfoc.p.a().a("cm_activity_act", "actname=" + paramString, true);
  }
  
  public static void l(List<com.cleanmaster.photomanager.MediaFile> paramList)
  {
    Object localObject = new StringBuffer();
    ArrayList localArrayList = new ArrayList();
    paramList = paramList.iterator();
    while (paramList.hasNext())
    {
      com.cleanmaster.photomanager.MediaFile localMediaFile = (com.cleanmaster.photomanager.MediaFile)paramList.next();
      if (((StringBuffer)localObject).length() != 0) {
        ((StringBuffer)localObject).append(" or ");
      }
      ((StringBuffer)localObject).append("_data = ?");
      localArrayList.add(localMediaFile.h);
    }
    paramList = new String[localArrayList.size()];
    localArrayList.toArray(paramList);
    localObject = ((StringBuffer)localObject).toString();
    if ((TextUtils.isEmpty((CharSequence)localObject)) || (paramList.length == 0)) {
      return;
    }
    try
    {
      com.keniu.security.d.a().getApplicationContext().getContentResolver().delete(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, (String)localObject, paramList);
      return;
    }
    catch (Throwable paramList) {}
  }
  
  public static boolean l()
  {
    Context localContext = com.keniu.security.d.a();
    String str = localContext.getPackageName();
    try
    {
      boolean bool = b(localContext, localContext.getPackageManager().getPackageInfo(str, 0).applicationInfo.uid, str, 24);
      return bool;
    }
    catch (Throwable localThrowable) {}
    return true;
  }
  
  public static boolean l(String paramString1, String paramString2)
  {
    if (android.support.percent.a.a(com.keniu.security.d.a(), "com.cmcm.whatscall"))
    {
      Intent localIntent = new Intent("com.cmcm.whatscall.OPEN_P2P_CHAT");
      localIntent.setFlags(268435456);
      localIntent.putExtra("extra_call_from_other_app", true);
      localIntent.putExtra("extra_call_callee_phone", paramString1);
      localIntent.putExtra("extra_call_without_call_params", true);
      if (!com.cleanmaster.applocklib.bridge.a.a(com.keniu.security.d.a(), localIntent)) {
        d(com.keniu.security.d.a(), "com.cmcm.whatscall", paramString2);
      }
      return true;
    }
    d(com.keniu.security.d.a(), "com.cmcm.whatscall", paramString2);
    return true;
  }
  
  public static int m(Context paramContext)
  {
    return paramContext.getResources().getDisplayMetrics().heightPixels;
  }
  
  public static Bitmap m(View paramView)
  {
    if (paramView != null)
    {
      paramView = (BitmapDrawable)paramView.getBackground();
      if (paramView != null) {
        return paramView.getBitmap();
      }
    }
    return null;
  }
  
  public static JsonReader m(Context paramContext, String paramString)
  {
    paramContext = paramContext.getResources().getAssets();
    try
    {
      paramContext = new JsonReader(new InputStreamReader(paramContext.open(paramString), "UTF-8"));
      return paramContext;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return null;
  }
  
  public static String m(long paramLong)
  {
    if (paramLong >= 1024L)
    {
      String str = "KB";
      float f2 = (float)(paramLong / 1024.0D);
      float f1 = f2;
      if (f2 >= 1024.0F)
      {
        str = "MB";
        f1 = f2 / 1024.0F;
      }
      if (f1 >= 1024.0F) {
        str = "GB";
      }
      return str;
    }
    return "B";
  }
  
  public static String m(String paramString)
  {
    if (!TextUtils.isEmpty(paramString)) {
      return paramString.substring(paramString.lastIndexOf("/") + 1);
    }
    return null;
  }
  
  public static void m(int paramInt)
  {
    Context localContext = com.keniu.security.d.a();
    if (paramInt == com.cleanmaster.boost.boostengine.a.a)
    {
      com.cleanmaster.configmanager.d.a(localContext).v(0L);
      com.cleanmaster.configmanager.d.a(localContext).w(0L);
    }
    while (paramInt != com.cleanmaster.boost.boostengine.a.c) {
      return;
    }
    com.cleanmaster.configmanager.d.a(localContext).y(0L);
    com.cleanmaster.configmanager.d.a(localContext).x(0L);
  }
  
  public static void m(int paramInt1, int paramInt2)
  {
    GameBackgroundThread.a(new com.cleanmaster.ui.game.g.a(paramInt1, paramInt2));
  }
  
  public static void m(List<com.cleanmaster.photomanager.MediaFile> paramList)
  {
    if ((paramList == null) || (paramList.isEmpty()) || (TextUtils.isEmpty("_id"))) {
      return;
    }
    Object localObject;
    if ("_id".equals("_id")) {
      localObject = new com.cleanmaster.photomanager.b();
    }
    ArrayList localArrayList;
    for (String str = "_id = ?";; str = "_data = ?")
    {
      localArrayList = new ArrayList();
      paramList = paramList.iterator();
      while (paramList.hasNext())
      {
        com.cleanmaster.photomanager.MediaFile localMediaFile = (com.cleanmaster.photomanager.MediaFile)paramList.next();
        ContentValues localContentValues = new ContentValues(4);
        localContentValues.put("_size", Long.valueOf(localMediaFile.getSize()));
        localContentValues.put("mime_type", localMediaFile.m);
        if (localMediaFile.x > 0L)
        {
          localContentValues.put("date_modified", Long.valueOf(localMediaFile.p));
          localContentValues.put("datetaken", Long.valueOf(localMediaFile.x));
        }
        localArrayList.add(ContentProviderOperation.newUpdate(MediaStore.Images.Media.EXTERNAL_CONTENT_URI).withSelection(str, new String[] { (String)((com.cleanmaster.photomanager.d)localObject).a(localMediaFile) }).withValues(localContentValues).build());
      }
      if (!"_data".equals("_id")) {
        break;
      }
      localObject = new com.cleanmaster.photomanager.c();
    }
    try
    {
      com.keniu.security.d.a().getApplicationContext().getContentResolver().applyBatch(MediaStore.Images.Media.EXTERNAL_CONTENT_URI.getAuthority(), localArrayList);
      return;
    }
    catch (Throwable paramList)
    {
      paramList.printStackTrace();
    }
  }
  
  public static boolean m()
  {
    boolean bool2 = false;
    boolean bool1 = bool2;
    if (g())
    {
      if (!h()) {
        break label22;
      }
      bool1 = cP();
    }
    label22:
    do
    {
      return bool1;
      if (i()) {
        break;
      }
      bool1 = bool2;
    } while (!j());
    return l();
  }
  
  public static boolean m(String paramString1, String paramString2)
  {
    try
    {
      if (!TextUtils.isEmpty(paramString1))
      {
        if (TextUtils.isEmpty(paramString2)) {
          return false;
        }
        PackageManager localPackageManager = com.keniu.security.d.a().getPackageManager();
        if (localPackageManager != null)
        {
          paramString2 = localPackageManager.getPackageInfo(paramString2, 64);
          new com.cleanmaster.base.util.hash.a();
          paramString2 = com.cleanmaster.base.util.hash.a.a(paramString2.signatures);
          if ((paramString2 != null) && (paramString2.length > 0))
          {
            boolean bool = paramString1.equalsIgnoreCase(paramString2[0]);
            return bool;
          }
        }
      }
    }
    catch (PackageManager.NameNotFoundException paramString1)
    {
      paramString1.printStackTrace();
    }
    return false;
  }
  
  public static byte[] m(Parcel paramParcel, int paramInt)
  {
    paramInt = a(paramParcel, paramInt);
    int i1 = paramParcel.dataPosition();
    if (paramInt == 0) {
      return null;
    }
    byte[] arrayOfByte = paramParcel.createByteArray();
    paramParcel.setDataPosition(paramInt + i1);
    return arrayOfByte;
  }
  
  public static int n()
  {
    if (AppLockUtil.isSamsungDevices()) {
      return 2131492925;
    }
    return 2131492920;
  }
  
  public static int n(Context paramContext)
  {
    return paramContext.getResources().getDisplayMetrics().heightPixels - K();
  }
  
  public static String n(long paramLong)
  {
    float f1;
    if (paramLong >= 1024L)
    {
      f2 = (float)(paramLong / 1024.0D);
      f1 = f2;
      if (f2 >= 1024.0F) {
        f1 = f2 / 1024.0F;
      }
      f2 = f1;
      if (f1 < 1024.0F) {}
    }
    for (float f2 = f1 / 1024.0F;; f2 = (float)paramLong) {
      return new DecimalFormat("#0.0").format(f2);
    }
  }
  
  public static String n(String paramString)
  {
    String str;
    if ("mounted".equals(Environment.getExternalStorageState()))
    {
      paramString = android.support.percent.a.H(File.separator + "Download" + File.separator + paramString);
      if (!TextUtils.isEmpty(paramString)) {
        break label104;
      }
      str = null;
    }
    label104:
    File localFile;
    do
    {
      do
      {
        return str;
        paramString = Environment.getDataDirectory() + "/data/" + com.keniu.security.d.a().getPackageName() + File.separator + paramString;
        break;
        localFile = new File(paramString);
        str = paramString;
      } while (localFile.exists());
      str = paramString;
    } while (localFile.mkdir());
    return null;
  }
  
  public static String n(String paramString1, String paramString2)
  {
    new StringBuilder("getCloudLang() jsonConfig : ").append(paramString1).append(" defaultValue : ").append(paramString2);
    if (TextUtils.isEmpty(paramString1)) {}
    for (;;)
    {
      return paramString2;
      Object localObject = null;
      try
      {
        paramString1 = new JSONObject(paramString1);
        if (paramString1 == null) {
          continue;
        }
        localObject = com.keniu.security.d.a();
        String str = b(paramString1, com.cleanmaster.configmanager.d.a((Context)localObject).b((Context)localObject).b());
        localObject = str;
        if (TextUtils.isEmpty(str))
        {
          localObject = com.keniu.security.d.a();
          localObject = b(paramString1, com.cleanmaster.configmanager.d.a((Context)localObject).b((Context)localObject).M);
        }
        if (TextUtils.isEmpty((CharSequence)localObject)) {
          continue;
        }
        return localObject;
      }
      catch (JSONException paramString1)
      {
        for (;;)
        {
          paramString1.printStackTrace();
          paramString1 = (String)localObject;
        }
      }
    }
  }
  
  public static void n(View paramView)
  {
    if (paramView == null) {
      return;
    }
    com.cleanmaster.base.util.ui.a.a(paramView);
  }
  
  public static void n(List<com.cleanmaster.photomanager.MediaFile> paramList)
  {
    ContentResolver localContentResolver = com.keniu.security.d.a().getApplicationContext().getContentResolver();
    new com.ijinshan.cleaner.model.a.b();
    paramList = paramList.iterator();
    if (paramList.hasNext())
    {
      com.cleanmaster.photomanager.MediaFile localMediaFile = (com.cleanmaster.photomanager.MediaFile)paramList.next();
      Object localObject2 = new File(localMediaFile.h);
      Object localObject1 = com.ijinshan.cleaner.model.a.b.a((File)localObject2, 3, 0L);
      Object localObject3 = ((File)localObject2).getParentFile();
      localObject2 = com.cleanmaster.base.util.g.d.g(((File)localObject3).toString());
      localObject3 = com.cleanmaster.base.util.g.d.g(((File)localObject3).getName());
      ContentValues localContentValues = new ContentValues();
      localContentValues.put("title", (String)localObject1);
      localContentValues.put("_display_name", (String)localObject1);
      localContentValues.put("_data", localMediaFile.h);
      localContentValues.put("_size", Long.valueOf(localMediaFile.getSize()));
      localContentValues.put("mime_type", "image/jpeg");
      if (localMediaFile.y == 0L)
      {
        l1 = System.currentTimeMillis();
        label178:
        localContentValues.put("date_added", Long.valueOf(l1));
        if (localMediaFile.x != 0L) {
          break label323;
        }
      }
      label323:
      for (long l1 = System.currentTimeMillis();; l1 = localThrowable.x)
      {
        localContentValues.put("datetaken", Long.valueOf(l1));
        localContentValues.put("date_modified", Long.valueOf(localMediaFile.p));
        localContentValues.put("bucket_id", Integer.valueOf(((String)localObject2).hashCode()));
        localContentValues.put("bucket_display_name", (String)localObject3);
        try
        {
          localObject1 = localContentResolver.insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, localContentValues);
          if (localObject1 == null) {
            break;
          }
          localObject1 = ((Uri)localObject1).getLastPathSegment();
          if (localObject1 == null) {
            break;
          }
          localMediaFile.j = Integer.parseInt((String)localObject1);
        }
        catch (Throwable localThrowable)
        {
          OpLog.b("MediaFileOperator", "MovePicDataMode, insert file error");
        }
        break;
        l1 = localThrowable.y;
        break label178;
      }
    }
  }
  
  public static boolean n(int paramInt)
  {
    long l2 = 0L;
    Context localContext = com.keniu.security.d.a();
    long l3 = System.currentTimeMillis();
    long l1;
    if (paramInt == com.cleanmaster.boost.boostengine.a.a) {
      l1 = com.cleanmaster.configmanager.d.a(localContext).cV();
    }
    for (;;)
    {
      if (l3 < l1)
      {
        m(paramInt);
        l1 = l2;
      }
      for (;;)
      {
        if (l3 - l1 < 80000L)
        {
          return true;
          if (paramInt != com.cleanmaster.boost.boostengine.a.c) {
            break label78;
          }
          l1 = com.cleanmaster.configmanager.d.a(localContext).cY();
          break;
        }
        return false;
      }
      label78:
      l1 = 0L;
    }
  }
  
  public static boolean n(int paramInt1, int paramInt2)
  {
    return (paramInt1 & 0xFFFF) == (0xFFFF & paramInt2);
  }
  
  public static boolean n(Context paramContext, String paramString)
  {
    if (paramContext == null) {}
    for (;;)
    {
      return false;
      try
      {
        paramContext = paramContext.getPackageManager().getPackageInfo(paramString, 0);
        if (paramContext != null) {
          return true;
        }
      }
      catch (Exception paramContext) {}
    }
    return false;
  }
  
  public static int[] n(Parcel paramParcel, int paramInt)
  {
    paramInt = a(paramParcel, paramInt);
    int i1 = paramParcel.dataPosition();
    if (paramInt == 0) {
      return null;
    }
    int[] arrayOfInt = paramParcel.createIntArray();
    paramParcel.setDataPosition(paramInt + i1);
    return arrayOfInt;
  }
  
  public static long o(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {}
    do
    {
      return 0L;
      paramString = paramString.getBytes();
    } while ((paramString == null) || (paramString.length <= 0));
    CRC32 localCRC32 = new CRC32();
    localCRC32.update(paramString);
    return localCRC32.getValue();
  }
  
  public static String o(long paramLong)
  {
    float f2;
    if (paramLong >= 1024L)
    {
      f2 = (float)(paramLong / 1024.0D);
      f1 = f2;
      if (f2 < 1024.0F) {}
    }
    for (float f1 = f2 / 1024.0F;; f1 = (float)paramLong) {
      return new DecimalFormat("#0.0").format(f1);
    }
  }
  
  public static String o(Context paramContext, String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return paramContext.getString(2131299325);
    }
    String str1;
    if (TextUtils.isEmpty(paramString)) {
      str1 = paramContext.getString(2131299325);
    }
    int i1;
    while ((paramContext.getString(2131299325).equals(str1)) || (TextUtils.isEmpty(str1)))
    {
      return paramContext.getString(2131299325);
      str1 = paramString;
      switch (com.cleanmaster.configmanager.d.a(paramContext).cr())
      {
      case 2: 
      case 3: 
      default: 
        if (TextUtils.isEmpty(paramString)) {
          str1 = paramContext.getString(2131299325);
        }
        break;
      case 4: 
        if (TextUtils.isEmpty(paramString))
        {
          str1 = paramContext.getString(2131299325);
        }
        else
        {
          str1 = paramString;
          if (paramString.startsWith("Google_"))
          {
            String str2 = paramString.substring(7, paramString.length());
            str1 = paramString;
            if (!TextUtils.isEmpty(str2))
            {
              i1 = str2.lastIndexOf("@");
              str1 = paramString;
              if (i1 > 1)
              {
                str1 = str2.substring(0, i1);
                continue;
                str1 = paramString;
                if (paramString.startsWith("mail_")) {
                  str1 = paramContext.getString(2131299325);
                }
              }
            }
          }
        }
        break;
      }
    }
    int i3;
    if (TextUtils.isEmpty(str1)) {
      i3 = 0;
    }
    while (i3 > 12)
    {
      return paramContext.getString(2131299325);
      int i2 = 0;
      i1 = 0;
      i3 = i1;
      if (i2 < str1.length())
      {
        i3 = Character.codePointAt(str1, i2);
        if ((i3 >= 0) && (i3 <= 255)) {
          i1 += 1;
        }
        for (;;)
        {
          i2 += 1;
          break;
          i1 += 2;
        }
      }
    }
    return paramContext.getString(2131299367, new Object[] { str1 });
  }
  
  public static void o()
  {
    if (com.cleanmaster.applocklib.bridge.b.b) {
      com.cleanmaster.applocklib.bridge.b.a();
    }
    Intent localIntent = b(1);
    AppLockUtil.debugLog("AppLockLib.ServiceClient", "start intent component: " + localIntent.getComponent());
    b(localIntent);
  }
  
  public static void o(int paramInt)
  {
    Context localContext = com.keniu.security.d.a();
    long l1 = System.currentTimeMillis();
    if (paramInt == com.cleanmaster.boost.boostengine.a.a) {
      com.cleanmaster.configmanager.d.a(localContext).w(l1);
    }
    while (paramInt != com.cleanmaster.boost.boostengine.a.c) {
      return;
    }
    com.cleanmaster.configmanager.d.a(localContext).x(l1);
  }
  
  public static void o(String paramString1, String paramString2)
  {
    if ((TextUtils.isEmpty(paramString1)) || (TextUtils.isEmpty(paramString2))) {
      return;
    }
    com.cleanmaster.ui.app.utils.d.d(com.cleanmaster.ui.app.market.a.a(paramString1), paramString2);
  }
  
  public static void o(List<com.cleanmaster.ui.resultpage.item.h> paramList)
  {
    if ((paramList == null) || (paramList.isEmpty())) {}
    for (;;)
    {
      return;
      ArrayList localArrayList = new ArrayList();
      int i2 = paramList.size();
      int i1 = 0;
      while ((i1 < i2 - 1) && (i1 + 1 < i2))
      {
        localH1 = (com.cleanmaster.ui.resultpage.item.h)paramList.get(i1);
        com.cleanmaster.ui.resultpage.item.h localH2 = (com.cleanmaster.ui.resultpage.item.h)paramList.get(i1 + 1);
        if (((localH1 instanceof com.cleanmaster.ui.resultpage.item.s)) && ((localH2 instanceof com.cleanmaster.ui.resultpage.item.s))) {
          localArrayList.add(localH1);
        }
        if (((localH1 instanceof com.cleanmaster.ui.resultpage.item.s)) && (!localH1.aw.equalsIgnoreCase(localH2.aw))) {
          localArrayList.add(localH1);
        }
        i1 += 1;
      }
      com.cleanmaster.ui.resultpage.item.h localH1 = (com.cleanmaster.ui.resultpage.item.h)paramList.get(paramList.size() - 1);
      if ((localH1 instanceof com.cleanmaster.ui.resultpage.item.s)) {
        localArrayList.add(localH1);
      }
      i2 = localArrayList.size();
      i1 = 0;
      while (i1 < i2)
      {
        paramList.remove(localArrayList.get(i1));
        i1 += 1;
      }
    }
  }
  
  public static boolean o(Context paramContext)
  {
    int i1 = paramContext.getResources().getDisplayMetrics().widthPixels;
    int i2 = paramContext.getResources().getDisplayMetrics().heightPixels;
    if (i1 * i2 <= 384000)
    {
      new StringBuilder("low sreen ").append(i2).append(" * ").append(i1);
      return true;
    }
    return false;
  }
  
  public static BigDecimal[] o(Parcel paramParcel, int paramInt)
  {
    int i1 = a(paramParcel, paramInt);
    int i2 = paramParcel.dataPosition();
    if (i1 == 0) {
      return null;
    }
    int i3 = paramParcel.readInt();
    BigDecimal[] arrayOfBigDecimal = new BigDecimal[i3];
    paramInt = 0;
    while (paramInt < i3)
    {
      byte[] arrayOfByte = paramParcel.createByteArray();
      int i4 = paramParcel.readInt();
      arrayOfBigDecimal[paramInt] = new BigDecimal(new BigInteger(arrayOfByte), i4);
      paramInt += 1;
    }
    paramParcel.setDataPosition(i2 + i1);
    return arrayOfBigDecimal;
  }
  
  public static void onClick(boolean paramBoolean, String paramString, String... paramVarArgs)
  {
    int i1;
    if (F != null)
    {
      Log.d("#####", "forceReport = " + paramBoolean + ", tableName = " + paramString + "\t");
      paramVarArgs = com.ksmobile.business.sdk.n.a(paramVarArgs);
      if (paramVarArgs != null)
      {
        if (!"launcher_search_ad1".equals(paramString)) {
          break label182;
        }
        if ((paramVarArgs.get("result") != null) && (paramVarArgs.get("location") != null) && (paramVarArgs.get("Source") != null))
        {
          i1 = Integer.parseInt(paramVarArgs.get("result").toString());
          i2 = Integer.parseInt(paramVarArgs.get("Source").toString());
          int i3 = Integer.parseInt(paramVarArgs.get("location").toString());
          paramString = new com.cleanmaster.k.ap().a(i1).b(i3);
          paramString.set("Source", i2);
          paramString.report();
        }
      }
    }
    label182:
    do
    {
      do
      {
        do
        {
          do
          {
            do
            {
              do
              {
                do
                {
                  do
                  {
                    do
                    {
                      do
                      {
                        do
                        {
                          return;
                          if (!"launcher_search_history1".equals(paramString)) {
                            break;
                          }
                        } while (paramVarArgs.get("result") == null);
                        paramString = paramVarArgs.get("result").toString();
                      } while (!TextUtils.isEmpty(paramString));
                      new au().a(paramString).report();
                      return;
                      if (!"launcher_search_history2".equals(paramString)) {
                        break;
                      }
                    } while (paramVarArgs.get("press") == null);
                    i1 = Integer.parseInt(paramVarArgs.get("press").toString());
                    new com.cleanmaster.k.av().a(i1).report();
                    return;
                    if (!"launcher_search_history3".equals(paramString)) {
                      break;
                    }
                  } while (paramVarArgs.get("result") == null);
                  i1 = Integer.parseInt(paramVarArgs.get("result").toString());
                  new com.cleanmaster.k.aw().a(i1).report();
                  return;
                  if (!"launcher_search_results".equals(paramString)) {
                    break;
                  }
                } while ((paramVarArgs.get("result") == null) || (paramVarArgs.get("keyword") == null) || (paramVarArgs.get("url") == null));
                i1 = Integer.parseInt(paramVarArgs.get("result").toString());
                paramString = paramVarArgs.get("keyword").toString();
                paramVarArgs = paramVarArgs.get("url").toString();
              } while ((TextUtils.isEmpty(paramString)) || (TextUtils.isEmpty(paramVarArgs)));
              new az().a(i1).a(paramString).b(paramVarArgs).report();
              return;
              if (!"launcher_search_settings".equals(paramString)) {
                break;
              }
            } while ((paramVarArgs.get("result") == null) || (paramVarArgs.get("value") == null));
            i1 = Integer.parseInt(paramVarArgs.get("result").toString());
            i2 = Integer.parseInt(paramVarArgs.get("value").toString());
            new bb().b(i1).a(i2).report();
            return;
            if (!"launcher_search_trending".equals(paramString)) {
              break;
            }
          } while ((paramVarArgs.get("result") == null) || (paramVarArgs.get("keyword") == null) || (paramVarArgs.get("url") == null) || (paramVarArgs.get("source") == null));
          i1 = Integer.parseInt(paramVarArgs.get("result").toString());
          i2 = Integer.parseInt(paramVarArgs.get("source").toString());
          paramString = paramVarArgs.get("keyword").toString();
          paramVarArgs = paramVarArgs.get("url").toString();
          paramString = new com.cleanmaster.k.be().a(i1).b(paramVarArgs).a(paramString);
          paramString.set("Source", i2);
          paramString.report();
          return;
          if (!"launcher_search_webview".equals(paramString)) {
            break;
          }
        } while (paramVarArgs.get("result") == null);
        i1 = Integer.parseInt(paramVarArgs.get("result").toString());
        new bf().a(i1).report();
        return;
        if (!"launcher_search_news".equals(paramString)) {
          break;
        }
      } while ((paramVarArgs.get("newsid") == null) || (paramVarArgs.get("location") == null));
      i1 = Integer.parseInt(paramVarArgs.get("newsid").toString());
      i2 = Integer.parseInt(paramVarArgs.get("location").toString());
      new ay().a(i1).b(i2).report();
      return;
      if (!"Launcher_search_games".equals(paramString)) {
        break;
      }
    } while (paramVarArgs.get("result") == null);
    int i2 = Integer.parseInt(paramVarArgs.get("result").toString());
    paramString = "";
    for (;;)
    {
      try
      {
        if (paramVarArgs.get("location") == null) {
          break label2045;
        }
        i1 = Integer.parseInt(paramVarArgs.get("location").toString());
        paramString.printStackTrace();
      }
      catch (NumberFormatException paramString)
      {
        try
        {
          if (paramVarArgs.get("keyword") != null) {
            paramString = paramVarArgs.get("keyword").toString();
          }
          new at().a(i2).b(i1).a(paramString).report();
          return;
        }
        catch (NumberFormatException paramString)
        {
          for (;;) {}
        }
        paramString = paramString;
        i1 = 0;
      }
      paramString = "";
      continue;
      if ("launcher_search_screen2".equals(paramString))
      {
        if (paramVarArgs.get("value") == null) {
          break;
        }
        try
        {
          com.cleanmaster.utilext.BackgroundThread.a(new com.cleanmaster.swipe.d(Integer.parseInt(paramVarArgs.get("value").toString())));
          return;
        }
        catch (NumberFormatException paramString)
        {
          paramString.printStackTrace();
          return;
        }
      }
      if ("launcher_search_show_trending".equals(paramString))
      {
        if (paramVarArgs.get("value") == null) {
          break;
        }
        try
        {
          com.cleanmaster.utilext.BackgroundThread.a(new com.cleanmaster.swipe.i(Integer.parseInt(paramVarArgs.get("value").toString())));
          return;
        }
        catch (NumberFormatException paramString)
        {
          paramString.printStackTrace();
          return;
        }
      }
      if ("launcher_search_show_ad".equals(paramString))
      {
        if (paramVarArgs.get("value") == null) {
          break;
        }
        try
        {
          com.cleanmaster.utilext.BackgroundThread.a(new com.cleanmaster.swipe.j(Integer.parseInt(paramVarArgs.get("value").toString())));
          return;
        }
        catch (NumberFormatException paramString)
        {
          paramString.printStackTrace();
          return;
        }
      }
      if ("launcher_search_show_games".equals(paramString))
      {
        if (paramVarArgs.get("value") == null) {
          break;
        }
        try
        {
          com.cleanmaster.utilext.BackgroundThread.a(new com.cleanmaster.swipe.k(Integer.parseInt(paramVarArgs.get("value").toString())));
          return;
        }
        catch (NumberFormatException paramString)
        {
          paramString.printStackTrace();
          return;
        }
      }
      if ("launcher_search_show_news".equals(paramString))
      {
        if (paramVarArgs.get("value") == null) {
          break;
        }
        try
        {
          com.cleanmaster.utilext.BackgroundThread.a(new com.cleanmaster.swipe.l(Integer.parseInt(paramVarArgs.get("value").toString())));
          return;
        }
        catch (NumberFormatException paramString)
        {
          paramString.printStackTrace();
          return;
        }
      }
      if ("launcher_news_sdk_time".equals(paramString))
      {
        if ((paramVarArgs.get("sumtime") == null) || (paramVarArgs.get("webtime") == null) || (paramVarArgs.get("staytime") == null)) {
          break;
        }
        try
        {
          long l1 = Long.parseLong(paramVarArgs.get("sumtime").toString());
          long l2 = Long.parseLong(paramVarArgs.get("webtime").toString());
          com.cleanmaster.utilext.BackgroundThread.a(new com.cleanmaster.swipe.m(Long.parseLong(paramVarArgs.get("staytime").toString()), l1, l2));
          return;
        }
        catch (NumberFormatException paramString)
        {
          paramString.printStackTrace();
          return;
        }
      }
      if ("launcher_news_sdk_info".equals(paramString))
      {
        if ((paramVarArgs.get("info") == null) || (paramVarArgs.get("op") == null) || (paramVarArgs.get("position") == null)) {
          break;
        }
        try
        {
          com.cleanmaster.utilext.BackgroundThread.a(new com.cleanmaster.swipe.n(Integer.parseInt(paramVarArgs.get("info").toString()), Integer.parseInt(paramVarArgs.get("op").toString()), Integer.parseInt(paramVarArgs.get("position").toString())));
          return;
        }
        catch (NumberFormatException paramString)
        {
          paramString.printStackTrace();
          return;
        }
      }
      if ("launcher_news_sdk_flow_click".equals(paramString))
      {
        if ((paramVarArgs.get("info") == null) || (paramVarArgs.get("class") == null) || (paramVarArgs.get("position") == null)) {
          break;
        }
        try
        {
          com.cleanmaster.utilext.BackgroundThread.a(new com.cleanmaster.swipe.o(Integer.parseInt(paramVarArgs.get("info").toString()), Integer.parseInt(paramVarArgs.get("class").toString()), Integer.parseInt(paramVarArgs.get("position").toString())));
          return;
        }
        catch (NumberFormatException paramString)
        {
          paramString.printStackTrace();
          return;
        }
      }
      if ("launcher_news_sdk_flow_Overhead_click".equals(paramString))
      {
        if (paramVarArgs.get("value") == null) {
          break;
        }
        try
        {
          com.cleanmaster.utilext.BackgroundThread.a(new com.cleanmaster.swipe.p(Integer.parseInt(paramVarArgs.get("value").toString())));
          return;
        }
        catch (NumberFormatException paramString)
        {
          paramString.printStackTrace();
          return;
        }
      }
      if ("launcher_news_sdk_flow_show".equals(paramString))
      {
        if ((paramVarArgs.get("value") == null) || (paramVarArgs.get("position") == null) || (paramVarArgs.get("news") == null) || (paramVarArgs.get("ads") == null)) {
          break;
        }
        try
        {
          com.cleanmaster.utilext.BackgroundThread.a(new com.cleanmaster.swipe.e(Integer.parseInt(paramVarArgs.get("value").toString()), Integer.parseInt(paramVarArgs.get("position").toString()), Integer.parseInt(paramVarArgs.get("news").toString()), Integer.parseInt(paramVarArgs.get("ads").toString())));
          return;
        }
        catch (NumberFormatException paramString)
        {
          paramString.printStackTrace();
          return;
        }
      }
      if ("launcher_news_sdk_start_stay".equals(paramString))
      {
        if ((paramVarArgs.get("value") == null) || (paramVarArgs.get("position") == null)) {
          break;
        }
        try
        {
          com.cleanmaster.utilext.BackgroundThread.a(new com.cleanmaster.swipe.f(Integer.parseInt(paramVarArgs.get("value").toString()), Integer.parseInt(paramVarArgs.get("position").toString())));
          return;
        }
        catch (NumberFormatException paramString)
        {
          paramString.printStackTrace();
          return;
        }
      }
      if ("launcher_news_sdk_detail_stay".equals(paramString))
      {
        if ((paramVarArgs.get("value") == null) || (paramVarArgs.get("position") == null)) {
          break;
        }
        try
        {
          com.cleanmaster.utilext.BackgroundThread.a(new com.cleanmaster.swipe.g(Integer.parseInt(paramVarArgs.get("value").toString()), Integer.parseInt(paramVarArgs.get("position").toString())));
          return;
        }
        catch (NumberFormatException paramString)
        {
          paramString.printStackTrace();
          return;
        }
      }
      if ((!"launcher_news_sdk_list_fail".equals(paramString)) || (paramVarArgs.get("result") == null) || (paramVarArgs.get("request") == null) || (paramVarArgs.get("network") == null)) {
        break;
      }
      try
      {
        com.cleanmaster.utilext.BackgroundThread.a(new com.cleanmaster.swipe.h(Integer.parseInt(paramVarArgs.get("result").toString()), Integer.parseInt(paramVarArgs.get("request").toString()), Integer.parseInt(paramVarArgs.get("network").toString())));
        return;
      }
      catch (NumberFormatException paramString)
      {
        paramString.printStackTrace();
        return;
      }
      label2045:
      i1 = 0;
    }
  }
  
  public static Intent p(Context paramContext, String paramString)
  {
    Intent localIntent = null;
    Object localObject1 = localIntent;
    if (paramString != null)
    {
      if (paramContext != null) {
        break label22;
      }
      localObject1 = localIntent;
    }
    label22:
    Object localObject2;
    do
    {
      return localObject1;
      localIntent = new Intent(paramContext, SecurityAppInfoActivity.class);
      localObject2 = paramContext.getPackageManager();
      localObject1 = localIntent;
    } while (localObject2 == null);
    for (;;)
    {
      try
      {
        localObject2 = ((PackageManager)localObject2).getPackageInfo(paramString, 0);
        if (O())
        {
          l1 = com.cleanmaster.base.util.system.m.a((PackageInfo)localObject2);
          localObject1 = new AppInfoModel();
          ((AppInfoModel)localObject1).a(paramString);
          ((AppInfoModel)localObject1).b(com.cleanmaster.base.util.system.m.q(paramContext, paramString));
          ((AppInfoModel)localObject1).c(((PackageInfo)localObject2).versionName);
          ((AppInfoModel)localObject1).a(l1);
          com.cleanmaster.security.appinfo.c.a(new com.cleanmaster.security.appinfo.c(paramContext, (AppInfoModel)localObject1, null));
          paramContext = new ArrayList();
          paramContext.add(localObject1);
          localIntent.setFlags(268435456);
          localIntent.putExtra("key_from", 6);
          localIntent.putParcelableArrayListExtra("key_app_data", paramContext);
          return localIntent;
        }
      }
      catch (PackageManager.NameNotFoundException paramContext)
      {
        paramContext.printStackTrace();
        return localIntent;
      }
      long l1 = com.cleanmaster.base.util.system.m.c((PackageInfo)localObject2);
    }
  }
  
  public static String p(Context paramContext)
  {
    try
    {
      paramContext = Settings.System.getString(paramContext.getContentResolver(), "android_id");
      return paramContext;
    }
    catch (Exception paramContext) {}
    return "";
  }
  
  public static String p(String paramString1, String paramString2)
  {
    return a(1000, "gamebox_cloud_cfg", paramString1, paramString2);
  }
  
  public static List<Long> p(String paramString)
  {
    ArrayList localArrayList = new ArrayList();
    if (TextUtils.isEmpty(paramString)) {
      return localArrayList;
    }
    StringTokenizer localStringTokenizer = new StringTokenizer(paramString, ";");
    for (;;)
    {
      if (localStringTokenizer.hasMoreTokens())
      {
        String str = localStringTokenizer.nextToken();
        paramString = str;
        if (str != null) {
          paramString = str.trim();
        }
        if (TextUtils.isEmpty(paramString)) {}
      }
      else
      {
        try
        {
          long l1 = Long.parseLong(paramString);
          localArrayList.add(Long.valueOf(l1));
        }
        catch (NumberFormatException paramString) {}
        return localArrayList;
      }
    }
  }
  
  public static void p()
  {
    if (com.cleanmaster.applocklib.bridge.b.b) {
      com.cleanmaster.applocklib.bridge.b.a();
    }
    b(b(12));
  }
  
  public static void p(long paramLong)
  {
    if (ai()) {
      return;
    }
    com.cleanmaster.base.util.concurrent.BackgroundThread.b().postDelayed(new com.cleanmaster.boost.autostarts.data.f(), paramLong);
  }
  
  public static boolean p(int paramInt)
  {
    boolean bool2 = true;
    boolean bool1 = true;
    Context localContext = com.keniu.security.d.a();
    long l3 = System.currentTimeMillis();
    if (paramInt == com.cleanmaster.boost.boostengine.a.a)
    {
      l2 = com.cleanmaster.configmanager.d.a(localContext).cW();
      l1 = l2;
      if (l3 < l2)
      {
        m(paramInt);
        l1 = 0L;
      }
      if (l3 - l1 < 80000L)
      {
        bool2 = bool1;
        if (!bool1) {
          break label181;
        }
        l2 = com.cleanmaster.configmanager.d.a(localContext).cV();
        bool2 = bool1;
        if (l2 == 0L) {
          break label181;
        }
        bool2 = bool1;
        if (l2 <= l1) {
          break label181;
        }
      }
    }
    while (paramInt != com.cleanmaster.boost.boostengine.a.c) {
      for (;;)
      {
        return false;
        bool1 = false;
      }
    }
    long l2 = com.cleanmaster.configmanager.d.a(localContext).cX();
    long l1 = l2;
    if (l3 < l2)
    {
      m(paramInt);
      l1 = 0L;
    }
    if (l3 - l1 < 80000L) {}
    for (bool1 = bool2;; bool1 = false)
    {
      bool2 = bool1;
      if (bool1)
      {
        l2 = com.cleanmaster.configmanager.d.a(localContext).cY();
        bool2 = bool1;
        if (l2 != 0L)
        {
          if (l2 > l1) {
            break;
          }
          bool2 = bool1;
        }
      }
      label181:
      return bool2;
    }
  }
  
  public static boolean p(List<?> paramList)
  {
    return (paramList != null) && (paramList.size() != 0);
  }
  
  public static String[] p(Parcel paramParcel, int paramInt)
  {
    paramInt = a(paramParcel, paramInt);
    int i1 = paramParcel.dataPosition();
    if (paramInt == 0) {
      return null;
    }
    String[] arrayOfString = paramParcel.createStringArray();
    paramParcel.setDataPosition(paramInt + i1);
    return arrayOfString;
  }
  
  public static int q(Context paramContext)
  {
    paramContext = p(paramContext);
    if ((paramContext == null) || (paramContext.length() <= 0)) {
      return 0;
    }
    try
    {
      int i1 = Integer.parseInt(paramContext.substring(paramContext.length() - 1), 16);
      return i1;
    }
    catch (Exception paramContext) {}
    return 0;
  }
  
  public static String q(String paramString)
  {
    if (paramString == null) {
      paramString = null;
    }
    String str;
    do
    {
      return paramString;
      if (paramString.compareToIgnoreCase("zh-cn") == 0) {
        return "cn";
      }
      if (paramString.compareToIgnoreCase("zh-tw") == 0) {
        return "tw";
      }
      if (paramString.compareToIgnoreCase("zh-hk") == 0) {
        return "tw";
      }
      int i1 = paramString.indexOf('-');
      str = paramString;
      if (-1 != i1) {
        str = paramString.substring(0, i1);
      }
      paramString = str;
    } while (str.compareToIgnoreCase("zh") != 0);
    return "cn";
  }
  
  public static ArrayList<String> q(Parcel paramParcel, int paramInt)
  {
    paramInt = a(paramParcel, paramInt);
    int i1 = paramParcel.dataPosition();
    if (paramInt == 0) {
      return null;
    }
    ArrayList localArrayList = paramParcel.createStringArrayList();
    paramParcel.setDataPosition(paramInt + i1);
    return localArrayList;
  }
  
  public static void q()
  {
    if (com.cleanmaster.applocklib.bridge.b.b) {
      com.cleanmaster.applocklib.bridge.b.a();
    }
    b(b(14));
  }
  
  public static void q(String paramString1, String paramString2)
  {
    AppEventsLogger localAppEventsLogger = AppEventsLogger.a(com.facebook.f.g());
    Bundle localBundle = new Bundle();
    localBundle.putString("fb_share_dialog_outcome", paramString1);
    if (paramString2 != null) {
      localBundle.putString("error_message", paramString2);
    }
    localAppEventsLogger.b("fb_share_dialog_result", localBundle);
  }
  
  public static void q(List paramList)
  {
    if ((paramList == null) || (paramList.isEmpty())) {
      return;
    }
    a(paramList, t(paramList));
  }
  
  public static boolean q(int paramInt)
  {
    long l1 = 0L;
    boolean bool = false;
    Context localContext = com.keniu.security.d.a();
    long l3 = System.currentTimeMillis();
    long l2;
    if (paramInt == com.cleanmaster.boost.boostengine.a.a)
    {
      l1 = com.cleanmaster.configmanager.d.a(localContext).cW();
      l2 = com.cleanmaster.configmanager.d.a(localContext).cV();
    }
    for (;;)
    {
      if (l3 - l1 < 80000L)
      {
        paramInt = 1;
        label54:
        if (l3 - l2 >= 80000L) {
          break label116;
        }
      }
      label116:
      for (int i1 = 1;; i1 = 0)
      {
        if ((paramInt != 0) || (i1 != 0)) {
          bool = true;
        }
        return bool;
        if (paramInt != com.cleanmaster.boost.boostengine.a.c) {
          break label121;
        }
        l1 = com.cleanmaster.configmanager.d.a(localContext).cX();
        l2 = com.cleanmaster.configmanager.d.a(localContext).cV();
        break;
        paramInt = 0;
        break label54;
      }
      label121:
      l2 = 0L;
    }
  }
  
  public static boolean q(long paramLong)
  {
    return System.currentTimeMillis() - paramLong < 120000L;
  }
  
  public static boolean q(Context paramContext, String paramString)
  {
    if ((paramContext == null) || (TextUtils.isEmpty(paramString))) {}
    do
    {
      return false;
      FBShareWebViewActivity.a localA = new FBShareWebViewActivity.a();
      localA.a = 1;
      localA.c = paramString;
      localA.d = true;
      paramString = FBShareWebViewActivity.a(paramContext, localA);
    } while (paramString == null);
    paramString.setFlags(268435456);
    return com.cleanmaster.base.util.system.b.a(paramContext, paramString);
  }
  
  public static long r(Context paramContext)
  {
    paramContext = (ActivityManager)paramContext.getSystemService("activity");
    ActivityManager.MemoryInfo localMemoryInfo = new ActivityManager.MemoryInfo();
    paramContext.getMemoryInfo(localMemoryInfo);
    return localMemoryInfo.availMem >> 10;
  }
  
  public static Parcel r(Parcel paramParcel, int paramInt)
  {
    paramInt = a(paramParcel, paramInt);
    int i1 = paramParcel.dataPosition();
    if (paramInt == 0) {
      return null;
    }
    Parcel localParcel = Parcel.obtain();
    localParcel.appendFrom(paramParcel, i1, paramInt);
    paramParcel.setDataPosition(paramInt + i1);
    return localParcel;
  }
  
  public static String r(long paramLong)
  {
    return new SimpleDateFormat("yyyyMMddHHmmss").format(new Date(paramLong));
  }
  
  public static String r(String paramString)
  {
    int i2 = 0;
    if (TextUtils.isEmpty(paramString)) {}
    do
    {
      return paramString;
      int i3 = paramString.length();
      int i1 = 0;
      if (i1 < i3)
      {
        switch (paramString.charAt(i1))
        {
        }
        for (;;)
        {
          i1 += 1;
          break;
          i2 = 1;
        }
      }
    } while (i2 == 0);
    return paramString.replace("^", "^^").replace("*", "**").replace('=', '^').replace('&', '*');
  }
  
  public static void r(String paramString1, String paramString2)
  {
    Log.w("PullToRefresh", "You're using the deprecated " + paramString1 + " attr, please switch over to " + paramString2);
  }
  
  public static boolean r()
  {
    com.cleanmaster.applocklib.bridge.a.b.a();
    boolean bool = com.cleanmaster.applocklib.bridge.a.b.m();
    if (com.cleanmaster.applocklib.bridge.b.b)
    {
      new StringBuilder("isNewsFeedEnabled = ").append(bool);
      com.cleanmaster.applocklib.bridge.b.a();
    }
    return bool;
  }
  
  public static boolean r(int paramInt)
  {
    return (2 == paramInt) || (3 == paramInt);
  }
  
  public static boolean r(Context paramContext, String paramString)
  {
    boolean bool2 = false;
    boolean bool1 = bool2;
    if (!TextUtils.isEmpty(paramString))
    {
      bool1 = bool2;
      if (paramContext == null) {}
    }
    try
    {
      paramContext = paramContext.getPackageManager().getApplicationInfo(paramString, 0);
      bool1 = bool2;
      if (paramContext != null) {
        bool1 = true;
      }
      return bool1;
    }
    catch (PackageManager.NameNotFoundException paramContext)
    {
      paramContext.printStackTrace();
    }
    return false;
  }
  
  private static boolean r(List paramList)
  {
    return (paramList == null) || (paramList.isEmpty());
  }
  
  public static double s(String paramString)
  {
    double d1 = 0.0D;
    if (!TextUtils.isEmpty(paramString)) {}
    try
    {
      d1 = Double.parseDouble(paramString);
      return d1;
    }
    catch (NumberFormatException paramString) {}
    return 0.0D;
  }
  
  public static int s(Context paramContext)
  {
    Object localObject = null;
    try
    {
      paramContext = paramContext.getPackageManager().getPackageInfo("com.cleanmaster.lite_cn", 0);
      if (paramContext == null) {
        return 1;
      }
      return 2;
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext = localObject;
      }
    }
    catch (PackageManager.NameNotFoundException paramContext)
    {
      for (;;)
      {
        paramContext = localObject;
      }
    }
  }
  
  public static Intent s(Context paramContext, String paramString)
  {
    Object localObject = paramContext.getPackageManager();
    try
    {
      paramContext = ((PackageManager)localObject).getPackageInfo(paramString, 0);
      if (paramContext == null) {
        return null;
      }
    }
    catch (PackageManager.NameNotFoundException paramContext)
    {
      for (;;)
      {
        paramContext.printStackTrace();
        paramContext = null;
      }
    }
    catch (Exception paramContext)
    {
      for (;;)
      {
        paramContext.printStackTrace();
        paramContext = null;
      }
      paramString = new Intent("android.intent.action.MAIN", null);
      paramString.addCategory("android.intent.category.LAUNCHER");
      paramString.setPackage(paramContext.packageName);
      try
      {
        paramContext = ((PackageManager)localObject).queryIntentActivities(paramString, 0);
        if ((paramContext != null) && (!paramContext.isEmpty()))
        {
          paramString = (ResolveInfo)paramContext.get(0);
          if (paramString != null)
          {
            paramContext = paramString.activityInfo.packageName;
            paramString = paramString.activityInfo.name;
            localObject = new Intent("android.intent.action.MAIN");
            ((Intent)localObject).addFlags(268435456);
            ((Intent)localObject).addCategory("android.intent.category.LAUNCHER");
            ((Intent)localObject).setComponent(new ComponentName(paramContext, paramString));
            return localObject;
          }
        }
      }
      catch (Exception paramContext)
      {
        for (;;)
        {
          paramContext.printStackTrace();
          paramContext = null;
        }
      }
    }
    return null;
  }
  
  private static List<com.cleanmaster.junk.bean.l> s(List<com.ijinshan.cleaner.bean.f> paramList)
  {
    if (paramList == null) {
      return null;
    }
    ArrayList localArrayList = new ArrayList();
    paramList = paramList.iterator();
    while (paramList.hasNext())
    {
      com.cleanmaster.junk.bean.l localL = a((com.ijinshan.cleaner.bean.f)paramList.next());
      if (localL != null) {
        localArrayList.add(localL);
      }
    }
    return localArrayList;
  }
  
  public static void s(long paramLong)
  {
    long l1 = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a().getApplicationContext()).cd();
    Date localDate = com.cleanmaster.base.util.c.a.a();
    long l2 = com.cleanmaster.base.util.c.a.a(localDate).getTime();
    long l3 = localDate.getTime();
    if (l1 < l2)
    {
      com.cleanmaster.configmanager.d.a(com.keniu.security.d.a().getApplicationContext()).a(0L, 1L, 0L, paramLong, System.currentTimeMillis());
      return;
    }
    if (l1 < l3)
    {
      l1 = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a().getApplicationContext()).cb();
      l2 = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a().getApplicationContext()).cc();
      com.cleanmaster.configmanager.d.a(com.keniu.security.d.a().getApplicationContext()).a(l1, 1L, l2, paramLong, System.currentTimeMillis());
      return;
    }
    l1 = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a().getApplicationContext()).cb();
    l2 = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a().getApplicationContext()).cc();
    com.cleanmaster.configmanager.d.a(com.keniu.security.d.a().getApplicationContext()).a(-1L, 1L + l1, -1L, l2 + paramLong, System.currentTimeMillis());
  }
  
  public static void s(String paramString1, String paramString2)
  {
    com.lock.sideslip.b.a localA = com.lock.sideslip.d.a().e;
    if (localA != null) {
      localA.a("SideSlip:" + paramString1, paramString2);
    }
  }
  
  public static boolean s()
  {
    Object localObject = (ConnectivityManager)AppLockLib.getContext().getSystemService("connectivity");
    if (localObject == null) {
      return false;
    }
    localObject = ((ConnectivityManager)localObject).getActiveNetworkInfo();
    if (localObject == null) {
      return false;
    }
    return (localObject != null) && (((NetworkInfo)localObject).isConnected());
  }
  
  public static boolean s(int paramInt)
  {
    return (paramInt & 0x20) != 0;
  }
  
  public static Parcel[] s(Parcel paramParcel, int paramInt)
  {
    int i1 = a(paramParcel, paramInt);
    int i2 = paramParcel.dataPosition();
    if (i1 == 0) {
      return null;
    }
    int i3 = paramParcel.readInt();
    Parcel[] arrayOfParcel = new Parcel[i3];
    paramInt = 0;
    if (paramInt < i3)
    {
      int i4 = paramParcel.readInt();
      if (i4 != 0)
      {
        int i5 = paramParcel.dataPosition();
        Parcel localParcel = Parcel.obtain();
        localParcel.appendFrom(paramParcel, i5, i4);
        arrayOfParcel[paramInt] = localParcel;
        paramParcel.setDataPosition(i4 + i5);
      }
      for (;;)
      {
        paramInt += 1;
        break;
        arrayOfParcel[paramInt] = null;
      }
    }
    paramParcel.setDataPosition(i2 + i1);
    return arrayOfParcel;
  }
  
  public static int t(Parcel paramParcel, int paramInt)
  {
    paramParcel.writeInt(0xFFFF0000 | paramInt);
    paramParcel.writeInt(0);
    return paramParcel.dataPosition();
  }
  
  public static long t(String paramString)
  {
    long l1 = 0L;
    if (!TextUtils.isEmpty(paramString)) {}
    try
    {
      l1 = Long.parseLong(paramString);
      return l1;
    }
    catch (NumberFormatException paramString) {}
    return 0L;
  }
  
  private static ONews t(List paramList)
  {
    int i1 = 0;
    Object localObject2 = null;
    Object localObject1;
    if (i1 < paramList.size())
    {
      localObject1 = paramList.get(i1);
      if ((localObject1 instanceof ONews)) {
        localObject1 = (ONews)localObject1;
      }
    }
    for (;;)
    {
      label34:
      if (localObject1 != null) {
        if ((!a((ONews)localObject1)) || (localObject2 != null)) {}
      }
      for (;;)
      {
        i1 += 1;
        localObject2 = localObject1;
        break;
        if (!(localObject1 instanceof com.cmcm.onews.model.a)) {
          break label90;
        }
        localObject1 = ((com.cmcm.onews.model.a)localObject1).a();
        break label34;
        ((ONews)localObject1).stick(0);
        localObject1 = localObject2;
      }
      return localObject2;
      label90:
      localObject1 = null;
    }
  }
  
  public static String t(long paramLong)
  {
    try
    {
      Object localObject = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.ENGLISH);
      Calendar localCalendar = Calendar.getInstance();
      localCalendar.setTimeInMillis(paramLong);
      localObject = ((SimpleDateFormat)localObject).format(localCalendar.getTime());
      return localObject;
    }
    catch (Exception localException) {}
    return "";
  }
  
  public static String t(Context paramContext)
  {
    if (paramContext == null) {}
    Object localObject;
    do
    {
      do
      {
        return null;
        paramContext = paramContext.getPackageManager();
      } while (paramContext == null);
      localObject = new Intent("android.intent.action.MAIN");
      ((Intent)localObject).addCategory("android.intent.category.HOME");
      localObject = paramContext.resolveActivity((Intent)localObject, 65536);
    } while ((localObject == null) || (((ResolveInfo)localObject).activityInfo == null) || (((ResolveInfo)localObject).activityInfo.packageName == null));
    if (((ResolveInfo)localObject).activityInfo.packageName.equals("android")) {
      return "";
    }
    return ((ResolveInfo)localObject).activityInfo.loadLabel(paramContext).toString();
  }
  
  public static void t(String paramString1, String paramString2)
  {
    com.lock.sideslip.b.a localA = com.lock.sideslip.d.a().e;
    if (localA != null) {
      localA.b(paramString1, paramString2);
    }
  }
  
  public static boolean t()
  {
    if (O == null)
    {
      String str = Build.MODEL;
      if ((str == null) || (!str.equalsIgnoreCase("SM-N900U"))) {
        break label40;
      }
    }
    label40:
    for (boolean bool = true;; bool = false)
    {
      O = Boolean.valueOf(bool);
      return O.booleanValue();
    }
  }
  
  public static boolean t(int paramInt)
  {
    return (paramInt & 0x40) != 0;
  }
  
  public static boolean t(Context paramContext, String paramString)
  {
    boolean bool = false;
    paramContext = paramContext.getPackageManager();
    try
    {
      int i1 = paramContext.getApplicationInfo(paramString, 0).flags;
      if ((i1 & 0x200000) != 0) {
        bool = true;
      }
      return bool;
    }
    catch (PackageManager.NameNotFoundException paramContext) {}
    return false;
  }
  
  public static int u(String paramString)
  {
    int i1 = 0;
    if (!TextUtils.isEmpty(paramString)) {}
    try
    {
      i1 = Integer.parseInt(paramString);
      return i1;
    }
    catch (NumberFormatException paramString) {}
    return 0;
  }
  
  public static void u(Context paramContext)
  {
    if (aJ(paramContext))
    {
      ScreenSaverService.a(paramContext);
      return;
    }
    ScreenSaverService.b(paramContext);
  }
  
  public static void u(Context paramContext, String paramString)
  {
    if ((paramContext == null) || (paramString == null)) {}
    int i1;
    do
    {
      return;
      i1 = aR(paramContext);
      com.keniu.security.update.push.gcm.a.a();
      paramContext = com.keniu.security.update.push.c.a(paramContext);
    } while (paramContext == null);
    paramContext.a("push_reg_id_old", paramContext.a());
    paramContext.a("push_reg_id", paramString);
    paramContext.a("push_reg_version", i1);
  }
  
  public static void u(Parcel paramParcel, int paramInt)
  {
    int i1 = paramParcel.dataPosition();
    paramParcel.setDataPosition(paramInt - 4);
    paramParcel.writeInt(i1 - paramInt);
    paramParcel.setDataPosition(i1);
  }
  
  public static void u(String paramString1, String paramString2)
  {
    com.lock.sideslip.b.a localA = com.lock.sideslip.d.a().e;
    if (localA != null) {
      localA.d(paramString1, paramString2);
    }
  }
  
  public static boolean u()
  {
    int i1 = 0;
    if (P == null)
    {
      P = Boolean.valueOf(false);
      if (Build.MANUFACTURER.equalsIgnoreCase("asus")) {
        while (i1 < 4)
        {
          if (new String[] { "ASUS_Z008D", "ASUS_Z008S", "ASUS_Z00AD", "ASUS_Z00AS" }[i1].equalsIgnoreCase(Build.MODEL)) {
            P = Boolean.valueOf(true);
          }
          i1 += 1;
        }
      }
    }
    return P.booleanValue();
  }
  
  public static boolean u(int paramInt)
  {
    return (paramInt & 0x80) != 0;
  }
  
  public static int v(Context paramContext)
  {
    return (int)(paramContext.getResources().getDisplayMetrics().density * 50.0F + 0.5F);
  }
  
  public static void v(String paramString1, String paramString2)
  {
    Log.v("zyb", paramString1 + paramString2);
  }
  
  public static boolean v()
  {
    if (Q == null) {}
    for (;;)
    {
      try
      {
        localObject = ActivityManager.class.getDeclaredMethod("isLowRamDeviceStatic", new Class[0]);
        if (localObject != null) {
          continue;
        }
        bool = true;
        Q = Boolean.valueOf(bool);
      }
      catch (InvocationTargetException localInvocationTargetException)
      {
        Object localObject;
        boolean bool;
        int i1;
        continue;
      }
      catch (IllegalAccessException localIllegalAccessException)
      {
        continue;
      }
      catch (NoSuchMethodException localNoSuchMethodException)
      {
        continue;
      }
      catch (IllegalArgumentException localIllegalArgumentException)
      {
        continue;
      }
      if ((Q == null) || (!Q.booleanValue())) {
        continue;
      }
      return Q.booleanValue();
      localObject = ((Method)localObject).invoke(null, new Object[0]);
      if (localObject == null) {
        bool = true;
      } else {
        bool = ((Boolean)localObject).booleanValue();
      }
    }
    i1 = cQ();
    return (i1 > 0) && (i1 / 1024 < 512L);
  }
  
  public static boolean v(int paramInt)
  {
    return (paramInt & 0x1) != 0;
  }
  
  public static boolean v(Context paramContext, String paramString)
  {
    if (paramContext == null) {}
    for (;;)
    {
      return false;
      if (!TextUtils.isEmpty(paramString)) {
        try
        {
          paramContext = paramContext.getPackageManager().getPackageInfo(paramString, 0);
          if (paramContext != null) {
            return true;
          }
        }
        catch (PackageManager.NameNotFoundException paramContext)
        {
          paramContext.printStackTrace();
          return false;
        }
        catch (Exception paramContext)
        {
          paramContext.printStackTrace();
        }
      }
    }
    return false;
  }
  
  public static boolean v(String paramString)
  {
    boolean bool = false;
    try
    {
      if (paramString.contains("@")) {
        bool = paramString.trim().matches("^\\s*\\w+(?:\\.{0,1}[\\*\\w-]+)*@[a-zA-Z0-9]+(?:[-.][a-zA-Z0-9]+)*\\.[a-zA-Z]+\\s*$");
      }
      return bool;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
    }
    return false;
  }
  
  public static float w(Context paramContext)
  {
    return paramContext.getResources().getDisplayMetrics().density;
  }
  
  public static Spanned w(String paramString)
  {
    try
    {
      Spanned localSpanned = Html.fromHtml(paramString);
      if (localSpanned != null) {
        return localSpanned;
      }
      com.cleanmaster.base.crash.c.e().a(new Exception("Html.fromHtml(source) == null->" + Log.getStackTraceString(new Throwable())), false);
    }
    catch (NoSuchMethodError localNoSuchMethodError)
    {
      for (;;) {}
    }
    catch (NoClassDefFoundError localNoClassDefFoundError)
    {
      for (;;) {}
    }
    return new SpannableString(paramString);
  }
  
  public static String w(Context paramContext, String paramString)
  {
    int i1 = 0;
    try
    {
      String str = Base64.encodeToString(paramContext.getPackageManager().getPackageInfo(paramString, 64).signatures[0].toByteArray(), 0);
      paramContext = "";
      for (;;)
      {
        paramString = paramContext;
        int i2;
        if (i1 != str.length())
        {
          i2 = str.indexOf('\n', i1);
          if (i2 == -1) {
            paramString = paramContext + str.substring(i1);
          }
        }
        else
        {
          return h(paramString.getBytes());
        }
        paramContext = paramContext + str.substring(i1, i2);
        i1 = i2 + 1;
      }
      return null;
    }
    catch (PackageManager.NameNotFoundException paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  public static void w(String paramString1, String paramString2)
  {
    int i1 = 0;
    int i2 = 0;
    try
    {
      while (i1 < paramString2.length())
      {
        i2 = i2 << 3 | (byte)(paramString2.charAt(i1) - '0');
        i1 += 1;
      }
      FileUtils.setPermissions(paramString1, i2, -1, -1);
      return;
    }
    catch (Exception paramString1)
    {
      paramString1.printStackTrace();
    }
  }
  
  public static boolean w()
  {
    long l1;
    int i1;
    if ((cq()) && (android.support.v4.a.c.a("new_user_rating_enable", false, "selection_new_user_rating")))
    {
      l1 = cr();
      if (System.currentTimeMillis() - l1 < 259200000L)
      {
        i1 = 0;
        if (i1 != 0) {
          break label48;
        }
      }
    }
    label48:
    Object localObject1;
    label277:
    label282:
    label398:
    do
    {
      return false;
      i1 = 1;
      break;
      if (com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).a("has_rated_us", false))
      {
        OpLog.d("Security", "--> GPRating.canRating() hasRatedUs --> false ");
        return false;
      }
      if (!com.cleanmaster.base.util.system.m.a(com.keniu.security.d.a()))
      {
        OpLog.d("Security", "--> GPRating.canRating() isGPAvailable --> false ");
        return false;
      }
      localObject1 = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a());
      l1 = System.currentTimeMillis();
      if (l1 - ((com.cleanmaster.configmanager.d)localObject1).a("recent_crash_time_one", 0L) <= 86400000L)
      {
        i1 = 1;
        if (i1 == 0)
        {
          localObject1 = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a());
          l1 = System.currentTimeMillis();
          long l2 = ((com.cleanmaster.configmanager.d)localObject1).a("recent_crash_time_one", 0L);
          long l3 = ((com.cleanmaster.configmanager.d)localObject1).a("recent_crash_time_two", 0L);
          long l4 = ((com.cleanmaster.configmanager.d)localObject1).a("recent_crash_time_three", 0L);
          if ((l1 - l2 > 604800000L) || (l1 - l3 > 604800000L) || (l1 - l4 > 604800000L)) {
            break label277;
          }
        }
      }
      for (i1 = 1;; i1 = 0)
      {
        if (i1 == 0) {
          break label282;
        }
        OpLog.d("Security", "--> GPRating.canRating() isCrashedWithInOneDay --> false ");
        return false;
        if (l1 - ((com.cleanmaster.configmanager.d)localObject1).a("recent_crash_time_two", 0L) <= 86400000L)
        {
          i1 = 1;
          break;
        }
        if (l1 - ((com.cleanmaster.configmanager.d)localObject1).a("recent_crash_time_three", 0L) <= 86400000L)
        {
          i1 = 1;
          break;
        }
        i1 = 0;
        break;
      }
      localObject1 = e("gp_rate", "gp_rate_disable", null);
      if (localObject1 != null)
      {
        localObject1 = ((String)localObject1).split(",");
        if ((localObject1 != null) && (localObject1.length > 0))
        {
          com.cleanmaster.base.util.system.h localH = com.cleanmaster.configmanager.d.a(com.keniu.security.d.a()).b(com.keniu.security.d.a());
          int i2 = localObject1.length;
          i1 = 0;
          if (i1 < i2)
          {
            Object localObject2 = localObject1[i1];
            if ((localObject2 == null) || (!localObject2.equalsIgnoreCase(localH.N))) {}
          }
        }
      }
      for (i1 = 0;; i1 = 1)
      {
        if (i1 != 0) {
          break label398;
        }
        OpLog.d("Security", "--> GPRating.canRating() isCloudOn --> false ");
        return false;
        i1 += 1;
        break;
      }
      localObject1 = e("gp_rate", "gp_rate_enable_number", "0");
    } while ((localObject1 == null) || (!((String)localObject1).equals("1")));
    return true;
  }
  
  public static byte[] w(int paramInt)
  {
    byte[] arrayOfByte = new byte[2];
    int i1 = 0;
    while (i1 < 2)
    {
      arrayOfByte[i1] = ((byte)(paramInt >>> (i1 << 3)));
      i1 += 1;
    }
    return arrayOfByte;
  }
  
  public static long x()
  {
    try
    {
      long l1 = b("gp_rate", "junkcachemin", 209715200L);
      return l1;
    }
    catch (Exception localException) {}
    return 209715200L;
  }
  
  public static String x(String paramString)
  {
    String str;
    if (TextUtils.isEmpty(paramString)) {
      str = null;
    }
    do
    {
      do
      {
        do
        {
          do
          {
            do
            {
              return str;
              if ((paramString.startsWith("http://")) || (paramString.startsWith("https://")) || (paramString.startsWith("ftp://"))) {
                try
                {
                  paramString = new URL(paramString);
                  return paramString.getHost();
                }
                catch (MalformedURLException paramString)
                {
                  return null;
                }
              }
              str = paramString;
            } while (paramString.startsWith("http://t.cn"));
            str = paramString;
          } while (paramString.startsWith("http://url.cn"));
          str = paramString;
        } while (paramString.startsWith("http://126.am"));
        str = paramString;
      } while (paramString.startsWith("http://t.itc.cn"));
      str = paramString;
    } while (paramString.startsWith("http://163.fm"));
    return null;
  }
  
  public static String x(String paramString1, String paramString2)
  {
    if (paramString1 == null) {
      return "[PLACE] " + cN() + "[MESSAGE] " + paramString2 + "\n ";
    }
    return "[PLACE] " + cN() + "[" + paramString1 + "]" + paramString2;
  }
  
  public static void x(Context paramContext)
  {
    if (paramContext == null) {
      return;
    }
    Object localObject = new com.cleanmaster.boost.abnormal.abnormalnotify.n(paramContext);
    ((com.cleanmaster.boost.abnormal.abnormalnotify.n)localObject).a = 1;
    localObject = ((com.cleanmaster.boost.abnormal.abnormalnotify.n)localObject).a();
    if ((paramContext instanceof Activity))
    {
      ((Activity)paramContext).startActivityForResult((Intent)localObject, 0);
      return;
    }
    paramContext.startActivity((Intent)localObject);
  }
  
  public static void x(Context paramContext, String paramString)
  {
    ab = paramContext.getApplicationContext();
    ac = paramString;
  }
  
  public static long y()
  {
    try
    {
      long l1 = b("gp_rate", "junkcachemax", 1073741824L);
      return l1;
    }
    catch (Exception localException) {}
    return 1073741824L;
  }
  
  private static String y(String paramString1, String paramString2)
  {
    String str2 = "";
    com.keniu.security.update.c.a.e.a localA = com.keniu.security.update.c.a.e.a().b("op1");
    String str1 = str2;
    if (localA != null)
    {
      str1 = str2;
      if (localA.a != null) {
        str1 = localA.a.a(paramString1, paramString2);
      }
    }
    paramString1 = str1;
    if (str1 == null) {
      paramString1 = "";
    }
    return paramString1;
  }
  
  public static ArrayList<String> y(Context paramContext)
  {
    localArrayList = new ArrayList();
    Object localObject = paramContext;
    if (paramContext == null) {
      localObject = com.keniu.security.d.a().getApplicationContext();
    }
    localObject = com.cleanmaster.configmanager.d.a((Context)localObject).a("ats_notify_new_pkgs", "");
    if (!TextUtils.isEmpty((CharSequence)localObject)) {
      try
      {
        paramContext = ((String)localObject).split("##");
        if ((paramContext == null) || (paramContext.length <= 0))
        {
          localArrayList.add(localObject);
          return localArrayList;
        }
        int i2 = paramContext.length;
        int i1 = 0;
        while (i1 < i2)
        {
          localObject = paramContext[i1];
          if (!TextUtils.isEmpty((CharSequence)localObject)) {
            localArrayList.add(localObject);
          }
          i1 += 1;
        }
        return localArrayList;
      }
      catch (Exception paramContext)
      {
        paramContext.printStackTrace();
        localArrayList.clear();
      }
    }
  }
  
  public static void y(Context paramContext, String paramString)
  {
    Intent localIntent = new Intent("android.intent.action.VIEW");
    Uri localUri2 = Uri.parse(paramString);
    Uri localUri1 = localUri2;
    if (localUri2.getScheme() == null) {
      localUri1 = Uri.fromFile(new File(paramString));
    }
    localIntent.setDataAndType(localUri1, "application/vnd.android.package-archive");
    localIntent.setFlags(268435456);
    try
    {
      paramContext.startActivity(localIntent);
      return;
    }
    catch (ActivityNotFoundException paramContext) {}
  }
  
  public static boolean y(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {}
    while (!bk(paramString)) {
      return false;
    }
    return true;
  }
  
  public static Intent z(Context paramContext)
  {
    if ((paramContext == null) || (!com.cleanmaster.base.util.system.d.g())) {
      localObject = null;
    }
    int i1;
    do
    {
      return localObject;
      localObject = SystemProperties.get("ro.miui.ui.version.name", "unkonw");
      if ((!"V6".equalsIgnoreCase((String)localObject)) && (!"V7".equalsIgnoreCase((String)localObject)) && (!"V8".equalsIgnoreCase((String)localObject))) {
        break label136;
      }
      i1 = 1;
      if (i1 == 0) {
        break;
      }
      localIntent = new Intent("miui.intent.action.OP_AUTO_START");
      localObject = localIntent;
    } while (com.cleanmaster.base.c.b(paramContext, localIntent) > 0);
    Intent localIntent = new Intent("android.intent.action.MAIN", null);
    localIntent.addCategory("android.intent.category.LAUNCHER");
    if (i1 != 0) {}
    for (Object localObject = "com.miui.securitycenter";; localObject = "com.android.settings")
    {
      localIntent.setPackage((String)localObject);
      paramContext = b(paramContext, localIntent);
      if ((paramContext != null) && (paramContext.size() > 0)) {
        break label148;
      }
      return null;
      label136:
      i1 = 0;
      break;
    }
    label148:
    if (i1 != 0)
    {
      if (paramContext.contains("com.miui.permcenter.autostart.AutoStartManagementActivity"))
      {
        localIntent.setClassName("com.miui.securitycenter", "com.miui.permcenter.autostart.AutoStartManagementActivity");
        return localIntent;
      }
      if (paramContext.contains("com.miui.securitycenter.MainActivity"))
      {
        localIntent.setClassName("com.miui.securitycenter", "com.miui.securitycenter.MainActivity");
        localIntent.putExtra("security_center", true);
        return localIntent;
      }
      return null;
    }
    if (paramContext.contains("com.android.settings.BackgroundApplicationsManager"))
    {
      localIntent.setClassName("com.android.settings", "com.android.settings.BackgroundApplicationsManager");
      return localIntent;
    }
    if (paramContext.contains("com.miui.securitycenter.power.BackgroundApplicationsManager"))
    {
      localIntent.setClassName("com.android.settings", "com.miui.securitycenter.power.BackgroundApplicationsManager");
      return localIntent;
    }
    if (paramContext.contains("com.miui.securitycenter.Main"))
    {
      localIntent.setClassName("com.android.settings", "com.miui.securitycenter.Main");
      localIntent.putExtra("security_center", true);
      return localIntent;
    }
    return null;
  }
  
  private static Intent z(Context paramContext, String paramString)
  {
    paramContext = paramContext.getPackageManager();
    try
    {
      paramContext = paramContext.getLaunchIntentForPackage(paramString);
      return paramContext;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return null;
  }
  
  public static com.cleanmaster.base.util.e.g z()
  {
    long l3 = 0L;
    com.cleanmaster.base.util.e.g localG1 = new com.cleanmaster.base.util.e.g();
    com.cleanmaster.base.util.e.g localG2 = J();
    long l4;
    if (localG2 != null)
    {
      l4 = localG2.b + 0L;
      l3 = 0L + localG2.a;
    }
    for (;;)
    {
      long l1 = l3;
      long l2 = l4;
      if (!com.cleanmaster.base.util.e.c.a)
      {
        localG2 = com.cleanmaster.base.c.m();
        l1 = l3;
        l2 = l4;
        if (localG2 != null)
        {
          l2 = l4 + localG2.b;
          l1 = l3 + localG2.a;
        }
      }
      localG2 = com.cleanmaster.base.c.l();
      l4 = l1;
      l3 = l2;
      if (localG2 != null)
      {
        l3 = l2 + localG2.b;
        l4 = l1 + localG2.a;
      }
      localG1.a = l4;
      localG1.b = l3;
      return localG1;
      l4 = 0L;
    }
  }
  
  private static String z(String paramString1, String paramString2)
  {
    try
    {
      if (TextUtils.isEmpty(paramString2)) {}
      BufferedReader localBufferedReader;
      for (paramString1 = new URL(paramString1);; paramString1 = new URL(paramString1 + "?" + paramString2))
      {
        paramString1 = (HttpURLConnection)paramString1.openConnection();
        paramString1.setDoOutput(false);
        paramString1.setDoInput(true);
        paramString1.setUseCaches(false);
        paramString1.setReadTimeout(10000);
        paramString1.setConnectTimeout(10000);
        paramString1.setRequestMethod("GET");
        paramString1.connect();
        if (paramString1.getResponseCode() != 200) {
          break label185;
        }
        paramString2 = new StringBuffer();
        localBufferedReader = new BufferedReader(new InputStreamReader(paramString1.getInputStream(), "UTF-8"), 10240);
        for (;;)
        {
          String str = localBufferedReader.readLine();
          if (TextUtils.isEmpty(str)) {
            break;
          }
          paramString2.append(str).append("\n");
        }
      }
      localBufferedReader.close();
      paramString1.disconnect();
      paramString1 = paramString2.toString();
      return paramString1;
    }
    catch (Exception paramString1) {}
    label185:
    return null;
  }
  
  public static boolean z(int paramInt)
  {
    switch (paramInt)
    {
    default: 
      return false;
    case 1: 
      paramInt = i("boost_cfg", "boost_noti_recent");
    }
    while (paramInt == 20)
    {
      return true;
      paramInt = i("boost_cfg", "boost_noti_cpu");
      continue;
      paramInt = i("boost_cfg", "boost_noti_process");
    }
  }
  
  public static boolean z(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {}
    while ((paramString.length() < 6) || (paramString.length() > 20)) {
      return false;
    }
    return true;
  }
  
  public final void a(int paramInt)
  {
    throw new NullPointerException();
  }
  
  public final void a(int paramInt, Collection<com.cleanmaster.cleancloud.core.simplequery.b<Param, Result>> paramCollection, boolean paramBoolean) {}
  
  public final void a(VolleyError paramVolleyError)
  {
    com.lock.c.a.a(null).a(paramVolleyError.getMessage());
    new StringBuilder("下载广告 ");
    throw new NullPointerException();
  }
  
  public final void a(g.c paramC, boolean paramBoolean)
  {
    new StringBuilder("下载广告 ");
    throw new NullPointerException();
  }
  
  public final void a(com.cleanmaster.ui.app.provider.download.j paramJ)
  {
    paramJ = com.cleanmaster.screensave.newscreensaver.g.a().e;
    throw new NullPointerException();
  }
  
  public final void a(com.facebook.h paramH) {}
  
  public final void a(com.ijinshan.cleaner.bean.d paramD)
  {
    UninstallNormalHeadView.a(UninstallNormalHeadView.a(null), paramD);
  }
  
  public final void a(com.ijinshan.screensavernew.business.b.b paramB)
  {
    com.ijinshan.screensavernew.business.j.b localB = new com.ijinshan.screensavernew.business.j.b((byte)0);
    localB.a = 0;
    localB.b = paramB;
    localB.c = null;
    com.ijinshan.screensavernew.business.j.b().obtainMessage(1, localB).sendToTarget();
    com.ijinshan.screensavernew.business.j.b(null, paramB);
  }
  
  public final void a(l.a paramA)
  {
    com.ksmobile.business.sdk.c.b.a.a.a.a(paramA, null);
  }
  
  public final void a(Object paramObject, zzrq paramZzrq)
  {
    try
    {
      paramZzrq.d(0);
      throw new IllegalArgumentException("Unknown type 0");
    }
    catch (IOException paramObject)
    {
      throw new IllegalStateException(paramObject);
    }
  }
  
  public final boolean ag()
  {
    throw new NullPointerException();
  }
  
  public final void b(com.ijinshan.screensavernew.business.b.b paramB)
  {
    com.ijinshan.screensavernew.business.j.b localB = new com.ijinshan.screensavernew.business.j.b((byte)0);
    localB.a = 1;
    localB.b = paramB;
    localB.c = null;
    com.ijinshan.screensavernew.business.j.b().obtainMessage(1, localB).sendToTarget();
    com.ijinshan.screensavernew.business.j.b(null, paramB);
  }
  
  public final void cH()
  {
    StandbyCoverImageView.c();
  }
  
  public final boolean cI()
  {
    return false;
  }
  
  public final boolean cK()
  {
    return false;
  }
  
  public final int e(Object paramObject)
  {
    throw new IllegalArgumentException("Unknown type 0");
  }
}
