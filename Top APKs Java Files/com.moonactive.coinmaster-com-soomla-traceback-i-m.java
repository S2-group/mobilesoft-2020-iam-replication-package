package com.soomla.traceback.i;

import android.app.Activity;
import android.app.Application;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.pm.ActivityInfo;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.pm.ResolveInfo;
import android.os.Handler;
import android.os.Looper;
import android.text.TextUtils;
import com.soomla.traceback.AdAction;
import com.soomla.traceback.AdListener;
import com.soomla.traceback.InstallBroadcastReceiver;
import com.soomla.traceback.LocalEvent;
import com.soomla.traceback.LocalEventConsts;
import com.soomla.traceback.LogUtils;
import com.soomla.traceback.SafeRunnable;
import com.soomla.traceback.SoomlaTraceback;
import com.soomla.traceback.TracebackListener;
import com.soomla.traceback.UidReadyCallback;
import com.soomla.traceback.UserAdActionsCallback;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.PriorityBlockingQueue;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class m
  extends SoomlaTraceback
{
  private static char[] ˊᐝ;
  private static long ˋˊ;
  private static int ˋˋ;
  private static int ˍ;
  private static m ˎ = null;
  private static final String[] ॱ;
  private i ʻ;
  private int ʻॱ;
  private boolean ʼ = false;
  private Thread ʼॱ;
  private boolean ʽ = false;
  private ak ʽॱ = null;
  private boolean ʾ = false;
  private an ʿ = null;
  private aj ˈ = null;
  private BlockingQueue<ar> ˉ = new PriorityBlockingQueue();
  private boolean ˊ = false;
  private al ˊˊ;
  private aq ˊˋ = new aq();
  private Thread.UncaughtExceptionHandler ˊॱ;
  private n ˋ;
  private List<TracebackListener> ˋॱ = new ArrayList();
  private boolean ˏ = false;
  private b ˏॱ;
  private Handler ͺ;
  private Context ॱˊ;
  private List<ar> ॱˋ;
  private boolean ॱˎ;
  private Thread ॱᐝ;
  private boolean ᐝ = false;
  private int ᐝॱ;
  
  static
  {
    ˈ();
    ˋˋ = 0;
    ˍ = 1;
    ॱ = new String[] { ˎ(3214, 44808, 8).intern(), ˎ(3222, '秃', 5).intern(), ˎ(3227, '\000', 7).intern(), ˎ(3234, '☎', 9).intern(), ˎ(3243, '\000', 8).intern(), ˎ(3251, '♞', 7).intern(), ˎ(3258, '\000', 8).intern(), ˎ(3266, '\000', 10).intern(), ˎ(3276, '刘', 10).intern(), ˎ(3286, '\000', 12).intern(), ˎ(3298, '\000', 11).intern(), ˎ(3309, '\000', 10).intern(), ˎ(3319, '㯜', 5).intern(), ˎ(3324, '\000', 4).intern(), ˎ(3328, '\000', 6).intern(), ˎ(3334, '\000', 6).intern(), ˎ(3340, 'ڢ', 6).intern(), ˎ(3346, '\000', 11).intern(), ˎ(3357, 'ߨ', 10).intern(), ˎ(3367, '\000', 4).intern(), ˎ(3371, '帎', 8).intern(), ˎ(3379, '枲', 10).intern(), ˎ(3389, '\000', 6).intern(), ˎ(3395, '\000', 9).intern(), ˎ(3404, '⯲', 15).intern(), ˎ(3419, '\000', 7).intern(), ˎ(3426, '⬈', 6).intern(), ˎ(3432, '\000', 10).intern(), ˎ(3442, 34660, 8).intern(), ˎ(3450, '\000', 5).intern(), ˎ(3455, '\000', 7).intern(), ˎ(3462, '\000', 5).intern(), ˎ(3467, '䪳', 5).intern(), ˎ(3472, 57201, 9).intern(), ˎ(3481, 40467, 9).intern(), ˎ(3490, '\000', 6).intern(), ˎ(3496, '\000', 6).intern(), ˎ(3502, '眀', 8).intern(), ˎ(3510, 60510, 10).intern(), ˎ(3520, '䈧', 6).intern(), ˎ(3526, '糀', 8).intern(), ˎ(3534, 48936, 8).intern(), ˎ(3542, '宣', 6).intern(), ˎ(3548, '\000', 5).intern(), ˎ(3553, '屔', 6).intern() };
  }
  
  private m() {}
  
  private void ʻॱ()
  {
    try
    {
      if (this.ʼॱ == null)
      {
        this.ʼॱ = new Thread(new SafeRunnable()
        {
          private static int ˋ = 1;
          private static int ˎ = 10;
          private static int ॱ = 0;
          
          private static String ˊ(int paramAnonymousInt1, int paramAnonymousInt2, boolean paramAnonymousBoolean, int paramAnonymousInt3, String paramAnonymousString)
          {
            paramAnonymousString = (char[])paramAnonymousString.toCharArray();
            char[] arrayOfChar = new char[paramAnonymousInt1];
            int i = 0;
            int j;
            if (i < paramAnonymousInt1)
            {
              j = 54;
              switch (j)
              {
              default: 
                label28:
                if (paramAnonymousInt3 > 0)
                {
                  paramAnonymousInt2 = 83;
                  switch (paramAnonymousInt2)
                  {
                  default: 
                    label55:
                    label76:
                    if (paramAnonymousBoolean)
                    {
                      paramAnonymousInt2 = 54;
                      switch (paramAnonymousInt2)
                      {
                      default: 
                        label83:
                        paramAnonymousInt2 = ॱ + 107;
                        ˋ = paramAnonymousInt2 % 128;
                        if (paramAnonymousInt2 % 2 != 0) {}
                        break;
                      }
                    }
                    break;
                  }
                }
                break;
              }
            }
            for (paramAnonymousInt2 = 33;; paramAnonymousInt2 = 74)
            {
              switch (paramAnonymousInt2)
              {
              default: 
                paramAnonymousString = new char[paramAnonymousInt1];
                paramAnonymousInt2 = 0;
                label155:
                if (paramAnonymousInt2 >= paramAnonymousInt1) {
                  break;
                }
              }
              for (paramAnonymousInt3 = 12;; paramAnonymousInt3 = 5)
              {
                Object localObject = paramAnonymousString;
                switch (paramAnonymousInt3)
                {
                default: 
                  paramAnonymousString[paramAnonymousInt2] = arrayOfChar[(paramAnonymousInt1 - paramAnonymousInt2 - 1)];
                  paramAnonymousInt2 += 1;
                  break label155;
                  j = ˋ + 81;
                  ॱ = j % 128;
                  if (j % 2 != 0) {}
                  arrayOfChar[i] = ((char)(paramAnonymousString[i] + paramAnonymousInt2));
                  arrayOfChar[i] = ((char)(arrayOfChar[i] - ˎ));
                  i += 1;
                  break;
                  paramAnonymousInt2 = ॱ + 53;
                  ˋ = paramAnonymousInt2 % 128;
                  if (paramAnonymousInt2 % 2 == 0) {}
                  paramAnonymousString = new char[paramAnonymousInt1];
                  System.arraycopy(arrayOfChar, 0, paramAnonymousString, 0, paramAnonymousInt1);
                  System.arraycopy(paramAnonymousString, 0, arrayOfChar, paramAnonymousInt1 - paramAnonymousInt3, paramAnonymousInt3);
                  System.arraycopy(paramAnonymousString, paramAnonymousInt3, arrayOfChar, 0, paramAnonymousInt1 - paramAnonymousInt3);
                  break label76;
                  localObject = arrayOfChar;
                case 5: 
                  return new String((char[])localObject);
                  paramAnonymousString = new char[paramAnonymousInt1];
                  paramAnonymousInt2 = 0;
                  break label155;
                  j = 49;
                  break label28;
                  paramAnonymousInt2 = 86;
                  break label55;
                  paramAnonymousInt2 = 24;
                  break label83;
                }
              }
            }
          }
          
          public final void safeRun()
          {
            LogUtils.LogDebug(ˊ(16, 96, true, 15, "\r\013\f\017\r\013\034￾ￊ￫￶￷￹￹�\025").intern(), ˊ(52, 105, false, 41, "\016\006\023￁\025\t\023\006\002\005￁\024\025\002\023\025\006\005￁\r\n\024\025\006\017\n\017\b￁\025\020￁\006\027\006\017\025\024ￏￏￏ￦\027\006\017\025￁\004\020\017\024\026").intern());
            for (;;)
            {
              if (!Thread.currentThread().isInterrupted()) {
                try
                {
                  m.ˏ(m.this, (ar)m.ॱ(m.this).take());
                }
                catch (InterruptedException localInterruptedException)
                {
                  LogUtils.LogError(ˊ(16, 96, true, 15, "\r\013\f\017\r\013\034￾ￊ￫￶￷￹￹�\025").intern(), ˊ(62, 105, true, 61, "ￏￏ\f\023\020\030￁\024\025\n￁\b\017\n\025\002\017\n\016\023\006￵￁ￂ\005\006\025\021\026\023\023\006\025\017\n￁\024\002\030￁\005\002\006\023\t\025￁\023\006\016\026\024\017\020\004￁\025\017\006\027￦ￏ").intern());
                }
              }
            }
            synchronized (m.this)
            {
              m.ʼ(m.this);
              return;
            }
          }
        });
        this.ʼॱ.start();
      }
      return;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  private void ʼॱ()
  {
    LogUtils.LogDebug(ˎ(0, '\000', 16).intern(), ˎ(2692, '\000', 25).intern());
    PriorityQueue localPriorityQueue = this.ʽॱ.ॱ(this.ˋ.ˏ());
    if (localPriorityQueue != null) {}
    try
    {
      if ((localPriorityQueue.isEmpty()) || (this.ॱˋ != null)) {
        return;
      }
      this.ॱˋ = new ArrayList();
      for (;;)
      {
        ar localAr = (ar)localPriorityQueue.poll();
        if (localAr == null) {
          break;
        }
        this.ॱˋ.add(localAr);
      }
    }
    finally {}
    try
    {
      if (this.ॱˋ.isEmpty())
      {
        this.ॱˋ = null;
        return;
      }
    }
    finally
    {
      localObject2 = finally;
      throw localObject2;
    }
    new Thread(new SafeRunnable()
    {
      public final void safeRun()
      {
        boolean bool = m.ॱˎ(m.this);
        if (bool)
        {
          ??? = m.ʻॱ(m.this).iterator();
          while (((Iterator)???).hasNext())
          {
            ar localAr = (ar)((Iterator)???).next();
            m.ʼॱ(m.this).ˏ(localAr);
          }
        }
        synchronized (m.this)
        {
          m.ॱᐝ(m.this);
          if (bool) {
            m.ᐝॱ(m.this);
          }
          return;
        }
      }
    }).start();
  }
  
  private void ʽॱ()
  {
    try
    {
      notify();
      return;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  private boolean ʿ()
  {
    JSONArray localJSONArray;
    int i;
    try
    {
      localJSONArray = new JSONArray();
      localObject = this.ॱˋ.iterator();
      if (((Iterator)localObject).hasNext()) {
        break label405;
      }
      i = 1;
    }
    catch (Exception localException)
    {
      Object localObject;
      label32:
      JSONObject localJSONObject;
      f localF;
      LogUtils.LogError(ˎ(0, '\000', 16).intern(), ˎ(2813, '\000', 31).intern() + localException.toString());
      return false;
    }
    localJSONObject = p.ॱ(ˋ(new JSONObject(), true), false, false);
    localJSONObject.put(ˎ(2717, '\000', 6).intern(), localJSONArray);
    localF = f.ॱ();
    if (!this.ʽ)
    {
      localObject = this.ˋ.ˊ();
      localObject = as.ˋ(localJSONObject, localF.ˋ((String)localObject));
      if (localObject != null) {
        break label410;
      }
      i = 1;
      break label447;
      label111:
      if (((ao)localObject).ˏ().ˋ() >= 200) {
        break label415;
      }
      i = 0;
      break label471;
    }
    for (;;)
    {
      label129:
      i = ((ao)localObject).ˏ().ˋ();
      if (i != 403) {}
      for (i = 0;; i = 1) {
        switch (i)
        {
        default: 
          i = ˋˋ + 93;
          ˍ = i % 128;
          if (i % 2 == 0) {}
          ˏ(true);
          return true;
          localJSONArray.put(((ar)((Iterator)localObject).next()).ˎ());
          break;
        case 0: 
          for (;;)
          {
            String str = this.ˋ.ˋ();
            break;
            if (str.ˏ().ˋ() > 299) {
              break label129;
            }
            LogUtils.LogDebug(ˎ(0, '\000', 16).intern(), ˎ(2723, '\000', 38).intern() + localJSONArray);
            return true;
            LogUtils.LogDebug(ˎ(0, '\000', 16).intern(), ˎ(2761, '㶒', 51).intern() + str.ˏ().ˋ() + ˎ(2812, '\000', 1).intern() + str.ˏ().ॱ());
          }
          label405:
          i = 0;
          break label425;
          label410:
          i = 0;
          break label447;
          label415:
          i = 1;
          break label471;
        }
      }
      label425:
      switch (i)
      {
      }
      break label32;
      label447:
      switch (i)
      {
      }
      break label111;
      label471:
      switch (i)
      {
      }
    }
  }
  
  private static void ˈ()
  {
    ˋˊ = -547054218340340312L;
    ˊᐝ = new char[] { 83, -4633, -9441, -14155, -18708, -23543, -28208, 32716, 27954, 23177, 18675, 13917, 9090, 4585, -173, -4941, -16161, 11595, 7091, 2073, 30272, 25765, 20776, -16538, -21075, -26105, -30599, -2346, -7411, -11929, 16343, 11380, 6779, 2245, 29999, 25556, 20941, -16856, -21362, -25871, -30931, -2688, -7195, -12268, 16031, 11500, 6473, 1952, 30184, 25163, 20651, -17126, -21758, 5466, -1842, -12746, -8804, -23611, -20192, -31571, 27363, 30760, 20354, 24060, 9043, 13960, 1250, -5550, -1551, -12290, -8896, -24406, -18863, -31673, 27556, 30991, 20340, 21179, 8257, 13936, 1503, -5376, -1675, -13104, -11728, -24475, -18488, -31453, 26772, 32461, 19553, 21460, 8625, 14119, 6798, -5959, -417, -12916, -11292, -24227, -19215, -25859, 26702, 32761, 19714, 21313, 9908, 13325, 6773, -5722, -234, -12937, -12129, 116, -4648, -9457, -14197, -18744, -23491, -28284, 32764, 27951, 23199, 18686, 69, -4646, -9438, -14185, -18734, -23448, -28285, 32752, 27957, 23196, 18660, 13905, 9102, 4591, -240, -4932, -9489, -14241, -19010, -30701, 26028, 21330, 16623, 16049, 101, -4646, -9411, -14197, -18745, 101, -4646, -9421, -14185, -18748, -23507, 29018, -25371, -21988, -17997, -14348, 69, -4646, -9438, -14185, -18734, -23448, -28271, 32764, 27940, 23169, 18686, 13919, 9152, 4589, -190, -4950, -9489, -14246, -18960, -23787, -28347, 32443, 27651, 23161, 18343, 13581, 116, -4648, -9457, -14179, -18734, -23494, -28257, 32746, 67, -4663, -9410, -14113, -18732, -23448, -28263, 32758, 27945, 23196, 18681, 13913, 9100, 4577, -182, -4931, -9568, -14331, -18960, -23765, -28337, 32423, 27677, 23156, 18337, 13628, 9058, 4313, -509, -5011, -9774, -14535, -19101, -23869, -28560, 32143, 27585, 22843, 18128, 13547, 8744, 3997, -540, -5284, -10097, -14593, -19362, -24074, 18845, -23543, -27919, -32421, -254, -4633, -10134, 13860, 9455, 4933, 315, 32660, 27215, 22565, -18795, -23242, -27865, -32363, -962, -5417, -10110, 14196, 9691, 5047, 3690, 31967, 27390, 22815, -18496, -23121, -28662, -28929, -849, -5366, -9737, 13388, 8715, 4322, 3856, 83, -4665, -9409, -14187, -18740, -23511, -28252, 32746, 27937, 23179, 18677, 13914, 9089, 4587, -165, -4872, -9495, -14266, -19015, -23796, -28343, 32425, 27676, 23153, 18362, 13569, 9086, 4319, -434, -5082, -9826, 87, -4631, -9470, -14154, -18711, -23546, -28233, 32697, 28001, 23241, 18608, 13948, 9103, 4520, -162, -4937, -9484, -14328, -19017, -23785, -28416, 32420, 27673, 23150, 18341, 13640, 9063, 4305, -492, -5024, -9840, -14548, -19099, -23845, -28636, 32181, 27599, 22828, 18069, 13477, 8756, 3994, -539, -5283, -10047, -14679, -19439, -24072, -28731, 32094, 27317, 22550, 18004, 13243, 8528, 3951, -855, -5604, -10120, -14952, -19692, -24211, -28989, 31788, 27213, 22471, 17716, 12957, 8349, 3644, -1150, -5651, -10459, -15160, -19737, -24495, -29300, 31716, 26896, 22202, 17637, 12808, 8116, 3345, -1197, -5973, -10735, -15254, -20060, -24819, -29324, 31385, 26689, 22057, 17756, -22277, -25079, -29257, -3086, -7908, -11095, 14987, 10258, 8102, 3459, 29508, 26286, 21708, -17821, -22138, -24599, -29324, -3938, -6610, 5579, -1924, -12650, -8947, -23738, -20059, -31737, 27240, 101, -4642, -9419, -14186, -18732, -23450, 83, -4665, -9409, -14187, -18740, -23511, -28252, 32746, 27937, 23179, 18677, 13914, 9089, 4587, -165, -4872, -9485, -14244, -19023, -23798, -28332, 32417, 27678, 23167, 18400, 13582, 9087, 4298, -448, -4995, -9790, -14540, -19142, -23928, 7965, -3454, -15238, -10289, -22134, -17616, -28991, 24750, 29297, 17860, 22433, 10497, 15572, 3769, -8174, -3095, -14922, -10473, -21848, -17293, -29161, 25087, 29509, 17708, 22777, 10768, 15388, 3986, -7847, -3277, -14707, -10142, -21959, -17005, -28829, -2105, 6733, 11450, 16219, 16720, 21484, 26119, -30599, -25936, -21172, -16543, -15921, -11263, -6530, 2196, 6965, 11616, 16268, 17017, 21724, 26359, -30429, -25701, -21007, -20440, -15731, -11072, -6322, 2437, 7151, 11857, 12478, 17125, 21839, 26559, -30116, -25517, -20819, -20217, -15556, -10825, -2044, 2657, 7368, 12032, 12643, 17347, 22066, 30762, 89, -4665, -9435, -14120, -18739, -23491, -28285, 32748, 28000, 23169, 18686, 13905, 9108, 4577, -175, -4940, -9495, -14254, -19019, -23720, -28301, 32423, 27679, 23157, 18348, 13577, 9028, 4298, -511, -5013, -9771, -14534, -19103, -23861, -28613, 32216, 27586, 22829, 18070, 13559, 8754, 3981, -592, -5285, -10111, -14620, -19364, -24143, -28690, 32079, 27376, 22623, 18003, 13229, 8452, 3917, -845, -5619, -10142, -14863, -19708, -24273, 116, -4648, -9457, -14197, -18747, -23493, -28285, 32711, 27941, 23174, 18676, 69, -4646, -9438, -14185, -18734, -23448, -28285, 32765, 27956, 23196, 18681, 13910, 9095, 4520, -187, -4949, -9499, -14246, -19047, -23780, -28416, 69, -4614, -9470, -14153, -18702, -23447, -28208, 32749, 27955, 23181, 18658, 13848, 9129, 4556, -240, -4943, -9485, -14328, -19010, -23795, -28340, 32420, 27742, 23096, 18320, 13572, 9077, 4313, -493, -5011, -9840, -14539, -19103, -23869, -28619, 32216, 27603, 22845, 18050, 13565, 8800, 3996, -513, -5352, -10096, -14615, -19389, -24149, -28768, 32073, 27376, 22542, 17985, 13220, 8473, 3964, -800, -5626, -10113, -14890, -19635, -24218, -28987, 31796, 27244, 22408, 17701, 12939, 8389, 3642, -1072, -5679, -10492, -15160, -19740, -24489, -29248, 31707, 26975, 22199, 17645, 12868, 8113, 3372, -1198, -5975, -10733, -15235, -20062, -24823, -29325, 31443, 26702, 97, -4666, -9431, -14196, -18744, -23519, -28258, 32767, 28014, 23185, 18687, 13901, 9166, 4607, -175, -4938, -9484, -10763, 14410, 3762, 7431, 25410, 29145, 17504, -21903, -18273, -28883, -25337, -7174, -2507, -15336, 10997, 14619, 3929, 7670, 24583, 30440, 17636, -21744, -18011, -28792, -28140, -8003, -2362, -14999, 11173, 14804, 3188, 4808, 24773, 30571, 17797, -22470, -16848, -29519, -27900, -7928, -2088, 19993, -23626, -27328, -31080, -1796, -5603, -8287, 12763, 8981, 5368, 1741, 30825, 28091, 24541, -20192, -23909, -27451, -31126, -1147, -4760, -8348, 12439, 8800, 5208, 2449, 31531, 27987, 24232, -20431, -24040, -26635, -30458, -1191, -4887, -8683, 13229, 9648, 5901, 2227, 31437, 27650, 16888, -19479, -23220, -26896, -30498, -1425, -4198, -15984, 13181, 9345, 5675, 2168, 32216, 28469, 16731, -19819, -23510, -27136, -29700, -705, -4328, -16173, 12807, 9311, 6645, 2828, 31913, 28356, 16394, -19039, -22581, -26347, -30022, -831, -4501, -15429, 13718, -17752, 4673, -2, -14074, -9549, -23306, -18835, -31788, 28108, 32545, 18590, 23293, 9299, 12672, 1023, -4844, -323, -14090, -9655, -22540, -20203, -31928, 27808, 32273, 18555, 21925, 9984, 12596, 725, -5110, -468, -13355, -10884, -22671, -20257, -32207, 28558, 31108, 19205, 21680, 9916, 12396, 41, -4730, -9360, -14168, -18740, -23507, -28271, 32747, 27941, 23240, 18685, 13913, 9099, 4589, -240, -4949, -9483, -14246, -19019, -23720, -28332, 32423, 27728, 23144, 18337, 13595, 9059, 4248, -511, -5080, -9787, -14549, -19099, -23846, -28560, 32177, 27620, 22888, 18055, 13553, 8756, 3968, -513, -5299, -10092, -14680, -19392, -24131, -28686, 32065, 27327, 22556, 18003, 13288, 8452, 3959, -800, -5573, -10113, -14889, -19699, -24220, -28975, 31756, 27250, 22473, 17715, 12957, 8386, 3625, -1133, -5645, -10386, 13676, -9998, -4592, -577, -31819, -28370, -23382, 19138, 22552, 28593, 32196, 813, 5792, 9422, -13728, -9825, -4203, -684, -32607, -27027, -23428, 19342, 22911, 28429, 84, -4665, -9360, -14194, -18743, -23507, -28281, 32696, 27916, 23169, 18662, 13917, 9152, 4557, -186, -4931, -9490, -14244, -18960, -23756, -28337, 32431, 27651, 23096, 18343, 13575, 9008, 4300, -497, -5080, -9768, -14548, -19084, -23848, -28566, 32215, 27535, 22844, 18050, 13561, 8739, 3981, -526, -5287, -10109, -14621, -19426, -24149, -28689, 32071, 27325, 22614, 17996, 13225, 8528, 3893, -770, -5560, -10167, -14889, -19691, -24198, -29040, 31801, 27248, 22488, 17776, 13013, 8350, 3688, -1117, -5635, -10444, -15204, -19719, -24490, -29305, 31739, 26896, 22261, 17598, 12808, 8085, 3350, -1196, -5971, -10750, -15304, -20039, -24825, -29339, 31434, 26688, 22141, 17347, 12605, 8050, 3208, -1511, -6212, 12002, -15539, -2641, -6563, -26536, -30042, -16632, 20832, 17282, 29703, 67, -4663, -9410, -14113, -18732, -23448, -28285, 32765, 27956, 23240, 18660, 13917, 9107, 4604, -240, -4939, -9489, -14260, -19019, -23720, -28403, 32488, 27683, 23159, 18351, 13573, 9084, 4313, -460, -4998, -9775, -14533, -19099, -23862, -28623, 32155, 27595, 22888, 18055, 13561, 8755, 4040, -541, -5296, -10091, -14596, -19372, -24137, -28681, 32070, 27390, -8632, 13272, 1318, 5769, 26757, 31294, 20368, -24087, -19611, -31591, -26896, -6066, -623, -12371, 8536, 12978, 1249, 5704, 27637, 32031, 20288, -24405, -19942, -31633, -26208, -5299, -644, -12589, 8204, 12921, 2012, 6460, 27497, 31940, 20015, -23660, -18997, -30934, -26412, 17108, -20621, -26239, -30145, -2950, -6508, -11487, 15619, 12188, 6195, 2641, 29928, 24891, 21321, -16981, -20980, -26538, -29975, -2292, -7774, -11269, 15443, 11911, 6380, 1313, 30601, 25056, 21087, -17268, -20766, -25786, -31323, -2060, -8109, -11614, 16136, 10577, 102, -4668, -9423, -14177, -18802, -23506, -28263, 32746, 27955, 23196, 18627, 13917, 9093, 4582, -29179, 25514, 21855, 18152, 14502, -11368, 15935, 2266, 108, -4643, -9436, 9874, -13521, 112, -4643, -9415, -14180, -9645, 14284, 308, 4737, 27844, 32382, 19335, -23062, -18638, -32617, -27928, -5047, -1578, -13320, 9551, 14012, 229, 4682, 28646, 30983, 19288, -23379, -18926, -32657, -25158, -4334, -1751, -13630, 9239, 13933, 978, 7534, 28515, 30926, 18978, -22641, -20030, -31941, -25402, -4358, -1985, -10861, 10211, 12558, 642, 7409, 28166, 31652, 21989, -22703, -20312, 1165, -5881, -8208, -13295, -19942, -24410, -27297, 31538, 27114, 24070, 19498, 12951, 10057, 5429, -1058, -6085, -8594, -13131, -20111, -22567, -27261, 31338, 26847, 24194, 17276, 12743, 10173, 5139, -1332, -5977, -8931, -15363, -19986, -23023, -27393, 31045, 28494, 24053, 16982, 12323, 9978, 2882, -1743, -4223, -9152, -15768, 17024, -20691, -26155, -30131, -3040, -6450, -11422, 15705, 12242, 6241, 2590, 29868, 24941, 21261, -16911, -20901, -26620, -29975, -2236, -7702, -11356, 15437, 11953, 6296, 1351, 30717, 24980, 21035, -17247, -20864, -25793, -31280, -2155, -8160, -11568, 16245, 10536, 7123, 1144, 30231, 24774, 19753, -16606, -22090, -26002, -31740, -2371, -7336, -13003, 16315, 10320, 6906, 1188, 29003, 25584, 19866, -16822, 12395, -8716, -5364, -1863, -30980, -27578, -24129, 20434, 23818, 27311, 30928, 1649, 5102, 8658, -12417, -9071, -5490, 23966, -20424, -31052, -27351, -5257, -1653, -13216, 8779, 12433, 1846, 5454, 27623, 32292, 19480, -23838, -20211, -30960, -27148, -6129, -346, -13065, 8989, 12722, 1928, 6660, 26800, 32449, 19814, -23568, -20083, -31696, -25912, -5933, -144, -12927, 8250, 13923, 1238, 97, -4660, -9420, -14169, -18732, -23511, -28265, 32747, 21160, -16585, -30257, -25990, -7105, -2427, -15492, 11537, 16329, 2156, 6675, 25778, 28973, 17169, -21060, -16814, -30690, -25883, 67, -4663, -9410, -14113, -18732, -23448, -28286, 32765, 27949, 23175, 18662, 13917, 9152, 4604, -175, -4929, -9485, -14328, -18947, -23720, -28301, 32423, 27679, 23157, 18348, 13577, 9028, 4298, -511, -5013, -9771, -14534, -19103, -23861, -28613, 32216, 27607, 22825, 18051, 13496, 8755, 3968, -539, -5300, -10108, -14617, -19385, -24138, -28754, 114, -4659, -9411, -14185, -18730, -23507, -28252, 32761, 27943, 23195, 18608, 13899, 9096, 4583, -187, -4940, -9500, -14328, -19022, -23779, -28416, 32445, 27651, 23165, 18340, 13640, 9073, 4318, -492, -5011, -9790, -14472, -19095, -23866, -28615, 32140, 27593, 22825, 18076, 13553, 8762, 3969, -514, -5281, -10048, -14629, -19361, -24137, -28691, 32068, 27313, 22572, 18002, 13225, 8467, 3965, -862, -5623, -10125, -14893, 114, -4659, -9411, -14185, -18730, -23507, -28241, 32748, 27937, 23183, 18659, 69, -4646, -9438, -14185, -18734, -23448, -28286, 32765, 27949, 23175, 18662, 13905, 9102, 4591, -240, -4948, -9503, -14257, -19037, -23720, 67, -4663, -9410, -14113, -18732, -23448, -28285, 32765, 27956, 23240, 18673, 13916, 9152, 4580, -167, -4949, -9484, -14259, -19010, -23779, -28334, 32488, 27741, 23096, 18323, 13575, 9087, 4309, -500, -5015, -9756, -14550, -19103, -23861, -28619, 32154, 27585, 22827, 18075, 13496, 8759, 3977, -541, -5352, -10093, -14624, -19387, -24148, -28700, 32071, 27303, 22550, 17934, 7555, -4087, -14594, -10977, -21740, -18008, -29609, 25149, 28916, 18184, 21797, 11147, 15941, 3130, -7472, -3719, -14556, -10808, -22415, -16677, -29548, 25441, 29151, 18358, 23155, 10376, 16125, 3416, -7181, -3673, -15329, -9483, -22356, -16631, -29244, 24650, 30209, 17643, 23381, 10554, 16353, 4683, -8133, -2344, -15017, -9431, -22141, -17352, -28109, 24704, 30565, 17868, 23428, 11879, 15559, 4790, -7890, 21915, -18383, -28968, -25263, -7377, -3631, -15234, 10789, 14552, 3925, 7439, 25520, 30325, 17435, -21854, -18089, -28836, -25177, -8124, -2325, -15191, 11096, 14824, 4036, 4702, 24817, 30412, 17713, -21521, -18031, -29656, -28028, -8035, -2254, -14888, 10337, 15918, 3220, 4965, 24842, 30677, 23136, -22523, -16731, -29328, -27875, -7754, -2995, -9710, 10419, 16140, 3543, 5043, 26203, 29921, 23176, -22179, -16448, -29282, -28635, -6401, -2927, -9426, 10693, 16287, 575, -5866, 1171, 12917, 8650, 24470, 19835, 30942, -26897, -31631, -19494, -24141, -8436, -13601, -1866, 5641, 1512, 13303, 8470, 23785, 19036, 30750, -26632, -31409, -19653, -20764, 105, -4666, -9437, -14191, -18745, -23520, -28284, 32747, 28014, 23172, 18673, 13899, 9108, 4605, -192, -4932, -9503, -14244, -19019, 105, -4666, -9437, -14191, -18745, -23520, -28284, 32747, 28014, 23179, 18673, 13915, 9096, 4589, 16983, -20536, -26320, -30075, -2880, -6534, -11387, 15855, 12070, 6286, 2795, 29764, 24981, 21434, -17065, -20807, -26377, -30136, -2078, -7925, -11434, 15610, 11779, 6249, 1446, 30483, 24941, 21188, -17407, -20934, -25660, -31432, -2179, -7977, -11678, 16265, 10707, 6969, 1162, 30447, 12098, -15626, -3058, -6238, -26119, -29864, -16651, 20637, 16899, 30124, 26569, 6523, 3245, 16074, -12178, -15487, -2684, -6287, -25963, -29635, -16793, 20940, 17206, 30035, 26821, 6689, 3157, 16378, -11995, -15536, -2322, -6143, 69, -4646, -9438, -14185, -18734, -23448, -28265, 32765, 27956, 23196, 18681, 13910, 9095, 4520, -187, -4949, -9499, -14246, -18960, -23783, -28348, 32488, 27665, 23163, 18356, 13569, 9087, 4310, -493, -13008, 8351, 5757, 1476, 31627, 27007, 23752, -19795, -24519, -26668, -31301, -1261, -4394, -9053, 2844, -6506, -12191, -15488, -17013, -20681, -25920, 29873, 26234, 20933, 17341, 15630, 10459, 6834, -2993, -6172, -11856, -15614, -16671, -22445, -26099, 30190, 26383, 20772, 19696, 15955, 10282, 7111, -2798, -6281, -11588, -13208, -16848, -22118, -25757, 30406, 24747, 21093, 19918, 16292, 10618, 1237, -2386, -8188, -11308, -12809, -16616, -21786, -31572, 30295, 25084, 21327, 19722, 14563, 10827, 1064, -2072, -7847, -11423, -29218, 24660, 22179, 17730, 15177, 10741, 7198, -3488, -8013, -10479, -15059, -17460, -20973, -25544, 29388, 24885, 22381, 17813, 14397, 11920, 7375, -3274, -7803, -10268, -13778, -18288, -20819, -25280, 29579, 25072, 21571, 19121, 14525, 12056, 7661, -4042, -6574, -11078, -13568, -18071, -20548, -32223, 28799, 26308, 21790, 19312, 14799, 11300, 638, -3874, -6291, -10862, -13348, -16858, -21299, -32010, 28981, 26496, 22009, 18497, 16018, 11490, 835, -3605, -30920, 27277, 23652, 20420, 112, -4646, -9415, -14181, -18747, -4899, 355, 14236, 9268, 105, -4663, -9440, -14169, -18749, -23513, -28259, 32744, 27948, 23181, 18660, 13917, 9092, 10263, -14968, -3216, -7995, -24960, -29638, -17983, 22456, 17783, 29403, 24758, 7683, 3036, 14781, -10430, -15165, -3437, -8150, -25182, -29888, -18175, 22261, 17484, 97, -4661, -9436, -14191, -18737, -23514, -28285, 102, -4668, -9423, -14177, -18802, -23511, -28284, 32748, 27954, 23227, 18677, 13910, 9108, 4518, 97, -4644, -9436, -14198, -18689, -23494, -28269, 32750, 27940, -5050, 489, 14098, 116, -4645, -9420, 116, -4645, -9415, -14180, -12223, 15838, 2854, 6291, 26326, 29804, 16775, -20487, -17104, -30056, -26371, -6574, -3197, -15956, 12117, 15528, 2800, 6238, 26045, 29470, 16721, -20808, -17379, -30093, -26710, -6836, -3216, -16163, 11792, 15469, 46, -4671, -9410, -14196, -18747, -23505, -28286, 32761, 27956, 23169, 18687, 13910, 9107, 4518, 46, -4612, -9438, -14183, -18749, -23507, -28270, 32761, 27939, 23171, -15239, 10742, 7945, 3260, 29433, 24601, 21932, -17471, -22262, -24911, -29490, -3473, -6160, -10799, 15214, 10396, 7893, 3199, 29074, 26409, 21860, -17775, -22481, -25018, -31792, 32, -4645, -9420, -14189, -18816, -23490, -28267, 32746, 27955, 23169, 18687, 13910, 9152, 32, -4671, -9437, -14120, -18738, -23513, -28284, 32696, 27955, 23197, 18656, 13896, 9103, 4602, -188, -4931, -9500, -14328, -19022, -23807, -28416, 32, -4642, -9419, -14198, -18733, -23519, -28257, 32758, 28000, -2415, 6956, 11732, 15981, 16446, 21196, 26473, -30457, -25634, -21479, -16799, -16183, -10992, -6378, 2447, 6696, 17534, -22125, -24712, -29501, -3440, -8094, -10787, 15334, 10601, 7903, 3234, 29194, 26526, 21940, -17653, -22362, -24915, -29677, -3616, -6318, -10914, 15074, 10305, 7782, 973, 29049, 26369, 21675, -17806, -22505, -25152, 73, -4666, -9436, -14179, -18745, -23494, -28271, 32748, 27945, 23175, 18686, 13848, 32, -4666, -9409, -14196, -18816, -23506, -28257, 32749, 27950, 23180, 69, -4646, -9438, -14185, -18734, -23448, -28263, 32758, 27945, 23196, 18681, 13913, 9100, 4577, -182, -4943, -9490, -14257, -18960, -23791, -28338, 32444, 27669, 23167, 18354, 13577, 9060, 4305, -497, -5018, -9840, 24647, -29212, -17645, -22344, -10514, -15345, -3658, -15748, 12241, 6452, 2689, 69, -4646, -9438, -14185, -18734, -23448, -28271, 32764, 27940, 23169, 18686, 13919, 9152, 4600, -164, -4947, -9497, -14271, -19010, -23720, -28330, 32429, 27650, 23147, 18345, 13575, 9086, 4299, 10384, -15059, -3117, -8081, 172, -4813, -9269, -14210, -18885, -23423, -28296, 32533, 28109, 23144, 18455, 14006, 9001, 4373, -72, -5034, -9702, -14085, -19175, 84, -4646, -9431, -14191, -18738, -23505, -28208, 32748, 27951, 23240, 18659, 13917, 9102, 4588, -240, -4931, -9482, -14259, -19010, -23796, -28390, 32488, -12540, 8955, 5149, 1960, 31212, 27468, 24241, -20284, -24048, -27202, -30763, -1732, -4947, -8510, 12402, 9107, 5534, 1836, 31192, -27555, -23873, -20217, -12451, -8794, -6136, 1645, 5298, 8979, 12588, 32, -4659, -9434, -14179, -18738, -23492, -28208, 32693, 28000, 23180, 18681, 13916, 9102, 4527, -188, -4872, -9488, -14263, -19037, -23797, -28416, 32444, 27672, 23146, 18341, 13595, 9080, 4311, -500, -5012, 9216, -13900, -191, 115, -4644, -9437, 115, -4671, -9420, 117, -4644, -32657, 28108, 14206, -9509, -5071, -98, -32282, -27851, -22889, 18665, 23098, 69, -4646, -9438, -14185, -18734, -23448, -28269, 32746, 27941, 23177, 18660, 13905, 9102, 4591, -240, -4931, -9482, -14259, -19010, -23796, -28307, 32429, 27652, 23161, 99, -4665, -9411, -14122, -18751, -23514, -28268, 32746, 27951, 23169, 18676, 13846, 9110, 4589, -162, -4932, -9495, -14266, -19017, 69, -4646, -9438, -14185, -18734, -23448, -28265, 32765, 27956, 23196, 18681, 13910, 9095, 4520, -167, -4938, -9485, -14244, -19023, -23788, -28340, 32429, 27668, 23096, 18352, 13577, 9075, 4307, -511, -5009, -9771, -14549, -19142, -23928, 83, -4659, -9410, -14180, -18743, -23514, -28265, 32696, 27941, 23198, 18677, 13910, 9108, 4603, -240, -4930, -9486, -14265, -19011, -23720, -28349, 32425, 27667, 23152, 18341, 101, -4642, -9419, -14186, -18732, -23493, 71, -4665, -9436, -14120, -18751, -23448, -28285, 32749, 27939, 23179, 18677, 13899, 9107, 4520, -190, -4931, -9485, -14248, -19009, -23786, -28333, 32429, 27728, 23166, 18351, 13594, 9008, 4299, -507, -5018, -9772, -14563, -19082, -23859, -28610, 32140, 27521, 22888, 15809, -12203, -6481, -2801, -29882, -26190, -21493, 16996, 20661, 26458, 30069, 3023, 7708, 11374, -15742, -11971, -6304, -2603, -30676, -24947, -21358, 17197, 20875, 26622, 31290, 2266, 7921, 11599, -15460, -11778, -7065, -1348, -30473, -24748, -21066, 16452, 22034, 25757, 31501, 2430, 8178, 12808, -16281, -10535, -6910, -1163, -30260, -25543, -19849, 16512, 22370, 32, 85, -4666, -9423, -14182, -18740, -23507, -28208, 32748, 27951, 23240, 18659, 13917, 9102, 4588, -240, -4980, -9499, -14268, -19019, -23800, -28337, 32442, 27652, 23096, 18341, 13598, 9077, 4310, -492, -5070, -9840, 83, -4659, -9436, -14196, -18743, -23514, -28265, 32696, 27957, 23192, 18608, 13914, 9106, 4583, -175, -4932, -9501, -14263, -19037, -23796, -28416, 32442, 27669, 23163, 18341, 13569, 9062, 4317, -494, -5082, -14498, 11001, 7179, 4021, 29168, 25374, 22187, -18295, -21999, -25166, -28709, -3799, -6980, -10536, 14433, 11145, 7569, 3924, 29344, 25609, 22097, -17998, -21748, -25229, -32586, -3583, -7066, -10285, 14598, 11112, 7884, 47, 29310, 26073, 22312, -17790, 78, -4665, -9360, -14179, -18728, -23492, -28286, 32761, 28000, 23169, 18686, 13918, 9103, 4520, -170, -4937, -9486, -14328, -19019, -23794, -28347, 32422, 27652, 23074, 18400, 116, -4648, -9457, -14191, -18738, -23519, -28284, 67, -4665, -9435, -14188, -18748, -23514, -28201, 32748, 28000, 23178, 18661, 13905, 9100, 4588, -240, -4931, -9482, -14259, -19010, -23796, -28416, 32440, 27679, 23147, 18356, 13612, 9073, 4300, -511, -5082, 110, -4663, -9411, -14179, 30340, -25814, -21055, -16789, -16331, -11558, -6303, 2315, 7131, -22064, 17529, 29312, 24867, 67, -4665, -9435, -14188, -18748, -23514, -28201, 32748, 28000, 23178, 18661, 13905, 9100, 4588, -240, -4931, -9482, -14259, -19010, -23796, -28416, 32440, 27679, 23147, 18356, 13612, 9073, 4300, -511, -5082, -9840, -14531, -19086, -23846, -28609, 32138, 27546, 22888, 116, -4648, -9457, -14197, -18747, -23493, -28285, 32711, 27955, 23196, 18673, 13898, 9108, 69, -4646, -9438, -14185, -18734, -23448, -28263, 32758, 28000, 23177, 18656, 13896, 9140, 4583, -142, -4935, -9501, -14269, -19017, -23798, -28337, 32445, 27678, 23164, 999, -4520, -10077, -13560, -19129, -22609, -28160, 31871, -27717, 32264, 18665, 23361, -21415, 16893, 30471, 25836, 6907, 2076, 15790, -11312, -16107, -2373, -6962, -26068, -28756, -16937, 21348, 16518, 30419, 25724, 6541, 3948, 15699, -11588, -16359, -2442, -5189, -26338, -28826, -17187, 21000, 16503, 30156, 27431, 6504, 3776, 15407, -11888, 69, -4646, -9438, -14185, -18734, -23448, -28285, 32765, 27950, 23180, 18681, 13910, 9095, 4520, -175, -4933, -9484, -14271, -19009, -23786, -28416, 32427, 27679, 23157, 18414, 13577, 9086, 4316, -494, -5017, -9767, -14532, -19154, -23842, -28619, 32150, 27588, 22817, 18078, 13567, 8814, 4001, -546, -5269, -10060, -14647, -19332, -24172, -28705, 32122, 27285, 22590, 18021, 13210, 8482, 3933, -878, -5560, -10140, -14889, -19648, 69, -4646, -9438, -14185, -18734, -23448, -28263, 32758, 28000, 23201, 18686, 13899, 9108, 4585, -164, -4940, -9534, -14246, -19009, -23783, -28348, 32427, 27665, 23147, 18356, 13626, 9077, 4315, -507, -5023, -9786, -14531, -19086, 68, -4659, -9436, -14183, -18743, -23516, -28285, 32674, -20663, 17092, 29723, 26527, 6596, 2863, 16022, -12055, 31106, -27633, -23842, -20140, -12543, 65, -4659, -9438, -14165, -18747, -23494, -28282, 9807, -13365, -705, -4468, -28479, -32216, -18497, 23026, 19261, 65, -4648, -9440, -14156, -18737, -23490, -28263, 32758, 9759, -13434, -642, -4408, -28517, -32146, -18470, 65, -4648, -9440, -14185, -18748, -23507, -28271, 32756, 67, -4672, -9423, -14198, -18732, -23510, -28257, 32759, 27955, 23196, 21083, -16417, -30426, -25962, -6947, -2526, -15461, 11745, 16182, 2180, 67, -4646, -9409, -14197, -18733, -23541, -28264, 32761, 27950, 23174, 18677, 13908, 68, -4665, -9435, -14182, -18740, -23507, -28237, 32756, 27945, 23179, 18683, 70, -4663, -9421, -14179, -18750, -23513, -28257, 32755, 27905, 23206, 15258, -10739, -7954, -3263, -29426, 70, -4643, -9437, -14179, 72, -4659, -9431, -14206, -18751, -23496, 72, -4655, -9440, -14198, -18707, -23536, 1771, -5276, -8769, -12747, -20384, -23933, 73, -4666, -9410, -14179, -18734, -23511, -28269, 32748, 27945, 23198, 18677, 1953, -5582, -9001, -12418, -20197, -23601, -27027, 30722, 27339, 23909, 75, -4671, -9415, -14200, 24130, -19517, -31425, -26990, -5940, -1495, -12398, 8674, 26622, -30093, -17276, -20689, -11967, -15474, -2512, 6223, 2711, 15662, 77, -4663, -9415, -14188, -18702, -23491, 77, -4659, -9420, -14191, -18751, -23542, -28286, 32753, 27960, 11199, -14797, -3890, -7322, -25289, -28716, -17812, 21507, 18131, 29046, 25391, 7599, 2166, 14867, -11101, 77, -4634, -9419, -14181, -18732, -23511, -28286, 11077, -14641, -4038, -7242, -25145, -28872, 77, -4665, -9422, -14191, -18740, -23507, -28237, 32759, 27954, 23181, -30935, 27299, 23638, 20458, 12717, 9055, 5856, -1891, 77, -4665, -9472, -14195, -18750, 78, -4663, -9436, -14191, -18730, -23507, -28248, 79, -4657, -9435, -14198, -18727, 19196, -22677, -28282, -32219, -949, -8415, 12981, 1088, 6128, 27065, 31576, 20215, -24436, -19873, -25021, 29646, 17697, 22181, 10450, 14895, 3978, -7683, -3274, 82, -4659, -9434, -14155, -18737, -23510, 83, -4667, -9423, -14183, -18732, -23513, 30547, -25892, -21455, -16502, -15916, -11511, -6528, 2280, -5107, 387, 14206, 9411, 23180, 18533, 32193, -27736, -32393, -18731, 17011, -20498, -26361, -30027, -2840, -6634, 31892, -28407, -22560, -19349, -13819, -10010, -4797, 829, -16515, 21230, 25617, 30628, 2545, 6945, 11964, -16189, 23541, -18818, -32611, -27844, -4753, -114, 89, -4663, -9416, -14185, -18737, 23565, -20067, -30870, -27448, -5487, -1948 };
  }
  
  private static void ˉ()
  {
    LogUtils.LogDebug(ˎ(0, '\000', 16).intern(), ˎ(2844, '\000', 30).intern());
    IntentFilter localIntentFilter = new IntentFilter();
    localIntentFilter.addAction(ˎ(2874, 51007, 36).intern());
    ˊ().ॱˊ.registerReceiver(new ap(), localIntentFilter);
  }
  
  private ApplicationInfo ˊ(String paramString)
  {
    try
    {
      paramString = this.ॱˊ.getPackageManager().getApplicationInfo(paramString, 0);
      return paramString;
    }
    catch (Exception paramString)
    {
      LogUtils.LogError(ˎ(0, '\000', 16).intern(), ˎ(2658, '\000', 34).intern() + paramString.getLocalizedMessage());
      return null;
    }
    catch (PackageManager.NameNotFoundException paramString)
    {
      for (;;) {}
    }
  }
  
  public static m ˊ()
  {
    try
    {
      if (ˎ == null) {
        ˎ = new m();
      }
      return ˎ;
    }
    finally {}
  }
  
  private static List<AdAction> ˊ(JSONObject paramJSONObject)
    throws JSONException
  {
    int i = 0;
    ArrayList localArrayList = new ArrayList();
    paramJSONObject = paramJSONObject.getJSONArray(ˎ(2188, '\000', 7).intern());
    while (i < paramJSONObject.length())
    {
      localArrayList.add(new v(paramJSONObject.getJSONObject(i)));
      i += 1;
    }
    return localArrayList;
  }
  
  private long ˊॱ(String paramString)
  {
    try
    {
      long l = this.ॱˊ.getPackageManager().getPackageInfo(paramString, 0).lastUpdateTime;
      return l;
    }
    catch (Throwable paramString) {}
    return 0L;
  }
  
  private static JSONObject ˋ(String paramString1, Map<String, String> paramMap, String paramString2)
  {
    JSONObject localJSONObject = new JSONObject();
    try
    {
      localJSONObject.put(ˎ(2218, 60466, 3).intern(), paramString1);
      localJSONObject.put(ˎ(2221, '\000', 3).intern(), new JSONObject(paramMap));
      localJSONObject.put(ˎ(2224, '\000', 4).intern(), paramString2);
      return localJSONObject;
    }
    catch (JSONException paramString1)
    {
      LogUtils.LogError(ˎ(0, '\000', 16).intern(), ˎ(2228, 53252, 30).intern(), paramString1);
    }
    return localJSONObject;
  }
  
  private static JSONObject ˋ(List<String> paramList)
  {
    JSONObject localJSONObject = new JSONObject();
    label70:
    JSONArray localJSONArray;
    if (paramList != null)
    {
      i = 32;
      switch (i)
      {
      }
      for (;;)
      {
        return localJSONObject;
        i = ˋˋ + 83;
        ˍ = i % 128;
        if ((i % 2 == 0) && (paramList.size() != 0)) {
          break;
        }
        i = 1;
        switch (i)
        {
        }
      }
      localJSONArray = new JSONArray();
      paramList = paramList.iterator();
      if (!paramList.hasNext()) {
        break label236;
      }
    }
    label236:
    for (int i = 45;; i = 5)
    {
      switch (i)
      {
      }
      try
      {
        localJSONObject.put(ˎ(2489, '⣤', 4).intern(), localJSONArray);
        return localJSONObject;
        localJSONArray.put((String)paramList.next());
      }
      catch (JSONException paramList)
      {
        for (;;)
        {
          LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(2493, 'é', 19).intern() + paramList.getLocalizedMessage());
        }
      }
      i = 80;
      break;
      i = 0;
      break label70;
    }
  }
  
  private JSONObject ˋ(JSONObject paramJSONObject, boolean paramBoolean)
  {
    localJSONObject = new JSONObject();
    if (!paramBoolean) {}
    for (;;)
    {
      try
      {
        localJSONObject.put(ˎ(2593, '⑵', 3).intern(), f.ॱ().ˊॱ());
      }
      catch (JSONException localJSONException)
      {
        int i;
        long l2;
        LogUtils.LogError(ˎ(0, '\000', 16).intern(), ˎ(2615, '\000', 24).intern(), localJSONException);
        continue;
        localJSONObject.put(ˎ(2596, '\000', 3).intern(), l1);
        long l1 = l2;
        continue;
      }
      try
      {
        i = this.ʻॱ;
        if (!paramBoolean) {
          this.ʻॱ += 1;
        }
        l1 = p.ˋ();
        l2 = paramJSONObject.optLong(LocalEventConsts.EVENT_KEY_TIMESTAMP);
        if (l2 == 0L)
        {
          localJSONObject.put(ˎ(2599, '\000', 3).intern(), this.ᐝॱ);
          localJSONObject.put(LocalEventConsts.EVENT_KEY_TIMESTAMP, l1);
          localJSONObject.put(ˎ(2602, '\000', 2).intern(), p.ˎ());
          if (!paramBoolean) {
            localJSONObject.put(ˎ(2604, 32778, 2).intern(), i);
          }
          if (!paramBoolean) {
            localJSONObject.put(ˎ(2606, '㜒', 9).intern(), z.ˎ().ˏ());
          }
          paramJSONObject.remove(LocalEventConsts.EVENT_KEY_TIMESTAMP);
          return localJSONObject;
        }
      }
      finally {}
    }
  }
  
  private static boolean ˋ(TracebackListener paramTracebackListener)
  {
    String str = paramTracebackListener.getSdkVersion();
    if (!ˎ(2450, '怂', 7).intern().equals(str))
    {
      i = 35;
      switch (i)
      {
      default: 
        return true;
      }
      i = ˍ + 109;
      ˋˋ = i % 128;
      if ((i % 2 != 0) && (TextUtils.isEmpty(str))) {
        break label265;
      }
      i = 0;
      switch (i)
      {
      default: 
        i = ˋˋ + 119;
        ˍ = i % 128;
        if (i % 2 == 0)
        {
          i = 76;
          switch (i)
          {
          default: 
            if (p.ˏ(str, paramTracebackListener.getMinSdkVersion()) >= 0)
            {
              i = 1;
              switch (i)
              {
              }
            }
            break;
          }
        }
        break;
      case 1: 
        label84:
        label128:
        label163:
        label184:
        return false;
        if (p.ˏ(str, paramTracebackListener.getMaxSdkVersion()) <= 0)
        {
          i = 6;
          label202:
          switch (i)
          {
          }
          return true;
          if (p.ˏ(str, paramTracebackListener.getMinSdkVersion()) < 0) {
            break label287;
          }
        }
        break;
      }
    }
    label265:
    label287:
    for (int i = 0;; i = 1)
    {
      switch (i)
      {
      }
      break label184;
      i = 66;
      break;
      i = 1;
      break label84;
      i = 0;
      break label163;
      i = 26;
      break label202;
      i = 47;
      break label128;
    }
  }
  
  static b ˋॱ()
  {
    try
    {
      if (ˎ.ˏॱ == null)
      {
        ˎ.ˏॱ = new b();
        ˎ.ˏॱ.start();
      }
      b localB = ˎ.ˏॱ;
      return localB;
    }
    finally {}
  }
  
  private static String ˎ(int paramInt1, char paramChar, int paramInt2)
  {
    char[] arrayOfChar = new char[paramInt2];
    int i = 0;
    if (i < paramInt2)
    {
      j = 0;
      switch (j)
      {
      default: 
        label15:
        j = ˍ + 29;
        ˋˋ = j % 128;
        if (j % 2 == 0) {
          break;
        }
      }
    }
    for (int j = 61;; j = 2) {
      switch (j)
      {
      default: 
        arrayOfChar[i] = ((char)(int)(ˊᐝ[(paramInt1 + i)] ^ i * ˋˊ ^ paramChar));
        i += 1;
        break;
        return new String(arrayOfChar);
      case 61: 
        arrayOfChar[i] = ((char)(int)(ˊᐝ[(paramInt1 + i)] ^ i * ˋˊ ^ paramChar));
        i += 1;
        break;
        j = 1;
        break label15;
      }
    }
  }
  
  public static void ˎ(Context paramContext, Intent paramIntent)
  {
    int i;
    Object localObject;
    label74:
    label89:
    Iterator localIterator;
    if (paramIntent != null)
    {
      i = 13;
      switch (i)
      {
      default: 
        try
        {
          r.ॱ();
          if (r.ˋ(paramContext)) {
            return;
          }
          localObject = paramIntent.getStringExtra(ˎ(3064, 'Ε', 8).intern());
          r.ॱ();
          if (localObject == null) {
            break;
          }
          i = 1;
        }
        catch (Throwable paramContext)
        {
          LogUtils.ExtLogError(ˎ(3173, '\000', 33).intern());
          LogUtils.LogError(ˎ(0, '\000', 16).intern(), ˎ(3206, '\000', 8).intern(), paramContext);
          return;
        }
        localObject = ˎ(3072, 37845, 4).intern();
        r.ˊ(paramContext, (String)localObject);
        localIterator = paramContext.getPackageManager().queryBroadcastReceivers(new Intent(ˎ(3076, 44090, 36).intern()), 0).iterator();
      }
    }
    for (;;)
    {
      label131:
      boolean bool = localIterator.hasNext();
      label145:
      label189:
      ResolveInfo localResolveInfo1;
      if (bool)
      {
        i = 0;
        switch (i)
        {
        default: 
          return;
        }
        i = ˋˋ + 63;
        ˍ = i % 128;
        if (i % 2 != 0) {
          break label597;
        }
        i = 24;
        switch (i)
        {
        default: 
          localResolveInfo1 = (ResolveInfo)localIterator.next();
          localObject = localResolveInfo1;
        }
      }
      for (;;)
      {
        try
        {
          bool = localResolveInfo1.activityInfo.packageName.equals(paramContext.getPackageName());
          if (!bool) {
            continue;
          }
          i = 0;
          localObject = localResolveInfo1;
          switch (i)
          {
          default: 
            break;
          }
          try
          {
            bool = ˎ(3076, 44090, 36).intern().equals(paramIntent.getAction());
            if (!bool) {
              continue;
            }
            i = 81;
            switch (i)
            {
            default: 
              break;
            case 81: 
              i = ˍ + 27;
              ˋˋ = i % 128;
              if ((i % 2 != 0) && (InstallBroadcastReceiver.class.getName().equals(((ResolveInfo)localObject).activityInfo.name))) {
                continue;
              }
              i = 9;
            }
          }
          catch (Throwable localThrowable1) {}
          ((BroadcastReceiver)Class.forName(((ResolveInfo)localObject).activityInfo.name).newInstance()).onReceive(paramContext, paramIntent);
        }
        catch (Throwable localThrowable2)
        {
          ResolveInfo localResolveInfo2;
          label597:
          continue;
        }
        LogUtils.LogError(ˎ(0, '\000', 16).intern(), ˎ(3112, '\000', 61).intern() + ((ResolveInfo)localObject).activityInfo.name, localThrowable1);
        break label131;
        break label89;
        localResolveInfo2 = (ResolveInfo)localIterator.next();
        localObject = localResolveInfo2;
        bool = localResolveInfo2.activityInfo.packageName.equals(paramContext.getPackageName());
        if (bool)
        {
          i = 28;
          localObject = localResolveInfo2;
          switch (i)
          {
          }
          break label131;
          i = 44;
          break;
          i = 0;
          break label614;
          i = 1;
          break label145;
        }
        i = 65;
        continue;
        i = 60;
        continue;
        i = 29;
        break label635;
        i = 52;
        break label189;
        i = 1;
      }
      return;
      label614:
      switch (i)
      {
      }
      break label74;
      label635:
      switch (i)
      {
      }
    }
  }
  
  private JSONObject ˏ(String paramString)
  {
    int j = 1;
    JSONObject localJSONObject = new JSONObject();
    boolean bool = TextUtils.isEmpty(this.ˊˊ.ˎ(ˎ(1261, '\000', 14).intern()));
    int i;
    long l1;
    long l2;
    if (!bool)
    {
      i = 47;
      switch (i)
      {
      default: 
        i = ˋˋ + 55;
        ˍ = i % 128;
        if (i % 2 == 0) {}
        this.ˊˊ.ˏ(ˎ(1261, '\000', 14).intern(), ˎ(1275, 36451, 5).intern());
      }
      l1 = ˎ(this.ॱˊ.getPackageName());
      l2 = ˊॱ(this.ॱˊ.getPackageName());
      if (l1 > 0L) {
        break label408;
      }
      i = 48;
      switch (i)
      {
      default: 
        label153:
        i = ˍ + 123;
        ˋˋ = i % 128;
        if (i % 2 == 0)
        {
          i = 1;
          switch (i)
          {
          }
        }
        break;
      }
    }
    for (;;)
    {
      try
      {
        localJSONObject.put(ˎ(1280, 54270, 3).intern(), l1);
      }
      catch (JSONException paramString)
      {
        LogUtils.LogError(ˎ(0, '\000', 16).intern(), ˎ(1292, 55830, 51).intern(), paramString);
        continue;
        localJSONObject.put(ˎ(1286, '⛴', 2).intern(), true);
        continue;
      }
      localJSONObject.put(ˎ(1288, '\000', 4).intern(), paramString);
      r.ˎ(this.ॱˊ, localJSONObject);
      p.ॱ(localJSONObject, ᐝॱ());
      return localJSONObject;
      i = ˋˋ + 93;
      ˍ = i % 128;
      if (i % 2 == 0) {}
      localJSONObject.put(ˎ(1283, '\000', 3).intern(), l2);
      break label456;
      localJSONObject.put(ˎ(1280, 54270, 3).intern(), l1);
      break label429;
      i = 35;
      break;
      label408:
      i = 83;
      break label153;
      i = 0;
      label429:
      label456:
      while (bool)
      {
        do
        {
          i = 0;
          break label463;
          i = 0;
          break;
        } while (l2 > 0L);
        i = 1;
        switch (i)
        {
        }
      }
      i = j;
      label463:
      switch (i)
      {
      }
    }
  }
  
  private void ˏ(final Activity paramActivity, String paramString, boolean paramBoolean1, final boolean paramBoolean2, final boolean paramBoolean3)
  {
    final String str = f.ॱ().ˊॱ();
    f.ॱ().ʻ(paramString);
    if (paramString == null) {}
    for (int i = 1;; i = 0)
    {
      switch (i)
      {
      default: 
        if (paramString.equals(ˎ(749, '\000', 17).intern())) {
          LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(766, 54704, 41).intern() + paramString + ˎ(807, '丰', 78).intern());
        }
        break;
      }
      for (;;)
      {
        if (paramBoolean1)
        {
          ͺ();
          new Handler(Looper.getMainLooper()).post(new SafeRunnable()
          {
            private static int ʻ = 1;
            private static int ʽ;
            private static char[] ˊॱ = { 124, 240, 237, 244, 244, 247, 253, 103, 207, 211, 212, 129, 248, 246, 257, 259, 258, 248, 249, 258, 248, 248, 258, 251 };
            
            static
            {
              ʽ = 0;
            }
            
            private static String ˏ(int[] paramAnonymousArrayOfInt, String paramAnonymousString, boolean paramAnonymousBoolean)
            {
              int m = 0;
              int i = ʽ + 51;
              ʻ = i % 128;
              if (i % 2 == 0) {}
              byte[] arrayOfByte = (byte[])paramAnonymousString.getBytes("ISO-8859-1");
              i = paramAnonymousArrayOfInt[0];
              int n = paramAnonymousArrayOfInt[1];
              int i1 = paramAnonymousArrayOfInt[2];
              int i2 = paramAnonymousArrayOfInt[3];
              char[] arrayOfChar = ˊॱ;
              paramAnonymousString = new char[n];
              System.arraycopy(arrayOfChar, i, paramAnonymousString, 0, n);
              label81:
              int j;
              int k;
              if (arrayOfByte != null)
              {
                i = 1;
                switch (i)
                {
                default: 
                  i = ʻ + 65;
                  ʽ = i % 128;
                  if (i % 2 != 0) {}
                  arrayOfChar = new char[n];
                  i = 0;
                  j = 0;
                  if (i < n)
                  {
                    k = 96;
                    switch (k)
                    {
                    default: 
                      k = ʽ + 113;
                      ʻ = k % 128;
                      if ((k % 2 != 0) || (arrayOfByte[i] == 1))
                      {
                        k = 1;
                        switch (k)
                        {
                        default: 
                          k = ʽ + 107;
                          ʻ = k % 128;
                          if (k % 2 == 0) {}
                          arrayOfChar[i] = ((char)((paramAnonymousString[i] << '\001') + 1 - j));
                        }
                        for (;;)
                        {
                          j = arrayOfChar[i];
                          i += 1;
                          break;
                          arrayOfChar[i] = ((char)((paramAnonymousString[i] << '\001') - j));
                        }
                      }
                      break;
                    case 40: 
                      label142:
                      label199:
                      paramAnonymousString = arrayOfChar;
                    }
                  }
                  break;
                }
              }
              for (;;)
              {
                if (i2 > 0)
                {
                  i = 29;
                  switch (i)
                  {
                  default: 
                    label299:
                    arrayOfChar = new char[n];
                    System.arraycopy(paramAnonymousString, 0, arrayOfChar, 0, n);
                    System.arraycopy(arrayOfChar, 0, paramAnonymousString, n - i2, i2);
                    System.arraycopy(arrayOfChar, i2, paramAnonymousString, 0, n - i2);
                  }
                  if (!paramAnonymousBoolean) {
                    break label631;
                  }
                  i = 1;
                  switch (i)
                  {
                  default: 
                    label370:
                    if (i1 > 0)
                    {
                      i = 1;
                      switch (i)
                      {
                      default: 
                        label395:
                        i = m;
                        label419:
                        if (i >= n) {}
                        break;
                      }
                    }
                    break;
                  }
                }
                for (j = 2;; j = 66)
                {
                  switch (j)
                  {
                  default: 
                    return new String(paramAnonymousString);
                    i = ʽ + 1;
                    ʻ = i % 128;
                    if (i % 2 == 0) {}
                    arrayOfChar = new char[n];
                    i = 0;
                    label485:
                    if (i >= n) {
                      break;
                    }
                  }
                  for (j = 0;; j = 1) {
                    switch (j)
                    {
                    default: 
                      paramAnonymousString = arrayOfChar;
                      break;
                    case 0: 
                      j = ʻ + 111;
                      ʽ = j % 128;
                      if (j % 2 != 0) {}
                      arrayOfChar[i] = paramAnonymousString[(n - i - 1)];
                      i += 1;
                      break label485;
                      j = ʻ + 23;
                      ʽ = j % 128;
                      if (j % 2 != 0) {}
                      paramAnonymousString[i] = ((char)(paramAnonymousString[i] - paramAnonymousArrayOfInt[2]));
                      i += 1;
                      break label419;
                      i = 0;
                      break label81;
                      k = 40;
                      break label142;
                      k = 0;
                      break label199;
                      i = 34;
                      break label299;
                      label631:
                      i = 0;
                      break label370;
                    }
                  }
                  i = 0;
                  break label395;
                }
              }
            }
            
            public final void safeRun()
            {
              int j = 0;
              if (m.ˊ(m.this))
              {
                i = 67;
                switch (i)
                {
                default: 
                  m.ˏ(m.this, paramActivity);
                  m.ˋ(m.this);
                }
                m localM1 = m.this;
                String str2 = ˏ(new int[] { 0, 7, 137, 6 }, "\001\001\000\001\001\001\000", false).intern();
                m localM2 = m.this;
                if (paramBoolean2) {
                  break label353;
                }
                i = 0;
                switch (i)
                {
                default: 
                  label110:
                  String str1 = null;
                  for (;;)
                  {
                    localM1.ˋ(str2, m.ˊ(localM2, str1), null, true);
                    if (paramBoolean3) {
                      break;
                    }
                    return;
                    if (str != null) {
                      break label358;
                    }
                    i = 25;
                    switch (i)
                    {
                    default: 
                      str1 = ˏ(new int[] { 7, 4, 99, 0 }, "\001\000\001\001", true).intern();
                      break;
                    case 29: 
                      label163:
                      label184:
                      str1 = str;
                    }
                  }
                  m.this.ˋ(ˏ(new int[] { 11, 13, 143, 4 }, "\000\000\001\000\000\000\001\001\001\000\000\000\000", true).intern(), new JSONObject());
                  return;
                }
                i = ʻ + 37;
                ʽ = i % 128;
                if (i % 2 != 0) {
                  break label364;
                }
                i = 61;
                label297:
                switch (i)
                {
                }
                if (str != null) {
                  break label370;
                }
              }
              label353:
              label358:
              label364:
              label370:
              for (int i = j;; i = 1)
              {
                switch (i)
                {
                }
                break label184;
                i = 85;
                break;
                i = 1;
                break label110;
                i = 29;
                break label163;
                i = 51;
                break label297;
              }
            }
          });
        }
        return;
        LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(656, '\000', 93).intern());
        continue;
        if (paramString.contains(ˎ(885, 47750, 1).intern()))
        {
          LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(886, 'ሄ', 41).intern() + paramString + ˎ(927, '\000', 73).intern());
        }
        else
        {
          LogUtils.ExtLogInfo(ˎ(0, '\000', 16).intern(), ˎ(1000, '㔵', 24).intern() + paramString);
          LogUtils.ExtLogInfo(ˎ(0, '\000', 16).intern(), ˎ(1024, '\000', 100).intern());
        }
      }
    }
  }
  
  private void ˏ(Context paramContext)
  {
    paramContext.registerReceiver(new BroadcastReceiver()new IntentFilter
    {
      public final void onReceive(Context paramAnonymousContext, Intent paramAnonymousIntent)
      {
        p.ॱ(paramAnonymousIntent);
      }
    }, new IntentFilter(ˎ(1224, '䊵', 37).intern()));
  }
  
  private void ˏ(String paramString, JSONObject paramJSONObject, boolean paramBoolean)
  {
    ˋ(paramString, paramJSONObject, null, paramBoolean);
  }
  
  private void ˏ(boolean paramBoolean)
  {
    int j = 0;
    int k = 0;
    label20:
    label63:
    label110:
    label127:
    label171:
    Iterator localIterator;
    for (;;)
    {
      try
      {
        bool = ॱ();
        if (bool) {
          break;
        }
        i = 1;
        switch (i)
        {
        default: 
          i = ˍ + 3;
          ˋˋ = i % 128;
          if (i % 2 != 0) {
            break label542;
          }
          i = k;
          switch (i)
          {
          default: 
            LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(16, 49292, 37).intern());
          }
          break;
        }
      }
      catch (Exception localException)
      {
        boolean bool;
        g.ˎ(ˎ(0, '\000', 16).intern(), ˎ(124, '\000', 19).intern(), localException, true);
        continue;
      }
      finally {}
      return;
      bool = this.ˏ;
      if (!bool) {
        break label530;
      }
      i = 6;
      switch (i)
      {
      default: 
        i = ˋˋ + 7;
        ˍ = i % 128;
        if (i % 2 == 0) {
          break label547;
        }
        i = j;
        switch (i)
        {
        default: 
          LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(53, 'ᔉ', 60).intern());
        }
        break;
      case 6: 
        if (!paramBoolean) {
          ˏ(ˎ(113, '\000', 11).intern(), new JSONObject(), true);
        }
        this.ᐝ = true;
        w.ˊ(this.ॱˊ).ˏ();
        localIterator = this.ˋॱ.iterator();
        paramBoolean = localIterator.hasNext();
        if (paramBoolean) {
          break label536;
        }
        i = 51;
        switch (i)
        {
        default: 
          label328:
          i = ˋˋ + 67;
          ˍ = i % 128;
          if (i % 2 == 0) {
            break label552;
          }
        }
        break;
      }
    }
    label530:
    label536:
    label542:
    label547:
    label552:
    for (int i = 27;; i = 20) {
      switch (i)
      {
      default: 
        ((TracebackListener)localIterator.next()).shutdown();
        break;
      case 27: 
        ((TracebackListener)localIterator.next()).shutdown();
        break;
        this.ˋॱ.clear();
        this.ˋॱ = null;
        this.ʻ.ॱ();
        ab.ˋ();
        this.ʿ.ˏ();
        this.ʿ = null;
        break label110;
        LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(16, 49292, 37).intern());
        break label110;
        LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(53, 'ᔉ', 60).intern());
        break label110;
        i = 0;
        break label20;
        i = 58;
        break label127;
        i = 11;
        break label328;
        i = 1;
        break label63;
        i = 1;
        break label171;
      }
    }
  }
  
  private void ͺ()
  {
    String str = this.ˊˊ.ˎ(ˎ(1124, '⺋', 10).intern());
    if (TextUtils.isEmpty(str)) {}
    for (int i = 93;; i = 30)
    {
      switch (i)
      {
      }
      for (this.ᐝॱ = 1;; this.ᐝॱ = (Integer.parseInt(str) + 1))
      {
        this.ʻॱ = 1;
        return;
      }
    }
  }
  
  private static ar ॱ(String paramString, JSONObject paramJSONObject1, JSONObject paramJSONObject2, JSONObject paramJSONObject3)
  {
    int j = 25;
    int k = 1;
    JSONObject localJSONObject = paramJSONObject2;
    if (paramJSONObject2 == null)
    {
      localJSONObject = new JSONObject();
      LogUtils.LogDebug(ˎ(0, '\000', 16).intern(), ˎ(2910, '\000', 25).intern() + paramString);
    }
    int i;
    try
    {
      paramJSONObject1 = p.ॱ(paramJSONObject1, true, paramString.equals(ˎ(2935, '\000', 7).intern()));
      if (paramJSONObject1 != null) {
        break label393;
      }
      i = 80;
      switch (i)
      {
      default: 
        i = ˋˋ + 53;
        ˍ = i % 128;
        if (i % 2 == 0) {}
        LogUtils.LogError(ˎ(0, '\000', 16).intern(), ˎ(2942, '\000', 30).intern());
        return null;
      }
      paramJSONObject2 = new JSONObject();
      paramJSONObject2.put(ˎ(2972, '\000', 4).intern(), paramString);
      p.ॱ(paramJSONObject2, localJSONObject);
      paramString = ˎ(2976, '盰', 9).intern();
      i = k;
      if (paramJSONObject3 == null) {
        break label407;
      }
      i = 0;
    }
    catch (JSONException paramString)
    {
      label228:
      LogUtils.LogError(ˎ(0, '\000', 16).intern(), ˎ(2989, '\000', 38).intern() + paramString.getLocalizedMessage());
      return null;
    }
    paramString = paramJSONObject3.optString(LocalEventConsts.EVENT_KEY_INTEGRATION);
    paramJSONObject2.put(LocalEventConsts.EVENT_KEY_IV, paramJSONObject3.optString(LocalEventConsts.EVENT_KEY_IV));
    if (TextUtils.isEmpty(paramString))
    {
      i = 74;
      break label431;
      label265:
      paramString = ˎ(2985, 43454, 4).intern();
      label279:
      paramJSONObject2.put(LocalEventConsts.EVENT_KEY_INTG, paramString);
      i = j;
      if (paramJSONObject2.has(LocalEventConsts.EVENT_KEY_PLGN)) {
        break label455;
      }
      i = 60;
      break label455;
    }
    for (;;)
    {
      p.ॱ(paramJSONObject2, paramJSONObject1);
      paramString = new ar(ak.ˋ(paramJSONObject2), false);
      return paramString;
      break label279;
      paramJSONObject2.put(LocalEventConsts.EVENT_KEY_PLGN, paramString);
      continue;
      label393:
      i = 15;
      break;
      i = 87;
      break label431;
      label407:
      switch (i)
      {
      }
      break label228;
      label431:
      switch (i)
      {
      }
      break label265;
      label455:
      switch (i)
      {
      }
    }
  }
  
  /* Error */
  private void ॱ(Application paramApplication, Activity paramActivity, String paramString1, String paramString2, boolean paramBoolean)
  {
    // Byte code:
    //   0: aload_0
    //   1: invokevirtual 3199	com/soomla/traceback/i/m:ॱ	()Z
    //   4: ifeq +731 -> 735
    //   7: bipush 13
    //   9: istore 6
    //   11: iload 6
    //   13: tableswitch	default:+19->32, 13:+595->608
    //   32: aload_0
    //   33: getfield 122	com/soomla/traceback/i/m:ˏ	Z
    //   36: ifeq +706 -> 742
    //   39: iconst_1
    //   40: istore 6
    //   42: iload 6
    //   44: tableswitch	default:+20->64, 1:+614->658
    //   64: iconst_0
    //   65: iconst_0
    //   66: bipush 16
    //   68: invokestatic 103	com/soomla/traceback/i/m:ˎ	(ICI)Ljava/lang/String;
    //   71: invokevirtual 107	java/lang/String:intern	()Ljava/lang/String;
    //   74: sipush 285
    //   77: iconst_0
    //   78: bipush 31
    //   80: invokestatic 103	com/soomla/traceback/i/m:ˎ	(ICI)Ljava/lang/String;
    //   83: invokevirtual 107	java/lang/String:intern	()Ljava/lang/String;
    //   86: invokestatic 179	com/soomla/traceback/LogUtils:LogDebug	(Ljava/lang/String;Ljava/lang/String;)V
    //   89: aload_0
    //   90: iload 5
    //   92: putfield 128	com/soomla/traceback/i/m:ʽ	Z
    //   95: iload 5
    //   97: ifeq +651 -> 748
    //   100: bipush 22
    //   102: istore 6
    //   104: goto +674 -> 778
    //   107: iconst_0
    //   108: iconst_0
    //   109: bipush 16
    //   111: invokestatic 103	com/soomla/traceback/i/m:ˎ	(ICI)Ljava/lang/String;
    //   114: invokevirtual 107	java/lang/String:intern	()Ljava/lang/String;
    //   117: sipush 316
    //   120: iconst_0
    //   121: bipush 94
    //   123: invokestatic 103	com/soomla/traceback/i/m:ˎ	(ICI)Ljava/lang/String;
    //   126: invokevirtual 107	java/lang/String:intern	()Ljava/lang/String;
    //   129: invokestatic 2973	com/soomla/traceback/LogUtils:ExtLogError	(Ljava/lang/String;Ljava/lang/String;)V
    //   132: sipush 410
    //   135: sipush 17725
    //   138: bipush 20
    //   140: invokestatic 103	com/soomla/traceback/i/m:ˎ	(ICI)Ljava/lang/String;
    //   143: invokevirtual 107	java/lang/String:intern	()Ljava/lang/String;
    //   146: invokestatic 3102	java/lang/Class:forName	(Ljava/lang/String;)Ljava/lang/Class;
    //   149: pop
    //   150: invokestatic 253	com/soomla/traceback/i/f:ॱ	()Lcom/soomla/traceback/i/f;
    //   153: aload_3
    //   154: invokevirtual 3273	com/soomla/traceback/i/f:ॱ	(Ljava/lang/String;)V
    //   157: aload_1
    //   158: invokevirtual 3279	android/app/Application:getApplicationContext	()Landroid/content/Context;
    //   161: astore_3
    //   162: aload_0
    //   163: aload_3
    //   164: putfield 2882	com/soomla/traceback/i/m:ॱˊ	Landroid/content/Context;
    //   167: invokestatic 3281	com/soomla/traceback/i/m:ˋॱ	()Lcom/soomla/traceback/i/m$b;
    //   170: pop
    //   171: aload_0
    //   172: new 3117	com/soomla/traceback/i/al
    //   175: dup
    //   176: invokestatic 253	com/soomla/traceback/i/f:ॱ	()Lcom/soomla/traceback/i/f;
    //   179: invokevirtual 3283	com/soomla/traceback/i/f:ʽ	()Ljava/lang/String;
    //   182: new 99	java/lang/String
    //   185: dup
    //   186: bipush 12
    //   188: newarray char
    //   190: dup
    //   191: iconst_0
    //   192: ldc_w 3284
    //   195: castore
    //   196: dup
    //   197: iconst_1
    //   198: ldc_w 3285
    //   201: castore
    //   202: dup
    //   203: iconst_2
    //   204: ldc_w 1675
    //   207: castore
    //   208: dup
    //   209: iconst_3
    //   210: ldc_w 3286
    //   213: castore
    //   214: dup
    //   215: iconst_4
    //   216: ldc_w 2382
    //   219: castore
    //   220: dup
    //   221: iconst_5
    //   222: ldc_w 604
    //   225: castore
    //   226: dup
    //   227: bipush 6
    //   229: ldc_w 3287
    //   232: castore
    //   233: dup
    //   234: bipush 7
    //   236: ldc_w 2382
    //   239: castore
    //   240: dup
    //   241: bipush 8
    //   243: ldc_w 2714
    //   246: castore
    //   247: dup
    //   248: bipush 9
    //   250: ldc_w 3288
    //   253: castore
    //   254: dup
    //   255: bipush 10
    //   257: ldc_w 1675
    //   260: castore
    //   261: dup
    //   262: bipush 11
    //   264: ldc_w 461
    //   267: castore
    //   268: invokespecial 3043	java/lang/String:<init>	([C)V
    //   271: invokespecial 3290	com/soomla/traceback/i/al:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   274: putfield 3115	com/soomla/traceback/i/m:ˊˊ	Lcom/soomla/traceback/i/al;
    //   277: aload_0
    //   278: new 188	com/soomla/traceback/i/ak
    //   281: dup
    //   282: sipush 430
    //   285: sipush 5507
    //   288: bipush 8
    //   290: invokestatic 103	com/soomla/traceback/i/m:ˎ	(ICI)Ljava/lang/String;
    //   293: invokevirtual 107	java/lang/String:intern	()Ljava/lang/String;
    //   296: sipush 438
    //   299: iconst_0
    //   300: bipush 6
    //   302: invokestatic 103	com/soomla/traceback/i/m:ˎ	(ICI)Ljava/lang/String;
    //   305: invokevirtual 107	java/lang/String:intern	()Ljava/lang/String;
    //   308: aload_0
    //   309: getfield 3115	com/soomla/traceback/i/m:ˊˊ	Lcom/soomla/traceback/i/al;
    //   312: invokespecial 3293	com/soomla/traceback/i/ak:<init>	(Ljava/lang/String;Ljava/lang/String;Lcom/soomla/traceback/i/al;)V
    //   315: putfield 146	com/soomla/traceback/i/m:ʽॱ	Lcom/soomla/traceback/i/ak;
    //   318: aload_0
    //   319: new 3295	com/soomla/traceback/i/aj
    //   322: dup
    //   323: invokespecial 3296	com/soomla/traceback/i/aj:<init>	()V
    //   326: putfield 144	com/soomla/traceback/i/m:ˈ	Lcom/soomla/traceback/i/aj;
    //   329: aload_0
    //   330: new 3232	com/soomla/traceback/i/an
    //   333: dup
    //   334: aload_3
    //   335: invokespecial 3298	com/soomla/traceback/i/an:<init>	(Landroid/content/Context;)V
    //   338: putfield 142	com/soomla/traceback/i/m:ʿ	Lcom/soomla/traceback/i/an;
    //   341: iconst_0
    //   342: iconst_0
    //   343: bipush 16
    //   345: invokestatic 103	com/soomla/traceback/i/m:ˎ	(ICI)Ljava/lang/String;
    //   348: invokevirtual 107	java/lang/String:intern	()Ljava/lang/String;
    //   351: new 286	java/lang/StringBuilder
    //   354: dup
    //   355: invokespecial 287	java/lang/StringBuilder:<init>	()V
    //   358: sipush 444
    //   361: iconst_0
    //   362: bipush 34
    //   364: invokestatic 103	com/soomla/traceback/i/m:ˎ	(ICI)Ljava/lang/String;
    //   367: invokevirtual 107	java/lang/String:intern	()Ljava/lang/String;
    //   370: invokevirtual 291	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   373: invokestatic 253	com/soomla/traceback/i/f:ॱ	()Lcom/soomla/traceback/i/f;
    //   376: invokevirtual 3300	com/soomla/traceback/i/f:ˏ	()Ljava/lang/String;
    //   379: invokevirtual 291	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   382: invokevirtual 295	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   385: invokestatic 179	com/soomla/traceback/LogUtils:LogDebug	(Ljava/lang/String;Ljava/lang/String;)V
    //   388: aload_2
    //   389: ifnull +366 -> 755
    //   392: iconst_1
    //   393: istore 6
    //   395: goto +408 -> 803
    //   398: aload_0
    //   399: aload_2
    //   400: aload 4
    //   402: iconst_1
    //   403: iconst_0
    //   404: iload 5
    //   406: invokespecial 3302	com/soomla/traceback/i/m:ˏ	(Landroid/app/Activity;Ljava/lang/String;ZZZ)V
    //   409: aload_2
    //   410: ifnonnull +351 -> 761
    //   413: iconst_0
    //   414: istore 6
    //   416: iload 6
    //   418: tableswitch	default:+18->436, 1:+274->692
    //   436: getstatic 97	com/soomla/traceback/i/m:ˍ	I
    //   439: bipush 105
    //   441: iadd
    //   442: istore 6
    //   444: iload 6
    //   446: sipush 128
    //   449: irem
    //   450: putstatic 95	com/soomla/traceback/i/m:ˋˋ	I
    //   453: iload 6
    //   455: iconst_2
    //   456: irem
    //   457: ifeq +310 -> 767
    //   460: iconst_1
    //   461: istore 6
    //   463: iload 6
    //   465: tableswitch	default:+19->484, 1:+264->729
    //   484: iconst_1
    //   485: istore 5
    //   487: aload_0
    //   488: iload 5
    //   490: putfield 148	com/soomla/traceback/i/m:ʾ	Z
    //   493: invokestatic 3052	com/soomla/traceback/i/r:ॱ	()Lcom/soomla/traceback/i/r$a;
    //   496: aload_3
    //   497: invokevirtual 3304	com/soomla/traceback/i/r:ˎ	(Landroid/content/Context;)V
    //   500: aload_0
    //   501: aload_1
    //   502: aload_2
    //   503: invokestatic 3307	com/soomla/traceback/i/i:ˎ	(Landroid/app/Application;Landroid/app/Activity;)Lcom/soomla/traceback/i/i;
    //   506: putfield 3222	com/soomla/traceback/i/m:ʻ	Lcom/soomla/traceback/i/i;
    //   509: aload_0
    //   510: invokestatic 3311	java/lang/Thread:getDefaultUncaughtExceptionHandler	()Ljava/lang/Thread$UncaughtExceptionHandler;
    //   513: putfield 3046	com/soomla/traceback/i/m:ˊॱ	Ljava/lang/Thread$UncaughtExceptionHandler;
    //   516: new 18	com/soomla/traceback/i/m$2
    //   519: dup
    //   520: aload_0
    //   521: invokespecial 3312	com/soomla/traceback/i/m$2:<init>	(Lcom/soomla/traceback/i/m;)V
    //   524: invokestatic 3316	java/lang/Thread:setDefaultUncaughtExceptionHandler	(Ljava/lang/Thread$UncaughtExceptionHandler;)V
    //   527: invokestatic 3006	com/soomla/traceback/i/z:ˎ	()Lcom/soomla/traceback/i/z;
    //   530: invokevirtual 3318	com/soomla/traceback/i/z:ˊ	()V
    //   533: aload_0
    //   534: getfield 153	com/soomla/traceback/i/m:ˊˋ	Lcom/soomla/traceback/i/aq;
    //   537: aload_3
    //   538: invokevirtual 3320	com/soomla/traceback/i/aq:ˊ	(Landroid/content/Context;)V
    //   541: invokestatic 3322	com/soomla/traceback/i/m:ˉ	()V
    //   544: aload_0
    //   545: aload_3
    //   546: invokespecial 3324	com/soomla/traceback/i/m:ˏ	(Landroid/content/Context;)V
    //   549: aload_3
    //   550: getstatic 3327	com/soomla/traceback/LocalEventConsts:EVENT_NETWORK_CONNECTED	Ljava/lang/String;
    //   553: new 30	com/soomla/traceback/i/m$8
    //   556: dup
    //   557: aload_0
    //   558: invokespecial 3328	com/soomla/traceback/i/m$8:<init>	(Lcom/soomla/traceback/i/m;)V
    //   561: invokestatic 3331	com/soomla/traceback/i/p:ˎ	(Landroid/content/Context;Ljava/lang/String;Lcom/soomla/traceback/LocalEvent;)V
    //   564: aload_3
    //   565: getstatic 3334	com/soomla/traceback/LocalEventConsts:EVENT_APP_TO_FOREGROUND	Ljava/lang/String;
    //   568: new 10	com/soomla/traceback/i/m$10
    //   571: dup
    //   572: aload_0
    //   573: invokespecial 3335	com/soomla/traceback/i/m$10:<init>	(Lcom/soomla/traceback/i/m;)V
    //   576: invokestatic 3331	com/soomla/traceback/i/p:ˎ	(Landroid/content/Context;Ljava/lang/String;Lcom/soomla/traceback/LocalEvent;)V
    //   579: aload_0
    //   580: new 183	com/soomla/traceback/i/n
    //   583: dup
    //   584: invokespecial 3336	com/soomla/traceback/i/n:<init>	()V
    //   587: putfield 181	com/soomla/traceback/i/m:ˋ	Lcom/soomla/traceback/i/n;
    //   590: aload_0
    //   591: invokespecial 3338	com/soomla/traceback/i/m:ʻॱ	()V
    //   594: aload_0
    //   595: invokespecial 3340	com/soomla/traceback/i/m:ॱˎ	()V
    //   598: aload_0
    //   599: invokespecial 156	com/soomla/traceback/i/m:ʼॱ	()V
    //   602: aload_0
    //   603: iconst_1
    //   604: putfield 122	com/soomla/traceback/i/m:ˏ	Z
    //   607: return
    //   608: getstatic 97	com/soomla/traceback/i/m:ˍ	I
    //   611: bipush 11
    //   613: iadd
    //   614: istore 6
    //   616: iload 6
    //   618: sipush 128
    //   621: irem
    //   622: putstatic 95	com/soomla/traceback/i/m:ˋˋ	I
    //   625: iload 6
    //   627: iconst_2
    //   628: irem
    //   629: ifeq +3 -> 632
    //   632: iconst_0
    //   633: iconst_0
    //   634: bipush 16
    //   636: invokestatic 103	com/soomla/traceback/i/m:ˎ	(ICI)Ljava/lang/String;
    //   639: invokevirtual 107	java/lang/String:intern	()Ljava/lang/String;
    //   642: sipush 198
    //   645: iconst_0
    //   646: bipush 48
    //   648: invokestatic 103	com/soomla/traceback/i/m:ˎ	(ICI)Ljava/lang/String;
    //   651: invokevirtual 107	java/lang/String:intern	()Ljava/lang/String;
    //   654: invokestatic 2973	com/soomla/traceback/LogUtils:ExtLogError	(Ljava/lang/String;Ljava/lang/String;)V
    //   657: return
    //   658: iconst_0
    //   659: iconst_0
    //   660: bipush 16
    //   662: invokestatic 103	com/soomla/traceback/i/m:ˎ	(ICI)Ljava/lang/String;
    //   665: invokevirtual 107	java/lang/String:intern	()Ljava/lang/String;
    //   668: sipush 246
    //   671: sipush 18894
    //   674: bipush 39
    //   676: invokestatic 103	com/soomla/traceback/i/m:ˎ	(ICI)Ljava/lang/String;
    //   679: invokevirtual 107	java/lang/String:intern	()Ljava/lang/String;
    //   682: invokestatic 179	com/soomla/traceback/LogUtils:LogDebug	(Ljava/lang/String;Ljava/lang/String;)V
    //   685: return
    //   686: iconst_0
    //   687: istore 5
    //   689: goto -291 -> 398
    //   692: iconst_0
    //   693: istore 5
    //   695: goto -208 -> 487
    //   698: astore_1
    //   699: iconst_0
    //   700: iconst_0
    //   701: bipush 16
    //   703: invokestatic 103	com/soomla/traceback/i/m:ˎ	(ICI)Ljava/lang/String;
    //   706: invokevirtual 107	java/lang/String:intern	()Ljava/lang/String;
    //   709: sipush 478
    //   712: sipush 8024
    //   715: bipush 35
    //   717: invokestatic 103	com/soomla/traceback/i/m:ˎ	(ICI)Ljava/lang/String;
    //   720: invokevirtual 107	java/lang/String:intern	()Ljava/lang/String;
    //   723: aload_1
    //   724: iconst_1
    //   725: invokestatic 3205	com/soomla/traceback/i/g:ˎ	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;Z)V
    //   728: return
    //   729: iconst_1
    //   730: istore 5
    //   732: goto -245 -> 487
    //   735: bipush 52
    //   737: istore 6
    //   739: goto -728 -> 11
    //   742: iconst_0
    //   743: istore 6
    //   745: goto -703 -> 42
    //   748: bipush 77
    //   750: istore 6
    //   752: goto +26 -> 778
    //   755: iconst_0
    //   756: istore 6
    //   758: goto +45 -> 803
    //   761: iconst_1
    //   762: istore 6
    //   764: goto -348 -> 416
    //   767: iconst_0
    //   768: istore 6
    //   770: goto -307 -> 463
    //   773: astore 7
    //   775: goto -625 -> 150
    //   778: iload 6
    //   780: tableswitch	default:+20->800, 77:+-648->132
    //   800: goto -693 -> 107
    //   803: iload 6
    //   805: tableswitch	default:+19->824, 0:+-119->686
    //   824: iconst_1
    //   825: istore 5
    //   827: goto -429 -> 398
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	830	0	this	m
    //   0	830	1	paramApplication	Application
    //   0	830	2	paramActivity	Activity
    //   0	830	3	paramString1	String
    //   0	830	4	paramString2	String
    //   0	830	5	paramBoolean	boolean
    //   9	795	6	i	int
    //   773	1	7	localThrowable	Throwable
    // Exception table:
    //   from	to	target	type
    //   64	95	698	java/lang/Exception
    //   107	132	698	java/lang/Exception
    //   132	150	698	java/lang/Exception
    //   150	388	698	java/lang/Exception
    //   398	409	698	java/lang/Exception
    //   487	607	698	java/lang/Exception
    //   132	150	773	java/lang/Throwable
  }
  
  private void ॱ(String paramString, Activity paramActivity)
  {
    LogUtils.LogDebug(ˎ(0, '\000', 16).intern(), ˎ(2282, 50224, 25).intern() + paramString);
    for (;;)
    {
      int i;
      try
      {
        localTracebackListener = (TracebackListener)Class.forName(paramString).newInstance();
        if (ˋ(localTracebackListener)) {
          break label423;
        }
        i = 0;
      }
      catch (ClassNotFoundException paramActivity)
      {
        TracebackListener localTracebackListener;
        LogUtils.LogDebug(ˎ(0, '\000', 16).intern(), ˎ(2397, '\000', 12).intern() + paramString + ˎ(2409, '\000', 10).intern());
        return;
        paramActivity = this.ॱˊ;
        continue;
      }
      catch (Throwable paramActivity)
      {
        g.ˎ(ˎ(0, '\000', 16).intern(), ˎ(2419, '\000', 31).intern() + paramString, paramActivity, true);
        return;
      }
      g.ˎ(ˎ(0, '\000', 16).intern(), localTracebackListener.getListenerName() + ˎ(2307, '\000', 13).intern() + localTracebackListener.getSdkVersion() + ˎ(2320, '\000', 21).intern() + paramString + ˎ(2341, '\000', 9).intern() + localTracebackListener.getListenerVersion(), null, true);
      LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(2350, 63184, 16).intern() + localTracebackListener.getListenerName() + ˎ(2366, '䑞', 31).intern());
      return;
      if (paramActivity == null)
      {
        i = 66;
        switch (i)
        {
        default: 
          i = ˍ + 65;
          ˋˋ = i % 128;
          if (i % 2 != 0) {}
          localTracebackListener.initialize(paramActivity);
          this.ˋॱ.add(localTracebackListener);
          return;
        }
        label423:
        i = 1;
      }
      else
      {
        i = 8;
        continue;
      }
      switch (i)
      {
      }
    }
  }
  
  private void ॱˎ()
  {
    try
    {
      if (this.ॱᐝ == null)
      {
        this.ॱᐝ = new Thread(new SafeRunnable()
        {
          private static char ˊ = '潫';
          private static char ˋ = 63488;
          private static char ˎ = '៧';
          private static char ˏ = 33127;
          private static int ᐝ = 1;
          
          private static String ॱ(String paramAnonymousString)
          {
            if ((ᐝ + 91) % 2 != 0) {}
            paramAnonymousString = (char[])paramAnonymousString.toCharArray();
            char[] arrayOfChar1 = new char[paramAnonymousString.length];
            char[] arrayOfChar2 = new char[2];
            int i = 0;
            if (i < paramAnonymousString.length) {}
            for (int j = 6;; j = 88) {
              switch (j)
              {
              default: 
                arrayOfChar2[0] = paramAnonymousString[i];
                arrayOfChar2[1] = paramAnonymousString[(i + 1)];
                c.ˎ(arrayOfChar2, ˊ, ˎ, ˏ, ˋ);
                arrayOfChar1[i] = arrayOfChar2[0];
                arrayOfChar1[(i + 1)] = arrayOfChar2[1];
                i += 2;
                break;
              case 88: 
                return new String(arrayOfChar1, 1, arrayOfChar1[0]);
              }
            }
          }
          
          public final void safeRun()
          {
            LogUtils.LogDebug(ॱ("髦浈좑㬋뒳姳뙌쾔蟗俸䉮鳁뷀젧䉮鳁忪㽄").intern(), ॱ("᫪⚲䉮鳁輽넒煹猜₳똔鎏텳鎱녔ﰝ뵬ꖮ釢탪ࢊ߾臍뜷滿䪒م?큯뜷㠵颧滿䪒༅勿邦Ṕᵭ쓫᱿桉窢얉䉮鳁輽넒鋧곛夭釉").intern());
            for (;;)
            {
              if (!Thread.currentThread().isInterrupted()) {
                try
                {
                  synchronized (m.this)
                  {
                    m.this.wait();
                    if (m.ʽ(m.this) == null)
                    {
                      m.ˏ(m.this, m.ˋॱ().ॱ());
                      if (m.ʽ(m.this) != null) {}
                    }
                  }
                  synchronized (m.this)
                  {
                    m.ॱˊ(m.this);
                    return;
                    m.ʽ(m.this).removeCallbacksAndMessages(null);
                    Handler localHandler = m.ʽ(m.this);
                    SafeRunnable local2 = new SafeRunnable()
                    {
                      private static int ˎ = 186;
                      
                      private static String ˋ(int paramAnonymous2Int1, int paramAnonymous2Int2, int paramAnonymous2Int3, String paramAnonymous2String)
                      {
                        char[] arrayOfChar = (char[])paramAnonymous2String.toCharArray();
                        paramAnonymous2String = new char[paramAnonymous2Int1];
                        int i = 0;
                        int j;
                        if (i < paramAnonymous2Int1)
                        {
                          j = 0;
                          switch (j)
                          {
                          default: 
                            label25:
                            if (paramAnonymous2Int3 <= 0) {
                              break;
                            }
                          }
                        }
                        for (paramAnonymous2Int2 = 72;; paramAnonymous2Int2 = 67)
                        {
                          switch (paramAnonymous2Int2)
                          {
                          }
                          for (;;)
                          {
                            return new String(paramAnonymous2String);
                            paramAnonymous2String[i] = ((char)(arrayOfChar[i] + paramAnonymous2Int2));
                            paramAnonymous2String[i] = ((char)(paramAnonymous2String[i] - ˎ));
                            i += 1;
                            break;
                            arrayOfChar = new char[paramAnonymous2Int1];
                            System.arraycopy(paramAnonymous2String, 0, arrayOfChar, 0, paramAnonymous2Int1);
                            System.arraycopy(arrayOfChar, 0, paramAnonymous2String, paramAnonymous2Int1 - paramAnonymous2Int3, paramAnonymous2Int3);
                            System.arraycopy(arrayOfChar, paramAnonymous2Int3, paramAnonymous2String, 0, paramAnonymous2Int1 - paramAnonymous2Int3);
                          }
                          j = 1;
                          break label25;
                        }
                      }
                      
                      public final void safeRun()
                      {
                        synchronized (m.this)
                        {
                          try
                          {
                            m.ʻ(m.this);
                            return;
                          }
                          catch (Throwable localThrowable)
                          {
                            for (;;)
                            {
                              LogUtils.LogError(ˋ(16, 272, 9, "￾\034\013\r\017\f\013\r\025�￹￹￷￶￫ￊ").intern(), ˋ(31, 282, 12, "\023￀\006\022\017\r￀\003\001\003\b\005￥\022\022\017\022￀\023\005\016\004\t\016\007￀\005\026\005\016\024").intern(), localThrowable);
                            }
                          }
                        }
                      }
                    };
                    if (m.ᐝ(m.this))
                    {
                      l = m.ˊॱ(m.this);
                      localHandler.postDelayed(local2, l);
                      continue;
                    }
                    long l = 0L;
                  }
                }
                catch (InterruptedException localInterruptedException)
                {
                  LogUtils.LogError(ॱ("髦浈좑㬋뒳姳뙌쾔蟗俸䉮鳁뷀젧䉮鳁忪㽄").intern(), ॱ("ⵗ픎䉮鳁輽넒煹猜₳똔鎏텳鎱녔ﰝ뵬ꖮ釢탪ࢊ߾臍뜷꟭縵딙홸邦Ṕ?큯쨻䦪⊾햲?큯뒿ꚤ꙼ⵢꮫ栓㉮쥱ꢸ恖?矘䋭蝹㖚㷕羖ߴ姚ﰝ뵬ﻛℎ鋧곛").intern());
                }
              }
            }
          }
        });
        this.ॱᐝ.start();
      }
      return;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  private List<ApplicationInfo> ॱᐝ()
  {
    try
    {
      List localList = this.ॱˊ.getPackageManager().getInstalledApplications(0);
      return localList;
    }
    catch (Exception localException)
    {
      LogUtils.LogError(ˎ(0, '\000', 16).intern(), ˎ(2658, '\000', 34).intern() + localException.getLocalizedMessage());
    }
    return new ArrayList();
  }
  
  private JSONObject ᐝॱ()
  {
    JSONObject localJSONObject1 = new JSONObject();
    JSONObject localJSONObject2 = new JSONObject();
    for (;;)
    {
      try
      {
        localIterator = this.ˋॱ.iterator();
        if (!localIterator.hasNext()) {
          break label161;
        }
        i = 1;
      }
      catch (JSONException localJSONException)
      {
        Iterator localIterator;
        TracebackListener localTracebackListener;
        JSONObject localJSONObject3;
        LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(2461, '\000', 28).intern());
        return localJSONObject1;
      }
      localTracebackListener = (TracebackListener)localIterator.next();
      localJSONObject3 = new JSONObject();
      localJSONObject3.put(LocalEventConsts.EVENT_KEY_IV, localTracebackListener.getListenerVersion());
      localJSONObject3.put(LocalEventConsts.EVENT_KEY_SIV, localTracebackListener.getSdkVersion());
      localJSONObject2.put(localTracebackListener.getListenerName(), localJSONObject3);
      continue;
      localJSONObject1.put(ˎ(2457, 49674, 4).intern(), localJSONException);
      return localJSONObject1;
      label161:
      int i = 0;
      switch (i)
      {
      }
    }
  }
  
  public void addTags(List<String> paramList)
  {
    int i;
    try
    {
      if (ॱ()) {
        break label391;
      }
      i = 0;
    }
    catch (Exception localException)
    {
      boolean bool;
      g.ˎ(ˎ(0, '\000', 16).intern(), ˎ(1509, '勭', 18).intern() + paramList, localException, true);
      return;
    }
    bool = this.ˏ;
    label24:
    label67:
    ArrayList localArrayList;
    Object localObject;
    if (bool)
    {
      i = 87;
      switch (i)
      {
      default: 
        i = ˋˋ + 11;
        ˍ = i % 128;
        if (i % 2 != 0)
        {
          i = 2;
          switch (i)
          {
          default: 
            LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(1389, '䋡', 57).intern());
            return;
            LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(1343, 'ӎ', 46).intern());
            return;
          }
          LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(1389, '䋡', 57).intern());
          return;
        }
        break;
      case 87: 
        localArrayList = new ArrayList();
        localObject = paramList.iterator();
        label239:
        if (!((Iterator)localObject).hasNext()) {
          i = 0;
        }
        break;
      }
    }
    for (;;)
    {
      String str = (String)((Iterator)localObject).next();
      if (str.length() > 50)
      {
        LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(1446, '〮', 17).intern() + str + ˎ(1463, '嶰', 38).intern());
        break label239;
      }
      localArrayList.add(str);
      break label239;
      localObject = ˎ(1501, '\000', 8).intern();
      if (localArrayList.size() > 0)
      {
        ˏ((String)localObject, ˋ(localArrayList), true);
        return;
        label391:
        i = 1;
        break label413;
        i = 71;
        break label24;
        i = 1;
        break label436;
        i = 86;
        break label67;
        label413:
        switch (i)
        {
        }
        break;
      }
      return;
      label436:
      switch (i)
      {
      }
    }
  }
  
  public void getGAIDWithFallbackAsync(final Context paramContext, final UidReadyCallback paramUidReadyCallback)
  {
    new Thread(new SafeRunnable()
    {
      public final void safeRun()
      {
        final String str = p.ˏ(paramContext);
        new Handler(Looper.getMainLooper()).post(new SafeRunnable()
        {
          public final void safeRun()
          {
            m.1.this.ॱ.onUidReady(str);
          }
        });
      }
    }).start();
  }
  
  public void getUserAdActions(final UserAdActionsCallback paramUserAdActionsCallback)
  {
    int i;
    try
    {
      if (ॱ()) {
        break label576;
      }
      i = 33;
    }
    catch (Exception localException1)
    {
      String str1;
      boolean bool;
      g.ˎ(ˎ(0, '\000', 16).intern(), ˎ(1973, '\000', 29).intern(), localException1, true);
      paramUserAdActionsCallback.onAdActionsFailed(ˎ(2002, 52569, 14).intern());
      return;
    }
    str1 = ˎ(1720, '᷀', 57).intern();
    LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), str1);
    paramUserAdActionsCallback.onAdActionsFailed(str1);
    return;
    label66:
    label119:
    Object localObject;
    if (this.ˏ)
    {
      i = 80;
      break label627;
      bool = this.ॱˎ;
      if (bool) {
        break label588;
      }
      i = 1;
      switch (i)
      {
      default: 
        i = ˋˋ + 41;
        ˍ = i % 128;
        if (i % 2 != 0)
        {
          i = 0;
          switch (i)
          {
          default: 
            str1 = ˎ(1843, 59735, 25).intern();
            LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), str1);
            paramUserAdActionsCallback.onAdActionsFailed(str1);
            return;
            localObject = ˎ(1777, '嗼', 66).intern();
            LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), (String)localObject);
            paramUserAdActionsCallback.onAdActionsFailed((String)localObject);
            return;
          }
          localObject = ˎ(1843, 59735, 25).intern();
          LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), (String)localObject);
          paramUserAdActionsCallback.onAdActionsFailed((String)localObject);
          return;
        }
        break;
      case 1: 
        this.ॱˎ = true;
      }
    }
    for (;;)
    {
      try
      {
        long l = this.ˋ.ᐝ();
        localObject = ˎ(1868, '\000', 19).intern();
        localObject = this.ˊˊ.ˎ((String)localObject);
        if (localObject == null) {
          break label651;
        }
        if (p.ˋ() - Long.parseLong((String)localObject) < l) {
          break label486;
        }
      }
      catch (Exception localException2)
      {
        g.ˎ(ˎ(0, '\000', 16).intern(), ˎ(1901, '䈒', 40).intern(), localException2, true);
        p.ॱ(ˎ(1941, '⼪', 32).intern(), new j()
        {
          private static int ʻ = 1;
          private static byte[] ʼ;
          private static int ʽ;
          private static int ˋ;
          private static int ˏ = -467375386;
          private static int ॱ;
          
          static
          {
            ˋ = 101;
            ॱ = -917738288;
            ʼ = new byte[] { -85, 2, 8, -11, -9, 8, 8, -27, 20, 62, -43, -1, -11, -12, 10, -10, -69, -88, -119, -79, 66, 79, -80, -72, 75, 75, 7, -14, -79, -95, 67, 74, 76, -80, -67, 28, -23, 67, 78, -71, 65, -67, 78, 64, 76, 78, -96, 108, -87, 36, -36, -37, 39, -20, 98, 38, -43, -40, 39, 47, -36, -36, -82, 58, -40, 54, 63, 48, -54, -54, -39, 62, -11, 112, 52, -57, -54, 53, 61, -50, -50, -65, 73, 103, -94, 64, -85, -94, 93, -4, 28, 81, 82, -93, -23, 2, 80, -93, -82, 81, 89, -86, -86, -26, 22, 86, -86, 89, -82, -66, 94, -1, 1, -84, 82, -81, -126, -65, -77, -99, 88, -70, 81, 88, -89, 6, -26, -85, -88, 89, 19, -8, -86, 89, 84, -85, -93, 80, 80, 28, -20, -84, 80, -96, 85, 90, -85, 18, -5, 86, -88, 85, 120 };
            ʽ = 0;
          }
          
          private static String ˊ(int paramAnonymousInt1, int paramAnonymousInt2, byte paramAnonymousByte)
          {
            StringBuilder localStringBuilder = new StringBuilder();
            int m = ˋ - 102;
            int k;
            if (m == -1)
            {
              j = 1;
              switch (j)
              {
              default: 
                k = 1;
                if (k != 0)
                {
                  j = 18;
                  switch (j)
                  {
                  default: 
                    label60:
                    j = ʻ + 107;
                    ʽ = j % 128;
                    if ((j % 2 == 0) || (ʼ != null))
                    {
                      j = 62;
                      label114:
                      switch (j)
                      {
                      }
                    }
                    break;
                  }
                }
                break;
              }
            }
            for (int j = (byte)(ʼ[(ˏ + paramAnonymousInt2)] + ˋ);; j = m)
            {
              if (j > 0)
              {
                m = 19;
                switch (m)
                {
                default: 
                  return localStringBuilder.toString();
                  k = 0;
                  break;
                  paramAnonymousInt1 = ˏ;
                  throw new NullPointerException();
                case 19: 
                  label161:
                  label204:
                  for (m = 14;; m = 16) {
                    switch (m)
                    {
                    default: 
                      m = paramAnonymousInt2 + j - 2 + ˏ;
                      if (k == 0) {
                        break label561;
                      }
                      k = 1;
                      label248:
                      paramAnonymousInt2 = m;
                      switch (k)
                      {
                      default: 
                        paramAnonymousInt2 = m;
                      }
                      label275:
                      for (k = 0;; k = 1)
                      {
                        int i = (char)(ॱ + paramAnonymousInt1);
                        localStringBuilder.append(i);
                        paramAnonymousInt1 = 1;
                        m = i;
                        paramAnonymousInt2 += k;
                        for (k = m; paramAnonymousInt1 < j; k = i)
                        {
                          m = 1;
                          label315:
                          switch (m)
                          {
                          }
                          m = ʻ + 33;
                          ʽ = m % 128;
                          if ((m % 2 != 0) && (ʼ == null)) {
                            break label573;
                          }
                          m = 34;
                          switch (m)
                          {
                          default: 
                            label370:
                            byte[] arrayOfByte = ʼ;
                            m = paramAnonymousInt2 - 1;
                            i = (char)(((byte)arrayOfByte[paramAnonymousInt2] ^ paramAnonymousByte) + k);
                            paramAnonymousInt2 = m;
                            localStringBuilder.append(i);
                            paramAnonymousInt1 += 1;
                          }
                        }
                      }
                      paramAnonymousInt1 = paramAnonymousInt2 - 1;
                      throw new NullPointerException();
                      m = ʽ + 113;
                      ʻ = m % 128;
                      if (m % 2 != 0) {
                        break label204;
                      }
                    }
                  }
                  m = paramAnonymousInt2 + j - 2 + ˏ;
                  if (k == 0) {}
                  break;
                }
              }
              for (k = 0;; k = 1)
              {
                paramAnonymousInt2 = m;
                switch (k)
                {
                }
                paramAnonymousInt2 = m;
                break label275;
                j = 0;
                break;
                j = 92;
                break label60;
                j = 57;
                break label114;
                m = 24;
                break label161;
                label561:
                k = 0;
                break label248;
                m = 0;
                break label315;
                label573:
                m = 66;
                break label370;
              }
            }
          }
          
          public final void ˊ(JSONObject paramAnonymousJSONObject)
          {
            try
            {
              LogUtils.LogDebug(ˊ(917738371, 467375386, (byte)10).intern(), ˊ(917738371, 467375402, (byte)78).intern() + paramAnonymousJSONObject.toString());
              ArrayList localArrayList = m.ˋ(paramAnonymousJSONObject);
              m.this.ˎ(ˊ(917738393, 467375434, (byte)-39).intern(), paramAnonymousJSONObject.toString(), ˊ(917738393, 467375448, (byte)-53).intern());
              m.ˏ(m.this);
              paramUserAdActionsCallback.onAdActionsReceived(localArrayList);
              return;
            }
            catch (Exception paramAnonymousJSONObject)
            {
              paramAnonymousJSONObject = ˊ(917738357, 467375467, (byte)-81).intern() + paramAnonymousJSONObject.getLocalizedMessage();
              LogUtils.LogError(ˊ(917738371, 467375386, (byte)10).intern(), paramAnonymousJSONObject);
              paramUserAdActionsCallback.onAdActionsFailed(paramAnonymousJSONObject);
            }
          }
          
          public final void ॱ(ao paramAnonymousAo)
          {
            m.ˏ(m.this);
            if (paramAnonymousAo != null) {}
            for (int i = 1;; i = 0)
            {
              switch (i)
              {
              }
              for (i = -1;; i = paramAnonymousAo.ˏ().ˋ())
              {
                paramAnonymousAo = ˊ(917738357, 467375503, (byte)85).intern() + i;
                LogUtils.LogError(ˊ(917738371, 467375386, (byte)10).intern(), paramAnonymousAo);
                paramUserAdActionsCallback.onAdActionsFailed(paramAnonymousAo);
                return;
                i = ʽ + 23;
                ʻ = i % 128;
                if (i % 2 != 0) {}
              }
            }
          }
        });
        return;
      }
      if (i == 0)
      {
        localObject = ˎ(1887, '\000', 14).intern();
        localObject = ˊ(new JSONObject(this.ˊˊ.ˎ((String)localObject)));
        this.ॱˎ = false;
        paramUserAdActionsCallback.onAdActionsReceived((List)localObject);
        return;
      }
      label486:
      i = 0;
      continue;
      i = ˋˋ + 7;
      ˍ = i % 128;
      if (i % 2 != 0) {}
      for (i = 30;; i = 21)
      {
        switch (i)
        {
        }
        String str2 = ˎ(1777, '嗼', 66).intern();
        LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), str2);
        paramUserAdActionsCallback.onAdActionsFailed(str2);
        return;
        label576:
        i = 98;
        break label605;
        i = 44;
        break label627;
        label588:
        i = 68;
        break;
      }
      i = 1;
      break label119;
      label605:
      switch (i)
      {
      }
      break;
      label627:
      switch (i)
      {
      }
      break label66;
      label651:
      i = 1;
    }
  }
  
  public void initialize(Activity paramActivity, String paramString1, String paramString2)
  {
    initialize(paramActivity, paramString1, paramString2, false);
  }
  
  public void initialize(Activity paramActivity, String paramString1, String paramString2, boolean paramBoolean)
  {
    ॱ(paramActivity.getApplication(), paramActivity, paramString1, paramString2, paramBoolean);
  }
  
  public void initialize(Application paramApplication, String paramString1, String paramString2)
  {
    initialize(paramApplication, paramString1, paramString2, false);
  }
  
  public void initialize(Application paramApplication, String paramString1, String paramString2, boolean paramBoolean)
  {
    ॱ(paramApplication, null, paramString1, paramString2, paramBoolean);
  }
  
  public void onInAppPurchaseCompleted(String paramString1, double paramDouble, String paramString2)
  {
    int i = 1;
    if (!ॱ()) {
      i = 0;
    }
    JSONObject localJSONObject;
    switch (i)
    {
    default: 
      localJSONObject = new JSONObject();
    }
    try
    {
      localJSONObject.put(ˎ(2139, 34641, 4).intern(), paramString1);
      localJSONObject.put(ˎ(2143, '\000', 5).intern(), paramDouble);
      localJSONObject.put(ˎ(2148, 60606, 4).intern(), paramString2);
      ˏ(ˎ(2152, '\000', 13).intern(), localJSONObject, true);
      return;
    }
    catch (JSONException paramString1)
    {
      LogUtils.LogError(ˎ(0, '\000', 16).intern(), ˎ(2165, '⡒', 23).intern(), paramString1);
    }
    i = ˋˋ + 69;
    ˍ = i % 128;
    if (i % 2 == 0) {}
    LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(2075, 36253, 64).intern());
    return;
  }
  
  public void overrideCountryCode(String paramString)
  {
    if (ॱ()) {}
    for (int i = 74;; i = 54)
    {
      switch (i)
      {
      default: 
        f.ॱ().ˎ(paramString);
        return;
      }
      i = ˍ + 85;
      ˋˋ = i % 128;
      if (i % 2 != 0) {}
      LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(2016, 'ୟ', 59).intern());
      return;
    }
  }
  
  public void removeTags(List<String> paramList)
  {
    try
    {
      bool = ॱ();
      if (bool) {
        break label344;
      }
      i = 82;
      switch (i)
      {
      default: 
        i = ˋˋ + 31;
        ˍ = i % 128;
        if (i % 2 == 0) {
          break label355;
        }
        i = 1;
        switch (i)
        {
        default: 
          label55:
          LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(1527, '\000', 49).intern());
          return;
        }
        LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(1527, '\000', 49).intern());
        return;
      }
    }
    catch (Exception localException)
    {
      g.ˎ(ˎ(0, '\000', 16).intern(), ˎ(1647, '\000', 20).intern() + paramList, localException, true);
      return;
    }
    boolean bool = this.ˏ;
    if (bool)
    {
      i = 0;
      switch (i)
      {
      default: 
        label187:
        i = ˋˋ + 15;
        ˍ = i % 128;
        if (i % 2 == 0) {
          break;
        }
      }
    }
    for (int i = 35;; i = 90)
    {
      switch (i)
      {
      default: 
        LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(1576, '\000', 60).intern());
        return;
      }
      LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(1576, '\000', 60).intern());
      return;
      String str = ˎ(1636, '\000', 11).intern();
      if ((paramList == null) || (paramList.size() <= 0)) {
        return;
      }
      ˋ(str, ˋ(paramList), null, true);
      return;
      label344:
      i = 69;
      break;
      i = 1;
      break label187;
      label355:
      i = 0;
      break label55;
    }
  }
  
  public void setAdListener(AdListener paramAdListener)
  {
    if (ॱ()) {}
    for (int i = 1;; i = 0)
    {
      switch (i)
      {
      default: 
        LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(1667, '\000', 53).intern());
        return;
      }
      this.ˊˋ.ˋ(paramAdListener);
      return;
    }
  }
  
  public void setUserId(String paramString)
  {
    int i;
    boolean bool2;
    boolean bool1;
    try
    {
      if (ॱ()) {
        break label444;
      }
      i = 42;
    }
    catch (Exception localException)
    {
      label44:
      label78:
      g.ˎ(ˎ(0, '\000', 16).intern(), ˎ(635, '\000', 21).intern() + paramString, localException, true);
      return;
    }
    if (this.ˏ)
    {
      i = 22;
      break label531;
      bool2 = this.ʻ.ˏ();
      if (bool1) {
        break label478;
      }
      i = 0;
      break label609;
      ˏ(null, paramString, bool1, true, bool2);
      return;
      i = ˋˋ + 123;
      ˍ = i % 128;
      if (i % 2 == 0) {
        break label484;
      }
      i = 0;
      switch (i)
      {
      default: 
        LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(513, 63364, 49).intern());
        return;
        LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(562, '\000', 62).intern());
        return;
        i = ˋˋ + 43;
        ˍ = i % 128;
        if ((i % 2 != 0) || (f.ॱ().ˊॱ() != null))
        {
          i = 0;
          break label631;
          if (!paramString.equals(f.ॱ().ˊॱ())) {
            break label472;
          }
          i = 9;
        }
        break;
      }
    }
    for (;;)
    {
      ˏ(ˎ(624, '\000', 11).intern(), new JSONObject(), true);
      break label44;
      LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(513, 63364, 49).intern());
      return;
      i = ˋˋ + 29;
      ˍ = i % 128;
      if (i % 2 != 0)
      {
        i = 17;
        label331:
        switch (i)
        {
        }
        bool1 = paramString.equals(f.ॱ().ˊॱ());
        if (!bool1) {
          break label495;
        }
        i = 36;
      }
      switch (i)
      {
      default: 
        break label655;
        i = ˋˋ + 39;
        ˍ = i % 128;
        if (i % 2 != 0) {
          i = 46;
        }
        switch (i)
        {
        default: 
          if (!bool2)
          {
            break label44;
            i = 82;
            break label507;
            i = 78;
            do
            {
              i = 15;
              break label559;
              i = 1;
              break label631;
              i = 1;
              break label586;
              i = 7;
              break label660;
              i = 13;
              break label609;
              i = 1;
              break label78;
              i = 83;
              break label331;
              i = 55;
              break label370;
              i = 24;
              break label415;
              switch (i)
              {
              }
              break;
              switch (i)
              {
              }
            } while (paramString == null);
            i = 87;
            switch (i)
            {
            }
          }
          break;
        }
      case 36: 
        for (;;)
        {
          label370:
          label415:
          label444:
          label467:
          label472:
          label478:
          label484:
          label495:
          label507:
          label531:
          label559:
          if (paramString != null) {
            break label467;
          }
          i = 0;
          label586:
          switch (i)
          {
          }
          bool1 = false;
          break;
          label609:
          switch (i)
          {
          }
          break label44;
          label631:
          switch (i)
          {
          }
        }
        for (;;)
        {
          label655:
          bool1 = true;
          break;
          label660:
          switch (i)
          {
          }
        }
        if (!bool2) {
          break;
        }
      }
    }
  }
  
  public void shutdown()
  {
    try
    {
      ˏ(false);
      return;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  public final int ʻ()
  {
    int j = 1;
    ApplicationInfo localApplicationInfo = ˊ(ˎ(2639, '\000', 19).intern());
    if (localApplicationInfo != null)
    {
      i = 1;
      switch (i)
      {
      default: 
        return -1;
        return localApplicationInfo.uid;
      }
      i = ˋˋ + 21;
      ˍ = i % 128;
      if (i % 2 != 0) {
        break label102;
      }
    }
    label102:
    for (int i = j;; i = 0)
    {
      switch (i)
      {
      }
      return localApplicationInfo.uid;
      i = 0;
      break;
    }
  }
  
  public final JSONObject ʼ()
  {
    return ˋ(new JSONObject(), false);
  }
  
  public final boolean ʽ()
  {
    return this.ʼ;
  }
  
  public final al ˊॱ()
  {
    return this.ˊˊ;
  }
  
  public final Context ˋ()
  {
    return this.ॱˊ;
  }
  
  public final void ˋ(ac.3 param3)
  {
    this.ˊˋ.ॱ(param3);
  }
  
  public final void ˋ(String paramString, JSONObject paramJSONObject)
  {
    ˋ(paramString, paramJSONObject, null, true);
  }
  
  public final void ˋ(String paramString, JSONObject paramJSONObject1, JSONObject paramJSONObject2)
  {
    ˋ(paramString, paramJSONObject1, paramJSONObject2, true);
  }
  
  public final void ˋ(final String paramString, final JSONObject paramJSONObject1, final JSONObject paramJSONObject2, boolean paramBoolean)
  {
    double d2 = 100.0D;
    if (ॱ()) {
      return;
    }
    if (this.ʽ)
    {
      i = 38;
      label24:
      switch (i)
      {
      }
      for (;;)
      {
        LogUtils.LogDebug(ˎ(0, '\000', 16).intern(), ˎ(2512, '\000', 22).intern() + paramString + ˎ(2534, 53028, 18).intern() + paramJSONObject1.toString());
        paramString = new SafeRunnable()
        {
          private static boolean ʻ;
          private static char[] ʼ = { 290, 286, 284, 283, 272, 239, 291, 321, 304, 306, 308, 305, 314, 328, 312, 317, 310, 323, 318, 322, 307, 325, 326, 311, 316, 265, 247, 276, 248, 274, 324, 315, 246, 253, 319, 240, 302, 280 };
          private static int ʽ = 207;
          private static boolean ˊॱ = true;
          private static int ˋॱ = 1;
          private static int ᐝ;
          
          static
          {
            ʻ = true;
            ᐝ = 0;
          }
          
          private static String ˎ(String paramAnonymousString)
          {
            int j = 0;
            int i = ˋॱ + 77;
            ᐝ = i % 128;
            if (i % 2 != 0) {}
            byte[] arrayOfByte = (byte[])paramAnonymousString.getBytes("ISO-8859-1");
            paramAnonymousString = ʼ;
            int k = ʽ;
            if (ʻ)
            {
              i = 1;
              switch (i)
              {
              default: 
                if (ˊॱ)
                {
                  i = 3;
                  switch (i)
                  {
                  default: 
                    i = null.length;
                    paramAnonymousString = new char[i];
                    if (i < 0)
                    {
                      i = 94;
                      switch (i)
                      {
                      default: 
                        i = ᐝ + 39;
                        ˋॱ = i % 128;
                        if (i % 2 == 0)
                        {
                          i = 1;
                          switch (i)
                          {
                          default: 
                            throw new NullPointerException();
                          }
                        }
                        break;
                      }
                    }
                    break;
                  }
                }
                break;
              case 1: 
                label76:
                label110:
                label151:
                int m = arrayOfByte.length;
                char[] arrayOfChar = new char[m];
                i = j;
                while (i < m)
                {
                  j = 62;
                  switch (j)
                  {
                  default: 
                    label202:
                    return new String(arrayOfChar);
                  }
                  arrayOfChar[i] = ((char)(paramAnonymousString[(arrayOfByte[(m - 1 - i)] + Byte.MAX_VALUE)] - k));
                  i += 1;
                  continue;
                  return new String(paramAnonymousString);
                  i = null.length;
                  paramAnonymousString = new char[i];
                  if (i >= 0) {
                    break label400;
                  }
                  i = 0;
                  switch (i)
                  {
                  default: 
                    label280:
                    i = ᐝ + 87;
                    ˋॱ = i % 128;
                    if (i % 2 != 0) {
                      break label410;
                    }
                  }
                }
              }
            }
            label400:
            label410:
            for (i = 1;; i = 0)
            {
              switch (i)
              {
              default: 
                throw new NullPointerException();
              }
              throw new NullPointerException();
              return new String(paramAnonymousString);
              throw new NullPointerException();
              i = 0;
              break;
              j = 20;
              break label202;
              i = 87;
              break label76;
              i = 79;
              break label110;
              i = 1;
              break label280;
              i = 0;
              break label151;
            }
          }
          
          public final void safeRun()
          {
            int j = 1;
            int k = 1;
            LogUtils.LogDebug(ˎ("").intern(), ˎ("").intern() + paramString);
            ar localAr = m.ˊ(paramString, this.ˏ, paramJSONObject1, paramJSONObject2);
            if (localAr == null)
            {
              i = 89;
              switch (i)
              {
              default: 
                if (!paramString.equals(ˎ("¥¥£").intern()))
                {
                  i = 1;
                  switch (i)
                  {
                  default: 
                    try
                    {
                      localAr.ˎ().put(ˎ("££").intern(), m.ॱˋ(m.this).size());
                      for (;;)
                      {
                        m.ॱ(m.this).add(localAr);
                        m.ͺ(m.this);
                        return;
                        LogUtils.LogError(ˎ("").intern(), ˎ("¤££¢ ¡ ").intern());
                        return;
                        if (!paramString.equals(ˎ("¥¥£").intern())) {
                          break;
                        }
                        i = 23;
                        switch (i)
                        {
                        }
                        if (paramString.equals(ˎ("¥£").intern())) {
                          m.this.ˊॱ().ˏ(ˎ("¦¢").intern(), m.ˋॱ(m.this));
                        }
                      }
                    }
                    catch (Exception localException)
                    {
                      for (;;)
                      {
                        LogUtils.LogError(ˎ("").intern(), ˎ("£  ").intern() + localException.getLocalizedMessage());
                      }
                    }
                  }
                }
                break;
              case 89: 
                label112:
                label225:
                label244:
                i = ˋॱ + 41;
                ᐝ = i % 128;
                if (i % 2 != 0)
                {
                  i = k;
                  label371:
                  switch (i)
                  {
                  }
                  LogUtils.LogError(ˎ("").intern(), ˎ("¤££¢ ¡ ").intern());
                  return;
                  i = ᐝ + 79;
                  ˋॱ = i % 128;
                  if (i % 2 != 0) {
                    break label521;
                  }
                  i = 0;
                  label435:
                  switch (i)
                  {
                  }
                  if (!paramString.equals(ˎ("¥¥£").intern())) {
                    break label526;
                  }
                }
                break;
              }
            }
            label521:
            label526:
            for (int i = j;; i = 0)
            {
              switch (i)
              {
              }
              break label244;
              i = 51;
              break;
              i = 0;
              break label112;
              i = 76;
              break label225;
              i = 0;
              break label371;
              i = 1;
              break label435;
            }
          }
        };
        if (!paramBoolean) {
          break label476;
        }
        i = 0;
        switch (i)
        {
        default: 
          if (!p.ˏ()) {
            break;
          }
          i = 71;
          switch (i)
          {
          }
        case 0: 
          label136:
          label166:
          new Thread(paramString).start();
          return;
          if (ˎ(190, '\000', 8).intern().equals(paramString)) {
            break label469;
          }
          i = 75;
          label223:
          switch (i)
          {
          }
          break;
        }
      }
      i = ˍ + 11;
      ˋˋ = i % 128;
      if (i % 2 != 0) {
        break label488;
      }
    }
    label460:
    label469:
    label476:
    label488:
    for (int i = 70;; i = 58)
    {
      double d1;
      switch (i)
      {
      default: 
        double d3 = Math.random();
        d1 = d2;
        if (!this.ʽ)
        {
          d1 = d2;
          if (this.ˋ != null) {
            d1 = this.ˋ.ॱ();
          }
        }
        if (d3 * 100.0D < d1) {
          break;
        }
        LogUtils.LogDebug(ˎ(0, '\000', 16).intern(), ˎ(2552, '禜', 11).intern() + paramString + ˎ(2563, '\000', 30).intern());
        return;
        paramString.run();
        return;
      case 58: 
        d2 = Math.random();
        if ((!this.ʽ) && (this.ˋ != null)) {}
        for (d1 = this.ˋ.ॱ();; d1 = 100.0D)
        {
          if (d2 * 100.0D < d1) {
            break label460;
          }
          break;
        }
        break;
        i = 41;
        break label24;
        i = 71;
        break label223;
        i = 1;
        break label136;
        i = 5;
        break label166;
      }
    }
  }
  
  public final boolean ˋ(String paramString)
  {
    return ˊ(paramString) != null;
  }
  
  public final long ˎ(String paramString)
  {
    try
    {
      long l = this.ॱˊ.getPackageManager().getPackageInfo(paramString, 0).firstInstallTime;
      return l;
    }
    catch (Throwable paramString) {}
    return 0L;
  }
  
  public final aj ˎ()
  {
    return this.ˈ;
  }
  
  public final void ˎ(String paramString1, String paramString2, String paramString3)
  {
    this.ˊˊ.ˏ(paramString1, paramString2);
    this.ˊˊ.ˏ(paramString3, Long.toString(p.ˋ()));
  }
  
  public final void ˎ(String paramString1, String paramString2, String paramString3, String paramString4, JSONObject paramJSONObject)
  {
    localJSONObject = new JSONObject();
    for (;;)
    {
      try
      {
        localJSONObject.put(ˎ(143, 34934, 5).intern(), paramString1);
        localJSONObject.put(ˎ(148, '\000', 5).intern(), paramString2);
        localJSONObject.put(ˎ(153, '\000', 6).intern(), paramString3);
        if (!TextUtils.isEmpty(paramString4)) {
          continue;
        }
        i = 1;
      }
      catch (JSONException paramString1)
      {
        LogUtils.LogError(ˎ(0, '\000', 16).intern(), ˎ(164, '\000', 26).intern(), paramString1);
        continue;
        p.ॱ(localJSONObject, paramJSONObject);
        continue;
        int i = 0;
        continue;
        i = 0;
        continue;
        i = 28;
        continue;
        switch (i)
        {
        }
        continue;
      }
      p.ॱ(localJSONObject, ᐝॱ());
      if (paramJSONObject != null) {
        continue;
      }
      i = 1;
      switch (i)
      {
      default: 
        i = ˋˋ + 111;
        ˍ = i % 128;
        if (i % 2 == 0) {
          continue;
        }
        i = 59;
        switch (i)
        {
        default: 
          p.ॱ(localJSONObject, paramJSONObject);
        }
      case 1: 
        ˏ(ˎ(190, '\000', 8).intern(), localJSONObject, true);
        return;
        i = ˍ + 89;
        ˋˋ = i % 128;
        if (i % 2 != 0) {}
        localJSONObject.put(ˎ(159, '焿', 5).intern(), paramString4);
      }
    }
  }
  
  public final an ˏ()
  {
    return this.ʿ;
  }
  
  public final void ˏ(String paramString1, Map<String, String> paramMap, String paramString2)
  {
    if (paramMap == null) {
      return;
    }
    String str1 = Integer.toHexString(paramMap.hashCode());
    String str2 = this.ˊˊ.ˎ(ˎ(2195, '\000', 14).intern() + paramString1);
    if (TextUtils.isEmpty(str2)) {}
    for (int i = 0;; i = 1)
    {
      switch (i)
      {
      }
      do
      {
        this.ˊˊ.ˏ(ˎ(2195, '\000', 14).intern() + paramString1, str1);
        ˏ(ˎ(2209, '\000', 9).intern(), ˋ(paramString1, paramMap, paramString2), true);
        return;
      } while (!str2.equals(str1));
      return;
    }
  }
  
  public final void ˏॱ()
  {
    if (this.ʾ)
    {
      ʻॱ();
      ॱˎ();
      ˋ(ˎ(3027, '\000', 13).intern(), new JSONObject());
    }
    this.ʾ = false;
  }
  
  public final String ॱ(String paramString)
  {
    return this.ˊˊ.ˎ(paramString);
  }
  
  public final void ॱ(aj.4 param4)
  {
    this.ˋ.ˎ(param4);
  }
  
  public final void ॱ(boolean paramBoolean)
  {
    if (ॱ())
    {
      i = 28;
      switch (i)
      {
      default: 
        LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(1134, '\000', 51).intern());
        return;
      }
      if (!this.ˏ) {
        break label124;
      }
    }
    label124:
    for (int i = 1;; i = 0)
    {
      switch (i)
      {
      default: 
        this.ʼ = paramBoolean;
        return;
      }
      LogUtils.ExtLogError(ˎ(0, '\000', 16).intern(), ˎ(1185, 56837, 39).intern());
      return;
      i = 11;
      break;
    }
  }
  
  public final boolean ॱ()
  {
    try
    {
      boolean bool = this.ᐝ;
      return bool;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  public final boolean ॱ(long paramLong, String paramString)
  {
    paramString = this.ˊˊ.ˎ(paramString);
    return (paramString == null) || (p.ˋ() - Long.parseLong(paramString) >= paramLong);
  }
  
  public final void ॱˊ()
  {
    try
    {
      this.ʾ = true;
      ˏ(ˎ(624, '\000', 11).intern(), new JSONObject(), false);
      try
      {
        if (this.ͺ != null) {
          this.ͺ.removeCallbacksAndMessages(null);
        }
        ʼॱ();
        return;
      }
      finally {}
      return;
    }
    catch (Exception localException)
    {
      g.ˎ(ˎ(0, '\000', 16).intern(), ˎ(3040, '\000', 24).intern(), localException, false);
    }
  }
  
  public final i ॱˋ()
  {
    return this.ʻ;
  }
  
  public final void ᐝ()
  {
    ʽॱ();
  }
  
  static final class b
    extends Thread
  {
    private Handler ˏ;
    
    b() {}
    
    public final void run()
    {
      Looper.prepare();
      this.ˏ = new Handler();
      Looper.loop();
    }
    
    public final Handler ॱ()
    {
      return this.ˏ;
    }
  }
}
